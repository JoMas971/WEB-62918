(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("rxjs"), require("axios"), require("keycloak-js"), require("qs"));
	else if(typeof define === 'function' && define.amd)
		define("javascript-sdk", ["rxjs", "axios", "keycloak-js", "qs"], factory);
	else if(typeof exports === 'object')
		exports["javascript-sdk"] = factory(require("rxjs"), require("axios"), require("keycloak-js"), require("qs"));
	else
		root["javascript-sdk"] = factory(root["rxjs"], root["axios"], root["Keycloak"], root["qs"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__37__, __WEBPACK_EXTERNAL_MODULE__115__, __WEBPACK_EXTERNAL_MODULE__622__, __WEBPACK_EXTERNAL_MODULE__628__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 620);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __assign; });
/* unused harmony export __rest */
/* unused harmony export __decorate */
/* unused harmony export __param */
/* unused harmony export __metadata */
/* unused harmony export __awaiter */
/* unused harmony export __generator */
/* unused harmony export __createBinding */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* unused harmony export __spreadArrays */
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/* unused harmony export __classPrivateFieldGet */
/* unused harmony export __classPrivateFieldSet */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscriber; });
/* unused harmony export SafeSubscriber */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34);
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16);
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(24);
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__[/* empty */ "a"];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__[/* empty */ "a"];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__[/* rxSubscriber */ "a"]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_3__[/* Subscription */ "a"]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__[/* isFunction */ "a"])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__[/* empty */ "a"]) {
                context = Object.create(observerOrNext);
                if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__[/* isFunction */ "a"])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[/* hostReportError */ "a"])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[/* hostReportError */ "a"])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (_config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[/* hostReportError */ "a"])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!_config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_5__[/* config */ "a"].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[/* hostReportError */ "a"])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SimpleInnerSubscriber; });
/* unused harmony export ComplexInnerSubscriber */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SimpleOuterSubscriber; });
/* unused harmony export ComplexOuterSubscriber */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return innerSubscribe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35);
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */




var SimpleInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](SimpleInnerSubscriber, _super);
    function SimpleInnerSubscriber(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        return _this;
    }
    SimpleInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(value);
    };
    SimpleInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    SimpleInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete();
        this.unsubscribe();
    };
    return SimpleInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

var ComplexInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](ComplexInnerSubscriber, _super);
    function ComplexInnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        return _this;
    }
    ComplexInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);
    };
    ComplexInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    ComplexInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return ComplexInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

var SimpleOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](SimpleOuterSubscriber, _super);
    function SimpleOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    SimpleOuterSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SimpleOuterSubscriber.prototype.notifyComplete = function () {
        this.destination.complete();
    };
    return SimpleOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

var ComplexOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](ComplexOuterSubscriber, _super);
    function ComplexOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {
        this.destination.next(innerValue);
    };
    ComplexOuterSubscriber.prototype.notifyError = function (error) {
        this.destination.error(error);
    };
    ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {
        this.destination.complete();
    };
    return ComplexOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

function innerSubscribe(result, innerSubscriber) {
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__[/* Observable */ "a"]) {
        return result.subscribe(innerSubscriber);
    }
    var subscription;
    try {
        subscription = Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__[/* subscribeTo */ "a"])(result)(innerSubscriber);
    }
    catch (error) {
        innerSubscriber.error(error);
    }
    return subscription;
}
//# sourceMappingURL=innerSubscribe.js.map


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ Observable_Observable; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscriber.js
var Subscriber = __webpack_require__(1);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/canReportError.js
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof Subscriber["a" /* Subscriber */]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/toSubscriber.js
var toSubscriber = __webpack_require__(100);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/observable.js
var observable = __webpack_require__(19);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/pipe.js
var pipe = __webpack_require__(43);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/config.js
var config = __webpack_require__(16);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable_Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(toSubscriber["a" /* toSubscriber */])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (config["a" /* config */].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (config["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (config["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (canReportError(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[observable["a" /* observable */]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(pipe["b" /* pipeFromArray */])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = config["a" /* config */].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscription; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34);
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45);
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._ctorUnsubscribe = true;
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__[/* isFunction */ "a"])(_unsubscribe)) {
            if (_ctorUnsubscribe) {
                this._unsubscribe = undefined;
            }
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[/* UnsubscriptionError */ "a"] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__[/* isArray */ "a"])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__[/* isObject */ "a"])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[/* UnsubscriptionError */ "a"]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[/* UnsubscriptionError */ "a"](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[/* UnsubscriptionError */ "a"]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnonymousSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(22);
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60);
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(33);
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__[/* Subscriber */ "a"]));

var Subject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__[/* rxSubscriber */ "a"]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[/* ObjectUnsubscribedError */ "a"]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[/* ObjectUnsubscribedError */ "a"]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[/* ObjectUnsubscribedError */ "a"]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[/* ObjectUnsubscribedError */ "a"]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[/* ObjectUnsubscribedError */ "a"]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[/* Subscription */ "a"].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[/* Subscription */ "a"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__[/* SubjectSubscription */ "a"](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__[/* Observable */ "a"]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__[/* Observable */ "a"]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[/* Subscription */ "a"].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Iland = void 0;
const rxjs_1 = __webpack_require__(37);
const basic_configuration_1 = __webpack_require__(114);
const http_1 = __webpack_require__(27);
const DEFAULT_API_URL = `${basic_configuration_1.BasicConfiguration.getApiUrl()}/v1`;
class Iland {
    static init(_authProvider, _config, _logger) {
        this._authProvider = _authProvider;
        this.baseUrl = _config !== undefined && _config.baseUrl ? _config.baseUrl : DEFAULT_API_URL;
        this._http = new http_1.Http(this.baseUrl);
        this._logger = _logger
            ? _logger
            : {
                debug: rxjs_1.noop,
                info: rxjs_1.noop,
                warn: rxjs_1.noop,
                error: rxjs_1.noop
            };
    }
    static getAuthProvider() {
        if (Iland._authProvider === undefined) {
            throw new Error('The Iland SDK has not yet been initialized.');
        }
        return Iland._authProvider;
    }
    static getHttp() {
        if (Iland._http === undefined) {
            throw new Error('The Iland SDK has not yet been initialized.');
        }
        return Iland._http;
    }
    /**
     * Get the configured logger.
     * @returns {Logger}
     */
    static getLogger() {
        return this._logger;
    }
}
exports.Iland = Iland;


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export asyncScheduler */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61);
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var asyncScheduler = /*@__PURE__*/ new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__[/* AsyncScheduler */ "a"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__[/* AsyncAction */ "a"]);
var async = asyncScheduler;
//# sourceMappingURL=async.js.map


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Entity = void 0;
/**
 * Entity.
 */
class Entity {
    constructor(_apiEntity) {
        this._apiEntity = _apiEntity;
    }
    /**
     * Gets the name.
     * @returns {string} name
     */
    get name() {
        return this._apiEntity.name;
    }
    /**
     * Gets the UUID.
     * @returns {string} UUID
     */
    get uuid() {
        return this._apiEntity.uuid;
    }
    /**
     * Indicates whether the entity is deleted.
     * @returns {boolean} value
     */
    get deleted() {
        return this._apiEntity.deleted;
    }
    /**
     * Gets the last date that the entity was updated.
     * @returns {Date} last updated date
     */
    get updatedDate() {
        return new Date(this._apiEntity.updated_date);
    }
    /**
     * Gets the date that the entity was deleted, or null if it is not deleted.
     * @returns {Date} deleted date or null if not applicable
     */
    get deletedDate() {
        return this._apiEntity.deleted_date ? new Date(this._apiEntity.deleted_date) : null;
    }
    /**
     * Gets the ID of the company that the entity belongs to.
     */
    get companyId() {
        return this._apiEntity.company_id;
    }
}
exports.Entity = Entity;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Task = void 0;
const tslib_1 = __webpack_require__(5);
const rxjs_1 = __webpack_require__(37);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const task_list_1 = __webpack_require__(290);
/**
 * Task.
 */
class Task {
    constructor(_apiTask) {
        this._apiTask = _apiTask;
    }
    /**
     * Gets a Task by UUID.
     * @param taskUuid the task uuid
     * @returns {Promise<Task>} promise that resolves with the Task
     */
    static getTask(taskUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/tasks/${taskUuid}`)
                .then(response => {
                const apiTask = response.data;
                return new Task(apiTask);
            });
        });
    }
    /**
     * Gets a list of tasks filtered by specified query parameters.
     * @param params the query params
     * @returns {Promise<TaskList>} promise that resolves with the TaskList
     */
    static getTasks(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/tasks`, {
                params: params.getQueryParams()
            })
                .then(response => {
                const list = response.data;
                return new task_list_1.TaskList(list);
            });
        });
    }
    /**
     * Sets a push channel provider to use for task updates. If not explicitly set,
     * the getPromise() and getObservable() methods will simply poll for updates at 1 second intervals.
     *
     * @param provider {PushChannelProvider}
     */
    static setPushChannelProvider(provider) {
        this._pushChannelProvider = provider;
    }
    /**
     * Observes a task for progress updates. Uses a push channel if one has been set, otherwise polls at specified
     * interval.
     *
     * @param companyID the ID of the company
     * @param taskUUID the UUID of the task
     * @param sink a {Subject} to sink progress updates into
     * @param obsTimeout the observable timeout in ms. If a task update for this task is not received within this time,
     * the task is retrieved via polling once to ensure we didn't miss an update (default 1 minute)
     * @param pollInterval the polling interval in ms. the time between explicit polling of task (when push channel is not
     * available)
     * @param forcePoll boolean value indicating whether polling should be used vs. channel
     * @returns a promise that resolves when the task completes
     * @private
     */
    static _observe(companyID, taskUUID, sink, obsTimeout = 60000, pollInterval = 1000, forcePoll) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (!forcePoll && Task._pushChannelProvider) {
                const chan = Task._pushChannelProvider(companyID);
                if (chan !== null) {
                    return new Promise((resolve, reject) => {
                        let complete = false;
                        const pcSub = chan
                            .getObservable()
                            // if we don't get any updates for obsTimeout, force a poll through the finalize callback
                            .pipe(operators_1.timeout(obsTimeout))
                            .pipe(operators_1.finalize(() => {
                            // if the push channel is closed (or a timeout occurs), we try to re-call this method and force a poll
                            // on the next invocation
                            if (!complete) {
                                resolve(Task._observe(companyID, taskUUID, sink, obsTimeout, pollInterval, true));
                            }
                        }))
                            .subscribe(t => {
                            if (t instanceof Task && t.uuid === taskUUID) {
                                sink.next(t);
                                if (t.complete) {
                                    complete = true;
                                    pcSub.unsubscribe();
                                    if (t.status === 'error') {
                                        sink.error(t);
                                    }
                                    else {
                                        sink.complete();
                                    }
                                    resolve(t);
                                }
                            }
                        });
                    });
                }
            }
            return Task.getTask(taskUUID).then(task => {
                sink.next(task);
                if (task.complete) {
                    if (task.status === 'error') {
                        sink.error(task);
                    }
                    else {
                        sink.complete();
                    }
                    return task;
                }
                else {
                    return new Promise(resolve => {
                        setTimeout(() => {
                            resolve(Task._observe(companyID, taskUUID, sink, obsTimeout, pollInterval));
                        }, pollInterval);
                    });
                }
            }, (err) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                const to = pollInterval * 5;
                iland_1.Iland.getLogger().error(`failed to retrieve task update for ${taskUUID}. trying again in ${to / 1000} ms:
       ${err}`);
                return new Promise(resolve => {
                    setTimeout(() => {
                        resolve(Task._observe(companyID, taskUUID, sink, obsTimeout, pollInterval, true));
                    }, to);
                });
            }));
        });
    }
    /**
     * Gets the UUID of the task.
     * @returns {string} UUID
     */
    get uuid() {
        return this._apiTask.uuid;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._apiTask.company_id;
    }
    /**
     * Gets the datacenter location ID of the task.
     * @returns {string} datacenter location ID
     */
    get locationId() {
        return this._apiTask.location_id;
    }
    /**
     * Indicates whether the task is complete.
     * @returns {boolean} value
     */
    get complete() {
        return this._apiTask.synced;
    }
    /**
     * Indicates the status of the task.
     * @returns {TaskStatus} task status
     */
    get status() {
        return this._apiTask.status;
    }
    /**
     * Gets the task's operation identifier.
     */
    get operation() {
        return this._apiTask.operation;
    }
    /**
     * Gets the end time of the task.
     * @returns {Date|null} end time of the task or null if the task hasn't yet completed
     */
    get endTime() {
        return this._apiTask.end_time !== null ? new Date(this._apiTask.end_time) : null;
    }
    /**
     * Gets the UUID of the entity that is associated with the task.
     * @returns {string} the UUID of the associated entity
     */
    get entityUuid() {
        return this._apiTask.entity_uuid;
    }
    /**
     * Indicates whether the task was initiated from the iland API.
     * @returns {boolean} value
     */
    get initiatedFromIlandApi() {
        return this._apiTask.initiated_from_ecs;
    }
    /**
     * Gets the date/time that the task was received/queued by the API.
     * @returns {Date} the date that the task was initiated
     */
    get initiationTime() {
        return new Date(this._apiTask.initiation_time);
    }
    /**
     * Gets the message associated with the task, if there is one. The message may provide extra information if the task
     * ended with an error status.
     * @returns {string|null} message string or null if no message is associated with the task
     */
    get message() {
        return this._apiTask.message;
    }
    /**
     * Returns an operation description that may provide more detail about the operation that the task is associated with.
     * @returns {string} description
     */
    get operationDescription() {
        return this._apiTask.operation_description;
    }
    /**
     * Returns the UUID of the organization that the task is associated with.
     */
    get orgUuid() {
        return this._apiTask.org_uuid;
    }
    /**
     * Gets a map of additional task details that are specific to the task operation type.
     * @returns {{ [key: string]: string }} map of other task attributes
     */
    get otherAttributes() {
        return this._apiTask.other_attributes;
    }
    /**
     * If this is a sub-task, returns the UUID of the parent task, otherwise null.
     * @returns {string|null} returns the UUID of the parent task
     */
    get parentTaskUuid() {
        return this._apiTask.parent_task_uuid;
    }
    /**
     * Gets the task progress as a percentage.
     * @returns {number} in the range 0-100
     */
    get progress() {
        return this._apiTask.progress;
    }
    /**
     * Gets the start time of the task, if the task has started. If the task is still queued, returns null.
     * @returns {Date|null} the start time of the task or null
     */
    get startTime() {
        return this._apiTask.start_time === null ? null : new Date(this._apiTask.start_time);
    }
    /**
     * Gets the task's sub-tasks, if this is a composite task.
     * @returns {Array<string>}
     */
    get subTasks() {
        return this._apiTask.sub_tasks;
    }
    /**
     * If this task is a wrapper for a task from another service (vCloud director, Zerto, etc), this will return the ID of
     * the task known to that service. Otherwise returns Uhe task UUID.
     * @returns {string} the ID of the task
     */
    get taskId() {
        return this._apiTask.task_id;
    }
    /**
     * Gets the task type.
     * @returns {TaskType} the type of the task
     */
    get taskType() {
        return this._apiTask.task_type;
    }
    /**
     * Gets the username of the user that initiated the task.
     * @returns {string} username of the initiating user
     */
    get username() {
        return this._apiTask.username;
    }
    /**
     * Gets the full name of the user that initiated the task.
     * @returns {string} full name of the user that initiated the task
     */
    get userFullName() {
        return this._apiTask.user_full_name;
    }
    /**
     * Gets the tasks entity name
     * @returns {string} entity name
     */
    get entityName() {
        return this._apiTask.entity_name;
    }
    /**
     * Returns true if task is running
     * @returns {boolean}
     */
    get isRunning() {
        return this.status === 'running';
    }
    /**
     * Returns true if task is cancelled
     * @returns {boolean}
     */
    get isCancelled() {
        return this.status === 'cancelled';
    }
    /**
     * Returns true if task is success
     * @returns {boolean}
     */
    get isSuccess() {
        return this.status === 'success';
    }
    /**
     * Returns true if task is queued
     * @returns {boolean}
     */
    get isQueued() {
        return this.status === 'queued';
    }
    /**
     * Returns true if task is waiting on user input
     * @returns {boolean}
     */
    get isWaitingOnUserInput() {
        return this.status === 'waiting-on-user-input';
    }
    /**
     * Returns true if task has error
     * @returns {boolean}
     */
    get hasError() {
        return this.status === 'error';
    }
    /**
     * Returns true if task is waiting on user input
     * @returns {boolean}
     */
    get hasUnknownStatus() {
        return this.status === 'unknown';
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._apiTask, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {TaskJson} the API Task object
     */
    get json() {
        return Object.assign({}, this._apiTask);
    }
    /**
     * Retrieves a new representation of the task from the API.
     * @returns {Promise<Task>} promise that resolves with updated task
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/tasks/${this.uuid}`)
                .then(response => {
                this._apiTask = response.data;
                return this;
            });
        });
    }
    /**
     * Cancels a task. Only supported for active, top-level catalog upload tasks.
     */
    /* istanbul ignore next: autogenerated */
    cancelTask() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/tasks/${this.uuid}/actions/cancel`);
        });
    }
    /**
     * Gets a promise that resolves or rejects when the task is complete. An error status will cause rejection.
     * @returns {Promise<Task>} completion promise
     */
    getPromise() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.getObservable().toPromise();
        });
    }
    /**
     * Gets an observable that is updated as the progress or status of the task changes.
     * @returns {Observable<Task>} task observable
     */
    getObservable() {
        let obs;
        if (this.complete) {
            if (this.status === 'error') {
                return rxjs_1.throwError(this);
            }
            else {
                return rxjs_1.of(this);
            }
        }
        if (Task._subjectMap.has(this.uuid)) {
            obs = Task._subjectMap.get(this.uuid);
        }
        else {
            obs = new rxjs_1.BehaviorSubject(this);
            // tslint:disable-next-line:no-floating-promises
            Task._observe(this.companyId, this.uuid, obs).then(() => {
                Task._subjectMap.delete(this.uuid);
            });
            Task._subjectMap.set(this.uuid, obs);
        }
        if (!this._autoUpdating) {
            const handler = (t) => (this._apiTask = t.json);
            // tslint:disable-next-line
            const sub = obs
                .pipe(operators_1.finalize(() => {
                this._autoUpdating = false;
            }))
                .subscribe(handler, handler);
            this._autoUpdating = true;
        }
        return obs;
    }
}
exports.Task = Task;
Task._subjectMap = new Map();


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isScheduler; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(102);
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__[/* InnerSubscriber */ "a"](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__[/* Observable */ "a"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[/* subscribeTo */ "a"])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OuterSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return map; });
/* unused harmony export MapOperator */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));
//# sourceMappingURL=map.js.map


/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _root; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var __window = typeof window !== 'undefined' && window;
var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
    self instanceof WorkerGlobalScope && self;
var __global = typeof global !== 'undefined' && global;
var _root = __window || __global || __self;
/*@__PURE__*/ (function () {
    if (!_root) {
        throw /*@__PURE__*/ new Error('RxJS could not find any global context (window, self, global)');
    }
})();

//# sourceMappingURL=root.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(440)))

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export getSymbolIterator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return iterator; });
/* unused harmony export $$iterator */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return identity; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ from; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js + 1 modules
var Observable = __webpack_require__(3);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeTo.js
var subscribeTo = __webpack_require__(35);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscription.js
var Subscription = __webpack_require__(4);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/observable.js
var symbol_observable = __webpack_require__(19);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new Observable["a" /* Observable */](function (subscriber) {
        var sub = new Subscription["a" /* Subscription */]();
        sub.add(scheduler.schedule(function () {
            var observable = input[symbol_observable["a" /* observable */]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js
var schedulePromise = __webpack_require__(109);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js
var scheduleArray = __webpack_require__(62);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js
var scheduleIterable = __webpack_require__(110);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isInteropObservable.js
var isInteropObservable = __webpack_require__(103);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isPromise.js
var isPromise = __webpack_require__(55);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isArrayLike.js
var isArrayLike = __webpack_require__(53);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isIterable.js
var isIterable = __webpack_require__(104);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/scheduled.js
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(isInteropObservable["a" /* isInteropObservable */])(input)) {
            return scheduleObservable(input, scheduler);
        }
        else if (Object(isPromise["a" /* isPromise */])(input)) {
            return Object(schedulePromise["a" /* schedulePromise */])(input, scheduler);
        }
        else if (Object(isArrayLike["a" /* isArrayLike */])(input)) {
            return Object(scheduleArray["a" /* scheduleArray */])(input, scheduler);
        }
        else if (Object(isIterable["a" /* isIterable */])(input) || typeof input === 'string') {
            return Object(scheduleIterable["a" /* scheduleIterable */])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/from.js
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof Observable["a" /* Observable */]) {
            return input;
        }
        return new Observable["a" /* Observable */](Object(subscribeTo["a" /* subscribeTo */])(input));
    }
    else {
        return scheduled(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return hostReportError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export NotificationKind */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Notification; });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63);
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(111);
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__[/* of */ "a"])(this.value);
            case 'E':
                return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__[/* throwError */ "a"])(this.error);
            case 'C':
                return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__[/* empty */ "a"])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return noop; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Http = void 0;
const tslib_1 = __webpack_require__(5);
const axios_1 = __webpack_require__(115);
const qs = __webpack_require__(628);
const api_error_1 = __webpack_require__(250);
const iland_1 = __webpack_require__(7);
const DEFAULT_API_VERSION = 1.0;
const ILAND_MIME_VND_PREFIX = 'vnd.ilandcloud.api';
/**
 * Iland API HTTP Client.
 */
class Http {
    /**
     * Constructs a new Http instance.
     * @param {string} baseUrl the base URL of the iland Cloud API
     */
    constructor(baseUrl) {
        const defaultMime = Http.versionMime('application/json');
        this._ilandAxios = axios_1.default.create({
            baseURL: baseUrl,
            headers: {
                'x-enable-json-security-chars': 'true',
                Accept: defaultMime,
                'Content-Type': 'application/json'
            },
            paramsSerializer: params => {
                return qs.stringify(params, { arrayFormat: 'repeat', skipNulls: true });
            }
        });
        this._ilandAxios.interceptors.request.use((config) => tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getAuthProvider()
                .getToken()
                .then(token => {
                if (
                // @ts-ignore
                config.headers['x-enable-json-security-chars'] === false ||
                    // @ts-ignore
                    config.headers['x-enable-json-security-chars'] === 'false') {
                    // @ts-ignore
                    delete config.headers['x-enable-json-security-chars'];
                }
                // @ts-ignore
                config.headers['Authorization'] = `Bearer ${token}`;
                return config;
            });
        }));
        this._ilandAxios.interceptors.response.use((response) => {
            if (response.data instanceof Object || response.data instanceof Array) {
                return response;
            }
            else {
                const str = response.data;
                if (str.indexOf(")]}'\n") === 0) {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                    response.data = JSON.parse(str.substring(5));
                }
                return response;
            }
        }, (reason) => {
            let error;
            const response = reason.response;
            if (!response) {
                error = {
                    type: 'ConnectionError',
                    message: `failed to connect to ${reason.config.url}`
                };
            }
            else {
                if (response.data instanceof Object || response.data instanceof Array) {
                    error = response.data;
                }
                else {
                    let str = response.data;
                    if (str.indexOf(")]}'\n") === 0) {
                        str = str.substring(5);
                    }
                    error = JSON.parse(str);
                }
            }
            throw new api_error_1.ApiError(error);
        });
    }
    /**
     * Gets a formatted Accept header from a standard MIME and optional version number.
     * @param {string} mime the standard MIME string
     * @param {number} version the targeted version (defaults to the SDK version)
     * @returns {string} the formatted MIME type
     */
    static versionMime(mime, version) {
        if (mime.indexOf(ILAND_MIME_VND_PREFIX) >= 0) {
            return mime;
        }
        const versionStr = (version ? version : DEFAULT_API_VERSION).toFixed(1);
        const parts = mime.split('/');
        if (parts.length === 2) {
            const prefix = parts[0];
            const suffix = parts[1];
            return `${prefix}/${ILAND_MIME_VND_PREFIX}.v${versionStr}+${suffix}`;
        }
        return mime;
    }
    /**
     * Performs a request against the iland Cloud API.
     * @param {AxiosRequestConfig} config request configuration
     * @returns {Promise<AxiosResponse>} promise that resolves with the server response
     * @throws {ApiError} if the server responds with an error
     */
    request(config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this._ilandAxios.request(config);
        });
    }
    /**
     * Perform a GET request against the iland Cloud API.
     * @param {string} url the URL path
     * @param {AxiosRequestConfig} config request configuration
     * @returns {Promise<AxiosResponse>} promise that resolves with server response
     * @throws {ApiError} if the server responds with an error
     */
    get(url, config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this._ilandAxios.get(url, config);
        });
    }
    /**
     * Perform a DELETE request against the iland Cloud API.
     * @param {string} url the URL path
     * @param {AxiosRequestConfig} config request configuration
     * @returns {Promise<AxiosResponse>} promise that resolves with the server response
     * @throws {ApiError} if the server responds with an error
     */
    delete(url, config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this._ilandAxios.delete(url, config);
        });
    }
    /**
     * Perform a POST request against the iland Cloud API.
     * @param {string} url the URL path
     * @param data the data to include in the request body
     * @param {AxiosRequestConfig} config request configuration
     * @returns {Promise<AxiosResponse>} promise that resolves with the server response
     * @throws {ApiError} if the server responds with an error
     */
    post(url, data, config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this._ilandAxios.post(url, data, config);
        });
    }
    /**
     * Perform a PUT request against the iland Cloud API.
     * @param {string} url the URL path
     * @param data the data to include in the request body
     * @param {AxiosRequestConfig} config request configuration
     * @returns {Promise<AxiosResponse>} promise that resolves with the server response
     * @throws {ApiError} if the server responds with an error
     */
    put(url, data, config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this._ilandAxios.put(url, data, config);
        });
    }
}
exports.Http = Http;


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__[/* isArray */ "a"])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62);
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__[/* subscribeToArray */ "a"])(input));
    }
    else {
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__[/* scheduleArray */ "a"])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export EMPTY */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return empty; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpRange = void 0;
/**
 * IP Range.
 */
/* istanbul ignore next: autogenerated */
class IpRange {
    constructor(firstParam, end) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                start: firstParam,
                end: end
            };
        }
        else if (firstParam instanceof IpRange) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get start.
     * @returns {string}
     */
    get start() {
        return this._json.start;
    }
    /**
     * Get end.
     * @returns {string}
     */
    get end() {
        return this._json.end;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpRangeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpRange = IpRange;


/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return rxSubscriber; });
/* unused harmony export $$rxSubscriber */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isFunction; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeTo; });
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56);
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57);
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(101);
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(53);
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(55);
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(52);
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(18);
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(19);
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__[/* observable */ "a"]] === 'function') {
        return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__[/* subscribeToObservable */ "a"])(result);
    }
    else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__[/* isArrayLike */ "a"])(result)) {
        return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__[/* subscribeToArray */ "a"])(result);
    }
    else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__[/* isPromise */ "a"])(result)) {
        return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__[/* subscribeToPromise */ "a"])(result);
    }
    else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__[/* iterator */ "a"]] === 'function') {
        return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__[/* subscribeToIterable */ "a"])(result);
    }
    else {
        var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__[/* isObject */ "a"])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ ReplaySubject_ReplaySubject; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subject.js
var Subject = __webpack_require__(6);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js + 1 modules
var AsyncAction = __webpack_require__(64);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction_QueueAction = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction["a" /* AsyncAction */]));

//# sourceMappingURL=QueueAction.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js
var AsyncScheduler = __webpack_require__(61);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler_QueueScheduler = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(AsyncScheduler["a" /* AsyncScheduler */]));

//# sourceMappingURL=QueueScheduler.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/queue.js
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queueScheduler = /*@__PURE__*/ new QueueScheduler_QueueScheduler(QueueAction_QueueAction);
var queue = queueScheduler;
//# sourceMappingURL=queue.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscription.js
var Subscription = __webpack_require__(4);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/observeOn.js
var observeOn = __webpack_require__(105);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js
var ObjectUnsubscribedError = __webpack_require__(22);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/SubjectSubscription.js
var SubjectSubscription = __webpack_require__(60);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/ReplaySubject.js
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject_ReplaySubject = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        if (!this.isStopped) {
            var _events = this._events;
            _events.push(value);
            if (_events.length > this._bufferSize) {
                _events.shift();
            }
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        if (!this.isStopped) {
            this._events.push(new ReplayEvent(this._getNow(), value));
            this._trimBufferThenGetEvents();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new ObjectUnsubscribedError["a" /* ObjectUnsubscribedError */]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = Subscription["a" /* Subscription */].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new SubjectSubscription["a" /* SubjectSubscription */](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new observeOn["a" /* ObserveOnSubscriber */](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject["b" /* Subject */]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__37__;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Metadata = void 0;
/**
 * Metadata.
 */
class Metadata {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the metadata key.
     * @returns {string} the key
     */
    get key() {
        return this._json.key;
    }
    /**
     * Gets the metadata's access restriction type.
     * @returns {MetadataAccessMode} the type of access restriction
     */
    get access() {
        return this._json.access;
    }
    /**
     * Gets the type of the metadata.
     * @returns {VirtualDiskType} the type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the metadata value.
     * @returns {} the type
     */
    get value() {
        return this._json.value;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {MetadataJson} the API JSON representation of the metadata
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.Metadata = Metadata;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Bill = void 0;
const bill_line_item_1 = __webpack_require__(298);
const disk_cost_and_usage_1 = __webpack_require__(299);
const resource_cost_and_usage_1 = __webpack_require__(142);
/* istanbul ignore next: autogenerated */
class Bill {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get billing model type.
     * @returns {BillingModelType | null}
     */
    get billingModelType() {
        return this._json.billing_model_type;
    }
    /**
     * Get bandwidth.
     * @returns {ResourceCostAndUsage}
     */
    get bandwidth() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.bandwidth);
    }
    /**
     * Get cpu.
     * @returns {ResourceCostAndUsage}
     */
    get cpu() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.cpu);
    }
    /**
     * Get memory.
     * @returns {ResourceCostAndUsageJson}
     */
    get memory() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.memory);
    }
    /**
     * Get disk.
     * @returns {DiskCostAndUsage}
     */
    get disk() {
        return new disk_cost_and_usage_1.DiskCostAndUsage(this._json.disk);
    }
    /**
     * Get total cost.
     * @returns {number}
     */
    get totalCost() {
        return this._json.total_cost;
    }
    /**
     * Get total cost estimate.
     * @returns {number}
     */
    get totalCostEstimate() {
        return this._json.total_cost_estimate;
    }
    /**
     * Get year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get month.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get entity name.
     * @returns {string}
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * Get entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Get line items.
     * @returns {Array<BillLineItem>}
     */
    get lineItems() {
        return this._json.line_items.map(it => {
            return new bill_line_item_1.BillLineItem(it);
        });
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get test drive
     * @returns {boolean}
     */
    get testDrive() {
        return this._json.test_drive;
    }
    /**
     * Get the json representation of this class.
     * @returns {BillJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Bill = Bill;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAuthServer = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnAuthServer {
    constructor(_authServerJson) {
        this._authServerJson = _authServerJson;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._authServerJson.object_id;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._authServerJson.auth_server_type;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._authServerJson.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._authServerJson.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._authServerJson.terminate_session_on_auth_fails;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._authServerJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._authServerJson, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnAuthServer = EdgeGatewaySslVpnAuthServer;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Vm = void 0;
const tslib_1 = __webpack_require__(5);
const internal_compatibility_1 = __webpack_require__(248);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const url_encoder_1 = __webpack_require__(442);
const backup_group_run_1 = __webpack_require__(67);
const vm_backup_status_detail_1 = __webpack_require__(272);
const directory_listing_1 = __webpack_require__(281);
const file_snapshot_info_1 = __webpack_require__(135);
const filesystem_volume_1 = __webpack_require__(136);
const recoverable_file_search_result_1 = __webpack_require__(82);
const bill_1 = __webpack_require__(39);
const billing_summary_1 = __webpack_require__(70);
const entity_1 = __webpack_require__(9);
const jpeg_image_1 = __webpack_require__(85);
const metadata_1 = __webpack_require__(38);
const product_section_1 = __webpack_require__(143);
const snapshot_1 = __webpack_require__(145);
const storage_profile_1 = __webpack_require__(86);
const vm_integrated_backup_status_detail_1 = __webpack_require__(443);
const entity_with_perf_samples_1 = __webpack_require__(91);
const task_1 = __webpack_require__(10);
const backup_restore_point_1 = __webpack_require__(444);
const boot_options_1 = __webpack_require__(445);
const capabilities_1 = __webpack_require__(446);
const guest_customization_1 = __webpack_require__(447);
const guest_tools_1 = __webpack_require__(448);
const mks_screen_ticket_1 = __webpack_require__(449);
const screen_ticket_1 = __webpack_require__(450);
const vm_summary_1 = __webpack_require__(213);
const virtual_disk_1 = __webpack_require__(451);
const vm_memory_size_update_request_1 = __webpack_require__(214);
const vm_network_1 = __webpack_require__(452);
const vm_resource_summary_1 = __webpack_require__(215);
const vnic_1 = __webpack_require__(453);
/**
 * Virtual Machine.
 */
class Vm extends entity_1.Entity {
    constructor(_apiVm) {
        super(_apiVm);
        this._apiVm = _apiVm;
        // EntityWithPerfSamples mixin properties and methods
        this.apiPrefix = '/vms';
    }
    /**
     * Gets a VM by UUID.
     * @param uuid VM UUID
     * @returns {Promise<Vm>} promise that resolves with the VM
     */
    static getVm(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${uuid}`)
                .then(response => {
                const apiVm = response.data;
                return new Vm(apiVm);
            });
        });
    }
    get entityType() {
        return 'IAAS_VM';
    }
    /**
     * Gets the VM's local ID.
     * @returns {string} the VM's local ID
     */
    get vmLocalId() {
        return this._apiVm.vm_local_id;
    }
    /**
     * Gets the VM's datastore reference.
     * @returns {string} datastore reference
     */
    get vimDatastoreRef() {
        return this._apiVm.vim_datastore_ref;
    }
    /**
     * Gets the UUID of the vDC that the VM belongs to.
     * @returns {string} vDC UUID
     */
    get vdcUuid() {
        return this._apiVm.vdc_uuid;
    }
    /**
     * Gets the HREF of the vCloud Director instance that this VM is associated with.
     * @returns {string} vCloud HREF
     */
    get vcloudHref() {
        return this._apiVm.vcloud_href;
    }
    /**
     * Gets the name of the vCenter server that the VM is associated with.
     * @returns {string} vCenter name
     */
    get vcenterName() {
        return this._apiVm.vcenter_name;
    }
    /**
     * Gets the VM'r vCenter reference.
     * @returns {string} vCenter reference
     */
    get vcenterMoRef() {
        return this._apiVm.vcenter_moref;
    }
    /**
     * Gets the UUID of the vCenter instance that the VM is associated with.
     * @returns {string} vCenter UUID
     */
    get vcenterInstanceUuid() {
        return this._apiVm.vcenter_instance_uuid;
    }
    /**
     * Gets the HREF of the vCenter instance that the VM is associated with.
     * @returns {string} vCenter HREF
     */
    get vcenterHref() {
        return this._apiVm.vcenter_href;
    }
    /**
     * Gets the UUID of the vApp that this VM belongs to.
     * @returns {string} vApp UUID
     */
    get vappUuid() {
        return this._apiVm.vapp_uuid;
    }
    /**
     * Gets the list of storage profiles that are available to this VM.
     * @returns {Array<string>} list of storage profile UUIDs
     */
    get storageProfiles() {
        return this._apiVm.storage_profiles;
    }
    /**
     * Gets the power status of the VM.
     * @returns {VmPowerStatus} power status identifier
     */
    get powerStatus() {
        if (this._apiVm.deployed && this._apiVm.status === 'POWERED_OFF') {
            return 'PARTIALLY_POWERED_OFF';
        }
        else {
            return this._apiVm.status;
        }
    }
    /**
     * Gets the VM's operating system.
     * @returns {OperatingSystem} operating system
     */
    get operatingSystem() {
        return this._apiVm.os;
    }
    /**
     * Gets the UUID of the Organization that the VM belongs to.
     * @returns {string} Org UUID
     */
    get orgUuid() {
        return this._apiVm.org_uuid;
    }
    /**
     * Gets the datacenter location identifier for the VM.
     * @returns {string} datacenter location ID
     */
    get locationId() {
        return this._apiVm.location_id;
    }
    /**
     * Gets the name of the media that is currently inserted in the VM.
     * @returns {string} the name of the inserted media or null if no media is currently inserted
     */
    get insertedMediaName() {
        return this._apiVm.inserted_media_name && this._apiVm.inserted_media_name.length > 0 ? this._apiVm.inserted_media_name : null;
    }
    /**
     * Indicates whether there is currently a media inserted in the VM.
     * @returns {boolean} value
     */
    get mediaInserted() {
        return this._apiVm.media_inserted;
    }
    /**
     * Gets the VM's hardware version.
     * @returns {string} hardware version
     */
    get hardwareVersion() {
        return this._apiVm.hardware_version;
    }
    /**
     * Gets the VM's description.
     * @returns {string} description
     */
    get description() {
        return this._apiVm.description;
    }
    /**
     * Indicates whether the VM is deployed.
     * @returns {boolean} value
     */
    get deployed() {
        return this._apiVm.deployed;
    }
    /**
     * Gets the date that the VM was created.
     * @returns {Date} creation date
     */
    get createdDate() {
        return this._apiVm.created_date !== null ? new Date(this._apiVm.created_date) : null;
    }
    /**
     * Gets the number of CPUs for the VM.
     * @returns {number} number of CPUs
     */
    get numberOfCpus() {
        return this._apiVm.cpus_number;
    }
    /**
     * Gets the number of cores per CPU socket.
     * @returns {number} cores per CPU socket
     */
    get coresPerSocket() {
        return this._apiVm.cores_per_socket;
    }
    /**
     * Gets the VM's configured memory in MB.
     * @returns {number} the VM's configured memory in MB.
     */
    get memorySize() {
        return this._apiVm.memory_size;
    }
    /**
     * Gets the VM's Vdc Allocation Model.
     * @returns {VdcAllocationModel} allocation model
     */
    get allocationModel() {
        return this._apiVm.allocation_model;
    }
    /**
     * Gets the VM's nested hypervisor enabled property
     * @returns {boolean}
     */
    get isNestedHypervisorEnabled() {
        return this._apiVm.nested_hypervisor_enabled;
    }
    /**
     * Get the VM's protection status
     * @returns {boolean}
     */
    get isProtected() {
        return this._apiVm.is_protected;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._apiVm, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VmJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._apiVm);
    }
    /**
     * Deletes this VM.
     * @returns {Promise<Task>} task promise
     */
    delete() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vms/${this.uuid}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Create a new virtual disk for this VM.
     * @param {VirtualDiskJson} diskJson spec for the new disk
     * @returns {Promise<Task>} task promise
     */
    createVirtualDisk(diskJson) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/add-virtual-disk`, diskJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Creates a new Vm in the vApp based on an existing Vm.
     * @param {VmCopyMoveRequest} copyMoveRequest Vm properties
     * @returns {Promise<Task>} task promise
     */
    copy(copyMoveRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/copy`, copyMoveRequest.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Creates a snapshot of the VM.
     * @param {SnapshotCreateRequest} request the snapshot creation request
     * @returns {Promise<Task>} task promise
     */
    createSnapshot(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/create-snapshot`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Disable Nested Hypervisor
     * @returns {Promise<Task>}
     */
    disableNestedHypervisor() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/disable-nested-hypervisor`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Ejects any media from the VM.
     * @returns {Promise<Task>} task promise
     */
    ejectMedia() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/eject-media`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Retrieve a CSV report email with all event history for a given Vm.
     * @returns {Promise<void>} there is no response object.
     */
    emailEventHistory(email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/email-event-history`, {
                email: email
            })
                .then(() => undefined);
        });
    }
    /**
     * Enable Nested Hypervisor
     * @returns {Promise<Task>}
     */
    enableNestedHypervisor() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/enable-nested-hypervisor`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Inserts a specified media into the VM.
     * @param {string} mediaUuid the UUID of the media to insert
     * @returns {Promise<Task>} task promise
     */
    insertMedia(mediaUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = {
                media: mediaUuid
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/insert-media`, json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Install VmWare Tools.
     * @returns {Promise<Task>} task promise
     */
    installVmWareTools() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/install-vmware-tools`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Moves an existing VM into the specified Vapp.
     * @param {VmCopyMoveRequest} spec Specification for newly moved vm
     * @returns {Promise<Task>} task Promise
     */
    /* istanbul ignore next: autogenerated */
    moveVm(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/move`, spec.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Powers off the VM.
     * @returns {Promise<Task>} task promise
     */
    powerOff() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('poweroff');
        });
    }
    /**
     * Powers on the VM.
     * @param {boolean} forceGuestCustomization whether to force guest customization
     * @returns {Promise<Task>} task promise
     */
    powerOn(forceGuestCustomization) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('poweron', forceGuestCustomization);
        });
    }
    /**
     * Requests that the guest OS restart.
     * @returns {Promise<Task>} task promise
     */
    rebootGuestOs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('reboot');
        });
    }
    /**
     * Update the name and description of the VM as well as the guest customization section, the cpu, memory,
     * and disk specifications. Any sections left out of the VmReconfigureRequest will be left unchanged.
     * @param {VmReconfigureRequest} request
     * @returns {Promise<Task>}
     */
    reconfigure(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/reconfigure`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Move the VM to a different storage profile.
     * @returns {Promise<Task>} task promise
     */
    relocate(storageProfileUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = {
                storage_profile: storageProfileUuid
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/relocate`, json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Performs a hard reset power operation.
     * @returns {Promise<Task>} task promise
     */
    reset() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('reset');
        });
    }
    /**
     * Reset MAC Addresses
     * @returns {Promise<Task>}
     */
    resetMacAddresses() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/reset-mac-addresses`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restores a backup of the VM.
     * @param {Date} timestamp the timestamp of the restore point to be restored
     * @returns {Promise<Task>} task promise
     */
    restoreBackup(timestamp) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = {
                time: timestamp.getTime()
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/restore`, json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Restore a backup of the VM into another vApp.
     * @param {Date} timestamp the timestamp of the restore point to be restored
     * @param {string} vappUuid the uuid of the vApp in which VM will be restored
     * @returns {Promise<Task>}
     */
    restoreBackupIntoVapp(timestamp, vappUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = {
                time: timestamp.getTime(),
                vapp_uuid: vappUuid
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/restore-into-vapp`, json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore the VMs snapshot.
     * @returns {Promise<Task>} task promise
     */
    restoreSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/restore-snapshot`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Shuts down the VMs guest operating system.
     * @returns {Promise<Task>} task promise
     */
    shutdownGuestOs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('shutdown');
        });
    }
    /**
     * Suspends VM.
     * @returns {Promise<Task>} task promise
     */
    suspend() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.performPowerOperation('suspend');
        });
    }
    /**
     * Update VM boot options
     * @returns {Promise<Task>}
     */
    updateBootOptions(bootDelay, enterBios) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-boot-options`, {
                boot_delay: bootDelay,
                is_enter_bios: enterBios
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update VM capabilities
     * @param {CapabilitiesUpdateRequest} request VM capabilities update request
     * @returns {Promise<Task>}
     */
    updateCapabilities(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-capabilities`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Edit the number of CPUs.
     * @param request {VmCpuCountUpdateRequest} specifying new number of CPUs
     * @returns {Promise<Task>} task promise
     */
    updateCpuCount(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-cpu-count`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates the VM's description.
     * @param description the new description
     * @returns {Promise<Task>} task promise
     */
    updateDescription(description) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const spec = {
                description: description
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-description`, spec)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates the VM's guest customization.
     * @param {GuestCustomizationUpdateRequest} request
     * @returns {Promise<Task>}
     */
    updateGuestCustomization(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-guest-customization`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Edit the memory size of the VM.
     * @param memorySizeMb {number} the new memory size in MB
     * @returns {Promise<Task>} task promise
     */
    updateMemorySize(memorySizeMb) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const request = new vm_memory_size_update_request_1.VmMemorySizeUpdateRequest({ memory_size: memorySizeMb });
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-memory-size`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates the VM's name.
     * @param newName the new name
     * @returns {Promise<Task>} task promise
     */
    updateName(newName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = {
                name: newName
            };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-name`, json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates the VM's tools upgrade policy.
     * @param {ToolsUpgradePolicy} policy The new policy
     * @returns {Promise<Task>} task promise
     */
    updateToolsUpgradePolicy(policy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const json = { upgrade_policy: policy };
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-tools-upgrade-policy`, json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Update a virtual disk that is attached to this VM.
     * @param {VirtualDiskJson} diskJson updated specification for the disk
     * @returns {Promise<Task>} task promise
     */
    updateVirtualDisk(diskJson) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-virtual-disk`, diskJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Update the VM's virtual disks.
     * @param {Array<VirtualDiskJson>} disksJson array of specs for new disks
     * @returns {Promise<Task>} task promise
     */
    updateVirtualDisks(disksJson) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-virtual-disks`, disksJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Update virtual network cards for a VM.
     * @param {Array<Vnic>} vnics
     * @returns {Promise<Task>}
     */
    updateVnics(vnics) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const spec = vnics.map(vnic => {
                return vnic.json;
            });
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-vnics`, spec)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Upgrade the VM's guest tools.
     * @returns {Promise<Task>} task promise
     */
    upgradeGuestTools() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/upgrade-guest-tools`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the VMs available backup restore points.
     * @returns {Promise<BackupRestorePoint[]>} promise that resolves with the list of backup restore points
     */
    getBackupRestorePoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backups`)
                .then(response => {
                const restorePointsJson = response.data.data;
                return restorePointsJson.map(restorePointJson => new backup_restore_point_1.BackupRestorePoint(restorePointJson));
            });
        });
    }
    /**
     * Gets the bill for the VM for the specified month and year. Month and year default to current month and year if left
     * unspecified.
     * @returns {Promise<Bill>} promise that resolves with the Bill
     */
    getBill(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/billing`, {
                params: {
                    month: month,
                    year: year
                }
            })
                .then(response => {
                const json = response.data;
                return new bill_1.Bill(json);
            });
        });
    }
    /**
     * Gets the VMs boot options
     * @returns {Promise<BootOptions>} promise that resolves with the vm boot options
     */
    getBootOptions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/boot-options`)
                .then(response => {
                const bootOptionsJson = response.data;
                return new boot_options_1.BootOptions(bootOptionsJson);
            });
        });
    }
    /**
     * Gets the VM capabilities
     * @returns {Promise<Capabilities>} promise that resolves with the vm capabilities
     */
    getCapabilities() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/capabilities`)
                .then(response => {
                const capabilitiesJson = response.data;
                return new capabilities_1.Capabilities(capabilitiesJson);
            });
        });
    }
    /**
     * Gets the VM recommended disk bus type
     * @returns {Promise<DiskType>} promise that resolves with the vm recommended disk bus type
     */
    getRecommendedDiskBusType() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/recommended-disk-bus-type`)
                .then(response => {
                return response.data.bus_type;
            });
        });
    }
    /**
     * Gets the VM guest customization section includes properties of the guest operating system that can be modified
     * such as passwords, and domain names.
     * @param {boolean} omitPasswords Whether to omit passwords (default: false)
     * @returns {Promise<GuestCustomization>} promise that resolves with the vm guest customization object
     */
    getGuestCustomization(omitPasswords = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/guest-customization`, {
                params: {
                    omitPasswords: omitPasswords
                }
            })
                .then(response => {
                const guestCustomizationJson = response.data;
                return new guest_customization_1.GuestCustomization(guestCustomizationJson);
            });
        });
    }
    /**
     * Gets the VM guest tools information
     * @returns {Promise<GuestCustomization>} promise that resolves with the vm guest tools
     */
    getGuestToolsInfo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/guest-tools`)
                .then(response => {
                const guestToolsJson = response.data;
                return new guest_tools_1.GuestTools(guestToolsJson);
            });
        });
    }
    /**
     * Returns true if VM has a snapshot
     * @returns {Promise<boolean>} promise that resolves with a boolean that indicates if VM has a snapshot
     */
    hasSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/has-snapshot`)
                .then(response => {
                return response.data.has_snapshot;
            });
        });
    }
    /**
     * Gets the VM summary
     * @returns {Promise<VmSummary>} promise that resolves with the vm guest tools
     */
    getSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/summary`)
                .then(response => {
                const summary = response.data;
                return new vm_summary_1.VmSummary(summary);
            });
        });
    }
    /**
     * Gets the VM tools upgrade policy
     * @returns {Promise<ToolsUpgradePolicy>} promise that resolves with tools upgrade policy string
     */
    getToolUpgradePolicy() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/tools-upgrade-policy`)
                .then(response => {
                return response.data.upgrade_policy;
            });
        });
    }
    /**
     * Delete a virtual disk.
     * @param {string} name the name of the disk to delete
     * @returns {Promise<Task>} task promise
     */
    deleteVirtualDisk(name) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vms/${this.uuid}/disks/${name}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the VM's metadata.
     * @returns {Promise<Metadata<MetadataType>[]>}
     */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Updates the VM's metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const metadataJson = metadata.map(m => {
                return m.json;
            });
            return iland_1.Iland.getHttp()
                .put(`/vms/${this.uuid}/metadata`, metadataJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Deletes a metadata entry.
     * @param {string} metadataKey the key of the metadata entry to delete
     * @returns {Promise<Task>} task promise
     */
    deleteMetadata(metadataKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vms/${this.uuid}/metadata/${metadataKey}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the VMs MKS screen ticket for a remote console connection.
     * @returns {Promise<MksScreenTicket>} promise that resolves with the MKS screen ticket
     */
    getMksScreenTicket() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/mks-screen-ticket`)
                .then(response => {
                const json = response.data;
                return new mks_screen_ticket_1.MksScreenTicket(json);
            });
        });
    }
    /**
     * Get the networks for current VM.
     * @returns {Promise<Array<VmNetwork>>}
     */
    getNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/networks`)
                .then(response => {
                return response.data.data.map((data) => {
                    return new vm_network_1.VmNetwork(data);
                });
            });
        });
    }
    /**
     * Gets the VMs screen ticket for a remote console connection.
     * @returns {Promise<ScreenTicket>} promise that resolves with the screen ticket
     */
    getScreenTicket() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/screen-ticket`)
                .then(response => {
                const json = response.data;
                return new screen_ticket_1.ScreenTicket(json);
            });
        });
    }
    /**
     * Gets the current screen JPEG thumbnail image.
     * @returns {Promise<JpegImage>} promise Promise that resolves with a JpegImage
     */
    /* istanbul ignore next: autogenerated */
    getScreen() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/screen`, {
                headers: {
                    Accept: 'image/jpeg'
                },
                responseType: 'arraybuffer'
            })
                .then(response => {
                return new jpeg_image_1.JpegImage(response.data);
            });
        });
    }
    /**
     * Deletes the VMs snapshot.
     * @returns {Promise<Task>} task promise
     */
    deleteSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/remove-snapshot`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the VMs snapshot details.
     * @returns {Promise<Snapshot>} promise that resolves with the current snapshot details
     * @throws {ApiError} as NotFoundError if the VM doesn't currently have a snapshot
     */
    getSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/snapshot`)
                .then(response => {
                const json = response.data;
                return new snapshot_1.Snapshot(json);
            });
        });
    }
    /**
     * Gets the VM's virtual disks.
     * @returns {Promise<VirtualDisk[]>} array of virtual disks
     */
    getVirtualDisks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/virtual-disks`)
                .then(response => {
                const apiDisks = response.data.data;
                return apiDisks.map(apiDisk => new virtual_disk_1.VirtualDisk(apiDisk));
            });
        });
    }
    /**
     * Updates the VM's virtual hardware to the latest version available.
     * @returns {Promise<Task>} task promise
     */
    updateVirtualHardwareVersion() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-virtual-hardware-version`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the list of VNICs for this VM.
     * @returns {Promise<Vnic[]>}
     */
    getVnics() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/vnics`)
                .then(response => {
                const apiVnics = response.data.data;
                return apiVnics.map(apiVnic => new vnic_1.Vnic(apiVnic));
            });
        });
    }
    /**
     * Delete a VNIC from this VM.
     * @returns {Promise<Task>} a promise that resolves with the task
     */
    deleteVnic(vnicId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vms/${this.uuid}/vnics/${vnicId}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Refreshes the VM data by retrieving it from the API again.
     * @returns {Promise<Vm>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}`)
                .then(response => {
                this._apiVm = response.data;
                return this;
            });
        });
    }
    /**
     * Performs a power operation on the VM.
     * @param {VmPowerOperation} type the type of power operation to perform
     * @param {boolean} forceGuestCustomization whether to force guest customization (only applicable when powering on)
     * @returns {Promise<Task>} task promise
     */
    performPowerOperation(type, forceGuestCustomization) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let config;
            if (type === 'poweron' && forceGuestCustomization) {
                config = {
                    params: {
                        forceGuestCustomization: forceGuestCustomization
                    }
                };
            }
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/${type}`, undefined, config)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Get the billing summary for a VM.
     * @returns {Promise<BillingSummary>} a promise that resolves with the current billing information
     */
    /* istanbul ignore next: autogenerated */
    getCurrentBilling() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/billing-summary`)
                .then(response => {
                const json = response.data;
                return new billing_summary_1.BillingSummary(json);
            });
        });
    }
    /**
     * Gets the VM's resource summary.
     * @returns {Promise<VmResourceSummary>} a promise that resolves with the resource summary information
     */
    /* istanbul ignore next: autogenerated */
    getVmSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/summary`)
                .then(response => {
                const json = response.data;
                return new vm_resource_summary_1.VmResourceSummary(json);
            });
        });
    }
    /**
     * Get the VM's product sections
     * @returns {Promise<Array<ProductSection>>} a promise that resolves with the product sections of the VM
     */
    /* istanbul ignore next: autogenerated */
    getProductSections() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/product-sections`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new product_section_1.ProductSection(it));
            });
        });
    }
    /**
     * Update the VM's product section properties
     * @param request {UpdateProductSectionRequest}
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateProductSections(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/update-product-section-properties`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the VM's available storage profiles.
     * @returns {Promise<Array<StorageProfile>>} a promise that resolves with the available storage profiles
     */
    /* istanbul ignore next: autogenerated */
    getAvailableStorageProfiles() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/available-storage-profiles`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new storage_profile_1.StorageProfile(it));
            });
        });
    }
    /**
     * Gets the VM's integrated backup status.
     * @returns {Promise<VmIntegratedBackupStatusDetail>}
     */
    /* istanbul ignore next: autogenerated */
    getIntegratedBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/integrated-backup-status`)
                .then(response => {
                const json = response.data;
                return new vm_integrated_backup_status_detail_1.VmIntegratedBackupStatusDetail(json);
            });
        });
    }
    /**
     * Gets the VM's backup status.
     *
     * @return {Promise<VmBackupStatusDetail>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-status`)
                .then(response => {
                const json = response.data;
                return new vm_backup_status_detail_1.VmBackupStatusDetail(json);
            });
        });
    }
    /**
     * Restores a VM backup.
     *
     * @param {RestoreVmBackupParams} params restoration parameters
     * @return {Promise<Task>} the restore task, used to track the asynchronous operation
     */
    /* istanbul ignore next: autogenerated */
    restoreVMBackup(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/restore-vm-backup`, params.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Searches for recoverable backup files and folders that are associated with
     * the VM.
     *
     * @param {SearchVmRecoverableFilesAndFoldersFilters} filters query filters (Optional)
     * @return {Promise<Array<RecoverableFileSearchResult>>} a list of recoverable files and folders
     */
    /* istanbul ignore next: autogenerated */
    searchRecoverableFilesAndFolders(filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/recoverable-files-and-folders`, {
                params: (filters === null || filters === void 0 ? void 0 : filters.json) || null
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new recoverable_file_search_result_1.RecoverableFileSearchResult(it));
            });
        });
    }
    /**
     * Lists all backup runs that are associated with the specified VM.
     *
     * @param {number} backupGroupUid Will return only runs for a specific backup group. (Optional)
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     * @param {number} limit Default is 10. (Optional)
     * @return {Promise<Array<BackupGroupRun>>} a list of backup runs that are associated with the VM
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroupRuns(backupGroupUid, startTimeMillis, endTimeMillis, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-runs`, {
                params: {
                    backupGroupUid: backupGroupUid !== null && backupGroupUid !== void 0 ? backupGroupUid : null,
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null,
                    limit: limit !== null && limit !== void 0 ? limit : null
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_run_1.BackupGroupRun(it));
            });
        });
    }
    /**
     * Lists all snapshots that are available for a specified file, in association
     * with a specific backup group.
     *
     * @param {string} backupGroupUid the UID of the backup group
     * @param {string} filename the name of the file
     * @return {Promise<Array<FileSnapshotInfo>>} list of all snapshots available for the file
     */
    /* istanbul ignore next: autogenerated */
    listBackupFileSnapshots(backupGroupUid, filename) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const encodedFilename = url_encoder_1.URLEncoder.encodeURIComponentRFC5987(filename, true);
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-groups/${backupGroupUid}/files/${encodedFilename}`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new file_snapshot_info_1.FileSnapshotInfo(it));
            });
        });
    }
    /**
     * Lists all volumes that are present on a VM backup snapshot.
     *
     * @param {string} backupRunUid the UID of the backup run
     * @param {number} attemptNumber the snapshot attempt number (Optional)
     * @return {Promise<Array<FilesystemVolume>>} list of vm backup volume snapshots
     */
    /* istanbul ignore next: autogenerated */
    listBackupVolumeSnapshots(backupRunUid, attemptNumber) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-runs/${backupRunUid}/volumes`, {
                params: {
                    attemptNumber: attemptNumber !== null && attemptNumber !== void 0 ? attemptNumber : null
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new filesystem_volume_1.FilesystemVolume(it));
            });
        });
    }
    /**
     * Gets a directory listing for a VM backup snapshot.
     *
     * @param {string} backupRunUid the UID of the backup run that the snapshot is associated with
     * @param {string} volumeName the name of the volume
     * @param {string} directoryPath the full directory path to list
     * @param {ListBackupSnapshotFilesAndFoldersFilters} filters query filters (Optional)
     * @return {DirectoryListing} vm backup directory listing
     */
    /* istanbul ignore next: autogenerated */
    listBackupDirectoryContents(backupRunUid, volumeName, directoryPath, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const encodedVolumeName = url_encoder_1.URLEncoder.encodeURIComponentRFC5987(volumeName, true);
            const encodedDirectoryPath = url_encoder_1.URLEncoder.encodeURIComponentRFC5987(directoryPath, true);
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-runs/${backupRunUid}/volumes/${encodedVolumeName}/directories/${encodedDirectoryPath}/contents`, {
                params: (filters === null || filters === void 0 ? void 0 : filters.json) || null
            })
                .then(response => {
                const json = response.data;
                return new directory_listing_1.DirectoryListing(json);
            });
        });
    }
    /**
     * Generates a new downloadable bundle (ZIP archive) of a collection of
     * file snapshots.
     *
     * @param {GenerateBackupFileDownloadBundleParams} params the specification for which files to download
     * @return {Promise<Task>} asynchronous task that indicates eventual completion and
     * success/failure
     */
    /* istanbul ignore next: autogenerated */
    generateBackupFileDownloadBundle(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vms/${this.uuid}/actions/generate-backup-file-download-bundle`, params.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets a new downloadable bundle (ZIP archive) of a collection of file snapshots using a Task uuid
     *
     * @param taskUuid {string} the uuid of the Task that originally created the file bundle
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for download
     * @return {Promise<Blob>} the download bundle in zip format
     */
    /* istanbul ignore next: autogenerated */
    getBackupFileDownloadBundle(taskUuid, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vms/${this.uuid}/backup-file-download-bundles/${taskUuid}`, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Get an Advanced Backups download bundle link
     * @param taskUuid {string} the task uuid used to create bundle
     * @returns {Observable<string>}
     */
    /* istanbul ignore next: autogenerated */
    getDownloadBundleLink(taskUuid) {
        const href = `${iland_1.Iland.baseUrl}/vms/${this.uuid}/backup-file-download-bundles/${taskUuid}?accept=` +
            encodeURIComponent(http_1.Http.versionMime('application/octet-stream'));
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Get an Advanced Backups link to download an individual file from a specified backup run
     * @param backupRunUid {string} the UID of the backup run that created the snapshot
     * @param filename {string} the name of the file
     * @returns {Observable<string>} html link with a current auth token
     */
    /* istanbul ignore next: autogenerated */
    getDownloadFileLink(backupRunUid, filename) {
        const href = `${iland_1.Iland.baseUrl}/vms/${this.uuid}/` +
            `backup-runs/${backupRunUid}/` +
            `files/${url_encoder_1.URLEncoder.encodeURIComponentRFC5987(filename, true)}` +
            `?accept=${encodeURIComponent(http_1.Http.versionMime('application/octet-stream'))}`;
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
}
exports.Vm = Vm;
internal_compatibility_1.applyMixins(Vm, [entity_with_perf_samples_1.EntityWithPerfSamples]);


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "audit", function() { return /* reexport */ audit; });
__webpack_require__.d(__webpack_exports__, "auditTime", function() { return /* reexport */ auditTime; });
__webpack_require__.d(__webpack_exports__, "buffer", function() { return /* reexport */ buffer_buffer; });
__webpack_require__.d(__webpack_exports__, "bufferCount", function() { return /* reexport */ bufferCount; });
__webpack_require__.d(__webpack_exports__, "bufferTime", function() { return /* reexport */ bufferTime; });
__webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return /* reexport */ bufferToggle; });
__webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return /* reexport */ bufferWhen; });
__webpack_require__.d(__webpack_exports__, "catchError", function() { return /* reexport */ catchError; });
__webpack_require__.d(__webpack_exports__, "combineAll", function() { return /* reexport */ combineAll; });
__webpack_require__.d(__webpack_exports__, "combineLatest", function() { return /* reexport */ combineLatest_combineLatest; });
__webpack_require__.d(__webpack_exports__, "concat", function() { return /* reexport */ concat_concat; });
__webpack_require__.d(__webpack_exports__, "concatAll", function() { return /* reexport */ concatAll; });
__webpack_require__.d(__webpack_exports__, "concatMap", function() { return /* reexport */ concatMap; });
__webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return /* reexport */ concatMapTo; });
__webpack_require__.d(__webpack_exports__, "count", function() { return /* reexport */ count_count; });
__webpack_require__.d(__webpack_exports__, "debounce", function() { return /* reexport */ debounce; });
__webpack_require__.d(__webpack_exports__, "debounceTime", function() { return /* reexport */ debounceTime; });
__webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return /* reexport */ defaultIfEmpty; });
__webpack_require__.d(__webpack_exports__, "delay", function() { return /* reexport */ delay_delay; });
__webpack_require__.d(__webpack_exports__, "delayWhen", function() { return /* reexport */ delayWhen; });
__webpack_require__.d(__webpack_exports__, "dematerialize", function() { return /* reexport */ dematerialize; });
__webpack_require__.d(__webpack_exports__, "distinct", function() { return /* reexport */ distinct; });
__webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return /* reexport */ distinctUntilChanged; });
__webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return /* reexport */ distinctUntilKeyChanged; });
__webpack_require__.d(__webpack_exports__, "elementAt", function() { return /* reexport */ elementAt; });
__webpack_require__.d(__webpack_exports__, "endWith", function() { return /* reexport */ endWith; });
__webpack_require__.d(__webpack_exports__, "every", function() { return /* reexport */ every; });
__webpack_require__.d(__webpack_exports__, "exhaust", function() { return /* reexport */ exhaust; });
__webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return /* reexport */ exhaustMap; });
__webpack_require__.d(__webpack_exports__, "expand", function() { return /* reexport */ expand; });
__webpack_require__.d(__webpack_exports__, "filter", function() { return /* reexport */ filter; });
__webpack_require__.d(__webpack_exports__, "finalize", function() { return /* reexport */ finalize; });
__webpack_require__.d(__webpack_exports__, "find", function() { return /* reexport */ find; });
__webpack_require__.d(__webpack_exports__, "findIndex", function() { return /* reexport */ findIndex; });
__webpack_require__.d(__webpack_exports__, "first", function() { return /* reexport */ first; });
__webpack_require__.d(__webpack_exports__, "groupBy", function() { return /* reexport */ groupBy["b" /* groupBy */]; });
__webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return /* reexport */ ignoreElements; });
__webpack_require__.d(__webpack_exports__, "isEmpty", function() { return /* reexport */ isEmpty; });
__webpack_require__.d(__webpack_exports__, "last", function() { return /* reexport */ last_last; });
__webpack_require__.d(__webpack_exports__, "map", function() { return /* reexport */ map["a" /* map */]; });
__webpack_require__.d(__webpack_exports__, "mapTo", function() { return /* reexport */ mapTo; });
__webpack_require__.d(__webpack_exports__, "materialize", function() { return /* reexport */ materialize; });
__webpack_require__.d(__webpack_exports__, "max", function() { return /* reexport */ max_max; });
__webpack_require__.d(__webpack_exports__, "merge", function() { return /* reexport */ merge_merge; });
__webpack_require__.d(__webpack_exports__, "mergeAll", function() { return /* reexport */ mergeAll; });
__webpack_require__.d(__webpack_exports__, "mergeMap", function() { return /* reexport */ mergeMap; });
__webpack_require__.d(__webpack_exports__, "flatMap", function() { return /* reexport */ flatMap; });
__webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return /* reexport */ mergeMapTo; });
__webpack_require__.d(__webpack_exports__, "mergeScan", function() { return /* reexport */ mergeScan; });
__webpack_require__.d(__webpack_exports__, "min", function() { return /* reexport */ min_min; });
__webpack_require__.d(__webpack_exports__, "multicast", function() { return /* reexport */ multicast; });
__webpack_require__.d(__webpack_exports__, "observeOn", function() { return /* reexport */ observeOn["b" /* observeOn */]; });
__webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return /* reexport */ onErrorResumeNext; });
__webpack_require__.d(__webpack_exports__, "pairwise", function() { return /* reexport */ pairwise; });
__webpack_require__.d(__webpack_exports__, "partition", function() { return /* reexport */ partition; });
__webpack_require__.d(__webpack_exports__, "pluck", function() { return /* reexport */ pluck; });
__webpack_require__.d(__webpack_exports__, "publish", function() { return /* reexport */ publish; });
__webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return /* reexport */ publishBehavior; });
__webpack_require__.d(__webpack_exports__, "publishLast", function() { return /* reexport */ publishLast; });
__webpack_require__.d(__webpack_exports__, "publishReplay", function() { return /* reexport */ publishReplay; });
__webpack_require__.d(__webpack_exports__, "race", function() { return /* reexport */ race_race; });
__webpack_require__.d(__webpack_exports__, "reduce", function() { return /* reexport */ reduce; });
__webpack_require__.d(__webpack_exports__, "repeat", function() { return /* reexport */ repeat; });
__webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return /* reexport */ repeatWhen; });
__webpack_require__.d(__webpack_exports__, "retry", function() { return /* reexport */ retry; });
__webpack_require__.d(__webpack_exports__, "retryWhen", function() { return /* reexport */ retryWhen; });
__webpack_require__.d(__webpack_exports__, "refCount", function() { return /* reexport */ refCount_refCount; });
__webpack_require__.d(__webpack_exports__, "sample", function() { return /* reexport */ sample; });
__webpack_require__.d(__webpack_exports__, "sampleTime", function() { return /* reexport */ sampleTime; });
__webpack_require__.d(__webpack_exports__, "scan", function() { return /* reexport */ scan["a" /* scan */]; });
__webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return /* reexport */ sequenceEqual; });
__webpack_require__.d(__webpack_exports__, "share", function() { return /* reexport */ share; });
__webpack_require__.d(__webpack_exports__, "shareReplay", function() { return /* reexport */ shareReplay; });
__webpack_require__.d(__webpack_exports__, "single", function() { return /* reexport */ single; });
__webpack_require__.d(__webpack_exports__, "skip", function() { return /* reexport */ skip; });
__webpack_require__.d(__webpack_exports__, "skipLast", function() { return /* reexport */ skipLast; });
__webpack_require__.d(__webpack_exports__, "skipUntil", function() { return /* reexport */ skipUntil; });
__webpack_require__.d(__webpack_exports__, "skipWhile", function() { return /* reexport */ skipWhile; });
__webpack_require__.d(__webpack_exports__, "startWith", function() { return /* reexport */ startWith; });
__webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return /* reexport */ subscribeOn; });
__webpack_require__.d(__webpack_exports__, "switchAll", function() { return /* reexport */ switchAll; });
__webpack_require__.d(__webpack_exports__, "switchMap", function() { return /* reexport */ switchMap; });
__webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return /* reexport */ switchMapTo; });
__webpack_require__.d(__webpack_exports__, "take", function() { return /* reexport */ take; });
__webpack_require__.d(__webpack_exports__, "takeLast", function() { return /* reexport */ takeLast; });
__webpack_require__.d(__webpack_exports__, "takeUntil", function() { return /* reexport */ takeUntil; });
__webpack_require__.d(__webpack_exports__, "takeWhile", function() { return /* reexport */ takeWhile; });
__webpack_require__.d(__webpack_exports__, "tap", function() { return /* reexport */ tap; });
__webpack_require__.d(__webpack_exports__, "throttle", function() { return /* reexport */ throttle["b" /* throttle */]; });
__webpack_require__.d(__webpack_exports__, "throttleTime", function() { return /* reexport */ throttleTime; });
__webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return /* reexport */ throwIfEmpty; });
__webpack_require__.d(__webpack_exports__, "timeInterval", function() { return /* reexport */ timeInterval["b" /* timeInterval */]; });
__webpack_require__.d(__webpack_exports__, "timeout", function() { return /* reexport */ timeout; });
__webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return /* reexport */ timeoutWith; });
__webpack_require__.d(__webpack_exports__, "timestamp", function() { return /* reexport */ timestamp["b" /* timestamp */]; });
__webpack_require__.d(__webpack_exports__, "toArray", function() { return /* reexport */ toArray; });
__webpack_require__.d(__webpack_exports__, "window", function() { return /* reexport */ window_window; });
__webpack_require__.d(__webpack_exports__, "windowCount", function() { return /* reexport */ windowCount; });
__webpack_require__.d(__webpack_exports__, "windowTime", function() { return /* reexport */ windowTime_windowTime; });
__webpack_require__.d(__webpack_exports__, "windowToggle", function() { return /* reexport */ windowToggle; });
__webpack_require__.d(__webpack_exports__, "windowWhen", function() { return /* reexport */ windowWhen; });
__webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return /* reexport */ withLatestFrom; });
__webpack_require__.d(__webpack_exports__, "zip", function() { return /* reexport */ zip_zip; });
__webpack_require__.d(__webpack_exports__, "zipAll", function() { return /* reexport */ zipAll; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/innerSubscribe.js
var innerSubscribe = __webpack_require__(2);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/audit.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
var AuditOperator = /*@__PURE__*/ (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new audit_AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
var audit_AuditSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = void 0;
            try {
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(duration, new innerSubscribe["a" /* SimpleInnerSubscriber */](this));
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = undefined;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = undefined;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function () {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=audit.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/async.js
var scheduler_async = __webpack_require__(8);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js + 1 modules
var Observable = __webpack_require__(3);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isNumeric.js
var isNumeric = __webpack_require__(29);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isScheduler.js
var isScheduler = __webpack_require__(12);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/timer.js
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(isNumeric["a" /* isNumeric */])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(isScheduler["a" /* isScheduler */])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(isScheduler["a" /* isScheduler */])(scheduler)) {
        scheduler = scheduler_async["a" /* async */];
    }
    return new Observable["a" /* Observable */](function (subscriber) {
        var due = Object(isNumeric["a" /* isNumeric */])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/auditTime.js
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



function auditTime(duration, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return audit(function () { return timer(duration, scheduler); });
}
//# sourceMappingURL=auditTime.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/buffer.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function buffer_buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
var BufferOperator = /*@__PURE__*/ (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new buffer_BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
var buffer_BufferSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(Object(innerSubscribe["c" /* innerSubscribe */])(closingNotifier, new innerSubscribe["a" /* SimpleInnerSubscriber */](_this)));
        return _this;
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function () {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=buffer.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscriber.js
var Subscriber = __webpack_require__(1);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/bufferCount.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) {
        startBufferEvery = null;
    }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
var BufferCountOperator = /*@__PURE__*/ (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = bufferCount_BufferCountSubscriber;
        }
        else {
            this.subscriberClass = bufferCount_BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
var bufferCount_BufferCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.buffer = [];
        return _this;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber["a" /* Subscriber */]));
var bufferCount_BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.startBufferEvery = startBufferEvery;
        _this.buffers = [];
        _this.count = 0;
        return _this;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=bufferCount.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/bufferTime.js
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = scheduler_async["a" /* async */];
    if (Object(isScheduler["a" /* isScheduler */])(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
var BufferTimeOperator = /*@__PURE__*/ (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new bufferTime_BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = /*@__PURE__*/ (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
var bufferTime_BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.bufferTimeSpan = bufferTimeSpan;
        _this.bufferCreationInterval = bufferCreationInterval;
        _this.maxBufferSize = maxBufferSize;
        _this.scheduler = scheduler;
        _this.contexts = [];
        var context = _this.openContext();
        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (_this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: _this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
        return _this;
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context_1 = contexts[i];
            var buffer = context_1.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context_1;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            destination.next(context_2.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(Subscriber["a" /* Subscriber */]));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscription.js
var Subscription = __webpack_require__(4);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToResult.js
var subscribeToResult = __webpack_require__(13);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/OuterSubscriber.js
var OuterSubscriber = __webpack_require__(14);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/bufferToggle.js
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
var BufferToggleOperator = /*@__PURE__*/ (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new bufferToggle_BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
var bufferToggle_BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(Object(subscribeToResult["a" /* subscribeToResult */])(_this, openings));
        return _this;
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_1 = contexts.shift();
            context_1.subscription.unsubscribe();
            context_1.buffer = null;
            context_1.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            this.destination.next(context_2.buffer);
            context_2.subscription.unsubscribe();
            context_2.buffer = null;
            context_2.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new Subscription["a" /* Subscription */]();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = Object(subscribeToResult["a" /* subscribeToResult */])(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));
//# sourceMappingURL=bufferToggle.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/bufferWhen.js
/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */



function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
var BufferWhenOperator = /*@__PURE__*/ (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new bufferWhen_BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
var bufferWhen_BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.subscribing = false;
        _this.openBuffer();
        return _this;
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = undefined;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function () {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (err) {
            return this.error(err);
        }
        closingSubscription = new Subscription["a" /* Subscription */]();
        this.closingSubscription = closingSubscription;
        this.add(closingSubscription);
        this.subscribing = true;
        closingSubscription.add(Object(innerSubscribe["c" /* innerSubscribe */])(closingNotifier, new innerSubscribe["a" /* SimpleInnerSubscriber */](this)));
        this.subscribing = false;
    };
    return BufferWhenSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=bufferWhen.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/catchError.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
var CatchOperator = /*@__PURE__*/ (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new catchError_CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
var catchError_CatchSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        var _this = _super.call(this, destination) || this;
        _this.selector = selector;
        _this.caught = caught;
        return _this;
    }
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
            this.add(innerSubscriber);
            var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(result, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                this.add(innerSubscription);
            }
        }
    };
    return CatchSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=catchError.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/combineLatest.js
var combineLatest = __webpack_require__(58);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/combineAll.js
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
    return function (source) { return source.lift(new combineLatest["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineAll.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isArray.js
var isArray = __webpack_require__(11);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/from.js + 2 modules
var from = __webpack_require__(21);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/combineLatest.js
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
function combineLatest_combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    if (observables.length === 1 && Object(isArray["a" /* isArray */])(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(Object(from["a" /* from */])([source].concat(observables)), new combineLatest["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineLatest.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/of.js
var of = __webpack_require__(63);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/map.js
var map = __webpack_require__(15);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/mergeMap.js
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(from["a" /* from */])(project(a, i)).pipe(Object(map["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new mergeMap_MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var mergeMap_MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish) {
        var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(ish, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));

var flatMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/identity.js
var identity = __webpack_require__(20);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/mergeAll.js
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return mergeMap(identity["a" /* identity */], concurrent);
}
//# sourceMappingURL=mergeAll.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/concatAll.js
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return mergeAll(1);
}
//# sourceMappingURL=concatAll.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/concat.js
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return concatAll()(of["a" /* of */].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/concat.js
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

function concat_concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(concat.apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=concat.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/concatMap.js
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function concatMap(project, resultSelector) {
    return mergeMap(project, resultSelector, 1);
}
//# sourceMappingURL=concatMap.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/concatMapTo.js
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

function concatMapTo(innerObservable, resultSelector) {
    return concatMap(function () { return innerObservable; }, resultSelector);
}
//# sourceMappingURL=concatMapTo.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/count.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function count_count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
var CountOperator = /*@__PURE__*/ (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new count_CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
var count_CountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.count = 0;
        _this.index = 0;
        return _this;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=count.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/debounce.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
var DebounceOperator = /*@__PURE__*/ (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new debounce_DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
var debounce_DebounceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = Object(innerSubscribe["c" /* innerSubscribe */])(duration, new innerSubscribe["a" /* SimpleInnerSubscriber */](this));
        if (subscription && !subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = undefined;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = undefined;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=debounce.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/debounceTime.js
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
var DebounceTimeOperator = /*@__PURE__*/ (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new debounceTime_DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
var debounceTime_DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.dueTime = dueTime;
        _this.scheduler = scheduler;
        _this.debouncedSubscription = null;
        _this.lastValue = null;
        _this.hasValue = false;
        return _this;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            var lastValue = this.lastValue;
            this.lastValue = null;
            this.hasValue = false;
            this.destination.next(lastValue);
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(Subscriber["a" /* Subscriber */]));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = null;
    }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new defaultIfEmpty_DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
var defaultIfEmpty_DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=defaultIfEmpty.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isDate.js
var isDate = __webpack_require__(59);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Notification.js
var Notification = __webpack_require__(25);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/delay.js
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





function delay_delay(delay, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    var absoluteDelay = Object(isDate["a" /* isDate */])(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
var DelayOperator = /*@__PURE__*/ (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new delay_DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
var delay_DelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.delay = delay;
        _this.scheduler = scheduler;
        _this.queue = [];
        _this.active = false;
        _this.errored = false;
        return _this;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            this.unsubscribe();
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        var destination = this.destination;
        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(Notification["a" /* Notification */].createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
        this.unsubscribe();
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(Notification["a" /* Notification */].createComplete());
        this.unsubscribe();
    };
    return DelaySubscriber;
}(Subscriber["a" /* Subscriber */]));
var DelayMessage = /*@__PURE__*/ (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/delayWhen.js
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new delayWhen_SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
var DelayWhenOperator = /*@__PURE__*/ (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new delayWhen_DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
var delayWhen_DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.delayDurationSelector = delayDurationSelector;
        _this.completed = false;
        _this.delayNotifierSubscriptions = [];
        _this.index = 0;
        return _this;
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        var index = this.index++;
        try {
            var delayNotifier = this.delayDurationSelector(value, index);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
        this.unsubscribe();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        if (subscriptionIdx !== -1) {
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
        }
        return subscription.outerValue;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = Object(subscribeToResult["a" /* subscribeToResult */])(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            var destination = this.destination;
            destination.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));
var delayWhen_SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subscriptionDelay = subscriptionDelay;
        return _this;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new delayWhen_SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(Observable["a" /* Observable */]));
var delayWhen_SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.source = source;
        _this.sourceSubscribed = false;
        return _this;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.unsubscribe();
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=delayWhen.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/dematerialize.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
var DeMaterializeOperator = /*@__PURE__*/ (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new dematerialize_DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
var dematerialize_DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=dematerialize.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/distinct.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
var DistinctOperator = /*@__PURE__*/ (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new distinct_DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
var distinct_DistinctSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) {
            _this.add(Object(innerSubscribe["c" /* innerSubscribe */])(flushes, new innerSubscribe["a" /* SimpleInnerSubscriber */](_this)));
        }
        return _this;
    }
    DistinctSubscriber.prototype.notifyNext = function () {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));

//# sourceMappingURL=distinct.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
var DistinctUntilChangedOperator = /*@__PURE__*/ (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
var distinctUntilChanged_DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') {
            _this.compare = compare;
        }
        return _this;
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var key;
        try {
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        }
        catch (err) {
            return this.destination.error(err);
        }
        var result = false;
        if (this.hasKey) {
            try {
                var compare = this.compare;
                result = compare(this.key, key);
            }
            catch (err) {
                return this.destination.error(err);
            }
        }
        else {
            this.hasKey = true;
        }
        if (!result) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=distinctUntilChanged.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
//# sourceMappingURL=distinctUntilKeyChanged.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js
var ArgumentOutOfRangeError = __webpack_require__(23);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/filter.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new filter_FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var filter_FilterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=filter.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/EmptyError.js
var EmptyError = __webpack_require__(28);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js
/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) {
        errorFactory = defaultErrorFactory;
    }
    return function (source) {
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    };
}
var ThrowIfEmptyOperator = /*@__PURE__*/ (function () {
    function ThrowIfEmptyOperator(errorFactory) {
        this.errorFactory = errorFactory;
    }
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new throwIfEmpty_ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    };
    return ThrowIfEmptyOperator;
}());
var throwIfEmpty_ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) {
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    }
    ThrowIfEmptySubscriber.prototype._next = function (value) {
        this.hasValue = true;
        this.destination.next(value);
    };
    ThrowIfEmptySubscriber.prototype._complete = function () {
        if (!this.hasValue) {
            var err = void 0;
            try {
                err = this.errorFactory();
            }
            catch (e) {
                err = e;
            }
            this.destination.error(err);
        }
        else {
            return this.destination.complete();
        }
    };
    return ThrowIfEmptySubscriber;
}(Subscriber["a" /* Subscriber */]));
function defaultErrorFactory() {
    return new EmptyError["a" /* EmptyError */]();
}
//# sourceMappingURL=throwIfEmpty.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/empty.js
var empty = __webpack_require__(31);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/take.js
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function take(count) {
    return function (source) {
        if (count === 0) {
            return Object(empty["a" /* empty */])();
        }
        else {
            return source.lift(new take_TakeOperator(count));
        }
    };
}
var take_TakeOperator = /*@__PURE__*/ (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new take_TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
var take_TakeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=take.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/elementAt.js
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */]();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue
            ? defaultIfEmpty(defaultValue)
            : throwIfEmpty(function () { return new ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */](); }));
    };
}
//# sourceMappingURL=elementAt.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/endWith.js
/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */


function endWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    return function (source) { return concat(source, of["a" /* of */].apply(void 0, array)); };
}
//# sourceMappingURL=endWith.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/every.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
var EveryOperator = /*@__PURE__*/ (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new every_EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
var every_EverySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.source = source;
        _this.index = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=every.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/exhaust.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
var SwitchFirstOperator = /*@__PURE__*/ (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new exhaust_SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
var exhaust_SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(Object(innerSubscribe["c" /* innerSubscribe */])(value, new innerSubscribe["a" /* SimpleInnerSubscriber */](this)));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function () {
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=exhaust.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/exhaustMap.js
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(from["a" /* from */])(project(a, i)).pipe(Object(map["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) {
        return source.lift(new ExhaustMapOperator(project));
    };
}
var ExhaustMapOperator = /*@__PURE__*/ (function () {
    function ExhaustMapOperator(project) {
        this.project = project;
    }
    ExhaustMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new exhaustMap_ExhaustMapSubscriber(subscriber, this.project));
    };
    return ExhaustMapOperator;
}());
var exhaustMap_ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ExhaustMapSubscriber, _super);
    function ExhaustMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.hasSubscription = false;
        _this.hasCompleted = false;
        _this.index = 0;
        return _this;
    }
    ExhaustMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    ExhaustMapSubscriber.prototype.tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.hasSubscription = true;
        this._innerSub(result);
    };
    ExhaustMapSubscriber.prototype._innerSub = function (result) {
        var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(result, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    ExhaustMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    ExhaustMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    ExhaustMapSubscriber.prototype.notifyComplete = function () {
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return ExhaustMapSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=exhaustMap.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/expand.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
var ExpandOperator = /*@__PURE__*/ (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new expand_ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());

var expand_ExpandSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.scheduler = scheduler;
        _this.index = 0;
        _this.active = 0;
        _this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            _this.buffer = [];
        }
        return _this;
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            try {
                var project = this.project;
                var result = project(value, index);
                if (!this.scheduler) {
                    this.subscribeToProjection(result, value, index);
                }
                else {
                    var state = { subscriber: this, result: result, value: value, index: index };
                    var destination_1 = this.destination;
                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                }
            }
            catch (e) {
                destination.error(e);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        var destination = this.destination;
        destination.add(Object(innerSubscribe["c" /* innerSubscribe */])(result, new innerSubscribe["a" /* SimpleInnerSubscriber */](this)));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExpandSubscriber.prototype.notifyNext = function (innerValue) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));

//# sourceMappingURL=expand.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/finalize.js
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
var FinallyOperator = /*@__PURE__*/ (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new finalize_FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
var finalize_FinallySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        var _this = _super.call(this, destination) || this;
        _this.add(new Subscription["a" /* Subscription */](callback));
        return _this;
    }
    return FinallySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=finalize.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/find.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
var FindValueOperator = /*@__PURE__*/ (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new find_FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());

var find_FindValueSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(Subscriber["a" /* Subscriber */]));

//# sourceMappingURL=find.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/findIndex.js
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };
}
//# sourceMappingURL=findIndex.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/first.js
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity["a" /* identity */], take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=first.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/groupBy.js
var groupBy = __webpack_require__(83);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/ignoreElements.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
var IgnoreElementsOperator = /*@__PURE__*/ (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ignoreElements_IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
var ignoreElements_IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
    };
    return IgnoreElementsSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=ignoreElements.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/isEmpty.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
var IsEmptyOperator = /*@__PURE__*/ (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new isEmpty_IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
var isEmpty_IsEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=isEmpty.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/takeLast.js
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return Object(empty["a" /* empty */])();
        }
        else {
            return source.lift(new takeLast_TakeLastOperator(count));
        }
    };
}
var takeLast_TakeLastOperator = /*@__PURE__*/ (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new takeLast_TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
var takeLast_TakeLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=takeLast.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/last.js
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






function last_last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity["a" /* identity */], takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=last.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/mapTo.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
var MapToOperator = /*@__PURE__*/ (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new mapTo_MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
var mapTo_MapToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        var _this = _super.call(this, destination) || this;
        _this.value = value;
        return _this;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=mapTo.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/materialize.js
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
var MaterializeOperator = /*@__PURE__*/ (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new materialize_MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
var materialize_MaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(Notification["a" /* Notification */].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(Notification["a" /* Notification */].createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(Notification["a" /* Notification */].createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=materialize.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/scan.js
var scan = __webpack_require__(44);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/pipe.js
var pipe = __webpack_require__(43);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/reduce.js
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




function reduce(accumulator, seed) {
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return Object(pipe["a" /* pipe */])(Object(scan["a" /* scan */])(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return Object(pipe["a" /* pipe */])(Object(scan["a" /* scan */])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast(1))(source);
    };
}
//# sourceMappingURL=reduce.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/max.js
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function max_max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return reduce(max);
}
//# sourceMappingURL=max.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/fromArray.js
var fromArray = __webpack_require__(30);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/merge.js
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(isScheduler["a" /* isScheduler */])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable["a" /* Observable */]) {
        return observables[0];
    }
    return mergeAll(concurrent)(Object(fromArray["a" /* fromArray */])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/merge.js
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

function merge_merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(merge.apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=merge.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return mergeMap(function () { return innerObservable; }, concurrent);
}
//# sourceMappingURL=mergeMapTo.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/mergeScan.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
var MergeScanOperator = /*@__PURE__*/ (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new mergeScan_MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());

var mergeScan_MergeScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this.acc = acc;
        _this.concurrent = concurrent;
        _this.hasValue = false;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var destination = this.destination;
            var ish = void 0;
            try {
                var accumulator = this.accumulator;
                ish = accumulator(this.acc, value, index);
            }
            catch (e) {
                return destination.error(e);
            }
            this.active++;
            this._innerSub(ish);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish) {
        var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(ish, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeScanSubscriber.prototype.notifyNext = function (innerValue) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));

//# sourceMappingURL=mergeScan.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/min.js
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function min_min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return reduce(min);
}
//# sourceMappingURL=min.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subject.js
var Subject = __webpack_require__(6);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/refCount.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount_refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new refCount_RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var refCount_RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=refCount.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable_ConnectableObservable = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new Subscription["a" /* Subscription */]();
            connection.add(this.source
                .subscribe(new ConnectableObservable_ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription["a" /* Subscription */].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return refCount_refCount()(this);
    };
    return ConnectableObservable;
}(Observable["a" /* Observable */]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable_ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableObservable_ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject["c" /* SubjectSubscriber */]));
var ConnectableObservable_RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new ConnectableObservable_RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var ConnectableObservable_RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=ConnectableObservable.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/multicast.js
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, connectableObservableDescriptor);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
var MulticastOperator = /*@__PURE__*/ (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());

//# sourceMappingURL=multicast.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/observeOn.js
var observeOn = __webpack_require__(105);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */




function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    if (nextSources.length === 1 && Object(isArray["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    var source = undefined;
    if (nextSources.length === 1 && Object(isArray["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return Object(from["a" /* from */])(source).lift(new OnErrorResumeNextOperator(nextSources));
}
var OnErrorResumeNextOperator = /*@__PURE__*/ (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new onErrorResumeNext_OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var onErrorResumeNext_OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.nextSources = nextSources;
        return _this;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (!!next) {
            var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(next, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=onErrorResumeNext.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/pairwise.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
var PairwiseOperator = /*@__PURE__*/ (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new pairwise_PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
var pairwise_PairwiseSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasPrev = false;
        return _this;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        var pair;
        if (this.hasPrev) {
            pair = [this.prev, value];
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
        if (pair) {
            this.destination.next(pair);
        }
    };
    return PairwiseSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=pairwise.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/not.js
var not = __webpack_require__(106);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/partition.js
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


function partition(predicate, thisArg) {
    return function (source) {
        return [
            filter(predicate, thisArg)(source),
            filter(Object(not["a" /* not */])(predicate, thisArg))(source)
        ];
    };
}
//# sourceMappingURL=partition.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/pluck.js
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return Object(map["a" /* map */])(plucker(properties, length))(source); };
}
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp != null ? currentProp[props[i]] : undefined;
            if (p !== void 0) {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/publish.js
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


function publish(selector) {
    return selector ?
        multicast(function () { return new Subject["b" /* Subject */](); }, selector) :
        multicast(new Subject["b" /* Subject */]());
}
//# sourceMappingURL=publish.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js
var ObjectUnsubscribedError = __webpack_require__(22);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/BehaviorSubject.js
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject_BehaviorSubject = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new ObjectUnsubscribedError["a" /* ObjectUnsubscribedError */]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(Subject["b" /* Subject */]));

//# sourceMappingURL=BehaviorSubject.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/publishBehavior.js
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


function publishBehavior(value) {
    return function (source) { return multicast(new BehaviorSubject_BehaviorSubject(value))(source); };
}
//# sourceMappingURL=publishBehavior.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/AsyncSubject.js
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject_AsyncSubject = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription["a" /* Subscription */].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription["a" /* Subscription */].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(Subject["b" /* Subject */]));

//# sourceMappingURL=AsyncSubject.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/publishLast.js
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
    return function (source) { return multicast(new AsyncSubject_AsyncSubject())(source); };
}
//# sourceMappingURL=publishLast.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/ReplaySubject.js + 3 modules
var ReplaySubject = __webpack_require__(36);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/publishReplay.js
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new ReplaySubject["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
    return function (source) { return multicast(function () { return subject; }, selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/race.js
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(isArray["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(fromArray["a" /* fromArray */])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new race_RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var race_RaceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(subscribeToResult["a" /* subscribeToResult */])(this, observable, undefined, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));

//# sourceMappingURL=race.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/race.js
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


function race_race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        if (observables.length === 1 && Object(isArray["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(race.apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=race.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/repeat.js
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



function repeat(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) {
        if (count === 0) {
            return Object(empty["a" /* empty */])();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
var RepeatOperator = /*@__PURE__*/ (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new repeat_RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
var repeat_RepeatSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=repeat.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/repeatWhen.js
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
var RepeatWhenOperator = /*@__PURE__*/ (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new repeatWhen_RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
var repeatWhen_RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        _this.sourceIsBeingSubscribedTo = true;
        return _this;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function () {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function () {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next(undefined);
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = undefined;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = undefined;
        }
        this.retries = undefined;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this._unsubscribe = _unsubscribe;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new Subject["b" /* Subject */]();
        var retries;
        try {
            var notifier = this.notifier;
            retries = notifier(this.notifications);
        }
        catch (e) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(retries, new innerSubscribe["a" /* SimpleInnerSubscriber */](this));
    };
    return RepeatWhenSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=repeatWhen.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/retry.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function retry(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
var RetryOperator = /*@__PURE__*/ (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new retry_RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
var retry_RetrySubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=retry.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/retryWhen.js
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
var RetryWhenOperator = /*@__PURE__*/ (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new retryWhen_RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
var retryWhen_RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        return _this;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new Subject["b" /* Subject */]();
                try {
                    var notifier = this.notifier;
                    retries = notifier(errors);
                }
                catch (e) {
                    return _super.prototype.error.call(this, e);
                }
                retriesSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(retries, new innerSubscribe["a" /* SimpleInnerSubscriber */](this));
            }
            else {
                this.errors = undefined;
                this.retriesSubscription = undefined;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = undefined;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = undefined;
        }
        this.retries = undefined;
    };
    RetryWhenSubscriber.prototype.notifyNext = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        this._unsubscribeAndRecycle();
        this._unsubscribe = _unsubscribe;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=retryWhen.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/sample.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function sample(notifier) {
    return function (source) { return source.lift(new sample_SampleOperator(notifier)); };
}
var sample_SampleOperator = /*@__PURE__*/ (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new sample_SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(Object(innerSubscribe["c" /* innerSubscribe */])(this.notifier, new innerSubscribe["a" /* SimpleInnerSubscriber */](sampleSubscriber)));
        return subscription;
    };
    return SampleOperator;
}());
var sample_SampleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SampleSubscriber, _super);
    function SampleSubscriber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=sample.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/sampleTime.js
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function sampleTime(period, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
var SampleTimeOperator = /*@__PURE__*/ (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new sampleTime_SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
var sampleTime_SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.period = period;
        _this.scheduler = scheduler;
        _this.hasValue = false;
        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
        return _this;
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(Subscriber["a" /* Subscriber */]));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function sequenceEqual(compareTo, comparator) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
}
var SequenceEqualOperator = /*@__PURE__*/ (function () {
    function SequenceEqualOperator(compareTo, comparator) {
        this.compareTo = compareTo;
        this.comparator = comparator;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new sequenceEqual_SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    };
    return SequenceEqualOperator;
}());

var sequenceEqual_SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparator) {
        var _this = _super.call(this, destination) || this;
        _this.compareTo = compareTo;
        _this.comparator = comparator;
        _this._a = [];
        _this._b = [];
        _this._oneComplete = false;
        _this.destination.add(compareTo.subscribe(new sequenceEqual_SequenceEqualCompareToSubscriber(destination, _this)));
        return _this;
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
        this.unsubscribe();
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            try {
                areEqual = comparator ? comparator(a, b) : a === b;
            }
            catch (e) {
                this.destination.error(e);
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype.completeB = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    return SequenceEqualSubscriber;
}(Subscriber["a" /* Subscriber */]));

var sequenceEqual_SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        return _this;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
        this.unsubscribe();
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent.completeB();
        this.unsubscribe();
    };
    return SequenceEqualCompareToSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=sequenceEqual.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/share.js
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */



function shareSubjectFactory() {
    return new Subject["b" /* Subject */]();
}
function share() {
    return function (source) { return refCount_refCount()(multicast(shareSubjectFactory)(source)); };
}
//# sourceMappingURL=share.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/shareReplay.js
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        config = configOrBufferSize;
    }
    else {
        config = {
            bufferSize: configOrBufferSize,
            windowTime: windowTime,
            refCount: false,
            scheduler: scheduler,
        };
    }
    return function (source) { return source.lift(shareReplayOperator(config)); };
}
function shareReplayOperator(_a) {
    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        var innerSub;
        if (!subject || hasError) {
            hasError = false;
            subject = new ReplaySubject["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
            innerSub = subject.subscribe(this);
            subscription = source.subscribe({
                next: function (value) {
                    subject.next(value);
                },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                },
            });
            if (isComplete) {
                subscription = undefined;
            }
        }
        else {
            innerSub = subject.subscribe(this);
        }
        this.add(function () {
            refCount--;
            innerSub.unsubscribe();
            innerSub = undefined;
            if (subscription && !isComplete && useRefCount && refCount === 0) {
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            }
        });
    };
}
//# sourceMappingURL=shareReplay.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/single.js
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
var SingleOperator = /*@__PURE__*/ (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new single_SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
var single_SingleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.seenValue = false;
        _this.index = 0;
        return _this;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new EmptyError["a" /* EmptyError */]);
        }
    };
    return SingleSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=single.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/skip.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
var SkipOperator = /*@__PURE__*/ (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new skip_SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
var skip_SkipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=skip.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/skipLast.js
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



function skipLast(count) {
    return function (source) { return source.lift(new skipLast_SkipLastOperator(count)); };
}
var skipLast_SkipLastOperator = /*@__PURE__*/ (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */];
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            return source.subscribe(new Subscriber["a" /* Subscriber */](subscriber));
        }
        else {
            return source.subscribe(new skipLast_SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
var skipLast_SkipLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=skipLast.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/skipUntil.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
var SkipUntilOperator = /*@__PURE__*/ (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (destination, source) {
        return source.subscribe(new skipUntil_SkipUntilSubscriber(destination, this.notifier));
    };
    return SkipUntilOperator;
}());
var skipUntil_SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        var _this = _super.call(this, destination) || this;
        _this.hasValue = false;
        var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](_this);
        _this.add(innerSubscriber);
        _this.innerSubscription = innerSubscriber;
        var innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(notifier, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            _this.add(innerSubscription);
            _this.innerSubscription = innerSubscription;
        }
        return _this;
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function () {
        this.hasValue = true;
        if (this.innerSubscription) {
            this.innerSubscription.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
    };
    return SkipUntilSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=skipUntil.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/skipWhile.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
var SkipWhileOperator = /*@__PURE__*/ (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new skipWhile_SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
var skipWhile_SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=skipWhile.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/startWith.js
/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */


function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (Object(isScheduler["a" /* isScheduler */])(scheduler)) {
        array.pop();
        return function (source) { return concat(array, source, scheduler); };
    }
    else {
        return function (source) { return concat(array, source); };
    }
}
//# sourceMappingURL=startWith.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js + 3 modules
var SubscribeOnObservable = __webpack_require__(108);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/subscribeOn.js
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

function subscribeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new subscribeOn_SubscribeOnOperator(scheduler, delay));
    };
}
var subscribeOn_SubscribeOnOperator = /*@__PURE__*/ (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new SubscribeOnObservable["a" /* SubscribeOnObservable */](source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/switchMap.js
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function switchMap(project, resultSelector) {
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(from["a" /* from */])(project(a, i)).pipe(Object(map["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) { return source.lift(new SwitchMapOperator(project)); };
}
var SwitchMapOperator = /*@__PURE__*/ (function () {
    function SwitchMapOperator(project) {
        this.project = project;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new switchMap_SwitchMapSubscriber(subscriber, this.project));
    };
    return SwitchMapOperator;
}());
var switchMap_SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.index = 0;
        return _this;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        var innerSubscriber = new innerSubscribe["a" /* SimpleInnerSubscriber */](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        this.innerSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(result, innerSubscriber);
        if (this.innerSubscription !== innerSubscriber) {
            destination.add(this.innerSubscription);
        }
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
        this.unsubscribe();
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = undefined;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function () {
        this.innerSubscription = undefined;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    return SwitchMapSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=switchMap.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/switchAll.js
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
    return switchMap(identity["a" /* identity */]);
}
//# sourceMappingURL=switchAll.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/switchMapTo.js
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

function switchMapTo(innerObservable, resultSelector) {
    return resultSelector ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });
}
//# sourceMappingURL=switchMapTo.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/takeUntil.js
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function takeUntil(notifier) {
    return function (source) { return source.lift(new takeUntil_TakeUntilOperator(notifier)); };
}
var takeUntil_TakeUntilOperator = /*@__PURE__*/ (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        var takeUntilSubscriber = new takeUntil_TakeUntilSubscriber(subscriber);
        var notifierSubscription = Object(innerSubscribe["c" /* innerSubscribe */])(this.notifier, new innerSubscribe["a" /* SimpleInnerSubscriber */](takeUntilSubscriber));
        if (notifierSubscription && !takeUntilSubscriber.seenValue) {
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        }
        return takeUntilSubscriber;
    };
    return TakeUntilOperator;
}());
var takeUntil_TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    }
    TakeUntilSubscriber.prototype.notifyNext = function () {
        this.seenValue = true;
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
    };
    return TakeUntilSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=takeUntil.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/takeWhile.js
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) {
        inclusive = false;
    }
    return function (source) {
        return source.lift(new TakeWhileOperator(predicate, inclusive));
    };
}
var TakeWhileOperator = /*@__PURE__*/ (function () {
    function TakeWhileOperator(predicate, inclusive) {
        this.predicate = predicate;
        this.inclusive = inclusive;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new takeWhile_TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    };
    return TakeWhileOperator;
}());
var takeWhile_TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate, inclusive) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.inclusive = inclusive;
        _this.index = 0;
        return _this;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            if (this.inclusive) {
                destination.next(value);
            }
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=takeWhile.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/noop.js
var noop = __webpack_require__(26);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isFunction.js
var isFunction = __webpack_require__(34);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/tap.js
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
var DoOperator = /*@__PURE__*/ (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new tap_TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
var tap_TapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TapSubscriber, _super);
    function TapSubscriber(destination, observerOrNext, error, complete) {
        var _this = _super.call(this, destination) || this;
        _this._tapNext = noop["a" /* noop */];
        _this._tapError = noop["a" /* noop */];
        _this._tapComplete = noop["a" /* noop */];
        _this._tapError = error || noop["a" /* noop */];
        _this._tapComplete = complete || noop["a" /* noop */];
        if (Object(isFunction["a" /* isFunction */])(observerOrNext)) {
            _this._context = _this;
            _this._tapNext = observerOrNext;
        }
        else if (observerOrNext) {
            _this._context = observerOrNext;
            _this._tapNext = observerOrNext.next || noop["a" /* noop */];
            _this._tapError = observerOrNext.error || noop["a" /* noop */];
            _this._tapComplete = observerOrNext.complete || noop["a" /* noop */];
        }
        return _this;
    }
    TapSubscriber.prototype._next = function (value) {
        try {
            this._tapNext.call(this._context, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(value);
    };
    TapSubscriber.prototype._error = function (err) {
        try {
            this._tapError.call(this._context, err);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.error(err);
    };
    TapSubscriber.prototype._complete = function () {
        try {
            this._tapComplete.call(this._context);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        return this.destination.complete();
    };
    return TapSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=tap.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/throttle.js
var throttle = __webpack_require__(51);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/throttleTime.js
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    if (config === void 0) {
        config = throttle["a" /* defaultThrottleConfig */];
    }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
var ThrottleTimeOperator = /*@__PURE__*/ (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new throttleTime_ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
var throttleTime_ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        var _this = _super.call(this, destination) || this;
        _this.duration = duration;
        _this.scheduler = scheduler;
        _this.leading = leading;
        _this.trailing = trailing;
        _this._hasTrailingValue = false;
        _this._trailingValue = null;
        return _this;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(throttleTime_dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
            else if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
    };
    ThrottleTimeSubscriber.prototype._complete = function () {
        if (this._hasTrailingValue) {
            this.destination.next(this._trailingValue);
            this.destination.complete();
        }
        else {
            this.destination.complete();
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(Subscriber["a" /* Subscriber */]));
function throttleTime_dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timeInterval.js + 1 modules
var timeInterval = __webpack_require__(99);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/TimeoutError.js
var TimeoutError = __webpack_require__(107);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timeoutWith.js
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_innerSubscribe PURE_IMPORTS_END */




function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return function (source) {
        var absoluteTimeout = Object(isDate["a" /* isDate */])(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
var TimeoutWithOperator = /*@__PURE__*/ (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new timeoutWith_TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
var timeoutWith_TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.scheduleTimeout();
        return _this;
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(Object(innerSubscribe["c" /* innerSubscribe */])(withObservable, new innerSubscribe["a" /* SimpleInnerSubscriber */](subscriber)));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = undefined;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=timeoutWith.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/throwError.js
var throwError = __webpack_require__(111);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timeout.js
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




function timeout(due, scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return timeoutWith(due, Object(throwError["a" /* throwError */])(new TimeoutError["a" /* TimeoutError */]()), scheduler);
}
//# sourceMappingURL=timeout.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timestamp.js
var timestamp = __webpack_require__(84);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/toArray.js
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return reduce(toArrayReducer, []);
}
//# sourceMappingURL=toArray.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/window.js
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function window_window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new window_WindowOperator(windowBoundaries));
    };
}
var window_WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new window_WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(Object(innerSubscribe["c" /* innerSubscribe */])(this.windowBoundaries, new innerSubscribe["a" /* SimpleInnerSubscriber */](windowSubscriber)));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
var window_WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.window = new Subject["b" /* Subject */]();
        destination.next(_this.window);
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function () {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function () {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new Subject["b" /* Subject */]();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=window.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/windowCount.js
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) {
        startWindowEvery = 0;
    }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
var WindowCountOperator = /*@__PURE__*/ (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new windowCount_WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
var windowCount_WindowCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowSize = windowSize;
        _this.startWindowEvery = startWindowEvery;
        _this.windows = [new Subject["b" /* Subject */]()];
        _this.count = 0;
        destination.next(_this.windows[0]);
        return _this;
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new Subject["b" /* Subject */]();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(Subscriber["a" /* Subscriber */]));
//# sourceMappingURL=windowCount.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/windowTime.js
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime_windowTime(windowTimeSpan) {
    var scheduler = scheduler_async["a" /* async */];
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (Object(isScheduler["a" /* isScheduler */])(arguments[3])) {
        scheduler = arguments[3];
    }
    if (Object(isScheduler["a" /* isScheduler */])(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (Object(isNumeric["a" /* isNumeric */])(arguments[2])) {
        maxWindowSize = Number(arguments[2]);
    }
    if (Object(isScheduler["a" /* isScheduler */])(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (Object(isNumeric["a" /* isNumeric */])(arguments[1])) {
        windowCreationInterval = Number(arguments[1]);
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
var WindowTimeOperator = /*@__PURE__*/ (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new windowTime_WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var windowTime_CountedSubject = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](CountedSubject, _super);
    function CountedSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._numberOfNextedValues = 0;
        return _this;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(Subject["b" /* Subject */]));
var windowTime_WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowTimeSpan = windowTimeSpan;
        _this.windowCreationInterval = windowCreationInterval;
        _this.maxWindowSize = maxWindowSize;
        _this.scheduler = scheduler;
        _this.windows = [];
        var window = _this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: _this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
        return _this;
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new windowTime_CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(Subscriber["a" /* Subscriber */]));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/windowToggle.js
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
var WindowToggleOperator = /*@__PURE__*/ (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new windowToggle_WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
var windowToggle_WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(_this.openSubscription = Object(subscribeToResult["a" /* subscribeToResult */])(_this, openings, openings));
        return _this;
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_1 = contexts[index];
                context_1.window.error(err);
                context_1.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_2 = contexts[index];
                context_2.window.complete();
                context_2.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_3 = contexts[index];
                context_3.window.unsubscribe();
                context_3.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingNotifier = void 0;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector(innerValue);
            }
            catch (e) {
                return this.error(e);
            }
            var window_1 = new Subject["b" /* Subject */]();
            var subscription = new Subscription["a" /* Subscription */]();
            var context_4 = { window: window_1, subscription: subscription };
            this.contexts.push(context_4);
            var innerSubscription = Object(subscribeToResult["a" /* subscribeToResult */])(this, closingNotifier, context_4);
            if (innerSubscription.closed) {
                this.closeWindow(this.contexts.length - 1);
            }
            else {
                innerSubscription.context = context_4;
                subscription.add(innerSubscription);
            }
            this.destination.next(window_1);
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowToggle.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/windowWhen.js
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new windowWhen_WindowOperator(closingSelector));
    };
}
var windowWhen_WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new windowWhen_WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
var windowWhen_WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.closingSelector = closingSelector;
        _this.openWindow();
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) {
            innerSub = null;
        }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new Subject["b" /* Subject */]();
        this.destination.next(window);
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (e) {
            this.destination.error(e);
            this.window.error(e);
            return;
        }
        this.add(this.closingNotification = Object(subscribeToResult["a" /* subscribeToResult */])(this, closingNotifier));
    };
    return WindowSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowWhen.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
var WithLatestFromOperator = /*@__PURE__*/ (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
var withLatestFrom_WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        var _this = _super.call(this, destination) || this;
        _this.observables = observables;
        _this.project = project;
        _this.toRespond = [];
        var len = observables.length;
        _this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            _this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            _this.add(Object(subscribeToResult["a" /* subscribeToResult */])(_this, observable, undefined, i));
        }
        return _this;
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(OuterSubscriber["a" /* OuterSubscriber */]));
//# sourceMappingURL=withLatestFrom.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/iterator.js
var iterator = __webpack_require__(18);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/zip.js
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */






function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(fromArray["a" /* fromArray */])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new zip_ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var zip_ZipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(isArray["a" /* isArray */])(value)) {
            iterators.push(new zip_StaticArrayIterator(value));
        }
        else if (typeof value[iterator["a" /* iterator */]] === 'function') {
            iterators.push(new StaticIterator(value[iterator["a" /* iterator */]]()));
        }
        else {
            iterators.push(new zip_ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe());
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(Subscriber["a" /* Subscriber */]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return Boolean(nextResult && nextResult.done);
    };
    return StaticIterator;
}());
var zip_StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator["a" /* iterator */]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var zip_ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[iterator["a" /* iterator */]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (innerValue) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function () {
        return Object(innerSubscribe["c" /* innerSubscribe */])(this.observable, new innerSubscribe["a" /* SimpleInnerSubscriber */](this));
    };
    return ZipBufferIterator;
}(innerSubscribe["b" /* SimpleOuterSubscriber */]));
//# sourceMappingURL=zip.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/zip.js
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zip_zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(zip.apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=zip.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/zipAll.js
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
    return function (source) { return source.lift(new ZipOperator(project)); };
}
//# sourceMappingURL=zipAll.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/operators/index.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */







































































































//# sourceMappingURL=index.js.map


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return pipeFromArray; });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return _identity__WEBPACK_IMPORTED_MODULE_0__[/* identity */ "a"];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return scan; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function scan(accumulator, seed) {
    var hasSeed = false;
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
var ScanOperator = /*@__PURE__*/ (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
            hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
var ScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));
//# sourceMappingURL=scan.js.map


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroup = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const backup_policy_1 = __webpack_require__(66);
const backup_group_run_1 = __webpack_require__(67);
const backup_group_summary_stats_1 = __webpack_require__(126);
const backup_summary_stats_1 = __webpack_require__(68);
const backup_group_disk_unit_1 = __webpack_require__(116);
const backup_group_indexing_policy_1 = __webpack_require__(117);
const backup_group_storage_sample_series_1 = __webpack_require__(261);
const protection_source_1 = __webpack_require__(47);
const time_of_day_1 = __webpack_require__(79);
/**
 * Backup Group.
 */
/* istanbul ignore next: autogenerated */
class BackupGroup {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return 'IAAS_BACKUP_GROUP';
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get creation time.
     * @returns {number}
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Get modified time.
     * @returns {number}
     */
    get modifiedTime() {
        return this._json.modified_time;
    }
    /**
     * Get description.
     * @returns {string | null}
     */
    get description() {
        return this._json.description || null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        var _a;
        return (_a = this._json.end_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get active.
     * @returns {boolean}
     */
    get active() {
        return this._json.active;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get paused.
     * @returns {boolean}
     */
    get paused() {
        return this._json.paused;
    }
    /**
     * Get excluded disks.
     * @returns {Array<BackupGroupDiskUnit>}
     */
    get excludedDisks() {
        var _a;
        return (_a = this._json.excluded_disks) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_disk_unit_1.BackupGroupDiskUnit(it));
    }
    /**
     * Get fallback to crash consistent.
     * @returns {boolean}
     */
    get fallbackToCrashConsistent() {
        return this._json.fallback_to_crash_consistent;
    }
    /**
     * Get skip physical rdm disks.
     * @returns {boolean}
     */
    get skipPhysicalRdmDisks() {
        return this._json.skip_physical_rdm_disks;
    }
    /**
     * Get full protection sla time mins.
     * @returns {number}
     */
    get fullProtectionSlaTimeMins() {
        return this._json.full_protection_sla_time_mins;
    }
    /**
     * Get incremental protection sla time mins.
     * @returns {number}
     */
    get incrementalProtectionSlaTimeMins() {
        return this._json.incremental_protection_sla_time_mins;
    }
    /**
     * Get indexing policy.
     * @returns {BackupGroupIndexingPolicy}
     */
    get indexingPolicy() {
        return new backup_group_indexing_policy_1.BackupGroupIndexingPolicy(this._json.indexing_policy);
    }
    /**
     * Get policy id.
     * @returns {string}
     */
    get policyId() {
        return this._json.policy_id;
    }
    /**
     * Get policy applied time.
     * @returns {number}
     */
    get policyAppliedTime() {
        return this._json.policy_applied_time;
    }
    /**
     * Get priority.
     * @returns {BackupGroupPriority}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get qos type.
     * @returns {BackupGroupQosType}
     */
    get qosType() {
        return this._json.qos_type;
    }
    /**
     * Get excluded sources.
     * @returns {Array<ProtectionSource>}
     */
    get excludedSources() {
        var _a;
        return (_a = this._json.excluded_sources) === null || _a === void 0 ? void 0 : _a.map(it => new protection_source_1.ProtectionSource(it));
    }
    /**
     * Get protected sources.
     * @returns {Array<ProtectionSource>}
     */
    get protectedSources() {
        var _a;
        return (_a = this._json.protected_sources) === null || _a === void 0 ? void 0 : _a.map(it => new protection_source_1.ProtectionSource(it));
    }
    /**
     * Get start time.
     * @returns {TimeOfDay}
     */
    get startTime() {
        return new time_of_day_1.TimeOfDay(this._json.start_time);
    }
    /**
     * Get timezone.
     * @returns {string}
     */
    get timezone() {
        return this._json.timezone;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get abort in blackout period.
     * @returns {boolean}
     */
    get abortInBlackoutPeriod() {
        return this._json.abort_in_blackout_period;
    }
    /**
     * Get continue on quiesce failure.
     * @returns {boolean}
     */
    get continueOnQuiesceFailure() {
        return this._json.continue_on_quiesce_failure;
    }
    /**
     * Get quiesce.
     * @returns {boolean}
     */
    get quiesce() {
        return this._json.quiesce;
    }
    /**
     * Get summary stats.
     * @returns {BackupSummaryStats | null}
     */
    get summaryStats() {
        return this._json.summary_stats ? new backup_summary_stats_1.BackupSummaryStats(this._json.summary_stats) : null;
    }
    /**
     * Get last run.
     * @returns {BackupGroupRun | null}
     */
    get lastRun() {
        return this._json.last_run ? new backup_group_run_1.BackupGroupRun(this._json.last_run) : null;
    }
    /**
     * Get backup policy.
     * @returns {BackupPolicy | null}
     */
    get backupPolicy() {
        return this._json.backup_policy ? new backup_policy_1.BackupPolicy(this._json.backup_policy) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Get details of an individual backup protection group.
     *
     * @param {string} uid
     * @param {boolean} includeSummaryStats Default is false. (Optional)
     * @param {boolean} includeLastRun Default is false. (Optional)
     * @param {boolean} includeBackupPolicy Default is false. (Optional)
     * @return {Promise<BackupGroup>}
     */
    /* istanbul ignore next: autogenerated */
    static getBackupGroup(uid, includeSummaryStats, includeLastRun, includeBackupPolicy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${uid}`, {
                params: {
                    includeSummaryStats: includeSummaryStats !== null && includeSummaryStats !== void 0 ? includeSummaryStats : false,
                    includeLastRun: includeLastRun !== null && includeLastRun !== void 0 ? includeLastRun : false,
                    includeBackupPolicy: includeBackupPolicy !== null && includeBackupPolicy !== void 0 ? includeBackupPolicy : false
                }
            })
                .then(response => {
                const json = response.data;
                return new BackupGroup(json);
            });
        });
    }
    /**
     * Get details for the policy associated with a specified backup group.
     *
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupGroupPolicy() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/policy`)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Get a specific backup group run.
     *
     * @param {string} backupRunUid
     * @return {Promise<BackupGroupRun>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupGroupRun(backupRunUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/runs/${backupRunUid}`)
                .then(response => {
                const json = response.data;
                return new backup_group_run_1.BackupGroupRun(json);
            });
        });
    }
    /**
     * List runs for the specified backup group.
     * Limit defaults to 10 and query time range defaults to last 24 hours.
     *
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     * @param {number} limit Default is 10. (Optional)
     * @returns {Promise<Array<BackupGroupRun>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroupRuns(startTimeMillis, endTimeMillis, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/backup-runs`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null,
                    limit: limit !== null && limit !== void 0 ? limit : null
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_run_1.BackupGroupRun(it));
            });
        });
    }
    /**
     * Get summary stats for an individual backup protection group.
     * Stat time-range defaults to the past 24 hours.
     * Both startTimeMillis and endTimeMillis params are required if one is used.
     *
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     * @return {Promise<BackupGroupSummaryStats>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupGroupSummaryStats(startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/summary-stats`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return new backup_group_summary_stats_1.BackupGroupSummaryStats(json);
            });
        });
    }
    /**
     * Update a backup group.
     *
     * @param {BackupGroupUpdateRequest} updateRequest
     * @returns {Promise<BackupGroup>}
     */
    /* istanbul ignore next: autogenerated */
    updateBackupGroup(updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/backup-groups/${this.uid}`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new BackupGroup(json);
            });
        });
    }
    /**
     * Delete a backup group.
     *
     * @param {BackupGroupDeleteRequest} deleteRequest the deletion request
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    deleteBackupGroup(deleteRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/backup-groups/${this.uid}`, {
                headers: {
                    'Content-Type': 'application/json'
                },
                data: {
                    delete_snapshots: deleteRequest.deleteSnapshots
                }
            });
        });
    }
    /**
     * Gets the list of storage metrics that are available for the backup group.
     *
     * @return {Promise<Array<BackupGroupStorageMetric>>} the list of storage metrics names
     */
    /* istanbul ignore next: autogenerated */
    getBackupStorageMetrics() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/backup-storage-metrics`)
                .then(response => {
                return response.data.data;
            });
        });
    }
    /**
     * Gets a series of backup group storage samples for a specified storage
     * metric.
     *
     * @param {BackupGroupStorageMetric} metric the storage metric name
     * @param {number} startTimeMillis start of the series (Optional)
     * @param {number} endTimeMillis end of the series (Optional)
     * @return {Promise<BackupGroupStorageSampleSeries>} the sample series
     */
    /* istanbul ignore next: autogenerated */
    getBackupStorageSamples(metric, startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/backup-groups/${this.uid}/backup-storage-metrics/${metric}/samples`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return new backup_group_storage_sample_series_1.BackupGroupStorageSampleSeries(json);
            });
        });
    }
}
exports.BackupGroup = BackupGroup;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtectionSource = void 0;
/**
 * Backup Group Disk Unit.
 */
/* istanbul ignore next: autogenerated */
class ProtectionSource {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the iland entity UUID. May be null if the source has been deleted.
     * @returns {string | null} iland entity uuid
     */
    get entityUuid() {
        return this._json.entity_uuid || null;
    }
    /**
     * Gets the type of the associated iland IaaS entity.
     * @returns {VCloudProtectionSourceType} entity type
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Gets the name of the associated entity.
     * @returns {string} entity name
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * The UID of the associated entity in the backend backup system.
     * @returns {string} native uid
     */
    get nativeUid() {
        return this._json.native_uid;
    }
    /**
     * Gets the json representation of this class.
     * @returns {ProtectionSourceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Gets the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ProtectionSource = ProtectionSource;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Media = void 0;
const tslib_1 = __webpack_require__(5);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const entity_1 = __webpack_require__(9);
const metadata_1 = __webpack_require__(38);
const task_1 = __webpack_require__(10);
/**
 * Media.
 */
class Media extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get the Media from API.
     * @param {string} uuid
     * @returns {Promise<Media>} promise that resolves with the Media
     */
    static getMedia(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/media/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Media(json);
            });
        });
    }
    /**
     * Get entity type for Media
     * @returns {EntityType}
     */
    get entityType() {
        return 'IAAS_MEDIA';
    }
    /**
     * Get Media status.
     * @returns {number}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get Media size.
     * @returns {number}
     */
    get size() {
        return this._json.size;
    }
    /**
     * Indicate whether the Media is public or not.
     * @returns {boolean}
     */
    get isPublic() {
        return this._json.is_public;
    }
    /**
     * Get Media location ID
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get Media org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get Media catalog uuid.
     * @returns {string}
     */
    get catalogUuid() {
        return this._json.catalog_uuid;
    }
    /**
     * Get Media storageProfile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get Media vDc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get Media description
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get Media vCloudHref.
     * @returns {string}
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Get Media creation date.
     * @returns {Date}
     */
    get createdDate() {
        return new Date(this._json.created_date);
    }
    /**
     * Refreshes the Media data by retrieving it from the API again.
     * @returns {Promise<Media>} promise that resolves with the Media
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/media/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Deletes current Media
     * @returns {Promise<Task>} promise that resolves with a Task
     */
    delete() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/media/${this.uuid}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates media name, description and storage profile
     * @param {MediaUpdateRequest} request
     * @returns {Promise<Task>} promise that resolves with a Task
     */
    update(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/media/${this.uuid}`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Clones current Media.
     * @param {MediaUpdateRequest} request
     * @returns {Promise<Task>} promise that resolves with a Task
     */
    clone(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/media/${this.uuid}/actions/clone`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Synchronize current Media.
     * @returns {Promise<Task>} promise that resolves with a Task
     */
    sync() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/media/${this.uuid}/actions/sync`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Get a link to download the Media.
     * @param {string} filename
     * @returns {Observable<string>}
     */
    getDownloadLink(filename) {
        let href = `${iland_1.Iland.baseUrl}/media/${this.uuid}/download?accept=` + encodeURIComponent(http_1.Http.versionMime('application/octet-stream'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Gets the Media's metadata.
     * @returns {Promise<Metadata<MetadataType>[]>}
     */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/media/${this.uuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Updates the Media's metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const metadataJson = metadata.map(m => {
                return m.json;
            });
            return iland_1.Iland.getHttp()
                .put(`/media/${this.uuid}/metadata`, metadataJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Deletes a metadata entry.
     * @param {string} metadataKey the key of the metadata entry to delete
     * @returns {Promise<Task>} task promise
     */
    deleteMetadata(metadataKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/media/${this.uuid}/metadata/${metadataKey}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {MediaJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Media = Media;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplate = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const metadata_1 = __webpack_require__(38);
const task_1 = __webpack_require__(10);
const vapp_template_configuration_1 = __webpack_require__(291);
const vapp_template_download_details_1 = __webpack_require__(296);
const vapp_template_vm_1 = __webpack_require__(297);
/**
 * VappTemplate
 */
class VappTemplate extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get the VappTemplate from API.
     * @param {string} uuid
     * @returns {Promise<VappTemplate>} promise that resolves with the VappTemplate.
     */
    static getVappTemplate(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${uuid}`)
                .then(response => {
                const json = response.data;
                return new VappTemplate(json);
            });
        });
    }
    /**
     * Get VappTemplate entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return 'IAAS_VAPP_TEMPLATE';
    }
    /**
     * Get VappTemplate description
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get VappTemplate vCloudHref.
     * @returns {string}
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Get VappTemplate status
     * @returns {number}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get VappTemplate size.
     * @returns {number}
     */
    get size() {
        return this._json.size;
    }
    /**
     * Indicate whether the VappTemplate is customisable or not.
     * @returns {boolean}
     */
    get isCustomisable() {
        return this._json.customizable;
    }
    /**
     * Indicate whether the VappTemplate customization is required or not.
     * @returns {boolean}
     */
    get isCustomizationRequired() {
        return this._json.customization_required;
    }
    /**
     * Indicate whether the VappTemplate is gold master or not.
     * @returns {boolean}
     */
    get isGoldMaster() {
        return this._json.gold_master;
    }
    /**
     * Indicate whether the VappTemplate is public or not.
     * @returns {boolean}
     */
    get isPublic() {
        return this._json.is_public;
    }
    /**
     * Get VappTemplate storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get VappTemplate vDc uuid
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get VappTemplate location ID
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get VappTemplate org uuid
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get VappTemplate catalog uuid
     * @returns {string}
     */
    get catalogUuid() {
        return this._json.catalog_uuid;
    }
    /**
     * Get VappTemplate creation date
     * @returns {Date}
     */
    get createdDate() {
        return new Date(this._json.created_date);
    }
    /**
     * Indicate whether the VappTemplate is expired or not.
     * @returns {boolean}
     */
    get isExpired() {
        return this._json.is_expired;
    }
    /**
     * Get vm templates.
     * @returns {Array<VappTemplateVm>}
     */
    get vmTemplates() {
        return this._json.vm_templates.map(it => new vapp_template_vm_1.VappTemplateVm(it));
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VappTemplateJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the VappTemplate data by retrieving it from the API again.
     * @returns {Promise<VappTemplate>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Update a Vapp Template.
     * Capable of updating the templates name, and description.
     * @param {VappTemplateUpdateRequest} req vapp template update request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateVappTemplate(req) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vapp-templates/${this.uuid}`, req.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Delete a Vapp template.
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteVappTemplate() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vapp-templates/${this.uuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Retrieve a vApp Template's VMs.
     * @returns {Promise<Array<VappTemplateVm>>} promise Promise that resolves with a list of VappTemplateVm
     */
    /* istanbul ignore next: autogenerated */
    getVappTemplateVms() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${this.uuid}/vms`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_template_vm_1.VappTemplateVm(it));
            });
        });
    }
    /**
     * Retrieve a vApp Template's detailed configuration.
     * @returns {Promise<VappTemplateConfiguration>} promise Promise that resolves with VappTemplateConfiguration
     */
    /* istanbul ignore next: autogenerated */
    getVappTemplateConfiguration() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${this.uuid}/configuration`)
                .then(response => {
                const json = response.data;
                return new vapp_template_configuration_1.VappTemplateConfiguration(json);
            });
        });
    }
    /**
     * Enable the download of the vapp template. Returns a CoreTask which monitors
     * the progress of the download.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    enableVappTemplateDownload() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapp-templates/${this.uuid}/actions/enable-download`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets download details for the vApp Template. Details include whether the
     * template is enabled for download, and, if enabled, the size and name of the
     * download.
     * @returns {Promise<VappTemplateDownloadDetails>} promise Promise that resolves with VappTemplateDownloadDetails
     */
    /* istanbul ignore next: autogenerated */
    getDownloadDetails() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${this.uuid}/download-details`)
                .then(response => {
                const json = response.data;
                return new vapp_template_download_details_1.VappTemplateDownloadDetails(json);
            });
        });
    }
    /**
     * Get a link to download the vApp Template.
     * @returns {string}
     */
    getDownloadLink() {
        const token = iland_1.Iland.getAuthProvider().getTokenSync();
        return (`${iland_1.Iland.baseUrl}/vapp-templates/${this.uuid}/download?oauth_token=${token}&accept=application` +
            '%2Fvnd.ilandcloud.api.v1.0%2Boctet-stream');
    }
    /**
     * Gets the vApp Template's metadata.
     * @returns {Promise<Array<Metadata<MetadataType>>>} promise Promise that resolves with a list of Metadata
     */
    /* istanbul ignore next: autogenerated */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-templates/${this.uuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Updates the vApp Template's metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const metadataJson = metadata.map(m => {
                return m.json;
            });
            return iland_1.Iland.getHttp()
                .put(`/vapp-templates/${this.uuid}/metadata`, metadataJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Delete a specific piece of metadata associated with a vapp template by its
     * key.
     * @param {string} key metadata key
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    deleteMetadata(key) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vapp-templates/${this.uuid}/metadata/${key}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
}
exports.VappTemplate = VappTemplate;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnAuthenticationServer = void 0;
/**
 * EdgeSslVpnAuthenticationServer class.
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnAuthenticationServer = EdgeSslVpnAuthenticationServer;


/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return defaultThrottleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return throttle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


var defaultThrottleConfig = {
    leading: true,
    trailing: false
};
function throttle(durationSelector, config) {
    if (config === void 0) {
        config = defaultThrottleConfig;
    }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing)); };
}
var ThrottleOperator = /*@__PURE__*/ (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
var ThrottleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.durationSelector = durationSelector;
        _this._leading = _leading;
        _this._trailing = _trailing;
        _this._hasValue = false;
        return _this;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        this._hasValue = true;
        this._sendValue = value;
        if (!this._throttled) {
            if (this._leading) {
                this.send();
            }
            else {
                this.throttle(value);
            }
        }
    };
    ThrottleSubscriber.prototype.send = function () {
        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
        if (_hasValue) {
            this.destination.next(_sendValue);
            this.throttle(_sendValue);
        }
        this._hasValue = false;
        this._sendValue = undefined;
    };
    ThrottleSubscriber.prototype.throttle = function (value) {
        var duration = this.tryDurationSelector(value);
        if (!!duration) {
            this.add(this._throttled = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__[/* innerSubscribe */ "c"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__[/* SimpleInnerSubscriber */ "a"](this)));
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype.throttlingDone = function () {
        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
        if (_throttled) {
            _throttled.unsubscribe();
        }
        this._throttled = undefined;
        if (_trailing) {
            this.send();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function () {
        this.throttlingDone();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this.throttlingDone();
    };
    return ThrottleSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__[/* SimpleOuterSubscriber */ "b"]));
//# sourceMappingURL=throttle.js.map


/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isObject; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isPromise; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24);
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__[/* hostReportError */ "a"]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__[/* iterator */ "a"]]();
        do {
            var item = void 0;
            try {
                item = iterator.next();
            }
            catch (err) {
                subscriber.error(err);
                return subscriber;
            }
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export combineLatest */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CombineLatestOperator; });
/* unused harmony export CombineLatestSubscriber */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12);
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14);
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30);
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = undefined;
    var scheduler = undefined;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__[/* isScheduler */ "a"])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[/* isArray */ "a"])(observables[0])) {
        observables = observables[0];
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__[/* fromArray */ "a"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[/* subscribeToResult */ "a"])(this, observable, undefined, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[/* OuterSubscriber */ "a"]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isDate; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
//# sourceMappingURL=isDate.js.map


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubjectSubscription; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__[/* Subscription */ "a"]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77);
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__[/* Scheduler */ "a"].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__[/* Scheduler */ "a"]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return scheduleArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[/* Subscription */ "a"]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30);
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62);
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__[/* isScheduler */ "a"])(scheduler)) {
        args.pop();
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__[/* scheduleArray */ "a"])(args, scheduler);
    }
    else {
        return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__[/* fromArray */ "a"])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ AsyncAction_AsyncAction; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscription.js
var Subscription = __webpack_require__(4);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/Action.js
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action_Action = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(Subscription["a" /* Subscription */]));

//# sourceMappingURL=Action.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction_AsyncAction = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(Action_Action));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24);
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (_config__WEBPACK_IMPORTED_MODULE_0__[/* config */ "a"].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__[/* hostReportError */ "a"])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupPolicy = void 0;
const blackout_period_1 = __webpack_require__(118);
const extended_retention_policy_1 = __webpack_require__(119);
const scheduling_policy_1 = __webpack_require__(120);
const snapshot_archival_copy_policy_1 = __webpack_require__(121);
const snapshot_replication_copy_policy_1 = __webpack_require__(123);
/**
 * Backup Policy.
 */
/* istanbul ignore next: autogenerated */
class BackupPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get scope.
     * @returns {BackupPolicyScopeType}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get blackout periods.
     * @returns {Array<BlackoutPeriod>}
     */
    get blackoutPeriods() {
        var _a;
        return (_a = this._json.blackout_periods) === null || _a === void 0 ? void 0 : _a.map(it => new blackout_period_1.BlackoutPeriod(it));
    }
    /**
     * Get days to keep.
     * @returns {number}
     */
    get daysToKeep() {
        return this._json.days_to_keep;
    }
    /**
     * Get days to keep log.
     * @returns {number | null}
     */
    get daysToKeepLog() {
        return this._json.days_to_keep_log || null;
    }
    /**
     * Get description.
     * @returns {string | null}
     */
    get description() {
        return this._json.description || null;
    }
    /**
     * Get extended retention policies.
     * @returns {Array<ExtendedRetentionPolicy>}
     */
    get extendedRetentionPolicies() {
        var _a;
        return (_a = this._json.extended_retention_policies) === null || _a === void 0 ? void 0 : _a.map(it => new extended_retention_policy_1.ExtendedRetentionPolicy(it));
    }
    /**
     * Get full scheduling policy.
     * @returns {SchedulingPolicy | null}
     */
    get fullSchedulingPolicy() {
        return this._json.full_scheduling_policy ? new scheduling_policy_1.SchedulingPolicy(this._json.full_scheduling_policy) : null;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get incremental scheduling policy.
     * @returns {SchedulingPolicy}
     */
    get incrementalSchedulingPolicy() {
        return new scheduling_policy_1.SchedulingPolicy(this._json.incremental_scheduling_policy);
    }
    /**
     * Get last modified time msecs.
     * @returns {number | null}
     */
    get lastModifiedTimeMsecs() {
        var _a;
        return (_a = this._json.last_modified_time_msecs) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get log scheduling policy.
     * @returns {SchedulingPolicy | null}
     */
    get logSchedulingPolicy() {
        return this._json.log_scheduling_policy ? new scheduling_policy_1.SchedulingPolicy(this._json.log_scheduling_policy) : null;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get retries.
     * @returns {number}
     */
    get retries() {
        return this._json.retries;
    }
    /**
     * Get retry interval mins.
     * @returns {number}
     */
    get retryIntervalMins() {
        return this._json.retry_interval_mins;
    }
    /**
     * Get skip interval mins.
     * @returns {number | null}
     */
    get skipIntervalMins() {
        var _a;
        return (_a = this._json.skip_interval_mins) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get snapshot archival copy policies.
     * @returns {Array<SnapshotArchivalCopyPolicy>}
     */
    get snapshotArchivalCopyPolicies() {
        var _a;
        return (_a = this._json.snapshot_archival_copy_policies) === null || _a === void 0 ? void 0 : _a.map(it => new snapshot_archival_copy_policy_1.SnapshotArchivalCopyPolicy(it));
    }
    /**
     * Get snapshot replication copy policies.
     * @returns {Array<SnapshotReplicationCopyPolicy>}
     */
    get snapshotReplicationCopyPolicies() {
        var _a;
        return (_a = this._json.snapshot_replication_copy_policies) === null || _a === void 0 ? void 0 : _a.map(it => new snapshot_replication_copy_policy_1.SnapshotReplicationCopyPolicy(it));
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get vdc uuid.
     * @returns {string | null}
     */
    get vdcUuid() {
        return this._json.vdc_uuid || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupPolicy = BackupPolicy;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupRun = void 0;
const backup_run_1 = __webpack_require__(254);
const copy_run_1 = __webpack_require__(258);
/**
 * Backup Group Run.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupRun {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get backup run.
     * @returns {BackupRun}
     */
    get backupRun() {
        return new backup_run_1.BackupRun(this._json.backup_run);
    }
    /**
     * Get copy runs.
     * @returns {Array<CopyRun>}
     */
    get copyRuns() {
        var _a;
        return (_a = this._json.copy_runs) === null || _a === void 0 ? void 0 : _a.map(it => new copy_run_1.CopyRun(it));
    }
    /**
     * Get backup group uid.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get backup group name.
     * @returns {string}
     */
    get backupGroupName() {
        return this._json.backup_group_name;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupRunJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupRun = BackupGroupRun;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupSummaryStats = void 0;
/**
 * Backup Summary Stats.
 */
/* istanbul ignore next: autogenerated */
class BackupSummaryStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number of canceled runs.
     * @returns {number}
     */
    get numCanceledRuns() {
        return this._json.num_canceled_runs;
    }
    /**
     * Get number of failed runs.
     * @returns {number}
     */
    get numFailedRuns() {
        return this._json.num_failed_runs;
    }
    /**
     * Get number of sla violations.
     * @returns {number}
     */
    get numSlaViolations() {
        return this._json.num_sla_violations;
    }
    /**
     * Get number of successful runs.
     * @returns {number}
     */
    get numSuccessfulRuns() {
        return this._json.num_successful_runs;
    }
    /**
     * Get number of running runs.
     * @returns {number}
     */
    get numRunningRuns() {
        return this._json.num_running_runs;
    }
    /**
     * Get average run time millis.
     * @returns {number | null}
     */
    get averageRunTimeMillis() {
        var _a;
        return (_a = this._json.average_run_time_millis) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get fastest run time millis.
     * @returns {number | null}
     */
    get fastestRunTimeMillis() {
        var _a;
        return (_a = this._json.fastest_run_time_millis) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get slowest run time millis.
     * @returns {number | null}
     */
    get slowestRunTimeMillis() {
        var _a;
        return (_a = this._json.slowest_run_time_millis) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get total bytes read from source.
     * @returns {number}
     */
    get totalBytesReadFromSource() {
        return this._json.total_bytes_read_from_source;
    }
    /**
     * Get total logical backup size bytes.
     * @returns {number}
     */
    get totalLogicalBackupSizeBytes() {
        return this._json.total_logical_backup_size_bytes;
    }
    /**
     * Get total physical backup size bytes.
     * @returns {number}
     */
    get totalPhysicalBackupSizeBytes() {
        return this._json.total_physical_backup_size_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupSummaryStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupSummaryStats = BackupSummaryStats;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Catalog = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const metadata_1 = __webpack_require__(38);
const media_1 = __webpack_require__(48);
const task_1 = __webpack_require__(10);
const vapp_template_1 = __webpack_require__(49);
/**
 * Catalog.
 */
class Catalog extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get the Catalog from API.
     * @param {string} uuid
     * @returns {Promise<Catalog>} promise that resolves with the Catalog
     */
    static getCatalog(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Catalog(json);
            });
        });
    }
    get originalUuid() {
        return this._json.uuid;
    }
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get entity type for catalog.
     * @returns {EntityType}
     */
    get entityType() {
        return 'IAAS_CATALOG';
    }
    /**
     * Get location ID
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Indicate whether the catalog is shared or not.
     * @returns {boolean}
     */
    get isShared() {
        return this._json.shared;
    }
    /**
     * Indicate whether the catalog is public or not.
     * @returns {boolean}
     */
    get isPublic() {
        return this._json.catalog_public;
    }
    /**
     * Get the catalog version
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get org uuid for catalog.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get description for catalog
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vCloudHref for catalog
     * @returns {string}
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Get the creation date
     * @returns {Date}
     */
    get createdDate() {
        return new Date(this._json.created_date);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CatalogJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the Catalog data by retrieving it from the API again.
     * @returns {Promise<Catalog>} promise that resolves with the Catalog
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${this.originalUuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets Catalog's item downloads.
     * @description There are two types of catalog items that will show up: 'media' or 'template'.
     * The item type field will report 'media' or 'vapp_template'.If the item is a media,
     * the 'template' field will be null and vice-versa. (null 'media' field if item is a vapp_template).
     * Only private catalogs will have a list of catalog item downloads returned.
     * @returns {Promise<Array<ItemDownloadJson>>}
     */
    getItemDownloads() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${this.originalUuid}/item-downloads`)
                .then(response => {
                return response.data.data;
            });
        });
    }
    /**
     * Gets the Catalog's Medias
     * @returns {Promise<Array<Media>>}
     */
    getMedia() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${this.originalUuid}/media`)
                .then(response => {
                const medias = response.data.data;
                return medias.map(media => new media_1.Media(media));
            });
        });
    }
    /**
     * Gets the Catalog's vApp-Templates
     * @returns {Promise<Array<VappTemplate>>}
     */
    getVappTemplates() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${this.originalUuid}/vapp-templates`)
                .then(response => {
                const vappTemplates = response.data.data;
                return vappTemplates.map(vappTemplate => new vapp_template_1.VappTemplate(vappTemplate));
            });
        });
    }
    /**
     * Add a Vapp Template to the catalog based on an existing vapp.
     * The json can contain params "name" and "description" for the new vapp
     * template.
     * @param {VappTemplateFromVappCreateRequest} spec vapp template spec
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    addVappTemplateFromVapp(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/catalogs/${this.uuid}/actions/add-vapp-template-from-vapp`, spec.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets the Catalog's metadata.
     * @returns {Promise<Metadata<MetadataType>[]>}
     * @throws Error Throw an error if the type is unrecognized.
     */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/catalogs/${this.originalUuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Updates the catalog's metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const metadataJson = metadata.map(m => {
                return m.json;
            });
            return iland_1.Iland.getHttp()
                .put(`/catalogs/${this.uuid}/metadata`, metadataJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Deletes a metadata entry.
     * @param {string} metadataKey the key of the metadata entry to delete
     * @returns {Promise<Task>} task promise
     */
    deleteMetadata(metadataKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/catalogs/${this.uuid}/metadata/${metadataKey}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Updates the catalog.
     * @param {CatalogUpdateRequest} catalog
     * @return {Promise<Catalog>}
     */
    /* istanbul ignore next: autogenerated */
    updateCatalog(catalog) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/catalogs/${this.uuid}`, catalog.json)
                .then(response => {
                const json = response.data;
                return new Catalog(json);
            });
        });
    }
    /**
     * Initiates a new OVF upload.
     * @param params {@InitiateOVFUploadRequest} the request parameters
     * @return {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    initiateOVFUpload(body) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/catalogs/${this.uuid}/actions/initiate-ovf-upload`, body.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Deletes the catalog.
     * @param {boolean} deleteTemplatesAndMedia Will delete templates and media when set to true
     * @returns {Promise<Task>} task promise
     */
    /* istanbul ignore next: autogenerated */
    deleteCatalog(deleteTemplatesAndMedia = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/catalogs/${this.uuid}`, {
                params: {
                    deleteTemplatesAndMedia: deleteTemplatesAndMedia
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
}
exports.Catalog = Catalog;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingSummary = void 0;
const bill_1 = __webpack_require__(39);
/**
 * Billing Summary.
 */
class BillingSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the current month bill.
     * @returns {Bill} the current month bill
     */
    get currentMonth() {
        return new bill_1.Bill(this._json.current_month);
    }
    /**
     * Gets the previous month bill.
     * @returns {Bill} the previous month bill
     */
    get previousMonth() {
        return new bill_1.Bill(this._json.previous_month);
    }
    /**
     * Gets the current hour bill.
     * @returns {Bill} the current hour bill
     */
    get currentHour() {
        return new bill_1.Bill(this._json.current_hour);
    }
    /**
     * Gets the previous hour bill.
     * @returns {Bill} the previous hour bill
     */
    get previousHour() {
        return new bill_1.Bill(this._json.previous_hour);
    }
    /**
     * Indicates whether this is a test drive bill.
     * @returns {boolean} value
     */
    get testDrive() {
        return this._json.test_drive;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BillingSummaryJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BillingSummary = BillingSummary;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Edge = void 0;
const tslib_1 = __webpack_require__(5);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const entity_1 = __webpack_require__(9);
const name_id_1 = __webpack_require__(305);
const task_1 = __webpack_require__(10);
const certificate_1 = __webpack_require__(312);
const crl_1 = __webpack_require__(314);
const csr_1 = __webpack_require__(316);
const checkpoint_1 = __webpack_require__(318);
const dhcp_1 = __webpack_require__(319);
const edge_gateway_dhcp_1 = __webpack_require__(321);
const edge_gateway_dhcp_relay_type_1 = __webpack_require__(325);
const edge_gateway_dhcp_relay_type_option_list_1 = __webpack_require__(326);
const edge_gateway_dhcp_relay_type_option_paging_params_1 = __webpack_require__(151);
const edge_gateway_firewall_1 = __webpack_require__(152);
const edge_gateway_firewall_object_list_1 = __webpack_require__(331);
const edge_gateway_firewall_object_paging_params_1 = __webpack_require__(156);
const edge_gateway_firewall_object_type_1 = __webpack_require__(334);
const edge_gateway_ipsec_1 = __webpack_require__(335);
const edge_gateway_l2vpn_1 = __webpack_require__(337);
const edge_gateway_l2vpn_statistics_1 = __webpack_require__(344);
const edge_gateway_nat_1 = __webpack_require__(163);
const edge_gateway_routing_1 = __webpack_require__(346);
const routing_bgp_config_1 = __webpack_require__(166);
const routing_global_config_1 = __webpack_require__(170);
const routing_ospf_config_1 = __webpack_require__(173);
const routing_static_config_1 = __webpack_require__(175);
const edge_gateway_ssh_settings_1 = __webpack_require__(351);
const edge_gateway_syslog_1 = __webpack_require__(352);
const edge_gateway_ssl_vpn_1 = __webpack_require__(178);
const vnic_1 = __webpack_require__(365);
const edge_interface_1 = __webpack_require__(370);
const firewall_1 = __webpack_require__(372);
const firewall_configuration_1 = __webpack_require__(373);
const firewall_log_1 = __webpack_require__(374);
const ipsec_vpn_1 = __webpack_require__(375);
const ipsec_vpn_configuration_1 = __webpack_require__(377);
const load_balancer_1 = __webpack_require__(382);
const nat_service_1 = __webpack_require__(389);
const nat_service_config_1 = __webpack_require__(390);
const network_perf_sample_serie_1 = __webpack_require__(192);
const firewall_restore_point_1 = __webpack_require__(392);
const firewall_restore_point_details_1 = __webpack_require__(393);
const nat_restore_point_1 = __webpack_require__(394);
const nat_restore_point_details_1 = __webpack_require__(395);
const edge_ssl_vpn_authentication_1 = __webpack_require__(193);
const edge_ssl_vpn_client_install_package_1 = __webpack_require__(195);
const edge_ssl_vpn_ip_pool_1 = __webpack_require__(196);
const edge_ssl_vpn_private_network_1 = __webpack_require__(197);
const edge_ssl_vpn_service_1 = __webpack_require__(401);
const edge_ssl_vpn_user_1 = __webpack_require__(198);
const static_routing_1 = __webpack_require__(402);
/**
 * Edge Gateway.
 */
class Edge extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets an Edge by UUID.
     * @param uuid Edge UUID
     * @returns {Promise<Edge>} promise that resolves with the Edge
     */
    static getEdge(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Edge(json);
            });
        });
    }
    get entityType() {
        return 'IAAS_EDGE';
    }
    /**
     * Gets the status of the Edge gateway.
     * @returns {string} status
     */
    get status() {
        return this._json.status === 1 ? 'UP' : 'DOWN';
    }
    /**
     * Gets the UUID of the associated vDC.
     * @returns {string | null} vDC UUID
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Gets the UUID of the associated Org.
     * @returns {string | null} org UUID
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Gets the Edges network interfaces.
     * @returns {[EdgeInterface]} array of interfaces
     */
    get interfaces() {
        const interfaces = this._json.interfaces || [];
        return interfaces.map(interfaceJson => new edge_interface_1.EdgeInterface(interfaceJson));
    }
    /**
     * Indicates whether the edge is in backwards compatibility mode.
     * @returns {boolean} value
     */
    get backwardCompatibilityMode() {
        return this._json.backward_compatibility_mode;
    }
    /**
     * Gets the type of backing configuration.
     * @returns {EdgeBackingConfigurationType | null} backing configuration type
     */
    get backingConfigurationType() {
        return this._json.gateway_backing_config;
    }
    /**
     * Indicates whether high availability mode is enabled.
     * @returns {boolean | null} value
     */
    get highAvailabilityEnabled() {
        return this._json.high_availability_enabled;
    }
    /**
     * Indicates whether this edge is the default DNS relay route.
     * @returns {boolean | null} value
     */
    get defaultDnsRelayRoute() {
        return this._json.default_dns_relay_route;
    }
    /**
     * Gets the data center location ID that the edge is associated with.
     * @returns {string | null} location ID
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the description.
     * @returns {string | null} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the vCloud HREF.
     * @returns {string|null} vCloud HREF
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {EdgeJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the Edge data by retrieving it from the API again.
     * @returns {Promise<Edge>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Get the Edge Dhcp pool
     * @returns {Promise<Dhcp>}
     */
    getDhcp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/dhcp`)
                .then(response => {
                return new dhcp_1.Dhcp(response.data);
            });
        });
    }
    /**
     * Get the Edge firewall
     * @deprecated This method is deprecated, use getEdgeGatewayFirewall() instead
     * @returns {Promise<Firewall>}
     */
    getFirewall() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/firewall`)
                .then(response => {
                return new firewall_1.Firewall(response.data);
            });
        });
    }
    /**
     * Get the Edge Gateway Firewall
     * @returns {Promise<EdgeGatewayFirewall>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayFirewall() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_firewall_1.EdgeGatewayFirewall(json);
            });
        });
    }
    /**
     * Gets firewall traffic log analysis in different formats that summarize the count
     * of actions that have occurred against a particular edge firewall.
     * @returns {Promise<Array<FirewallLog>>}
     * @description By default the endpoint uses 'action_source' analysis type if a specific type is not specified.
     * The time range also defaults to the last hour if no start and end epoch milliseconds are specified.
     * If one of the start or end timestamps are specified the hour range immediately after or before,
     * respectively, are defaulted to.
     */
    getFirewallLogs(type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/firewall-logs`, {
                params: {
                    type: type,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                return response.data.map(log => new firewall_log_1.FirewallLog(log));
            });
        });
    }
    /**
     * Get a list of edge firewall checkpoints that are snapshots of an edge firewall in time.
     * @returns {Promise<Array<Checkpoint>>}
     * @description These checkpoints can be used to restore the edge firewall to a previous state in time.
     */
    getFirewallCheckpoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/firewall-checkpoints`)
                .then(response => {
                return response.data.data.map(checkpoint => new checkpoint_1.Checkpoint(checkpoint));
            });
        });
    }
    /**
     * Get an edge firewall checkpoint by edge uuid and checkpoint.
     * @param {string} checkpointUuid
     * @returns {Promise<Checkpoint>}
     * @description The actual firewall config of the checkpoint will be included in the return.
     */
    getFirewallCheckpoint(checkpointUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/firewall-checkpoints/${checkpointUuid}`)
                .then(response => {
                return new checkpoint_1.Checkpoint(response.data);
            });
        });
    }
    /**
     * Export an Edge Firewall configuration file that can be imported/applied to other edges.
     * @param {string} filename
     */
    getExportFirewallHref(filename) {
        let href = `${iland_1.Iland.baseUrl}/edges/${this.uuid}/firewall/export?accept=` +
            encodeURIComponent(http_1.Http.versionMime('application/octet-stream'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Gets IpSec VPN Service details for an edge
     * @returns {Promise<IpsecVpn>}
     */
    getIpsecVpn() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/ipsec-vpn`)
                .then(response => {
                return new ipsec_vpn_1.IpsecVpn(response.data);
            });
        });
    }
    /**
     * Get a link to download an Ipsec vpn export.
     * @param {string} filename
     * @returns {Observable<string>}
     */
    getExportIpsecVpnHref(filename) {
        let href = `${iland_1.Iland.baseUrl}/edges/${this.uuid}/ipsec-vpn/export?accept=` +
            encodeURIComponent(http_1.Http.versionMime('application/octet-stream'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Gets Load Balancer Service details for an edge.
     * @returns {Promise<LoadBalancer>}
     */
    getLoadBalancer() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/load-balancer`)
                .then(response => {
                return new load_balancer_1.LoadBalancer(response.data);
            });
        });
    }
    /**
     * Gets the NAT service configuration for a VCD edge gateway.
     * @returns {Promise<NatService>}
     */
    getNat() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/nat`)
                .then(response => {
                return new nat_service_1.NatService(response.data);
            });
        });
    }
    /**
     * Get a list of edge NAT checkpoints that are snapshots of an edge NAT service in time
     * @returns {Promise<Array<Checkpoint>>}
     * @description These checkpoints can be used to restore the edge NAT service to a previous state in time.
     */
    getNatCheckpoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/nat-checkpoints`)
                .then(response => {
                return response.data.data.map(checkpoint => new checkpoint_1.Checkpoint(checkpoint));
            });
        });
    }
    /**
     * Get a NAT checkpoint by edge uuid and checkpoint.
     * @param {string} checkpointUuid
     * @returns {Promise<Checkpoint>}
     * @description The actual NAT config of the checkpoint will be included in the return.
     */
    getNatCheckpoint(checkpointUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/nat-checkpoints/${checkpointUuid}`)
                .then(response => {
                return new checkpoint_1.Checkpoint(response.data);
            });
        });
    }
    /**
     * Export an Edge NAT configuration file that can be imported/applied to other edges.
     * @param {string} filename
     * @returns {Observable<string>}
     */
    getExportNatHref(filename) {
        let href = `${iland_1.Iland.baseUrl}/edges/${this.uuid}/nat/export?accept=` + encodeURIComponent(http_1.Http.versionMime('application/octet-stream'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Gets SSL VPN configuration details for an edge gateway.
     * @returns {Promise<EdgeSslVpnServiceJson>}
     */
    getSslVpn() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/sslvpn`)
                .then(response => {
                return new edge_ssl_vpn_service_1.EdgeSslVpnService(response.data);
            });
        });
    }
    /**
     * Gets static routing details for a VCD edge.
     * @returns {Promise<StaticRouting>}
     */
    getStaticRouting() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/static-routing`)
                .then(response => {
                return new static_routing_1.StaticRouting(response.data);
            });
        });
    }
    /**
     * Gets statistics data for a VCD edge gateway.
     * @param {PerfGroupType} group
     * @param {string} name
     * @param {PerfStatsType} type
     * @param {number} start
     * @param {number} end
     * @returns {Promise<NetworkPerfSampleSerie>}
     */
    getPerformance(group, name, type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/performance/${group}:${name}:${type}`, {
                params: {
                    start: start,
                    end: end
                }
            })
                .then(response => {
                return new network_perf_sample_serie_1.NetworkPerfSampleSerie(response.data);
            });
        });
    }
    /**
     *  Update the static routing service.
     * @param {StaticRouting} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateStaticRouting(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-static-routing`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the DHCP service.
     * @param {DhcpServiceUpdateRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateDHCP(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-dhcp`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore firewall from checkpoint.
     * @param {string} checkpointUuid
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreFirewallFromCheckpoint(checkpointUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/firewall-checkpoints/${checkpointUuid}/actions/restore`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore NAT service from checkpoint.
     * @param {string} checkpointUuid
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreNATFromCheckpoint(checkpointUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/nat-checkpoints/${checkpointUuid}/actions/restore`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the edge firewall.
     * @deprecated This method is deprecated, use updateEdgeGatewayFirewall() instead
     * @param {EdgeFirewallUpdateRequest} firewall
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateFirewall(firewall) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-firewall`, firewall.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the edge gateway firewall.
     * @param {EdgeGatewayFirewallUpdateRequest} firewall update request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayFirewall(firewallUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/firewall`, firewallUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_firewall_1.EdgeGatewayFirewall(json);
            });
        });
    }
    /**
     * Update the edge interface.
     * @param {EdgeInterface} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateInterface(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-edge-interface`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Updates the NAT service for a VCD edge gateway.
     * @param {NATServiceUpdateRequest} request NAT service update request
     * @returns {Promise<Task>} promise Promise that resoves with a task
     */
    /* istanbul ignore next: autogenerated */
    updateNAT(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-nat`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the load balancer service.
     * @param {LoadBalancerServiceUpdateRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateLoadBalancer(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/update-load-balancer`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the edge ip sec vpn service.
     * @param {EdgeIpSecVpnServiceUpdateRequest}
     * @returns {Promise<EdgeIpsecVpnService>>}
     */
    /* istanbul ignore next: autogenerated */
    updateIpSecVpn(ipSecVpnService) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/ipsec-vpn`, ipSecVpnService.json)
                .then(response => {
                const json = response.data;
                return new ipsec_vpn_1.IpsecVpn(json);
            });
        });
    }
    /**
     * Updates authentication configuration of SSL VPN for an edge gateway.
     * @param {EdgeSslVpnAuthenticationUpdateRequest} request
     * @returns {Promise<EdgeSslVpnAuthentication>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnAuthentication(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-authentication-servers`, request.json)
                .then(response => {
                const json = response.data;
                return new edge_ssl_vpn_authentication_1.EdgeSslVpnAuthentication(json);
            });
        });
    }
    /**
     * Updates client install package configuration of SSL VPN for an edge gateway.
     * @param {Array<EdgeSslVpnClientInstallPackageUpdateRequest>} requests
     * @returns {Promise<Array<EdgeSslVpnClientInstallPackage>>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnClientInstallPackages(requests) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-client-install-packages`, requests.map(req => req.json))
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_ssl_vpn_client_install_package_1.EdgeSslVpnClientInstallPackage(it));
            });
        });
    }
    /**
     * Updates the SSL VPN IP pools for an edge gateway.
     * @param {Array<EdgeSslVpnIpPoolUpdateRequest>} requests
     * @returns {Promise<Array<EdgeSslVpnIpPool>>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnIpPools(requests) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-ip-pools`, requests.map(req => req.json))
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_ssl_vpn_ip_pool_1.EdgeSslVpnIpPool(it));
            });
        });
    }
    /**
     * Updates list of private networks that are reachable through an SSL VPN for an edge gateway.
     * @param {Array<EdgeSslVpnPrivateNetworkUpdateRequest>} requests
     * @returns {Promise<Array<EdgeSslVpnPrivateNetwork>>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnPrivateNetworks(requests) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-private-networks`, requests.map(req => req.json))
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_ssl_vpn_private_network_1.EdgeSslVpnPrivateNetwork(it));
            });
        });
    }
    /**
     * Updates SSL VPN configuration for an edge gateway.
     * @param {EdgeSslVpnServerConfigUpdateRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnServerConfig(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().put(`/edges/${this.uuid}/sslvpn-config`, request.json);
        });
    }
    /**
     * Updates SSL VPN server settings for an edge gateway.
     * @param {EdgeSslVpnServiceUpdateRequest} serverSettings
     * @returns {Promise<EdgeSslVpnService>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnServerSettings(serverSettings) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-server-settings`, serverSettings.json)
                .then(response => {
                const json = response.data;
                return new edge_ssl_vpn_service_1.EdgeSslVpnService(json);
            });
        });
    }
    /**
     * Updates an edge SSL VPN user.
     * @param {string} userId
     * @param {EdgeSslVpnUserUpdateRequest} request
     * @returns {Promise<EdgeSslVpnUser>}
     */
    /* istanbul ignore next: autogenerated */
    updateSslVpnUser(userId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edges/${this.uuid}/sslvpn-user/${userId}`, request.json)
                .then(response => {
                const json = response.data;
                return new edge_ssl_vpn_user_1.EdgeSslVpnUser(json);
            });
        });
    }
    /**
     * Get the Edge firewall configuration.
     * @returns {Promise<FirewallConfiguration>}
     */
    getFirewallConfiguration() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/firewall-configuration`)
                .then(response => {
                return new firewall_configuration_1.FirewallConfiguration(response.data);
            });
        });
    }
    /**
     * Import an edge firewall from a configuration.
     * @param {FirewallConfiguration} firewall
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    importFirewallConfiguration(firewall) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/import-firewall-configuration`, firewall.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets IpSec VPN Service configuration for an edge.
     * @returns {Promise<IpsecVpnConfiguration>}
     */
    getIpsecVpnConfiguration() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/ipsec-vpn-configuration`)
                .then(response => {
                return new ipsec_vpn_configuration_1.IpsecVpnConfiguration(response.data);
            });
        });
    }
    /**
     * Import an Ipsec VPN service configuration.
     * @param {IpsecVpnConfiguration} vpn
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    importIpSecVpnConfiguration(vpn) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/import-ipsec-vpn-configuration`, vpn.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets the NAT service configuration for a VCD edge gateway.
     * @returns {Promise<NatServiceConfiguration>}
     */
    getNatConfiguration() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edges/${this.uuid}/nat-configuration`)
                .then(response => {
                return new nat_service_config_1.NatServiceConfiguration(response.data);
            });
        });
    }
    /**
     * Import a NAT service configuration.
     * @param {NatServiceConfiguration} nat
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    importNATConfiguration(nat) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edges/${this.uuid}/actions/import-nat-configuration`, nat.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the list of firewall source types
     * @returns {Promise<Array<EdgeGatewayFirewallObjectType>>}
     */
    /* istanbul ignore next: autogenerated */
    getFirewallSourceTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/sources`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_gateway_firewall_object_type_1.EdgeGatewayFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the edge firewall source objects of the specified type.
     * If the specified page number is larger than number of actual pages, the response will return as an empty list.
     * @param {string | EdgeGatewayFirewallObjectType} type Type.
     * Valid types can be retrieved from the getFirewallSourceTypes() endpoint
     * @param {number | EdgeGatewayFirewallObjectPagingParams} pageOrPagingParams The page number or paging params.
     * The index of the first page is 1. (Default: 1)
     * @param {number} pageSize The page size (Optional). (Default 25)
     * @returns {Promise<EdgeGatewayFirewallObjectList>}
     */
    /* istanbul ignore next: autogenerated */
    getFirewallSourceObjects(type, pageOrPagingParams, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let _type = type;
            let _page = pageOrPagingParams || 1;
            let _pageSize = pageSize || 25;
            if (type instanceof edge_gateway_firewall_object_type_1.EdgeGatewayFirewallObjectType) {
                _type = type.type;
            }
            if (pageOrPagingParams instanceof edge_gateway_firewall_object_paging_params_1.EdgeGatewayFirewallObjectPagingParams) {
                _page = pageOrPagingParams.page;
                _pageSize = pageOrPagingParams.pageSize;
            }
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/sources/${_type}`, {
                params: {
                    page: _page,
                    pageSize: _pageSize
                }
            })
                .then(response => {
                const json = response.data;
                return new edge_gateway_firewall_object_list_1.EdgeGatewayFirewallObjectList(json);
            });
        });
    }
    /* istanbul ignore next: autogenerated */
    getFirewallDestinationTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/destinations`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_gateway_firewall_object_type_1.EdgeGatewayFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the edge firewall destination objects of the specified type.
     * If the specified page number is larger than number of actual pages, the response will return as an empty list.
     * @param {string | EdgeGatewayFirewallObjectType} type Type.
     * Valid types can be retrieved from the getFirewallSourceTypes() endpoint
     * @param {number | EdgeGatewayFirewallObjectPagingParams} pageOrPagingParams The page number or paging params.
     * The index of the first page is 1. (Default: 1)
     * @param {number} pageSize The page size (Optional). (Default 25)
     * @returns {Promise<EdgeGatewayFirewallObjectList>}
     */
    /* istanbul ignore next: autogenerated */
    getFirewallDestinationObjects(type, pageOrPagingParams, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let _type = type;
            let _page = pageOrPagingParams || 1;
            let _pageSize = pageSize || 25;
            if (type instanceof edge_gateway_firewall_object_type_1.EdgeGatewayFirewallObjectType) {
                _type = type.type;
            }
            if (pageOrPagingParams instanceof edge_gateway_firewall_object_paging_params_1.EdgeGatewayFirewallObjectPagingParams) {
                _page = pageOrPagingParams.page;
                _pageSize = pageOrPagingParams.pageSize;
            }
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/destinations/${_type}`, {
                params: {
                    page: _page,
                    pageSize: _pageSize
                }
            })
                .then(response => {
                const json = response.data;
                return new edge_gateway_firewall_object_list_1.EdgeGatewayFirewallObjectList(json);
            });
        });
    }
    /**
     * Retrieves name/ID mappings for all source and destination objects that are assigned to current firewall rules.
     * @returns {Promise<Array<NameId>>}
     */
    /* istanbul ignore next: autogenerated */
    getFirewallRulesInformation() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/rule-info`)
                .then(response => {
                const json = response.data.name_id_relations;
                return json.map(it => new name_id_1.NameId(it));
            });
        });
    }
    /**
     * Get the NAT configuration for current edge gateway.
     * @returns {Promise<EdgeGatewayNat>} promise Promise that resolves with the NAT configuration object
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayNAT() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/nat`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_nat_1.EdgeGatewayNat(json);
            });
        });
    }
    /**
     * Update the NAT configuration for current edge gateway.
     * @param {EdgeGatewayNatUpdateRequest} natUpdateRequest The update request
     * @returns {Promise<EdgeGatewayNat>} promise Promise that resolves with the updated NAT configuration object
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayNAT(natUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/nat`, natUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_nat_1.EdgeGatewayNat(json);
            });
        });
    }
    /**
     * Retrieve the edge gateway's VNICs.
     * @returns {Promise<Array<EdgeGatewayVNIC>>} promise Promise that resolves with the array of edge VNICs
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayVNICs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/vnics`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vnic_1.EdgeGatewayVNIC(it));
            });
        });
    }
    /**
     * Get the DHCP configuration for an edge gateway.
     * @returns {Promise<EdgeGatewayDhcp>} promise Promise that resolves with the DHCP configuration object.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayDhcp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/dhcp`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_dhcp_1.EdgeGatewayDhcp(json);
            });
        });
    }
    /**
     * Update the DHCP configuration for an edge gateway.
     * @param {EdgeGatewayDhcpUpdateRequest} edgeGatewayDhcpUpdateRequest DHCP update request
     * @returns {Promise<EdgeGatewayDhcp>} promise Promise that resolves with the updated DHCP configuration object.
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayDhcp(edgeGatewayDhcpUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/dhcp`, edgeGatewayDhcpUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_dhcp_1.EdgeGatewayDhcp(json);
            });
        });
    }
    /**
     * Get the DHCP relay types for an edge gateway.
     * @returns {Promise<Array<EdgeGatewayDhcpRelayType>>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayDhcpRelayTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/dhcp/relays`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_gateway_dhcp_relay_type_1.EdgeGatewayDhcpRelayType(it));
            });
        });
    }
    /**
     * Get the DHCP relay type options for a edge gateway's relay type.
     * @param {string | EdgeGatewayDhcpRelayType} type Type name or EdgeGatewayDhcpRelayType object retrieved from API.
     * Valid types can be retrieved from the getEdgeGatewayDhcpRelayTypes() endpoint
     * @param {number | EdgeGatewayDhcpRelayTypeOptionPagingParams} pageOrPagingParams The page number or paging params.
     * The index of the first page is 1. (Default: 1)
     * @param {number} pageSize Page size
     * The page size (Optional). (Default 25)
     * @returns {Promise<EdgeGatewayDhcpRelayTypeOptionList>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayDhcpRelayOptions(type, pageOrPagingParams, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let _type = type;
            let _page = pageOrPagingParams || 1;
            let _pageSize = pageSize || 25;
            if (type instanceof edge_gateway_dhcp_relay_type_1.EdgeGatewayDhcpRelayType) {
                _type = type.type;
            }
            if (pageOrPagingParams instanceof edge_gateway_dhcp_relay_type_option_paging_params_1.EdgeGatewayDhcpRelayTypeOptionPagingParams) {
                _page = pageOrPagingParams.page;
                _pageSize = pageOrPagingParams.pageSize;
            }
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/dhcp/relays/${_type}`, {
                params: {
                    page: _page,
                    pageSize: _pageSize
                }
            })
                .then(response => {
                const json = response.data;
                return new edge_gateway_dhcp_relay_type_option_list_1.EdgeGatewayDhcpRelayTypeOptionList(json);
            });
        });
    }
    /**
     * Retrieve the edge gateway's firewall restore points.
     * @returns {Promise<Array<FirewallRestorePoint>>} promise Promise that resolves with the list of restore points
     */
    /* istanbul ignore next: autogenerated */
    getFirewallRestorePoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/restore-points`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new firewall_restore_point_1.FirewallRestorePoint(it));
            });
        });
    }
    /**
     * Retrieve the details for a particular edge gateway firewall restore point.
     * @returns {Promise<FirewallRestorePointDetails>} promise Promise that resolves with the restore point details
     */
    /* istanbul ignore next: autogenerated */
    getFirewallRestorePointDetails(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/firewall/restore-points/${restorePointTime.getTime()}`)
                .then(response => {
                return new firewall_restore_point_details_1.FirewallRestorePointDetails(response.data);
            });
        });
    }
    /**
     * Restores the edge gateway's firewall to a specified restore point time.
     * @param request {RestoreFirewallRequest} the request body
     * @returns {Promise<EdgeGatewayFirewall>} promise Promise that resolves with the updated firewall config
     */
    /* istanbul ignore next: autogenerated */
    restoreFirewall(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/firewall/actions/restore`, request.json)
                .then(response => {
                return new edge_gateway_firewall_1.EdgeGatewayFirewall(response.data);
            });
        });
    }
    /**
     * Retrieve the edge gateway's NAT restore points.
     * @returns {Promise<Array<NATRestorePoint>>} promise Promise that resolves with the list of restore points
     */
    /* istanbul ignore next: autogenerated */
    getNATRestorePoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/nat/restore-points`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new nat_restore_point_1.NATRestorePoint(it));
            });
        });
    }
    /**
     * Retrieve the details for a particular edge gateway NAT restore point.
     * @returns {Promise<NATRestorePointDetails>} promise Promise that resolves with the restore point details
     */
    /* istanbul ignore next: autogenerated */
    getNATRestorePointDetails(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/nat/restore-points/${restorePointTime.getTime()}`)
                .then(response => {
                return new nat_restore_point_details_1.NATRestorePointDetails(response.data);
            });
        });
    }
    /**
     * Restores the edge gateway's NAT config to a specified restore point time.
     * @param request {RestoreNATRequest} the request body
     * @returns {Promise<EdgeGatewayNat>} promise Promise that resolves with the updated NAT config
     */
    /* istanbul ignore next: autogenerated */
    restoreNAT(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/nat/actions/restore`, request.json)
                .then(response => {
                return new edge_gateway_nat_1.EdgeGatewayNat(response.data);
            });
        });
    }
    /**
     * Get the L2 VPN for an edge gateway.
     * @param {boolean} showSensitiveData Show sensitive data
     * @returns {Promise<EdgeGatewayL2Vpn>} promise Promise that resolves with the Edge L2 VPN Configuration
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayL2VPN(showSensitiveData) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/l2vpn`, {
                params: {
                    showSensitiveData: showSensitiveData
                }
            })
                .then(response => {
                const json = response.data;
                return new edge_gateway_l2vpn_1.EdgeGatewayL2Vpn(json);
            });
        });
    }
    /**
     * Update the L2 VPN for an edge gateway.
     * @param {EdgeGatewayL2VpnUpdateRequest} edgeGatewayL2VPNUpdateRequest
     * @returns {Promise<EdgeGatewayL2Vpn>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayL2VPN(edgeGatewayL2VPNUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/l2vpn`, edgeGatewayL2VPNUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_l2vpn_1.EdgeGatewayL2Vpn(json);
            });
        });
    }
    /**
     * Retrieve the edge gateway's routing.
     * @returns {Promise<EdgeGatewayRouting>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayRouting() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/routing`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_routing_1.EdgeGatewayRouting(json);
            });
        });
    }
    /**
     * Update the edge gateway's routing.
     * @param {EdgeGatewayRoutingUpdateRequest} edgeGatewayRoutingUpdateRequest
     * @returns {Promise<EdgeGatewayRouting>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayRouting(edgeGatewayRoutingUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/routing`, edgeGatewayRoutingUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_routing_1.EdgeGatewayRouting(json);
            });
        });
    }
    /**
     * Update the edge gateway's routing BGP configuration.
     * @param {RoutingBGPConfigUpdateRequest} edgeGatewayRoutingBGPConfigUpdateRequest
     * @returns {Promise<RoutingBGPConfig>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayRoutingBGPConfig(edgeGatewayRoutingBGPConfigUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/routing/bgp-config`, edgeGatewayRoutingBGPConfigUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new routing_bgp_config_1.RoutingBGPConfig(json);
            });
        });
    }
    /**
     * Update the edge gateway's routing global configuration.
     * @param {RoutingGlobalConfigUpdateRequest} edgeGatewayRoutingGlobalConfigUpdateRequest
     * @returns {Promise<RoutingGlobalConfig>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayRoutingGlobalConfig(edgeGatewayRoutingGlobalConfigUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/routing/global-config`, edgeGatewayRoutingGlobalConfigUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new routing_global_config_1.RoutingGlobalConfig(json);
            });
        });
    }
    /**
     * Update the edge gateway's routing OSPF configuration.
     * @param {RoutingOSPFConfigUpdateRequest} edgeGatewayRoutingOSPFConfigUpdateRequest
     * @returns {Promise<RoutingOSPFConfig>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayRoutingOSPFConfig(edgeGatewayRoutingOSPFConfigUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/routing/ospf-config`, edgeGatewayRoutingOSPFConfigUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new routing_ospf_config_1.RoutingOSPFConfig(json);
            });
        });
    }
    /**
     * Update the edge gateway's routing static configuration.
     * @param {RoutingStaticConfigUpdateRequest} edgeGatewayRoutingStaticConfigUpdateRequest
     * @returns {Promise<RoutingStaticConfig>}
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayRoutingStaticConfig(edgeGatewayRoutingStaticConfigUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/routing/static-config`, edgeGatewayRoutingStaticConfigUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new routing_static_config_1.RoutingStaticConfig(json);
            });
        });
    }
    /**
     * Get the list of certificates for an edge gateway.
     * @returns {Promise<Array<Certificate>>}
     */
    /* istanbul ignore next: autogenerated */
    getCertificates() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/certificates`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new certificate_1.Certificate(it));
            });
        });
    }
    /**
     * Create a certificate for an edge gateway.
     * @param {CertificateCreateRequest} createRequest Certificate create request object.
     * @returns {Promise<Certificate>} promise Resolves with the certificate created.
     */
    /* istanbul ignore next: autogenerated */
    createCertificate(createRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/certificates`, createRequest.json)
                .then(response => {
                const json = response.data;
                return new certificate_1.Certificate(json);
            });
        });
    }
    /**
     * Import a certificate or a certificate chain against a certificate signing request.
     * @param {string} csrId Csr ID (e.g. csr-25).
     * @param {CertificateCreateRequest} importRequest Certificate import request.
     * @returns {Promise<Certificate>} promise Resolves with the certificate created.
     */
    /* istanbul ignore next: autogenerated */
    createSignedCertificate(csrId, importRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/certificate-signing-requests/${csrId}/actions/import-signed-certificate`, importRequest.json)
                .then(response => {
                const json = response.data;
                return new certificate_1.Certificate(json);
            });
        });
    }
    /**
     * Delete a certificate from an edge gateway.
     * @param {string} certificateId Cetrificate ID
     * @returns {Promise<void>} promise Resolves with void when certificate is deleted.
     */
    /* istanbul ignore next: autogenerated */
    deleteCertificate(certificateId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/edge-gateways/${this.uuid}/certificates/${certificateId}`)
                .then(() => undefined);
        });
    }
    /**
     * Get the list of certificate signing requests (CSR) for an edge gateway.
     * @returns {Promise<Array<CSR>>} promise Resolves with the list of CSR.
     */
    /* istanbul ignore next: autogenerated */
    getCSRs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/certificate-signing-requests`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new csr_1.CSR(it));
            });
        });
    }
    /**
     * Create a certificate signing request (CSR) for an edge gateway.
     * @param {CSRCreateRequest} csrCreateRequest CSR create request.
     * @returns {Promise<CSR>} promise Resolves with the CSR created.
     */
    /* istanbul ignore next: autogenerated */
    createCSR(csrCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/certificate-signing-requests`, csrCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new csr_1.CSR(json);
            });
        });
    }
    /**
     * Delete a certificate signing request (CSR) from an edge gateway.
     * @param {string} csrId Csr ID (e.g. csr-25).
     * @returns {Promise<void>} promise Resolves with void when CSR is deleted.
     */
    /* istanbul ignore next: autogenerated */
    deleteCSR(csrId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/edge-gateways/${this.uuid}/certificate-signing-requests/${csrId}`)
                .then(() => undefined);
        });
    }
    /**
     * Create a self-signed certificate on an edge gateway.
     * @param {string} csrId Csr ID (e.g. csr-25).
     * @param {SelfSignCertificateRequest} selfSignCertificateRequest The self sign certificate request.
     * @returns {Promise<Certificate>} promise Resolves with self sign certificate created.
     */
    /* istanbul ignore next: autogenerated */
    createSelfSignedCertificate(csrId, selfSignCertificateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/certificate-signing-requests/${csrId}/actions/generate-self-signed-certificate`, selfSignCertificateRequest.json)
                .then(response => {
                const json = response.data;
                return new certificate_1.Certificate(json);
            });
        });
    }
    /**
     * Get the list of certificate revocation lists (CRLs) for an edge gateway.
     * @returns {Promise<Array<CRL>>} promise Promise that resolves with the list of CRLs.
     */
    /* istanbul ignore next: autogenerated */
    getCRLs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/certificate-revocation-lists`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new crl_1.CRL(it));
            });
        });
    }
    /**
     * Create a certificate revocation list (CRL) for an edge gateway.
     * @param {CertificateCreateRequest} crlCreateRequest
     * @returns {Promise<CRL>} Resolves with the CRL created.
     */
    /* istanbul ignore next: autogenerated */
    createCRL(crlCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/edge-gateways/${this.uuid}/certificate-revocation-lists`, crlCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new crl_1.CRL(json);
            });
        });
    }
    /**
     * Delete a certificate revocation list (CRL) from an edge gateway.
     * @param {string} crlId The CRL id (e.g. crl-25)
     * @returns {Promise<void>} promise Resolves with void when CRL is deleted.
     */
    /* istanbul ignore next: autogenerated */
    deleteCRL(crlId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/edge-gateways/${this.uuid}/certificate-revocation-lists/${crlId}`)
                .then(() => undefined);
        });
    }
    /**
     * Get the IPsec VPN configuration for current Edge.
     * @param {boolean} showSensitiveData Show sensitive data.
     * @returns {Promise<EdgeGatewayIPsec>} promise Promise that resolves with the edge gateway IPsec VPN configuration.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayIPsec(showSensitiveData) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/ipsec`, {
                params: {
                    showSensitiveData: showSensitiveData
                }
            })
                .then(response => {
                const json = response.data;
                return new edge_gateway_ipsec_1.EdgeGatewayIPsec(json);
            });
        });
    }
    /**
     * Update the IPsec VPN configuration for current Edge.
     * @param {EdgeGatewayIPsecUpdateRequest} edgeGatewayIpsecUpdateRequest
     * @returns {Promise<EdgeGatewayIPsec>} promise Promise that resolves with the updated IPsec VPN configuration.
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewayIPsec(edgeGatewayIpsecUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/ipsec`, edgeGatewayIpsecUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_ipsec_1.EdgeGatewayIPsec(json);
            });
        });
    }
    /**
     * Get the Syslog settings for current edge gateway.
     * @returns {Promise<EdgeGatewaySyslog>} promise Promise that resolves with Syslog configuration.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewaySyslog() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/syslog`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_syslog_1.EdgeGatewaySyslog(json);
            });
        });
    }
    /**
     * Update the Syslog settings for current edge gateway.
     * @param {EdgeGatewaySyslogUpdateRequest} updateRequest Syslog update request
     * @returns {Promise<EdgeGatewaySyslog>} promise Promise that resolves with updated Syslog configuration.
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewaySyslog(updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/syslog`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_syslog_1.EdgeGatewaySyslog(json);
            });
        });
    }
    /**
     * Get the SSH Settings for current edge gateway.
     * @returns {Promise<EdgeGatewaySSHSettings>} promise Promise that resolves with SSH Settings.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewaySSHSettings() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/ssh-settings`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_ssh_settings_1.EdgeGatewaySSHSettings(json);
            });
        });
    }
    /**
     * Update the SSH Settings for current edge gateway.
     * @param {EdgeGatewaySSHSettingsUpdateRequest} updateRequest SSH settings update request
     * @returns {Promise<EdgeGatewaySSHSettings>} promise Promise that resolves with updated SSH settings.
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewaySSHSettings(updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/ssh-settings`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_ssh_settings_1.EdgeGatewaySSHSettings(json);
            });
        });
    }
    /**
     * Get the SSL VPN configuration for current edge gateway.
     * @returns {Promise<EdgeGatewaySslVpn>} promise Promise that resolves with SSL VPN configuration object.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewaySslVpn() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/sslvpn`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_ssl_vpn_1.EdgeGatewaySslVpn(json);
            });
        });
    }
    /**
     * Update the SSL VPN configuration for current edge gateway.
     * @param {EdgeGatewaySSLVPNUpdateRequest} edgeGatewaySSLVPNUpdateRequest SSL VPN update request.
     * @returns {Promise<EdgeGatewaySSLVPN>} promise Promise that resolves with the updated SSL VPN configuration object.
     */
    /* istanbul ignore next: autogenerated */
    updateEdgeGatewaySslVpn(edgeGatewaySslVpnUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/edge-gateways/${this.uuid}/sslvpn`, edgeGatewaySslVpnUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new edge_gateway_ssl_vpn_1.EdgeGatewaySslVpn(json);
            });
        });
    }
    /**
     * Get the SSL VPN Statistics for current edge gateway.
     * @returns {Promise<EdgeGatewaySslVpn>} promise Promise that resolves with SSL VPN configuration object.
     */
    /* istanbul ignore next: autogenerated */
    getEdgeGatewayL2VpnStatistics() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/edge-gateways/${this.uuid}/l2vpn-statistics`)
                .then(response => {
                const json = response.data;
                return new edge_gateway_l2vpn_statistics_1.EdgeGatewayL2vpnStatistics(json);
            });
        });
    }
}
exports.Edge = Edge;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalNetwork = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const task_1 = __webpack_require__(10);
const abstract_network_1 = __webpack_require__(207);
/**
 * Internal Network.
 */
class InternalNetwork extends abstract_network_1.AbstractNetwork {
    constructor(_json) {
        super(_json);
    }
    /**
     * Gets an internal network by UUID.
     * @param uuid internal network UUID
     * @returns {Promise<InternalNetwork>} promise that resolves with the internal network
     */
    static getInternalNetwork(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/org-vdc-networks/${uuid}`)
                .then(response => {
                const json = response.data;
                return new InternalNetwork(json);
            });
        });
    }
    get entityType() {
        return 'IAAS_INTERNAL_NETWORK';
    }
    /**
     * Gets the UUID of the edge gateway that the network is connected to, if its a NAT routed network or null otherwise.
     * @returns {string|null} edge gateway UUID or null
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Indicates whether this network is shared with other vDCs within the same organization.
     * @returns {boolean} value
     */
    get shared() {
        return this._json.shared;
    }
    /**
     *
     * @returns {boolean} value
     */
    get retainNetInfoAcrossDeployments() {
        return this._json.retain_net_info_across_deployments;
    }
    /**
     * Indicates whether this network is a sub-interface
     * @returns {boolean} value
     */
    get subInterface() {
        return this._json.sub_interface;
    }
    /**
     * Indicates whether this network is a distributed interface
     * @returns {boolean} value
     */
    get distributedInterface() {
        return this._json.distributed_interface;
    }
    /**
     * Indicates whether guest VLAN is allowed for this network
     * @returns {boolean} value
     */
    get guestVlanAllowed() {
        return this._json.guest_vlan_allowed;
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {InternalNetworkJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the internal network data by retrieving it from the API again.
     * @returns {Promise<InternalNetwork>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/org-vdc-networks/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Updates the configuration of the network.
     * @param {OrgVdcNetworkUpdateRequest} request the update request
     * @returns {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    updateOrgVdcNetwork(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/org-vdc-networks/${this.uuid}`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Deletes the network.
     * @returns {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    deleteOrgVdcNetwork() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/org-vdc-networks/${this.uuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Convert org vdc network to a distributed interface.
     * @return {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    convertToDistributedInterface() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/org-vdc-networks/${this.uuid}/actions/convert-network-to-distributed-interface`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Convert org vdc network to a sub interface.
     * @return {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    convertToSubInterface() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/org-vdc-networks/${this.uuid}/actions/convert-network-to-sub-interface`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Convert org vdc network to an internal interface.
     * @return {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    convertToInternalInterface() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/org-vdc-networks/${this.uuid}/actions/convert-network-to-internal-interface`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
}
exports.InternalNetwork = InternalNetwork;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PerfCounter = void 0;
class PerfCounter {
    constructor(firstParam, name, type) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                group: firstParam,
                name: name,
                type: type
            };
        }
        else if (firstParam instanceof PerfCounter) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns group of current counter
     * @returns {string}
     */
    get group() {
        return this._json.group;
    }
    /**
     * Returns name of current counter
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Returns type of current counter
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {PerfCounterJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.PerfCounter = PerfCounter;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PerfSamplesSeries = void 0;
const perf_counter_1 = __webpack_require__(73);
const perf_sample_1 = __webpack_require__(430);
/**
 * Perf Sample Series class.
 */
class PerfSamplesSeries {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Returns the uuid of the entity that belongs to current sample series
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Returns the summary for the current sample series
     * @returns {string}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Returns the group of the current sample series
     * @returns {string}
     */
    get group() {
        return this._json.group;
    }
    /**
     * Returns the name of the current sample series
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Returns the type of the current sample series
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Returns the counter of the current sample series
     * @returns {PerfCounter}
     */
    get counter() {
        return new perf_counter_1.PerfCounter({
            group: this._json.group,
            name: this._json.name,
            type: this._json.type
        });
    }
    /**
     * Returns the interval of the current sample series
     * @returns {number}
     */
    get interval() {
        return this._json.interval;
    }
    /**
     * Returns the unit for samples of the current series
     * @returns {string}
     */
    get unit() {
        return this._json.unit;
    }
    /**
     * Returns samples of the current series
     * @returns {Array<PerfSample>}
     */
    get samples() {
        return this._json.samples.map(s => new perf_sample_1.PerfSample(s));
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {PerfSampleSerieJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.PerfSamplesSeries = PerfSamplesSeries;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetwork = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const abstract_network_1 = __webpack_require__(207);
const task_1 = __webpack_require__(10);
const vapp_network_dhcp_service_1 = __webpack_require__(431);
const vapp_network_firewall_1 = __webpack_require__(432);
const vapp_network_interface_1 = __webpack_require__(434);
const vapp_network_nat_service_1 = __webpack_require__(435);
const vapp_network_static_routing_service_1 = __webpack_require__(438);
/**
 * vApp Network.
 */
class VappNetwork extends abstract_network_1.AbstractNetwork {
    constructor(_json) {
        super(_json);
    }
    /**
     * Gets an vApp network by UUID.
     * @param uuid vApp network UUID
     * @returns {Promise<VappNetwork>} promise that resolves with the vApp network
     */
    static getVappNetwork(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${uuid}`)
                .then(response => {
                const json = response.data;
                return new VappNetwork(json);
            });
        });
    }
    /**
     * Gets the entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return 'IAAS_VAPP_NETWORK';
    }
    /**
     * Gets the UUID of the vApp that the network is associated with.
     * @returns {string} vApp UUID
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * If this is a NAT Routed network, gets the external IP of the router for the vApp Network edge gateway.
     * @returns {string} IP address
     */
    get routerExternalIp() {
        return this._json.router_external_ip;
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VappNetworkJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the vApp network data by retrieving it from the API again.
     * @returns {Promise<VappNetwork>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Remove a network from the given Vapp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    removeNetworkFromVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vapp-networks/${this.uuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update a vApp network's properties. Note that vCloud Director changes the
     * UUID of the network when it is updated.
     * @param {VappNetworkUpdateRequest} vappNetwork VappNetwork update request
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateVappNetwork(vappNetwork) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vapp-networks/${this.uuid}`, vappNetwork.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get DHCP service for a given vapp network.
     * @returns {Promise<VappNetworkDHCPService>} promise Promise that resolve with VappNetworkDHCPService
     */
    /* istanbul ignore next: autogenerated */
    getDHCPService() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}/dhcp`)
                .then(response => {
                const json = response.data;
                return new vapp_network_dhcp_service_1.VappNetworkDHCPService(json);
            });
        });
    }
    /**
     *
     * @param {VappNetworkDHCPServiceUpdateRequest} dhcpService
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateDHCPService(dhcpService) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapp-networks/${this.uuid}/actions/update-dhcp`, dhcpService.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get static routing service for a given vapp network.
     * @returns {Promise<VappNetworkStaticRoutingService>} promise Promise that resolves with a
     * VappNetworkStaticRoutingService
     */
    /* istanbul ignore next: autogenerated */
    getStaticRouting() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}/static-routing`)
                .then(response => {
                const json = response.data;
                return new vapp_network_static_routing_service_1.VappNetworkStaticRoutingService(json);
            });
        });
    }
    /**
     * Get vApp Network VM interfaces that are tied to this vApp network.
     *
     * This is a list of VM vnic interfaces that are currently tied to this vApp
     * network. If the <em>ip_translation_mapped</em>field is true it means the
     * interface already has and IP translation rule currently mapped via NAT.
     * Other fields return such as <em>vm_local_id</em> and <em>vnic_id</em> point
     * to which VM the interface is attached to and in what VNIC spot.
     * @returns {Promise<Array<VappNetworkInterface>>} promise Promise that resolves with a list of VappNetworkInterface
     */
    /* istanbul ignore next: autogenerated */
    getVmInterfaces() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}/vm-interfaces`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_network_interface_1.VappNetworkInterface(it));
            });
        });
    }
    /**
     * Update the static routing service for a given vapp network.
     * @param {VappNetworkStaticRoutingServiceUpdateRequest} staticRoutingService vapp network static routing service
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateStaticRouting(staticRoutingService) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapp-networks/${this.uuid}/actions/update-static-routing`, staticRoutingService.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get NAT service for a given vapp network
     * @returns {Promise<VappNetworkNATService>}
     */
    /* istanbul ignore next: autogenerated */
    getNATService() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}/nat`)
                .then(response => {
                const json = response.data;
                return new vapp_network_nat_service_1.VappNetworkNATService(json);
            });
        });
    }
    /**
     * Get a firewall for a given vapp network.
     * @returns {Promise<VappNetworkFirewall>} promise Promise that resolves with a VappNetworkFirewall
     */
    /* istanbul ignore next: autogenerated */
    getFirewall() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapp-networks/${this.uuid}/firewall`)
                .then(response => {
                const json = response.data;
                return new vapp_network_firewall_1.VappNetworkFirewall(json);
            });
        });
    }
    /**
     * Update the NAT service for a given vapp network
     * @param {VappNetworkNATServiceUpdateRequest} natService vapp network nat service
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateNAT(natService) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapp-networks/${this.uuid}/actions/update-nat`, natService.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update a firewall for a given vApp Network.
     * @param {VappNetworkFirewallUpdateRequest} firewall vapp firewall
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateFirewall(firewall) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapp-networks/${this.uuid}/actions/update-firewall`, firewall.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
}
exports.VappNetwork = VappNetwork;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Vapp = void 0;
const tslib_1 = __webpack_require__(5);
const internal_compatibility_1 = __webpack_require__(248);
const iland_1 = __webpack_require__(7);
const vapp_backup_status_detail_1 = __webpack_require__(271);
const bill_1 = __webpack_require__(39);
const billing_summary_1 = __webpack_require__(70);
const entity_1 = __webpack_require__(9);
const metadata_1 = __webpack_require__(38);
const product_section_1 = __webpack_require__(143);
const has_snapshot_1 = __webpack_require__(306);
const snapshot_1 = __webpack_require__(145);
const storage_profile_1 = __webpack_require__(86);
const vapp_integrated_backup_status_detail_1 = __webpack_require__(441);
const entity_with_perf_samples_1 = __webpack_require__(91);
const task_1 = __webpack_require__(10);
const vapp_network_1 = __webpack_require__(75);
const vm_1 = __webpack_require__(41);
const vapp_resource_summary_1 = __webpack_require__(216);
const vm_resource_summary_map_response_1 = __webpack_require__(454);
const vapp_download_detail_1 = __webpack_require__(455);
const vapp_startup_section_item_1 = __webpack_require__(456);
/**
 * Virtual Application.
 */
class Vapp extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
        // EntityWithPerfSamples mixin properties and methods
        this.apiPrefix = '/vapps';
    }
    /**
     * Gets a vApp by UUID.
     * @param uuid vApp UUID
     * @returns {Promise<Vapp>} promise that resolves with the vApp
     */
    static getVapp(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Vapp(json);
            });
        });
    }
    get entityType() {
        return 'IAAS_VAPP';
    }
    /**
     * Indicates whether this vApp is currently deployed.
     * @returns {boolean} value
     */
    get deployed() {
        return this._json.deployed;
    }
    /**
     * Gets the vApps current power status.
     * @returns {VappPowerStatus} power status
     */
    get powerStatus() {
        if (this._json.deployed && this._json.status === 'POWERED_OFF') {
            return 'PARTIALLY_POWERED_OFF';
        }
        else {
            return this._json.status;
        }
    }
    /**
     * Gets the storage profiles that are associated with this VM
     * @returns {Array<string>} array of storage profile UUIDs
     */
    get storageProfiles() {
        return this._json.storage_profiles;
    }
    /**
     * Gets the runtime lease setting, in seconds.
     * @returns {number} runtime lease
     */
    get runtimeLease() {
        return this._json.runtime_lease_in_seconds;
    }
    /**
     * Gets the storage lease setting, in seconds.
     * @returns {number} storage lease
     */
    get storageLease() {
        return this._json.storage_lease_in_seconds;
    }
    /**
     * Gets the expiration date of the runtime lease, if one is currently active.
     * @returns {Date} runtime lease expiration date
     */
    get runtimeLeaseExpirationDate() {
        return this._json.runtime_expire === null ? null : new Date(this._json.runtime_expire);
    }
    /**
     * Gets the expiration date of the storage lease, if one is currently active.
     * @returns {Date} storage lease expiration date
     */
    get storageLeaseExpirationDate() {
        return this._json.storage_expire === null ? null : new Date(this._json.storage_expire);
    }
    /**
     * Gets the UUID of the vDC that this vApp is associated with.
     * @returns {string} vDC UUID
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Gets the UUID of the Org that this vApp is associated with.
     * @returns {string} org UUID
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Gets the datacenter location identifier for the vApp.
     * @returns {string} datacenter location ID
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the vApps description.
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the vCloud HREF of the vApp.
     * @returns {string} vCloud HREF
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Gets the date that this vApp was created.
     * @returns {Date} creation date
     */
    get creationDate() {
        return new Date(this._json.created_date);
    }
    /**
     * Indicates whether this vApp is currently in the expired items bin.
     * @returns {boolean} value
     */
    get expired() {
        return this._json.is_expired;
    }
    /**
     * Get Vapp's Vdc Allocation Model
     * @returns {VdcAllocationModel} allocation model
     */
    get allocationModel() {
        return this._json.allocation_model;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VappJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the vApp data by retrieving it from the API again.
     * @returns {Promise<Vapp>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Update the vApp name.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateName(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-name`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the vApp description.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateDescription(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-description`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets the vApps child VMs.
     * @returns {Promise<Vm[]>} promise that resolves with an array of child VMs
     */
    getVms() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/vms`)
                .then(response => {
                const json = response.data.data;
                return json.map(vmJson => new vm_1.Vm(vmJson));
            });
        });
    }
    /**
     * Gets the vApps child vApp Networks.
     * @returns {Promise<VappNetwork[]>} promise that resolves with an array of child vApp Networks
     */
    getVappNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(vappNetJson => new vapp_network_1.VappNetwork(vappNetJson));
            });
        });
    }
    /**
     * Creates VMs in vApp.
     * @param {Array} buildVmRequestList
     * @returns {Promise<Task>} task response
     */
    buildVms(buildVmRequestList) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/build-vms`, buildVmRequestList)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Delete the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    deleteVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vapps/${this.uuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Power on the vApp.
     * @param {boolean} forceGuestCustomization Optional param to force guest re-customization on restart
     * defaults to false
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    powerOnVapp(forceGuestCustomization) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/poweron`, {
                params: {
                    forceGuestCustomization: forceGuestCustomization
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Power off the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    powerOffVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/poweroff`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Managed shutdown of the vApp using the vApp's startup section settings.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    managedShutdown() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/managed-shutdown`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Suspend the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    suspendVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/suspend`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Shutdown the vApp.
     * This action requires VMWare Tools to be installed on each VM in the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    shutdownVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/shutdown`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Reset the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    resetVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/reset`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Reboot the vApp.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    rebootVapp() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/reboot`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the resource summary for the given vApp.
     * @returns {Promise<VappResourceSummary>} promise Promise that resolves with VappResourceSummary
     */
    /* istanbul ignore next: autogenerated */
    getSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/summary`)
                .then(response => {
                const json = response.data;
                return new vapp_resource_summary_1.VappResourceSummary(json);
            });
        });
    }
    /**
     * Get the snapshot for the given vApp.
     * @returns {Promise<Snapshot>} promise Promise that resolves with Snapshot
     */
    /* istanbul ignore next: autogenerated */
    getSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/snapshot`)
                .then(response => {
                const json = response.data;
                return new snapshot_1.Snapshot(json);
            });
        });
    }
    /**
     * Get whether the given vApp has a snapshot.
     * @returns {Promise<HasSnapshot>} promise Promise that resolves with HasSnapshot
     */
    /* istanbul ignore next: autogenerated */
    hasVappSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/has-snapshot`)
                .then(response => {
                const json = response.data;
                return new has_snapshot_1.HasSnapshot(json);
            });
        });
    }
    /**
     * Create a snapshot.
     * @param {SnapshotCreateRequest} request the snapshot creation request
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    createSnapshot(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/create-snapshot`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore a snapshot.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    restoreSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/restore-snapshot`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Remove a snapshot.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    removeSnapshot() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/remove-snapshot`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets the vApp's metadata.
     * @returns {Promise<Metadata<MetadataType>[]>}
     * @throws Error if type not found for metadata
     */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Updates the vApp's metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const metadataJson = metadata.map(m => {
                return m.json;
            });
            return iland_1.Iland.getHttp()
                .put(`/vapps/${this.uuid}/metadata`, metadataJson)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Deletes a metadata entry.
     * @param {string} metadataKey the key of the metadata entry to delete
     * @returns {Promise<Task>} task promise
     */
    deleteMetadata(metadataKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vapps/${this.uuid}/metadata/${metadataKey}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Returns vApp Billing for a given invoice period.
     * If month and year are not explicitly supplied the current invoice period is used.
     * @param {number} year the invoice period year (defaults to current year)
     * @param {number} month the invoice period month (defaults to the current month) must be in range 1-12
     * @returns {Promise<Bill>} promise Promise that resolves with billing for the vApp and given invoice period
     */
    /* istanbul ignore next: autogenerated */
    getBilling(year, month) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/billing`, {
                params: {
                    year: year,
                    month: month
                }
            })
                .then(response => {
                const json = response.data;
                return new bill_1.Bill(json);
            });
        });
    }
    /**
     * Get the current billing for a vApp.
     * @returns {Promise<BillingSummary>} promise Promise that resolves with vapp billing
     */
    /* istanbul ignore next: autogenerated */
    getCurrentBilling() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/billing-summary`)
                .then(response => {
                const json = response.data;
                return new billing_summary_1.BillingSummary(json);
            });
        });
    }
    /**
     *  Get the startup section for a particular Vapp.
     * @returns {Promise<Array<VappStartupSectionItem>>} promise Promise that resolves with a list of
     * VappStartupSectionItem
     */
    /* istanbul ignore next: autogenerated */
    getStartupSection() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/startup-section`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_startup_section_item_1.VappStartupSectionItem(it));
            });
        });
    }
    /**
     * Add a vapp-network to vapp.
     * @param {VappNetworkCreateRequest} vappNetworkCreateRequest
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    addVappNetwork(vappNetworkCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/add-vapp-network`, vappNetworkCreateRequest.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Copy a vApp.
     * @param {VappCopyMoveRequest} the request for the vApp copy
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    copyVapp(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/copy`, spec.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Move a vApp.
     * @param {VappCopyMoveRequest} the request for the vApp move
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    moveVapp(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/move`, spec.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update a vApp runtime lease.
     * @param {RuntimeLeaseUpdateRequest} runtime lease update request
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateRuntimeLease(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-runtime-lease`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update a vApp storage lease.
     * @param {StorageLeaseUpdateRequest} storage lease update request
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateStorageLease(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-storage-lease`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update the startup section of a particular Vapp.
     * @param {Array<VappStartupSectionItemRequest>} startupSection
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    updateStartupSection(startupSection) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-startup-section`, startupSection.map(section => section.json))
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Enable the download of the vapp. Returns a TaskResponse which monitors the
     * progress of the download.
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    enableDownload() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/enable-download`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets download details for the vApp. Details include whether the vapp is
     * enabled for download, and, if enabled, the size and name of the download.
     * @returns {Promise<VappDownloadDetails>} promise Promise that resolves with VappDownloadDetails
     */
    /* istanbul ignore next: autogenerated */
    getDownloadDetails() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/download-details`)
                .then(response => {
                const json = response.data;
                return new vapp_download_detail_1.VappDownloadDetails(json);
            });
        });
    }
    /**
     * Get vm resource summary map.
     * @returns {Promise<VmResourceSummaryMapResponse>}
     */
    /* istanbul ignore next: autogenerated */
    getVmResourceSummaryMap() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/vm-summary-map`)
                .then(response => {
                const json = response.data;
                return new vm_resource_summary_map_response_1.VmResourceSummaryMapResponse(json);
            });
        });
    }
    /**
     * Adds an org vDC network to the vApp.
     * @param {string} networkUuid the UUID of the org vDC network
     * @returns {Promise<Task>} a promise that resolves with the task details
     */
    /* istanbul ignore next: autogenerated */
    addOrgVdcNetwork(networkUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/org-vdc-network/${networkUuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the vApp's product sections
     * @returns {Promise<Array<ProductSection>>} a promise that resolves with the product sections of the vApp
     */
    /* istanbul ignore next: autogenerated */
    getProductSections() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/product-sections`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new product_section_1.ProductSection(it));
            });
        });
    }
    /**
     * Update the vApp's product section properties
     * @param request {UpdateProductSectionRequest}
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateProductSections(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/update-product-section-properties`, request.json)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Gets the vApp's available storage profiles.
     * @returns {Promise<Array<StorageProfile>>} a promise that resolves with the available storage profiles
     */
    /* istanbul ignore next: autogenerated */
    getAvailableStorageProfiles() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/available-storage-profiles`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new storage_profile_1.StorageProfile(it));
            });
        });
    }
    /**
     * Retrieve a CSV report email with all event history for a given vApp.
     * @returns {Promise<void>} there is no response object.
     */
    emailEventHistory(email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vapps/${this.uuid}/actions/email-event-history`, {
                email: email
            })
                .then(() => undefined);
        });
    }
    /**
     * Gets the vApp's integrated backup status.
     * @returns {Promise<VappIntegratedBackupStatusDetail>}
     */
    /* istanbul ignore next: autogenerated */
    getIntegratedBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/integrated-backup-status`)
                .then(response => {
                const json = response.data;
                return new vapp_integrated_backup_status_detail_1.VappIntegratedBackupStatusDetail(json);
            });
        });
    }
    /**
     * Gets the vApp's backup status.
     * @return {Promise<VappBackupStatusDetail>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vapps/${this.uuid}/backup-status`)
                .then(response => {
                const json = response.data;
                return new vapp_backup_status_detail_1.VappBackupStatusDetail(json);
            });
        });
    }
}
exports.Vapp = Vapp;
internal_compatibility_1.applyMixins(Vapp, [entity_with_perf_samples_1.EntityWithPerfSamples]);


/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Immediate; });
/* unused harmony export TestTools */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeOfDay = void 0;
/**
 * Backup Group Disk Unit.
 */
/* istanbul ignore next: autogenerated */
class TimeOfDay {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets an (0-23) hour in a day.
     * @returns {number} hour
     */
    get hour() {
        return this._json.hour;
    }
    /**
     * Gets a (0-59) minute in an hour.
     * @returns {number} minute
     */
    get minute() {
        return this._json.minute;
    }
    /**
     * Gets the json representation of this class.
     * @returns {TimeOfDayJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Gets the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TimeOfDay = TimeOfDay;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupStatusDescriptor = void 0;
/**
 * Backup Group Status Descriptor.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupStatusDescriptor {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get backup status.
     * @returns {BackupConfigStatus}
     */
    get backupStatus() {
        return this._json.backup_status;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupStatusDescriptorJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupStatusDescriptor = BackupGroupStatusDescriptor;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRestoreTask = void 0;
const restore_task_object_1 = __webpack_require__(274);
const restore_task_object_state_1 = __webpack_require__(275);
const vm_recovery_options_1 = __webpack_require__(276);
/**
 * Backup restore task.
 */
/* istanbul ignore next: autogenerated */
class BackupRestoreTask {
    constructor(_backupRestoreTaskJson) {
        this._backupRestoreTaskJson = _backupRestoreTaskJson;
    }
    /**
     * Get task name.
     * @returns {string}
     */
    get taskName() {
        return this._backupRestoreTaskJson.task_name;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._backupRestoreTaskJson.location_id;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._backupRestoreTaskJson.company_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._backupRestoreTaskJson.org_uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._backupRestoreTaskJson.vdc_uuid;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._backupRestoreTaskJson.uid;
    }
    /**
     * Get the UID of the associated backup group.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._backupRestoreTaskJson.backup_group_uid;
    }
    /**
     * Get start time.
     * @returns {number}
     */
    get startTime() {
        return this._backupRestoreTaskJson.start_time;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        return this._backupRestoreTaskJson.end_time || null;
    }
    /**
     * Get type.
     * @returns {RestoreTaskType}
     */
    get type() {
        return this._backupRestoreTaskJson.type;
    }
    /**
     * Get status.
     * @returns {RestoreTaskStatus}
     */
    get status() {
        return this._backupRestoreTaskJson.status;
    }
    /**
     * Get error message.
     * @returns {string | null}
     */
    get errorMessage() {
        return this._backupRestoreTaskJson.error_message || null;
    }
    /**
     * Get objects.
     * @returns {Array<RestoreTaskObject>}
     */
    get objects() {
        return this._backupRestoreTaskJson.objects.map(it => new restore_task_object_1.RestoreTaskObject(it));
    }
    /**
     * Get object states.
     * @returns {Array<RestoreTaskObjectState>}
     */
    get objectStates() {
        return this._backupRestoreTaskJson.object_states.map(it => new restore_task_object_state_1.RestoreTaskObjectState(it));
    }
    /**
     * Get the VM recovery options that were selected for the restore.
     * Only applicable if the type of task is {RestoreTaskType.RESTORE_VMS}.
     */
    get vmRecoveryOptions() {
        return this._backupRestoreTaskJson.vm_recovery_options
            ? new vm_recovery_options_1.VmRecoveryOptions(this._backupRestoreTaskJson.vm_recovery_options)
            : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupRestoreTaskJson}
     */
    get json() {
        return Object.assign({}, this._backupRestoreTaskJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._backupRestoreTaskJson, undefined, 2);
    }
}
exports.BackupRestoreTask = BackupRestoreTask;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoverableFileSearchResult = void 0;
/**
 * Recoverable file search result.
 */
/* istanbul ignore next: autogenerated */
class RecoverableFileSearchResult {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get location id.
     * The ID of the location that the result is associated with.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get company id.
     * The ID of the company that the result is associated with.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get org uuid.
     * The UUID of the Org that the result is associated with.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vdc uuid.
     * The UUID of the vDC that the result is associated with.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get vapp uuid.
     * The UUID of the vApp that the result is associated with.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get vm uuid.
     * The UUID of the VM that the result is associated with.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get filename.
     * Specifies the name of the found file or folder.
     * @returns {string}
     */
    get filename() {
        return this._json.filename;
    }
    /**
     * Get is folder.
     * Specifies if the found item is a folder. If true, the found item is a folder.
     * @returns {boolean}
     */
    get isFolder() {
        return this._json.is_folder;
    }
    /**
     * Get backup group uid.
     * Specifies the UID of the backup group that is currently associated with the
     * object that contains the backed up file or folder.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get type.
     * Specifies the type of the file document such as DIRECTORY, FILE, etc.
     * @returns {FileSearchResultType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get vm name.
     * The name of the associated VM.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {RecoverableFileSearchResultJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RecoverableFileSearchResult = RecoverableFileSearchResult;


/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupedObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__[/* Subject */ "b"]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__[/* Subscription */ "a"]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_3__[/* Observable */ "a"]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_2__[/* Subscription */ "a"]));
//# sourceMappingURL=groupBy.js.map


/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return timestamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Timestamp; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


function timestamp(scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__[/* async */ "a"];
    }
    return Object(_map__WEBPACK_IMPORTED_MODULE_1__[/* map */ "a"])(function (value) { return new Timestamp(value, scheduler.now()); });
}
var Timestamp = /*@__PURE__*/ (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());

//# sourceMappingURL=timestamp.js.map


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.JpegImage = void 0;
/**
 * Jpeg Image Class
 */
class JpegImage {
    constructor(data) {
        this.data = data;
    }
    /**
     * Returns image as Uint8Array
     * @returns {Uint8Array} array Uint8Array
     */
    toUint8Array() {
        return new Uint8Array(this.data);
    }
    /**
     * Returns image as Base64 string
     * @returns {string} string Base64 string
     */
    toDataUrl() {
        return 'data:image/jpeg;base64,' + btoa(String.fromCharCode.apply(null, this.data));
    }
}
exports.JpegImage = JpegImage;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageProfile = void 0;
/**
 * Storage Profile.
 */
/* istanbul ignore next: autogenerated */
class StorageProfile {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default profile.
     * @returns {boolean}
     */
    get defaultProfile() {
        return this._json.default_profile;
    }
    /**
     * Get unit.
     * @returns {string}
     */
    get unit() {
        return this._json.unit;
    }
    /**
     * Get limit.
     * @returns {number}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * Get storage used in mb.
     * @returns {number}
     */
    get storageUsedInMb() {
        return this._json.storage_used_in_mb;
    }
    /**
     * Get the json representation of this class.
     * @returns {StorageProfileJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StorageProfile = StorageProfile;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Attribute = void 0;
/* istanbul ignore next: autogenerated */
class Attribute {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get key.
     * @returns {string}
     */
    get key() {
        return this._json.key;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {AttributeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Attribute = Attribute;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Organization = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const entity_1 = __webpack_require__(9);
const o365_backup_repository_1 = __webpack_require__(208);
const o365_device_code_1 = __webpack_require__(89);
const o365_group_1 = __webpack_require__(407);
const o365_job_1 = __webpack_require__(209);
const o365_marked_purge_mailbox_1 = __webpack_require__(428);
const o365_restore_session_1 = __webpack_require__(90);
const o365_sharepoint_site_1 = __webpack_require__(210);
const o365_team_1 = __webpack_require__(211);
const o365_user_1 = __webpack_require__(429);
/**
 * O365 Organization
 */
/* istanbul ignore next: autogenerated */
class O365Organization extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets a O365 Organization by UUID
     * @param uuid
     * @returns {Promise<O365Organization>} promise that resolves with a O365 Organization
     */
    static getO365Organization(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${uuid}`)
                .then(response => {
                const json = response.data;
                return new O365Organization(json);
            });
        });
    }
    /**
     * Get the O365 Organization entity type
     * @returns {EntityType}
     */
    get entityType() {
        return 'O365_ORGANIZATION';
    }
    /**
     * Gets the CRM of the O365 Organization
     * @returns {string}
     */
    get crm() {
        return this._json.crm;
    }
    /**
     * Gets the location id of the O365 Organization
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the contract uuid of the O365 Organization
     * @returns {string}
     */
    get contractUuid() {
        return this._json.contract_uuid;
    }
    /**
     * Gets the Type of the O365 Organization
     * @returns {O365OrganizationType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the region of the O365 Organization
     * @returns {O365OrganizationRegion}
     */
    get region() {
        return this._json.region;
    }
    /**
     * Get whether to use modern authentication.
     * @returns {boolean}
     */
    get useModernAuth() {
        return this._json.use_modern_auth;
    }
    /**
     * Get whether to use modern application only authentication.
     * @returns {boolean}
     */
    get useApplicationOnlyAuth() {
        return this._json.use_application_only_auth;
    }
    /**
     * Get the applicationId to use during modern app device code generation.
     * @returns {string}
     */
    get applicationId() {
        return this._json.application_id;
    }
    /**
     * Is O365 Organization backed up
     * @returns {boolean}
     */
    get isBackedUp() {
        return this._json.is_backed_up;
    }
    /**
     * Gets the first backup time of the O365 Organization
     * @returns {Date}
     */
    get firstBackupTime() {
        return this._json.first_backup_time;
    }
    /**
     * Gets the last backup time of the O365 Organization
     * @returns {Date}
     */
    get lastBackupTime() {
        return this._json.last_backup_time;
    }
    /**
     * Is the O365 Organization teams online
     * @returns {boolean}
     */
    get isTeamsOnline() {
        return this._json.is_teams_online;
    }
    /**
     * Get isTeamsChatOnline.
     * @returns {boolean | undefined}
     */
    get isTeamsChatOnline() {
        return this._json.is_teams_chat_online;
    }
    /**
     * Is the O365 Organization exchange online
     * @returns {boolean}
     */
    get isExchangeOnline() {
        return this._json.is_exchange_online;
    }
    /**
     * Is the O365 Organization sharePoint online
     * @returns {boolean}
     */
    get isSharePointOnline() {
        return this._json.is_share_point_online;
    }
    /**
     * Is O365 Organization in trial
     * @returns {boolean}
     */
    get isTrial() {
        return this._json.is_trial;
    }
    /**
     * Get the total number of backed up active users of account type User.
     * @returns {number}
     */
    get protectedActiveUsers() {
        return this._json.protected_active_users;
    }
    /**
     * Get the total number of backed up inactive users of account type User.
     * @returns {number}
     */
    get protectedInactiveUsers() {
        return this._json.protected_inactive_users;
    }
    /**
     * Get the total number of backed up users of account type User.
     * @returns {number}
     */
    get totalProtectedUsers() {
        return this._json.total_protected_users;
    }
    /**
     * Get the total number of backed up Group/Shared/Public users.
     * @returns {number}
     */
    get protectedSharedUsers() {
        return this._json.protected_shared_users;
    }
    /**
     * Get the total number of active users with account type User.
     * @returns {number}
     */
    get totalLicensedUsers() {
        return this._json.total_licensed_users;
    }
    /**
     * Get the total number of unprotected active users with account type User.
     * @returns {number}
     */
    get unprotectedLicensedUsers() {
        return this._json.unprotected_licensed_users;
    }
    /**
     * Get the number of reserved licenses (per the O365 Org's contract).
     * @returns {number}
     */
    get numberOfReservedLicenses() {
        return this._json.number_of_reserved_licenses;
    }
    /**
     * Get the number of licenses used by this O365 Org.
     * @returns {number}
     */
    get numberOfLicensesUsed() {
        return this._json.number_of_licenses_used;
    }
    /**
     * Get the licensed user count.
     * @returns {number}
     */
    get ilandLicensedUsers() {
        return this._json.iland_licensed_users;
    }
    /**
     * Get total users of the O365 Organization
     * @deprecated This O365 Org field is deprecated
     */
    get totalUsers() {
        return this._json.total_users;
    }
    /**
     * Get total backed up users of the O365 Organization
     * @deprecated This O365 Org field is deprecated
     */
    get totalBackedupUsers() {
        return this._json.total_backedup_users;
    }
    /**
     * Get total licenses consumed by O365 Organization
     * @deprecated This O365 Org field is deprecated
     * @returns {number}
     */
    get totalLicensesConsumed() {
        return this._json.total_licenses_consumed;
    }
    /**
     * Get total unprotected users of the O365 Organization
     * @deprecated This O365 Org field is deprecated
     */
    get unprotectedUsers() {
        return this._json.unprotected_users;
    }
    /**
     * Refreshes the O365 Organization data by retrieving it from the API again.
     * @returns {Promise<O365Organization>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Get O365Organization Jobs.
     * @returns {Promise<Array<O365Job>>}
     */
    /* istanbul ignore next: autogenerated */
    getJobs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/jobs`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_job_1.O365Job(it));
            });
        });
    }
    /**
     * Get O365 Organization's Inactive Restore Sessions
     * Ordered by creation time for the pagination
     * @param {number} page - page to get the restore sessions from. API page holds max 100 entries
     * @param {number} pageSize - how many restore sessions from a certain page to get, cannot get more than 100
     * @returns {Promise<Array<O365RestoreSession>>}
     */
    /* istanbul ignore next: autogenerated */
    getInactiveRestoreSessions(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/inactive-restore-sessions`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_restore_session_1.O365RestoreSession(it));
            });
        });
    }
    /**
     * Get O365 Organization's Active Restore Sessions
     * @returns {Promise<Array<O365RestoreSession>>}
     */
    /* istanbul ignore next: autogenerated */
    getActiveRestoreSessions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/active-restore-sessions`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_restore_session_1.O365RestoreSession(it));
            });
        });
    }
    /**
     * Start an O365 Restore Session
     * @param {O365RestoreSessionStartRequest} startRequest
     * @returns {Promise<O365RestoreSession>} the restore session created
     */
    /* istanbul ignore next: autogenerated */
    createRestoreSession(startRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-organizations/${this.uuid}/actions/start-restore-session`, startRequest.json)
                .then(response => {
                const json = response.data;
                return new o365_restore_session_1.O365RestoreSession(json);
            });
        });
    }
    /**
     * Get the paginated users for the Office 365 Organization
     * @param page
     * @param pageSize
     * @param searchUser
     * @returns {Promise<Array<O365User>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgUsers(page, pageSize, searchUser) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/users`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50,
                    searchUser: searchUser || undefined
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_user_1.O365User(it));
            });
        });
    }
    /**
     * Delete the O365 Organization
     * @returns {Promise}
     */
    /* istanbul ignore next: autogenerated */
    deleteOrg() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/o365-organizations/${this.uuid}`);
        });
    }
    /**
     * Get the O365 Organization's groups
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365Group>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgGroups(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/groups`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_group_1.O365Group(it));
            });
        });
    }
    /**
     * Create an o365 backup job for this organization
     * @param o365CreateJobRequest {O365JobRequest}
     * @returns {Promise<O365Job>} the backup job created
     */
    /* istanbul ignore next: autogenerated */
    createBackupJob(o365CreateJobRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-organizations/${this.uuid}/actions/create-job`, o365CreateJobRequest.json)
                .then(response => {
                const json = response.data;
                return new o365_job_1.O365Job(json);
            });
        });
    }
    /**
     * Modify the credentials of a Microsoft Office 365 VBO organization given its uuid
     * @params request {O365OrgCreateModifyRequest}
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    modifyCredentials(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-organizations/${this.uuid}/actions/modify`, request.json);
        });
    }
    /**
     * Get the O365 Device code
     * @returns {Promise<O365DeviceCode>}
     */
    /* istanbul ignore next: autogenerated */
    getO365DeviceCode() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/actions/get-o365-device-code`)
                .then(response => {
                const json = response.data;
                return new o365_device_code_1.O365DeviceCode(json);
            });
        });
    }
    /**
     * Get the O365 Organization's SharePoint sites
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointSite>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgSites(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/sharepoint-sites`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_site_1.O365SharePointSite(it));
            });
        });
    }
    /**
     * Get the O365 Organization's Teams
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365Team>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgTeams(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`o365-organizations/${this.uuid}/teams`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_1.O365Team(it));
            });
        });
    }
    /**
     * Get the O365 Organization's backup repositories to use in creation of a Backup Job
     * @returns {Promise<Array<O365BackupRepository>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgRepositories() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/backup-repositories`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_backup_repository_1.O365BackupRepository(it));
            });
        });
    }
    /**
     * Get the O365 organization users download in csv format
     * @param downloadProgress {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    downloadUsers(downloadProgress) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-organizations/${this.uuid}/users-export`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgress
            })
                .then(response => {
                return new Blob([response.data], { type: 'text/csv' });
            });
        });
    }
    /**
     * Get the O365 Organization's active purge mailboxes
     * @returns {Promise<Array<O365MarkedPurgeMailbox>>}
     */
    /* istanbul ignore next: autogenerated */
    getPurgeMailboxes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-organizations/${this.uuid}/actions/get-purge-mailboxes`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_marked_purge_mailbox_1.O365MarkedPurgeMailbox(it));
            });
        });
    }
    /**
     * Submits a purge request for the given mailboxes of the given organization.
     * @param mailboxes {Array<O365PurgeMailbox>}
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    purgeMailboxes(mailboxes) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const mailboxesJson = mailboxes.map(m => m.json);
            return iland_1.Iland.getHttp().post(`/o365-organizations/${this.uuid}/actions/purge-mailboxes`, mailboxesJson);
        });
    }
    /**
     * Submits a cancel purge request for the given mailboxes of the given organization.
     * @param mailboxes {Array<O365PurgeMailbox>}
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    cancelPurge(mailboxes) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const mailboxesJson = mailboxes.map(m => m.json);
            return iland_1.Iland.getHttp().post(`/o365-organizations/${this.uuid}/actions/cancel-purge`, mailboxesJson);
        });
    }
}
exports.O365Organization = O365Organization;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365DeviceCode = void 0;
/**
 * O365 Device code
 */
/* istanbul ignore next: autogenerated */
class O365DeviceCode {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the code that you must copy and then specify on the Microsoft authentication portal.
     * @returns {string}
     */
    get userCode() {
        return this._json.user_code;
    }
    /**
     * Get the help message.
     * @returns {string}
     */
    get message() {
        return this._json.message;
    }
    /**
     * Get the lifespan of the code in milliseconds.
     * @returns {number}
     */
    get expiresIn() {
        return this._json.expires_in;
    }
    /**
     * Get the verification URL that you must open to sign in to Microsoft Azure.
     * @returns {string}
     */
    get verificationUrl() {
        return this._json.verification_url;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365DeviceCodeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365DeviceCode = O365DeviceCode;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365RestoreSession = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const entity_1 = __webpack_require__(9);
const o365_device_code_1 = __webpack_require__(89);
const task_1 = __webpack_require__(10);
const o365_mailbox_1 = __webpack_require__(411);
const o365_mailbox_folder_1 = __webpack_require__(412);
const o365_mailbox_folder_item_1 = __webpack_require__(413);
const o365_onedrive_1 = __webpack_require__(414);
const o365_onedrive_document_1 = __webpack_require__(415);
const o365_onedrive_folder_1 = __webpack_require__(416);
const o365_restore_session_event_1 = __webpack_require__(417);
const o365_sharepoint_attachment_1 = __webpack_require__(418);
const o365_sharepoint_document_1 = __webpack_require__(419);
const o365_sharepoint_folder_1 = __webpack_require__(420);
const o365_sharepoint_item_1 = __webpack_require__(421);
const o365_sharepoint_library_1 = __webpack_require__(422);
const o365_sharepoint_list_1 = __webpack_require__(423);
const o365_sharepoint_site_1 = __webpack_require__(210);
const o365_team_1 = __webpack_require__(211);
const o365_team_channel_1 = __webpack_require__(424);
const o365_team_file_1 = __webpack_require__(425);
const o365_team_post_1 = __webpack_require__(426);
const o365_team_tab_1 = __webpack_require__(427);
/**
 * O365 Restore Session
 */
class O365RestoreSession extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get a O365 Restore Session by UUID
     * @param uuid
     * @returns {Promise<O365RestoreSession>} promise that resolves with a O365 Restore Session
     */
    static getO365RestoreSession(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${uuid}`)
                .then(response => {
                const json = response.data;
                return new O365RestoreSession(json);
            });
        });
    }
    /**
     * Get the O365 Restore Session entity type
     */
    get entityType() {
        return 'O365_RESTORE_SESSION';
    }
    /**
     * Gets the location id of O365 Restore Session
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the O365 Organization uuid of the O365 Restore Session
     */
    get O365OrganizationUuid() {
        return this._json.o365_organization_uuid;
    }
    /**
     * Get the O365 Restore Session's type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the O365 Restore Session's result
     */
    get result() {
        return this._json.result;
    }
    /**
     * Get the O365 Restore Session's state
     */
    get state() {
        return this._json.state;
    }
    /**
     * Get the O365 Restore Session's creation time
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Get the O365 Restore Session's end time
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get the O365 Restore Session's initiated by
     */
    get initiatedBy() {
        return this._json.initiated_by;
    }
    /**
     * Get the O365 Restore Session's details
     */
    get details() {
        return this._json.details;
    }
    /**
     * Get the O365 Restore Session's ancestors
     */
    get ancestors() {
        return this._json.ancestors;
    }
    /**
     * Refresh the O365 Restore Session data by retrieving it from the API again.
     * @returns {Promise<O365RestoreSession>}
     */
    /* istanbul ignore next: autogenerated */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Get O365 Restore Session events given the restore session uuid
     * @return {Promise<Array<O365RestoreSessionEvent>>}
     */
    /* istanbul ignore next: autogenerated */
    getEvents() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/events`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_restore_session_event_1.O365RestoreSessionEvent(it));
            });
        });
    }
    /**
     * Stop O365 Restore Session
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    stopRestoreSession() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/actions/stop`);
        });
    }
    /**
     * Get O365 Restore Session Exchange mailboxes
     *
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365Mailbox>>} the list of O365 mailboxes
     */
    /* istanbul ignore next: autogenerated */
    getMailboxes(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_mailbox_1.O365Mailbox(it));
            });
        });
    }
    /**
     * Get O365 Restore Session Exchange mailbox folders
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param mailboxId
     * @param folderId
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365MailboxFolder>>} the list of O365 mailbox folders
     */
    /* istanbul ignore next: autogenerated */
    getMailboxFolders(mailboxId, folderId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/folders`, {
                params: {
                    parentId: folderId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_mailbox_folder_1.O365MailboxFolder(it));
            });
        });
    }
    /**
     * Get O365 Restore Session Exchange mailbox folder items
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param mailboxId
     * @param folderId
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365MailboxFolderItem>>} the list of O365 mailbox folder items
     */
    /* istanbul ignore next: autogenerated */
    getMailboxFolderItems(mailboxId, folderId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/items`, {
                params: {
                    folderId: folderId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_mailbox_folder_item_1.O365MailboxFolderItem(it));
            });
        });
    }
    /**
     * Restore an Office 365 VBO Exchange mailbox to either original location
     * or a different location given the restore session UUID and mailbox ID.
     * This method will return TaskResponse object immediately and submits the
     * restoration task in the background.
     * @param {string} mailboxId
     * @param {O365MailboxRestoreOptionsRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreMailbox(mailboxId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/actions/restore`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore O365 Exchange mailbox folder to its original location
     * @param mailboxId
     * @param folderId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreMailboxFolderToOriginalLocation(mailboxId, folderId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/folders/${folderId}/actions/restore`, request.json);
        });
    }
    /**
     * Restore O365 Exchange mailbox item to its original location
     * @param mailboxId
     * @param itemId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreMailboxItemToOriginalLocation(mailboxId, itemId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/items/${itemId}/actions/restore`, request.json);
        });
    }
    /**
     * Get an Exchange Mailbox download as PST
     * @param mailboxId {string} the Exchange mailbox id
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getMailboxDownload(mailboxId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Get an Exchange Mailbox folder download as PST
     * @param mailboxId {string} the Exchange mailbox id
     * @param folderId {string} the Exchange mailbox folder id
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getMailboxFolderDownload(mailboxId, folderId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/folders/${folderId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Get an Exchange Mailbox item download as an MSG or PST
     * @param mailboxId {string} the Exchange mailbox id
     * @param itemId {string} the Exchange mailbox item id
     * @param format {string} must be of MSG or PST
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getMailboxItemDownload(mailboxId, itemId, format, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/exchange-mailboxes/${mailboxId}/items/${itemId}/actions/save?format=${format}`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Gets O365 Restore Session OneDrives
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365OneDrive>>} the list of O365 OneDrives
     */
    /* istanbul ignore next: autogenerated */
    getOneDrives(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/onedrive-drives`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_onedrive_1.O365OneDrive(it));
            });
        });
    }
    /**
     * Gets O365 Restore Session OneDrive folders
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param oneDriveId
     * @param folderId
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365OneDriveFolder>>} the list of O365 mailbox folders
     */
    /* istanbul ignore next: autogenerated */
    getOneDriveFolders(oneDriveId, folderId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/folders`, {
                params: {
                    parentId: folderId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_onedrive_folder_1.O365OneDriveFolder(it));
            });
        });
    }
    /**
     * Gets O365 Restore Session OneDrive Folder Document items
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param oneDriveId
     * @param folderId
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365OneDriveDocument>>} the list of O365 mailbox folder items
     */
    /* istanbul ignore next: autogenerated */
    getOneDriveDocuments(oneDriveId, folderId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/documents`, {
                params: {
                    parentId: folderId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_onedrive_document_1.O365OneDriveDocument(it));
            });
        });
    }
    /**
     * Restore an O365 OneDrive to a location given the
     * restore session UUID and one drive ID. This method will return
     * TaskResponse object immediately and submits the restoration task
     * in the background.
     * @param {string} oneDriveId
     * @param {O365OneDriveRestoreOptionsRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreOneDrive(oneDriveId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/actions/restore`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore an O365 OneDrive Folder
     * @param oneDriveId
     * @param folderId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreOneDriveFolder(oneDriveId, folderId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/folders/${folderId}/actions/restore`, request.json);
        });
    }
    /**
     * Restore an O365 OneDrive Document
     * @param oneDriveId
     * @param documentId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreOneDriveDocument(oneDriveId, documentId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/documents/${documentId}/actions/restore`, request.json);
        });
    }
    /**
     * Get a OneDrive download as a ZIP
     * @param oneDriveId {string} the OneDrive id
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getOneDriveDownload(oneDriveId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Get a OneDrive Folder download as ZIP
     * @param oneDriveId {string} the OneDrive id
     * @param folderId {string} the OneDrive folder id
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getOneDriveFolderDownload(oneDriveId, folderId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/folders/${folderId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Get a OneDrive Folder Item download as ZIP
     * @param oneDriveId {string} the OneDrive id
     * @param documentId {string} the OneDrive document id
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events
     * for their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getOneDriveItemDownload(oneDriveId, documentId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/onedrive-drives/${oneDriveId}/documents/${documentId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Get O365 Restore Session SharePoint sites
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the parent folder or null for parent site
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointSite>>} the list of O365 sharepoint sites
     */
    /* istanbul ignore next: autogenerated */
    getSharePointSites(siteId = null, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites`, {
                params: {
                    parentId: siteId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_site_1.O365SharePointSite(it));
            });
        });
    }
    /**
     * Restore O365 SharePoint Site given the restore session UUID
     * its Veeam native id. This method will return TaskResponse object immediately
     * and submits the restoration task in the background.
     * @param {string} siteId
     * @param {O365SharePointRestoreOptionsRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointSite(siteId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/actions/restore`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get O365 Restore Session SharePoint folders
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get folders from
     * @param parentId - the parent folder or null if the top site
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointFolder>>} the list of O365 sharepoint folders
     */
    /* istanbul ignore next: autogenerated */
    getSharePointFolders(siteId, parentId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/folders`, {
                params: {
                    parentId: parentId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_folder_1.O365SharePointFolder(it));
            });
        });
    }
    /**
     * Download an Office 365 VBO SharePoint Folder given the restore session UUID
     * The Response object will contain the file download as a zip
     * @param siteId - the site to get document from
     * @param folderId - the folder id to download
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events for
     * their download
     * @returns {Promise<Blob>} a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getSharePointFolderDownload(siteId, folderId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/folders/${folderId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Restore O365 SharePoint Folder
     * @param siteId
     * @param folderId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointFolder(siteId, folderId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/folders/${folderId}/actions/restore`, request.json);
        });
    }
    /**
     * Get O365 Restore Session SharePoint documents
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get documents from
     * @param parentId - the parent folder or null for top folder
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointDocument>>} the list of O365 sharepoint documents
     */
    /* istanbul ignore next: autogenerated */
    getSharePointDocuments(siteId, parentId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/documents`, {
                params: {
                    parentId: parentId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_document_1.O365SharePointDocument(it));
            });
        });
    }
    /**
     * Download an Office 365 VBO SharePoint Document given the restore session UUID
     * The Response object will contain the file download as an array buffer for developer to download as zip
     * @param siteId - the site to get document from
     * @param documentId - the document id to download
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events for
     * their download
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    getSharePointDocumentDownload(siteId, documentId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/documents/${documentId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Restore O365 SharePoint Document
     * @param siteId
     * @param documentId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointDocument(siteId, documentId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/documents/${documentId}/actions/restore`, request.json);
        });
    }
    /**
     * Get O365 Restore Session SharePoint items
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get items from
     * @param parentId - the parent folder or null for top folder
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointItem>>} the list of O365 sharepoint items
     */
    /* istanbul ignore next: autogenerated */
    getSharePointItems(siteId, parentId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/items`, {
                params: {
                    parentId: parentId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_item_1.O365SharePointItem(it));
            });
        });
    }
    /**
     * Restore O365 SharePoint Item
     * @param siteId
     * @param itemId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointItem(siteId, itemId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/items/${itemId}/actions/restore`, request.json);
        });
    }
    /**
     * Get O365 Restore Session SharePoint attachments
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get attachments from
     * @param itemId - the item parent of the attachments
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointAttachment>>} the list of O365 sharepoint attachments
     */
    /* istanbul ignore next: autogenerated */
    getSharePointAttachments(siteId, itemId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/items/${itemId}/attachments`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_attachment_1.O365SharePointAttachment(it));
            });
        });
    }
    /**
     * Get O365 Restore Session SharePoint libraries
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get items from
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointLibrary>>} the list of O365 sharepoint libraries
     */
    /* istanbul ignore next: autogenerated */
    getSharePointLibraries(siteId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/libraries`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_library_1.O365SharePointLibrary(it));
            });
        });
    }
    /**
     * Download an Office 365 VBO SharePoint Library given the restore session UUID
     * The Response object will contain the file download as a zip
     * @param siteId - the site to get document from
     * @param libraryId - the library id to download
     * @param downloadProgressCallback {function} optional progress callback if user wishes to receive progress events for
     * their download
     * @returns {Promise<Blob>} a promise with the blob to download
     */
    /* istanbul ignore next: autogenerated */
    getSharePointLibraryDownload(siteId, libraryId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/libraries/${libraryId}/actions/save`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Restore O365 SharePoint Library
     * @param siteId
     * @param libraryId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointLibrary(siteId, libraryId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/libraries/${libraryId}/actions/restore`, request.json);
        });
    }
    /**
     * Get O365 Restore Session SharePoint lists
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param siteId - the site to get items from
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365SharePointList>>} the list of O365 sharepoint lists
     */
    /* istanbul ignore next: autogenerated */
    getSharePointLists(siteId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/lists`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_sharepoint_list_1.O365SharePointList(it));
            });
        });
    }
    /**
     * Restore O365 SharePoint List
     * @param siteId
     * @param listId
     * @param request
     */
    /* istanbul ignore next: autogenerated */
    restoreSharePointList(siteId, listId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/sharepoint-sites/${siteId}/lists/${listId}/actions/restore`, request.json);
        });
    }
    /**
     * Get O365 Restore Session Teams
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param {string | null} displayName - the optional display name of the teams whose representation
     * you want to get from the server. Null value will bring all teams for this org.
     * @param {number} page
     * @param {number} pageSize
     * @returns {Promise<Array<O365Team>>} the list of O365 teams
     */
    /* istanbul ignore next: autogenerated */
    getTeams(displayName = null, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/teams`, {
                params: {
                    displayName: displayName,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_1.O365Team(it));
            });
        });
    }
    /**
     * Restore all O365 Teams
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreAllTeams(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/action/restore-all-teams`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Restore a O365 Team
     * @param {string} teamId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    restoreTeam(teamId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/action/restore-team`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get O365 Team Channels
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param {string} teamId
     * @param {string | null} displayName
     * @param {number} page
     * @param {number} pageSize
     * @returns {Promise<Array<O365TeamChannel>>} the list of O365 Team Channels
     */
    /* istanbul ignore next: autogenerated */
    getTeamChannels(teamId, displayName = null, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels`, {
                params: {
                    displayName: displayName,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_channel_1.O365TeamChannel(it));
            });
        });
    }
    /**
     * Restore a O365 Team channel
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreTeamChannel(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/action/restore-channel`, request.json);
        });
    }
    /**
     * Get O365 Team Files
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param {string} teamId
     * @param {string | null} channelId
     * @param {string | null} parentId can be id of a file (folder) in which more files can be retrieved from
     * @param {number} page
     * @param {number} pageSize
     * @returns {Promise<Array<O365TeamFile>>} the list of O365 Team files
     */
    /* istanbul ignore next: autogenerated */
    getTeamFiles(teamId, channelId = null, parentId = null, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/files`, {
                params: {
                    channelId: channelId,
                    parentId: parentId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_file_1.O365TeamFile(it));
            });
        });
    }
    /**
     * Restore all O365 Team Files
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreAllTeamFiles(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/restore-all-files`, request.json);
        });
    }
    /**
     * Restore a O365 Team File
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreTeamFile(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/restore-files`, request.json);
        });
    }
    /**
     * Send backed-up Microsoft Teams files as an email attachment given the restore session UUID and channel Ids.
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsSendToEmailRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    sendEmailAllTeamFiles(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/send-all-email`, request.json);
        });
    }
    /**
     * Send backed-up Microsoft Teams files as an email attachment given the restore session UUID and file Ids.
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsSendToEmailRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    sendEmailTeamFile(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/send-email`, request.json);
        });
    }
    /**
     * Download all O365 Team Files as a zip
     * @param {string} teamId
     * @param {string} channelId
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    saveAllTeamFiles(teamId, channelId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/save-all`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Download one or more O365 Team file(s) as a zip
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamItemsExportRequest} request
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    saveTeamFiles(teamId, channelId, request, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/files/action/save`, request.json, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/zip' });
            });
        });
    }
    /**
     * Get O365 Team Posts
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param {string} teamId
     * @param {string | null} channelId
     * @param {string | null} parentId can be id of a post in which more posts can be retrieved from
     * @param {number} page
     * @param {number} pageSize
     * @returns {Promise<Array<O365TeamPost>>} the list of O365 Team posts
     */
    /* istanbul ignore next: autogenerated */
    getTeamPosts(teamId, channelId = null, parentId = null, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/posts`, {
                params: {
                    channelId: channelId,
                    parentId: parentId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_post_1.O365TeamPost(it));
            });
        });
    }
    /**
     * Restore all O365 Team Posts
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreAllTeamPosts(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/restore-all-posts`, request.json);
        });
    }
    /**
     * Restore a O365 Team Post
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreTeamPost(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/restore-posts`, request.json);
        });
    }
    /**
     * Send all the backed-up Microsoft Teams posts as an email attachment given the restore session UUID and channel Id.
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsSendToEmailRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    sendEmailAllTeamPosts(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/send-all-email`, request.json);
        });
    }
    /**
     * Send backed-up Microsoft Teams posts as an email attachment given the restore session UUID and post Ids.
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsSendToEmailRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    sendEmailTeamPost(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/send-email`, request.json);
        });
    }
    /**
     * Export all O365 Team Posts as HTML file
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRangeExportRequest} request
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    exportAllTeamPosts(teamId, channelId, request, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/export-all`, request.json, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Export one or more O365 Team Post(s) as HTML file
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamItemsExportRequest} request
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    exportTeamPosts(teamId, channelId, request, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/export`, request.json, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Download all O365 Team Posts as .msg file
     * @param {string} teamId
     * @param {string} channelId
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    saveAllTeamPosts(teamId, channelId, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/save-all`, null, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Download one or more O365 Team Post(s) as .msg file
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamItemsExportRequest} request
     * @param {function} downloadProgressCallback optional progress callback if user wishes to receive progress events
     * @returns {Promise<Blob>} will return a promise with the Blob to download
     */
    /* istanbul ignore next: autogenerated */
    saveTeamPosts(teamId, channelId, request, downloadProgressCallback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp()
                .post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/posts/action/save`, request.json, {
                headers: {
                    Accept: http_1.Http.versionMime('application/octet-stream')
                },
                responseType: 'arraybuffer',
                onDownloadProgress: downloadProgressCallback
            })
                .then(response => {
                return new Blob([response.data], { type: 'application/octet-stream' });
            });
        });
    }
    /**
     * Get O365 Team Channel Tabs
     * Proxying directly to vbo: page and pageSize are used as offset and limit respectively
     * @param {string} teamId
     * @param {string} channelId
     * @param {number} page
     * @param {number} pageSize
     * @returns {Promise<Array<O365TeamTab>>} the list of O365 Team channel tabs
     */
    /* istanbul ignore next: autogenerated */
    getTeamChannelTabs(teamId, channelId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/tabs`, {
                params: {
                    channelId: channelId,
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_team_tab_1.O365TeamTab(it));
            });
        });
    }
    /**
     * Restore a O365 Team Tab
     * @param {string} teamId
     * @param {string} channelId
     * @param {O365TeamsRestoreOptionsRequest} request
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    restoreTeamTab(teamId, channelId, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            // tslint:disable-next-line:max-line-length
            return iland_1.Iland.getHttp().post(`/o365-restore-sessions/${this.uuid}/teams/${teamId}/channels/${channelId}/tabs/action/restore-tabs`, request.json);
        });
    }
    /**
     * Get the O365 Device code
     * @returns {Promise<O365DeviceCode>}
     */
    /* istanbul ignore next: autogenerated */
    getO365DeviceCode() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-restore-sessions/${this.uuid}/actions/get-o365-device-code`)
                .then(response => {
                const json = response.data;
                return new o365_device_code_1.O365DeviceCode(json);
            });
        });
    }
}
exports.O365RestoreSession = O365RestoreSession;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EntityWithPerfSamples = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const perf_samples_series_1 = __webpack_require__(74);
class EntityWithPerfSamples {
    getPerfCounters() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`${this.apiPrefix}/${this.uuid}/performance-counters`)
                .then(response => {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                let data = response.data;
                if (data.data) {
                    data = data.data;
                }
                return data;
            });
        });
    }
    getPerfSamples(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`${this.apiPrefix}/${this.uuid}/performance/` +
                `${request.counter.group}::${request.counter.name}::${request.counter.type}`, {
                params: {
                    start: request.start,
                    end: request.end,
                    limit: request.limit,
                    interval: request.interval
                }
            })
                .then(response => {
                return new perf_samples_series_1.PerfSamplesSeries(response.data);
            });
        });
    }
}
exports.EntityWithPerfSamples = EntityWithPerfSamples;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Vdc = void 0;
const tslib_1 = __webpack_require__(5);
const internal_compatibility_1 = __webpack_require__(248);
const iland_1 = __webpack_require__(7);
const backup_group_1 = __webpack_require__(46);
const iaas_backup_bill_1 = __webpack_require__(263);
const iaas_backup_subscription_1 = __webpack_require__(264);
const vdc_backup_storage_sample_series_1 = __webpack_require__(265);
const backup_policy_1 = __webpack_require__(66);
const vdc_backup_cluster_info_1 = __webpack_require__(268);
const backup_group_run_1 = __webpack_require__(67);
const vdc_backup_summary_stats_1 = __webpack_require__(128);
const vdc_backup_status_1 = __webpack_require__(130);
const backup_restore_task_1 = __webpack_require__(81);
const backup_restore_task_detail_1 = __webpack_require__(273);
const recoverable_file_search_result_1 = __webpack_require__(82);
const vm_backup_snapshot_1 = __webpack_require__(137);
const bill_1 = __webpack_require__(39);
const billing_summary_1 = __webpack_require__(70);
const entity_1 = __webpack_require__(9);
const metadata_1 = __webpack_require__(38);
const report_header_1 = __webpack_require__(144);
const storage_profile_1 = __webpack_require__(86);
const edge_1 = __webpack_require__(71);
const vdc_integrated_backup_status_detail_1 = __webpack_require__(458);
const internal_network_1 = __webpack_require__(72);
const media_1 = __webpack_require__(48);
const entity_with_perf_samples_1 = __webpack_require__(91);
const perf_samples_series_1 = __webpack_require__(74);
const billing_sample_serie_1 = __webpack_require__(218);
const task_1 = __webpack_require__(10);
const vapp_1 = __webpack_require__(76);
const vm_1 = __webpack_require__(41);
const distributed_firewall_layer2_1 = __webpack_require__(219);
const distributed_firewall_layer2_restore_point_details_1 = __webpack_require__(461);
const distributed_firewall_layer3_1 = __webpack_require__(225);
const distributed_firewall_layer3_restore_point_details_1 = __webpack_require__(463);
const distributed_firewall_object_list_1 = __webpack_require__(464);
const distributed_firewall_object_type_1 = __webpack_require__(467);
const distributed_firewall_restore_point_1 = __webpack_require__(468);
const object_paging_params_1 = __webpack_require__(226);
const application_1 = __webpack_require__(469);
const application_group_1 = __webpack_require__(470);
const ip_set_1 = __webpack_require__(472);
const mac_set_1 = __webpack_require__(473);
const security_group_1 = __webpack_require__(227);
const security_group_member_option_list_1 = __webpack_require__(474);
const security_group_member_option_paging_params_1 = __webpack_require__(228);
const security_group_member_option_type_1 = __webpack_require__(229);
const security_tag_1 = __webpack_require__(230);
const security_tag_object_list_1 = __webpack_require__(477);
const security_tag_object_paging_params_1 = __webpack_require__(231);
const security_tag_object_type_1 = __webpack_require__(232);
const security_tag_with_assigned_vms_1 = __webpack_require__(480);
const vapp_resource_summary_map_1 = __webpack_require__(482);
const vdc_storage_profile_summary_1 = __webpack_require__(483);
const vdc_summary_1 = __webpack_require__(485);
const vm_affinity_rule_1 = __webpack_require__(486);
const vm_resource_summary_map_1 = __webpack_require__(487);
/**
 * Virtual Data Center.
 */
class Vdc extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
        // EntityWithPerfSamples mixin properties and methods
        this.apiPrefix = '/vdcs';
    }
    /**
     * Gets a vDC by UUID.
     * @param uuid vDC UUID
     * @returns {Promise<Vdc>} promise that resolves with the vDC
     */
    static getVdc(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Vdc(json);
            });
        });
    }
    get entityType() {
        return 'IAAS_VDC';
    }
    /**
     * Indicates whether the vDC is enabled.
     * @returns {boolean} value
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Gets the vCenter HREF.
     * @returns {string} vCenter HREF
     */
    get vcenterMoref() {
        return this._json.vcenter_moref;
    }
    /**
     * Gets the vCenter name.
     * @returns {string} vCenter name
     */
    get vcenterName() {
        return this._json.vcenter_name;
    }
    /**
     * Gets the description.
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the vCloud HREF
     * @returns {string} vCloud HREF
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Gets the vCenter instance UUID.
     * @returns {string} vCenter instance UUID
     */
    get vcenterInstanceUuid() {
        return this._json.vcenter_instance_uuid;
    }
    /**
     * Gets the vCenter HREF
     * @returns {string} vCenter HREF
     */
    get vcenterHref() {
        return this._json.vcenter_href;
    }
    /**
     * Gets the vDC allocation __json__
     * It can either be 'paygo', 'allocation_pool' or 'reservation_pool'.
     *
     * BURST = 'paygo'
     * RES_PLUS_BURST = 'allocation_pool'
     * RES = 'reservation_pool'
     *
     * @returns {VdcAllocationModel} allocation __json__ identifier
     */
    get allocationModel() {
        return this._json.allocation_model;
    }
    /**
     * Gets the amount of reserved CPU
     * @returns {number} reserved cpu
     */
    get reservedCpu() {
        return this._json.reserved_cpu;
    }
    /**
     * Gets the amount of reserved memory.
     * @returns {number} reserved memory
     */
    get reservedMemory() {
        return this._json.reserved_mem;
    }
    /**
     * Gets the disk limit within the vDc.
     * @returns {number} disk limit
     */
    get diskLimit() {
        return this._json.disk_limit;
    }
    /**
     * Gets the amount of CPU allocated
     * @returns {number} allocated CPU
     */
    get allocatedCpu() {
        return this._json.alloc_cpu;
    }
    /**
     * Gets the amount of memory allocated
     * @returns {number} allocated memory
     */
    get allocatedMemory() {
        return this._json.alloc_mem;
    }
    /**
     * Gets the maximum hardware version of the vDC.
     * @returns {string} max hardware version
     */
    get maxHardwareVersion() {
        return this._json.max_hardware_version;
    }
    /**
     * Gets the network quota.
     * @returns {number} network quota
     */
    get networkQuota() {
        return this._json.network_quota;
    }
    /**
     * Gets the number of networks that exist within this vDC.
     * @returns {number} used network count
     */
    get usedNetworkCount() {
        return this._json.used_network_count;
    }
    /**
     * Gets the datacenter location identifier.
     * @returns {string} location ID
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the UUID of the organization that the vDC is associated with.
     * @returns {string} Org UUID
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Indicates whether the vDC has IaaS backups (either integrated or advanced).
     * @returns {boolean}
     */
    get hasIaasBackups() {
        return this._json.has_iaas_backups;
    }
    /**
     * Whether the vDC has the integrated backups offering.
     * @returns {boolean}
     */
    get hasIntegratedBackups() {
        return this._json.has_integrated_backups;
    }
    /**
     * Whether the vDC has the advanced backups offering.
     * @returns {boolean}
     */
    get hasAdvancedBackups() {
        return this._json.has_advanced_backups;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VdcJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the vDC data by retrieving it from the API again.
     * @returns {Promise<Vdc>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets the vDCs child vApps.
     * @returns {Promise<Vapp[]>} promise that resolves with an array of child vApps
     */
    getVapps() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vapps`)
                .then(response => {
                const json = response.data.data;
                return json.map(vappJson => new vapp_1.Vapp(vappJson));
            });
        });
    }
    /**
     * Gets the vDCs child VMs.
     * @returns {Promise<Vm[]>} promise that resolves with an array of child VMs
     */
    getVms() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vms`)
                .then(response => {
                const json = response.data.data;
                return json.map(vmJson => new vm_1.Vm(vmJson));
            });
        });
    }
    /**
     * Create a scratch vApp into the vDC.
     * @param {BuildVappRequestJson} buildVappRequest
     * @returns {Promise<Task>} task promise
     */
    buildVapp(buildVappRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/build-vapp`, buildVappRequest)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets the vDCs Summary.
     * @returns {Promise<VdcSummary>} promise that resolved with a vDC summary
     */
    getSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/summary`)
                .then(response => {
                const json = response.data;
                return new vdc_summary_1.VdcSummary(json);
            });
        });
    }
    /**
     * Add a vApp from template to vDC.
     * @param {VdcAddVappFromTemplateRequest} vdcAddVappFromTemplateRequest
     * @returns {Promise<Task>} task promise
     */
    /* istanbul ignore next: autogenerated */
    addVappFromTemplate(vdcAddVappFromTemplateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/add-vapp-from-template`, vdcAddVappFromTemplateRequest.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get media for the vDC.
     * @returns {Promise<Array<Media>>} promise that is resolved with a list of media
     */
    /* istanbul ignore next: autogenerated */
    getMedias() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/medias`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new media_1.Media(it));
            });
        });
    }
    /**
     * Gets the vDC metadata.
     * @returns {Promise<Metadata<MetadataType>[]>}
     */
    getMetadata() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/metadata`)
                .then(response => {
                const jsonMetadata = response.data.data;
                return jsonMetadata.map(json => {
                    switch (json.type) {
                        case 'number':
                            return new metadata_1.Metadata(json);
                        case 'boolean':
                            return new metadata_1.Metadata(json);
                        case 'datetime':
                            return new metadata_1.Metadata(json);
                        case 'string':
                            return new metadata_1.Metadata(json);
                    }
                    throw new Error(`Metadata with type ${json.type} is unknown.`);
                });
            });
        });
    }
    /**
     * Get the VM inventory reports available for download for the given vDC.
     * @param {string} the report format to filter on
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of report headers
     */
    /* istanbul ignore next: autogenerated */
    getVmInventoryReports(format) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vm-inventory-reports`, {
                params: {
                    format: format
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Updates the vDC metadata.
     * @param {Array<Metadata<MetadataType>>} metadata the new array of metadata
     * @returns {Promise<Task>} task promise
     */
    updateMetadata(metadata) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/metadata`, metadata.map(it => it.json))
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Deletes a metadata entry for vDC.
     * @param {string} metadataKey the key of the metadata entry to delete
     * @returns {Promise<Task>} task promise
     */
    deleteMetadata(metadataKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/metadata/${metadataKey}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Get the edges for the vDC.
     * @returns {Promise<Edge>} promise that resolves with a list of edges
     */
    /* istanbul ignore next: autogenerated */
    getEdges() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/edges`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_1.Edge(it));
            });
        });
    }
    /**
     * Gets all org-vdc networks within this vDC.
     * @returns {Promise<Array<InternalNetwork>>} a promise that resolves with the list of org-vdc networks.
     */
    /* istanbul ignore next: autogenerated */
    getOrgVdcNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/org-vdc-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new internal_network_1.InternalNetwork(it));
            });
        });
    }
    /**
     * Creates a new org-vdc network in this vDC.
     * @param {OrgVdcNetworkCreateRequest} network the specification for the new network
     * @returns {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    createOrgVdcNetwork(network) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/create-org-vdc-network`, network.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get all storage profiles for the vDC.
     * @param {boolean} includeDisabled whether to also return disabled storage profiles
     * @returns {Promise<Array<StorageProfile>>} a promise that resolves with the list of storage profiles
     */
    /* istanbul ignore next: autogenerated */
    getStorageProfiles(includeDisabled) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/storage-profiles`, {
                params: {
                    includeDisabled: includeDisabled
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new storage_profile_1.StorageProfile(it));
            });
        });
    }
    /**
     * Gets the current billing information
     * @returns {Promise<BillingSummary>} a promise that resolves with the current billing information
     */
    /* istanbul ignore next: autogenerated */
    getCurrentBilling() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/billing-summary`)
                .then(response => {
                const json = response.data;
                return new billing_summary_1.BillingSummary(json);
            });
        });
    }
    /**
     * Get billing for a specified billing period. If the billing period is not specified, the current billing period is
     * used.
     * @param {number} year the year
     * @param {number} month the month in range 0-11
     * @returns {Promise<Bill>} a promise that resolves with the bill
     */
    /* istanbul ignore next: autogenerated */
    getBilling(year, month) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/billing`, {
                params: {
                    year: year,
                    month: month
                }
            })
                .then(response => {
                const json = response.data;
                return new bill_1.Bill(json);
            });
        });
    }
    /**
     * Get bills for all child vapps for the specified billing period. If the billing period is not specified, the current
     * billing period is used.
     * @param {number} month the month in range 0-11
     * @param {number} year the year
     * @returns {Promise<Array<Bill>>} a promise that resolves with the list of vapp bills
     */
    /* istanbul ignore next: autogenerated */
    getVappBills(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vapp-bills`, {
                params: {
                    month: month,
                    year: year
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new bill_1.Bill(it));
            });
        });
    }
    /**
     * Get bills for all child VMs for the specified billing period. If the billing period is not specified, the current
     * billing period is used.
     * @param {number} month the month in range 0-11
     * @param {number} year the year
     * @returns {Promise<Array<Bill>>} a promise that resolves with the list of VM bills
     */
    /* istanbul ignore next: autogenerated */
    getVmBills(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vm-bills`, {
                params: {
                    month: month,
                    year: year
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new bill_1.Bill(it));
            });
        });
    }
    /**
     * Gets the storage profile summary for this vDC and the specified billing period.
     * @param {number} year the year
     * @param {number} month the month in range 1-12.
     * @returns {Promise<VdcStorageProfileSummary>} a promise that resolves with the storage profile summary
     */
    /* istanbul ignore next: autogenerated */
    getStorageProfileSummary(year, month) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/storage-profile-summary`, {
                params: {
                    year: year,
                    month: month
                }
            })
                .then(response => {
                const json = response.data;
                return new vdc_storage_profile_summary_1.VdcStorageProfileSummary(json);
            });
        });
    }
    /**
     * Gets the cost over invoice period samples for the vDC and specified billing period.
     * @param {number} year the year
     * @param {number} month the month in range 1-12
     * @param {Array<string>} additionalFields any additional bill fields that should be included in the results
     * @returns {Promise<BillingSampleSerie>} a promise that resolves with the sample series
     */
    /* istanbul ignore next: autogenerated */
    getCostOverInvoicePeriodSerie(year, month, additionalFields) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/cost-over-invoice-period`, {
                params: {
                    year: year,
                    month: month,
                    additionalFields: additionalFields
                }
            })
                .then(response => {
                const json = response.data;
                return new billing_sample_serie_1.BillingSampleSerie(json);
            });
        });
    }
    /**
     * Generate the vm inventory report for a given vDC.
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateVmInventoryReport(emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/generate-vm-inventory-report`, {
                params: {
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets all child vApp resource summaries.
     * @returns {Promise<VappResourceSummaryMap>} a promise that resolves with a map of vApp resource summaries, keyed by
     * UUID.
     */
    /* istanbul ignore next: autogenerated */
    getVappResourceSummaries() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vapp-summary-map`)
                .then(response => {
                const json = response.data;
                return new vapp_resource_summary_map_1.VappResourceSummaryMap(json);
            });
        });
    }
    /**
     * Gets resource summaries for all child VMs.
     * @returns {Promise<VmResourceSummaryMap>} a promise that resolves with a map of VM resource summaries, keyed by
     * UUID.
     */
    /* istanbul ignore next: autogenerated */
    getVmResourceSummaries() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vm-summary-map`)
                .then(response => {
                const json = response.data;
                return new vm_resource_summary_map_1.VmResourceSummaryMap(json);
            });
        });
    }
    /**
     * Retrieve a CSV report email with all event history for a given vDC.
     * @returns {Promise<void>} there is no response object.
     */
    emailEventHistory(email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/email-event-history`, {
                email: email
            })
                .then(() => undefined);
        });
    }
    /**
     * Create Vm affinity rule.
     * @param {VmAffinityRuleCreateRequest} request
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    createVmAffinityRule(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/create-vm-affinity-rule`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Update VM affinity rule.
     * @param {VmAffinityRuleUpdateRequest} vmAffinityRuleUpdateRequest
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    updateVmAffinityRule(vmAffinityRuleUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/actions/update-vm-affinity-rule`, vmAffinityRuleUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Delete VM affinity rule.
     * @param {string} ruleUuid
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteVmAffinityRule(ruleUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/actions/delete-vm-affinity-rule/${ruleUuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get VM affinity rule list.
     * @returns {Promise<Array<VmAffinityRule>>}
     */
    /* istanbul ignore next: autogenerated */
    getVmAffinityRules() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/vm-affinity-rules`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vm_affinity_rule_1.VmAffinityRule(it));
            });
        });
    }
    /**
     * Get IP set.
     * @param {string} ipSetId
     * @returns {Promise<IpSet>}
     */
    /* istanbul ignore next: autogenerated */
    getIpSet(ipsetId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/ipsets/${ipsetId}`)
                .then(response => {
                const json = response.data;
                return new ip_set_1.IpSet(json);
            });
        });
    }
    /**
     * Get IP set list.
     * @returns {Promise<Array<IpSet>>}
     */
    /* istanbul ignore next: autogenerated */
    getIpSets() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/ipsets`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new ip_set_1.IpSet(it));
            });
        });
    }
    /**
     * Create IP set.
     * @params {IpSetCreateRequest} ipSetCreateRequest
     * @returns {Promise<IpSet>}
     */
    /* istanbul ignore next: autogenerated */
    createIpSet(ipSetCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/ipsets`, ipSetCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new ip_set_1.IpSet(json);
            });
        });
    }
    /**
     * Update IP set.
     * @params {string} ipsetId
     * @params {IpSetUpdateRequest} ipSetUpdateRequest
     * @returns {Promise<IpSet>}
     */
    /* istanbul ignore next: autogenerated */
    updateIpSet(ipsetId, ipSetUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/ipsets/${ipsetId}`, ipSetUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new ip_set_1.IpSet(json);
            });
        });
    }
    /**
     * Delete IP set.
     * @params {string} ipsetId
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteIpSet(ipsetId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/ipsets/${ipsetId}`)
                .then(response => {
                const apiTask = response.data;
                return new task_1.Task(apiTask);
            });
        });
    }
    /**
     * Get MAC set.
     * @params {string} macsetUuid
     * @returns {Promise<MacSet>}
     */
    /* istanbul ignore next: autogenerated */
    getMacSet(macsetUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/macsets/${macsetUuid}`)
                .then(response => {
                const json = response.data;
                return new mac_set_1.MacSet(json);
            });
        });
    }
    /**
     * Get MAC set list.
     * @returns {Promise<Array<MacSet>>}
     */
    /* istanbul ignore next: autogenerated */
    getMacSets() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/macsets`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new mac_set_1.MacSet(it));
            });
        });
    }
    /**
     * Create MAC set.
     * @params {MacSetCreateRequest} macSetCreateRequest
     * @returns {Promise<MacSet>}
     */
    /* istanbul ignore next: autogenerated */
    createMacSet(macSetCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/macsets`, macSetCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new mac_set_1.MacSet(json);
            });
        });
    }
    /**
     * Update MAC set.
     * @params {string} macsetUuid
     * @params {MacSetUpdateRequest} macSetUpdateRequest
     * @returns {Promise<MacSet>}
     */
    /* istanbul ignore next: autogenerated */
    updateMacSet(macsetUuid, macSetUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/macsets/${macsetUuid}`, macSetUpdateRequest.json)
                .then(response => {
                const json = response.data;
                return new mac_set_1.MacSet(json);
            });
        });
    }
    /**
     * Delete MAC set.
     * @params {string} macsetUuid
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteMacSet(macsetUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/macsets/${macsetUuid}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get application.
     * @params {string} applicationId
     * @returns {Promise<Application>}
     */
    /* istanbul ignore next: autogenerated */
    getApplication(applicationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/applications/${applicationId}`)
                .then(response => {
                const json = response.data;
                return new application_1.Application(json);
            });
        });
    }
    /**
     * Get application list.
     * @returns {Promise<Array<Application>>}
     */
    /* istanbul ignore next: autogenerated */
    getApplications() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/applications`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new application_1.Application(it));
            });
        });
    }
    /**
     * Get application group.
     * @params {string} applicationId
     * @returns {Promise<ApplicationGroup>}
     */
    /* istanbul ignore next: autogenerated */
    getApplicationGroup(applicationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/application-groups/${applicationId}`)
                .then(response => {
                const json = response.data;
                return new application_group_1.ApplicationGroup(json);
            });
        });
    }
    /**
     * Get application group list.
     * @returns {Promise<Array<ApplicationGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    getApplicationGroups() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/application-groups`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new application_group_1.ApplicationGroup(it));
            });
        });
    }
    /**
     * Get a list of security groups for a given vDC.
     * @returns {Promise<Array<SecurityGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityGroups() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-groups`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new security_group_1.SecurityGroup(it));
            });
        });
    }
    /**
     * Get the specified security group for a given vDC.
     * @params {string} securitygroupId
     * @returns {Promise<SecurityGroup>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityGroup(securitygroupId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-groups/${securitygroupId}`)
                .then(response => {
                const json = response.data;
                return new security_group_1.SecurityGroup(json);
            });
        });
    }
    /**
     * Create a new security group for a given vDC.
     * @params {SecurityGroupCreateRequest} createRequest
     * @returns {Promise<SecurityGroup>}
     */
    /* istanbul ignore next: autogenerated */
    createSecurityGroup(createRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/security-groups`, createRequest.json)
                .then(response => {
                const json = response.data;
                return new security_group_1.SecurityGroup(json);
            });
        });
    }
    /**
     * Update a specified security group for a given vDC.
     * @params {string} securitygroupId
     * @params {SecurityGroupUpdateRequest} updateRequest
     * @returns {Promise<SecurityGroup>}
     */
    /* istanbul ignore next: autogenerated */
    updateSecurityGroup(securitygroupId, updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/security-groups/${securitygroupId}`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new security_group_1.SecurityGroup(json);
            });
        });
    }
    /**
     * Delete a specified security group for a given vDC.
     * @params {string} securitygroupId
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteSecurityGroup(securitygroupId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/security-groups/${securitygroupId}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the list of security group member option types.
     * @returns {Promise<Array<SecurityGroupMemberOptionType>>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityGroupMemberOptionTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-group-members`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new security_group_member_option_type_1.SecurityGroupMemberOptionType(it));
            });
        });
    }
    /**
     * Get the security group member options of the specified type.
     * If the specified page number is larger than number of actual pages, the response will return as an empty list.
     * @param {string | SecurityGroupMemberOptionType} type Type.
     * Valid types can be retrieved from the getSecurityGroupMemberOptionTypes() endpoint
     * @param {number | SecurityGroupMemberOptionPagingParams} pageOrPagingParams The page number or paging params.
     * The index of the first page is 1. (Default: 1)
     * @param {number} pageSize The page size (Optional). (Default 25)
     * @param {string} filter The term to be searched by (Optional).
     * @returns {Promise<SecurityGroupMemberOptionTypeList>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityGroupMemberOptions(type, pageOrPagingParams, pageSize, filter) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let _type = type;
            let _page = pageOrPagingParams || 1;
            let _pageSize = pageSize || 25;
            let _filter = filter ? `name==${filter}` : undefined;
            if (type instanceof security_group_member_option_type_1.SecurityGroupMemberOptionType) {
                _type = type.type;
            }
            if (pageOrPagingParams instanceof security_group_member_option_paging_params_1.SecurityGroupMemberOptionPagingParams) {
                _page = pageOrPagingParams.page;
                _pageSize = pageOrPagingParams.pageSize;
                _filter = pageOrPagingParams.filter ? `name==${pageOrPagingParams.filter}` : undefined;
            }
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-group-members/${_type}`, {
                params: {
                    page: _page,
                    pageSize: _pageSize,
                    filter: _filter
                }
            })
                .then(response => {
                const json = response.data;
                return new security_group_member_option_list_1.SecurityGroupMemberOptionList(json);
            });
        });
    }
    /**
     * Get a list of security tags for a given vDC.
     * @returns {Promise<Array<SecurityTag>>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityTags() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-tags`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new security_tag_1.SecurityTag(it));
            });
        });
    }
    /**
     * Get the specified security tag for a given vDC.
     * @params {string} securitytagId
     * @returns {Promise<SecurityTagWithAssignedVMs>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityTag(securitytagId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-tags/${securitytagId}`)
                .then(response => {
                const json = response.data;
                return new security_tag_with_assigned_vms_1.SecurityTagWithAssignedVMs(json);
            });
        });
    }
    /**
     * Create a new security tag for a given vDC.
     * @params {SecurityTagCreateRequest} createRequest
     * @returns {Promise<SecurityTagWithAssignedVMs>}
     */
    /* istanbul ignore next: autogenerated */
    createSecurityTag(createRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/security-tags`, createRequest.json)
                .then(response => {
                const json = response.data;
                return new security_tag_with_assigned_vms_1.SecurityTagWithAssignedVMs(json);
            });
        });
    }
    /**
     * Update a specified security tag for a given vDC.
     * @params {string} securitytagId
     * @params {SecurityTagUpdateRequest} updateRequest
     * @returns {Promise<SecurityTagWithAssignedVMs>}
     */
    /* istanbul ignore next: autogenerated */
    updateSecurityTag(securitytagId, updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/security-tags/${securitytagId}`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new security_tag_with_assigned_vms_1.SecurityTagWithAssignedVMs(json);
            });
        });
    }
    /**
     * Delete a specified security tag for a given vDC.
     * @params {string} securitytagId
     * @returns {Promise<Task>}
     */
    /* istanbul ignore next: autogenerated */
    deleteSecurityTag(securitytagId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/vdcs/${this.uuid}/security-tags/${securitytagId}`)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the list of security tag object types.
     * @returns {Promise<Array<SecurityTagObjectType>>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityTagObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-tag-objects`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new security_tag_object_type_1.SecurityTagObjectType(it));
            });
        });
    }
    /**
     * Get the security tag objects of the specified type.
     * If the specified page number is larger than number of actual pages, the response will return as an empty list.
     * @param {string | SecurityTagObjectType} type Type.
     * Valid types can be retrieved from the getSecur:ityTagObjectTypes() endpoint
     * @param {number | SecurityTagObjectPagingParams} pageOrPagingParams The page number or paging params.
     * The index of the first page is 1. (Default: 1)
     * @param {number} pageSize The page size (Optional). (Default 25)
     * @param {string} filter The term to be searched by (Optional).
     * @returns {Promise<SecurityTagObjectList>}
     */
    /* istanbul ignore next: autogenerated */
    getSecurityTagObjects(type, pageOrPagingParams, pageSize, filter) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let _type = type;
            let _page = pageOrPagingParams || 1;
            let _pageSize = pageSize || 25;
            let _filter = filter ? `name==${filter}` : undefined;
            if (type instanceof security_tag_object_type_1.SecurityTagObjectType) {
                _type = type.type;
            }
            if (pageOrPagingParams instanceof security_tag_object_paging_params_1.SecurityTagObjectPagingParams) {
                _page = pageOrPagingParams.page;
                _pageSize = pageOrPagingParams.pageSize;
                _filter = pageOrPagingParams.filter ? `name==${pageOrPagingParams.filter}` : undefined;
            }
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/security-tag-objects/${_type}`, {
                params: {
                    page: _page,
                    pageSize: _pageSize,
                    filter: _filter
                }
            })
                .then(response => {
                const json = response.data;
                return new security_tag_object_list_1.SecurityTagObjectList(json);
            });
        });
    }
    /**
     * Enable the distributed firewall on an Org vDC.
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    enableDistributedFirewall() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/vdcs/${this.uuid}/actions/enable-distributed-firewall`);
        });
    }
    /**
     * Get the distributed firewall at layer 3 (general) for a given vDC.
     * @returns {Promise<DistributedFirewallLayer3>}
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneral() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3`)
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer3_1.DistributedFirewallLayer3(json);
            });
        });
    }
    /**
     * Update the distributed firewall at layer 3 (general) for a given vDC.
     *
     * @param {string} eTag the eTag value. specifying an eTag value allows a client to ensure that the distributed
     * firewall has not been updated since it last read the configuration.
     * If the specified eTag value does not match the current etag value, the request will fail.
     * Use the response from getDistributedFirewallLayer3 to retrieve the current generationNumber needed to modify the
     * configuration (e.g. 1583956143338)
     * @param {Promise<DistributedFirewallLayer3>} updateRequest update request
     * @return {Promise<DistributedFirewallLayer3>}
     */
    /* istanbul ignore next: autogenerated */
    updateDistributedFirewallGeneral(updateRequest, eTag) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/distributed-firewall-layer3`, updateRequest.json, {
                params: {
                    eTag: eTag
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer3_1.DistributedFirewallLayer3(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 3 (general) source object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralSourceObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/sources`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of source objects for distributed firewall layer 3 (general).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralSourceObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/sources/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 3 (general) destination object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralDestinationObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/destinations`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of destination objects for distributed firewall layer 3 (general).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralDestinationObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/destinations/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 3 (general) applied to object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralAppliedToObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/applied-to-objects`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of applied to objects for distributed firewall layer 3 (general).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralAppliedToObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/applied-to-objects/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Get the distributed firewall at layer 2 (Ethernet) for a given vDC.
     * @returns {Promise<DistributedFirewallLayer2>}
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernet() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2`)
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer2_1.DistributedFirewallLayer2(json);
            });
        });
    }
    /**
     * Update the distributed firewall at layer 2 (ethernet) for a given vDC.
     *
     * @param {string} eTag the eTag value. specifying an eTag value allows a client to ensure that the distributed
     * firewall has not been updated since it last read the configuration.
     * If the specified eTag value does not match the current etag value, the request will fail.
     * Use the response from getDistributedFirewallLayer3 to retrieve the current generationNumber needed to modify the
     * configuration (e.g. 1583956143338)
     * @param {Promise<DistributedFirewallLayer2>} updateRequest update request
     * @return {Promise<DistributedFirewallLayer2>}
     */
    /* istanbul ignore next: autogenerated */
    updateDistributedFirewallEthernet(updateRequest, eTag) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/distributed-firewall-layer2`, updateRequest.json, {
                params: {
                    eTag: eTag
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer2_1.DistributedFirewallLayer2(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 2 (ethernet) source object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetSourceObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/sources`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of source objects for distributed firewall layer 2 (ethernet).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetSourceObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/sources/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 2 (ethernet) destination object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetDestinationObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/destinations`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of destination objects for distributed firewall layer 2 (ethernet).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetDestinationObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/destinations/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Get the list of distributed firewall layer 2 (ethernet) applied to object types.
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetAppliedToObjectTypes() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/applied-to-objects`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_object_type_1.DistributedFirewallObjectType(it));
            });
        });
    }
    /**
     * Get the list of applied to objects for distributed firewall layer 2 (ethernet).
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetAppliedToObjects(type, filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filtersData = (filters instanceof object_paging_params_1.ObjectPagingParams ? filters.json : filters) || {
                page: 1,
                page_size: 25,
                filter: undefined
            };
            const filter = filtersData.filter ? `name==${filtersData.filter}` : undefined;
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/applied-to-objects/${type}`, {
                params: {
                    page: filtersData.page,
                    pageSize: filtersData.page_size,
                    filter: filter
                }
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_object_list_1.DistributedFirewallObjectList(json);
            });
        });
    }
    /**
     * Create a distributed firewall layer2 (ethernet) restore point for a vDC's distributed firewall.
     *
     * @param {string} description distributed firewall layer2 restore point description
     * @return distributed firewall layer 2 restore point
     */
    /* istanbul ignore next: autogenerated */
    createDistributedFirewallEthernetRestorePoint(description) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/distributed-firewall-layer2/restore-points`, {
                description: description
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer2_restore_point_details_1.DistributedFirewallLayer2RestorePointDetails(json);
            });
        });
    }
    /**
     * Get the distributed firewall layer2 (ethernet) restore points for a vDC.
     * @return {Promise<Array<DistributedFirewallRestorePoint>>} restorePoints Distributed firewall restore points
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetRestorePoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/restore-points`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_restore_point_1.DistributedFirewallRestorePoint(it));
            });
        });
    }
    /**
     * Get a distributed firewall layer2 restore point for a vDC at a given time.
     * Restore point time is epoch time in milliseconds.
     *
     * @param {number} restorePointTime restore point time
     * @return distributed firewall restore point
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallEthernetRestorePoint(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer2/restore-points/${restorePointTime}`)
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer2_restore_point_details_1.DistributedFirewallLayer2RestorePointDetails(json);
            });
        });
    }
    /**
     * Delete a distributed firewall layer2 (general) restore point.
     * Restore point time is epoch time in milliseconds.
     *
     * @param {number} restorePointTime Restore point time
     */
    /* istanbul ignore next: autogenerated */
    deleteDistributedFirewallEthernetRestorePoint(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/vdcs/${this.uuid}/distributed-firewall-layer2/restore-points/${restorePointTime}`);
        });
    }
    /**
     * Restore a vDC's distributed firewall layer2 (ethernet) configuration to a specified restore point.
     *
     * @param {number} restorePointTime The restore point time
     * @return distributed firewall
     */
    /* istanbul ignore next: autogenerated */
    restoreDistributedFirewallEthernet(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/distributed-firewall-layer2/actions/restore`, {
                restore_point_time: restorePointTime
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer2_1.DistributedFirewallLayer2(json);
            });
        });
    }
    /**
     * Create a distributed firewall layer3 (general) restore point for a vDC's distributed firewall.
     *
     * @param {string} description distributed firewall layer3 restore point description
     * @return distributed firewall layer 3 restore point
     */
    /* istanbul ignore next: autogenerated */
    createDistributedFirewallGeneralRestorePoint(description) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/distributed-firewall-layer3/restore-points`, {
                description: description
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer3_restore_point_details_1.DistributedFirewallLayer3RestorePointDetails(json);
            });
        });
    }
    /**
     * Get the distributed firewall layer3 (general) restore points for a vDC.
     * @return {Promise<Array<DistributedFirewallRestorePoint>>} restorePoints Distributed firewall restore points
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralRestorePoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/restore-points`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new distributed_firewall_restore_point_1.DistributedFirewallRestorePoint(it));
            });
        });
    }
    /**
     * Get a distributed firewall layer3 (general) restore point for a vDC at a given time.
     * Restore point time is epoch time in milliseconds.
     *
     * @param {number} restorePointTime restore point time
     * @return distributed firewall restore point
     */
    /* istanbul ignore next: autogenerated */
    getDistributedFirewallGeneralRestorePoint(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/distributed-firewall-layer3/restore-points/${restorePointTime}`)
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer3_restore_point_details_1.DistributedFirewallLayer3RestorePointDetails(json);
            });
        });
    }
    /**
     * Delete a distributed firewall layer3 (general) restore point.
     * Restore point time is epoch time in milliseconds.
     *
     * @param {number} restorePointTime Restore point time
     */
    /* istanbul ignore next: autogenerated */
    deleteDistributedFirewallGeneralRestorePoint(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/vdcs/${this.uuid}/distributed-firewall-layer3/restore-points/${restorePointTime}`);
        });
    }
    /**
     * Restore a vDC's distributed firewall layer3 (general) configuration to a specified restore point.
     *
     * @param {number} restorePointTime The restore point time
     * @return distributed firewall
     */
    /* istanbul ignore next: autogenerated */
    restoreDistributedFirewallGeneral(restorePointTime) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/distributed-firewall-layer3/actions/restore`, {
                restore_point_time: restorePointTime
            })
                .then(response => {
                const json = response.data;
                return new distributed_firewall_layer3_1.DistributedFirewallLayer3(json);
            });
        });
    }
    /**
     * Gets the vDC's integrated backup status.
     * @returns {Promise<VdcIntegratedBackupStatusDetail>}
     */
    /* istanbul ignore next: autogenerated */
    getIntegratedBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/integrated-backup-status`)
                .then(response => {
                const json = response.data;
                return new vdc_integrated_backup_status_detail_1.VdcIntegratedBackupStatusDetail(json);
            });
        });
    }
    /**
     * List the existing backup groups that are configured in a specified virtual
     * datacenter.
     *
     * @param {boolean} includeDeleted Whether to include deleted backup groups. Default is false. (Optional)
     * @param {boolean} includeSummaryStats Default is false. (Optional)
     * @param {boolean} includeLastRun Default is false. (Optional)
     * @param {boolean} includeBackupPolicy Default is false. (Optional)
     * @returns {Promise<Array<BackupGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroups(includeDeleted, includeSummaryStats, includeLastRun, includeBackupPolicy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-groups`, {
                params: {
                    includeDeleted: includeDeleted !== null && includeDeleted !== void 0 ? includeDeleted : false,
                    includeSummaryStats: includeSummaryStats !== null && includeSummaryStats !== void 0 ? includeSummaryStats : false,
                    includeLastRun: includeLastRun !== null && includeLastRun !== void 0 ? includeLastRun : false,
                    includeBackupPolicy: includeBackupPolicy !== null && includeBackupPolicy !== void 0 ? includeBackupPolicy : false
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_1.BackupGroup(it));
            });
        });
    }
    /**
     * Gets backup group summary stats for the vDC.
     * Stat time-range defaults to the past 24 hours.
     * Both startTimeMillis and endTimeMillis params are required if one is used.
     *
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     * @returns {Promise<VdcBackupSummaryStats>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupGroupSummaryStats(startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-group-summary-stats`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return new vdc_backup_summary_stats_1.VdcBackupSummaryStats(json);
            });
        });
    }
    /**
     * Create a new backup group.
     *
     * @params {BackupGroupUpdateRequest} creationRequest the creation request body
     * @return {Promise<BackupGroup>}
     */
    /* istanbul ignore next: autogenerated */
    createBackupGroup(creationRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/backup-groups`, creationRequest.json)
                .then(response => {
                const json = response.data;
                return new backup_group_1.BackupGroup(json);
            });
        });
    }
    /**
     * List the existing backup policies that are configured in a vDC.
     *
     * @param {boolean} includeOrgPolicies
     * @return {Promise<Array<BackupPolicy>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupPolicies(includeOrgPolicies) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-policies`, {
                params: {
                    includeOrgPolicies: includeOrgPolicies
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_policy_1.BackupPolicy(it));
            });
        });
    }
    /**
     * Get details of an individual vDC-scoped backup policy.
     *
     * @param {string} backupPolicyUid
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupPolicy(backupPolicyUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-policies/${backupPolicyUid}`)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Create a new vdc-scoped backup policy.
     *
     * @param {BackupPolicyUpdateRequest} creationRequest
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    createBackupPolicy(creationRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/backup-policies`, creationRequest.json)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Update a backup policy.
     *
     * @param {string} backupPolicyUid
     * @param {BackupPolicyUpdateRequest} updateRequest
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    updateBackupPolicy(backupPolicyUid, updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/vdcs/${this.uuid}/backup-policies/${backupPolicyUid}`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Delete a backup policy.
     *
     * @param {string} backupPolicyUid
     * @return {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    deleteBackupPolicy(backupPolicyUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/vdcs/${this.uuid}/backup-policies/${backupPolicyUid}`);
        });
    }
    /**
     * List backup runs for the specified vDC.
     * Limit defaults to 10 and query time range defaults to last 24 hours.
     *
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     * @param {number} limit Default is 10. (Optional)
     * @return {Promise<Array<BackupGroupRun>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroupRuns(startTimeMillis, endTimeMillis, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-runs`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null,
                    limit: limit !== null && limit !== void 0 ? limit : null
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_run_1.BackupGroupRun(it));
            });
        });
    }
    /**
     * Gets the vDC's backup status.
     * @return {Promise<VdcBackupStatus>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-status`)
                .then(response => {
                const json = response.data;
                return new vdc_backup_status_1.VdcBackupStatus(json);
            });
        });
    }
    /**
     * Searches for recoverable VM snapshots within the vDC.
     *
     * @param {number} startTimeMillis Earliest backup time for which file results should be included. (Optional)
     * @param {number} endTimeMillis Latest backup time for which file results should be included. (Optional)
     * @param {string} search The search string. Wildcards supported with '*'. (Optional)
     * @param {Array<string>} backupGroupUids A set of backup groups that should be used to limit search results.
     * (only results that are associated with specified backup groups will be included). (Optional)
     * @return {Promise<Array<VmBackupSnapshot>>} a list of recoverable VM snapshots
     */
    /* istanbul ignore next: autogenerated */
    searchRecoverableVMs(startTimeMillis, endTimeMillis, search, backupGroupUids) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/recoverable-vms`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null,
                    search: search !== null && search !== void 0 ? search : null,
                    backupGroupUids: backupGroupUids !== null && backupGroupUids !== void 0 ? backupGroupUids : null
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vm_backup_snapshot_1.VmBackupSnapshot(it));
            });
        });
    }
    /**
     * Restores one or more VM backups within the vDC.
     *
     * @param {RestoreVmBackupsInVdcParams} params restoration parameters
     * @return {Promise<Task>} the restore task, used to track the asynchronous operation
     */
    /* istanbul ignore next: autogenerated */
    restoreVMBackupsInVdc(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vdcs/${this.uuid}/actions/restore-vm-backups`, params.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets info about the backup cluster and remote replicas that are available
     * to the vDC.
     *
     * @return {Promise<VdcBackupClusterInfo>} information about the local backup cluster and
     * available remote clusters
     */
    /* istanbul ignore next: autogenerated */
    getVdcBackupClusterInfo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-cluster-info`)
                .then(response => {
                const json = response.data;
                return new vdc_backup_cluster_info_1.VdcBackupClusterInfo(json);
            });
        });
    }
    /**
     * Searches for recoverable backup files and folders within the vDC.
     *
     * @param {SearchVdcRecoverableFilesAndFoldersFilters} filters query filters (Optional)
     * @return {Promise<Array<RecoverableFileSearchResult>>} a list of recoverable files and folders
     */
    /* istanbul ignore next: autogenerated */
    searchRecoverableFilesAndFolders(filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/recoverable-files-and-folders`, {
                params: (filters === null || filters === void 0 ? void 0 : filters.json) || null
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new recoverable_file_search_result_1.RecoverableFileSearchResult(it));
            });
        });
    }
    /**
     * Lists detailed task information for advanced backup restore tasks in a
     * specified vDC.
     * This will always return any currently running tasks in addition to
     * those that meet any optional filters.
     * Both startTimeMillis and endTimeMillis params are required if one is used.
     *
     * @param {number} startTimeMillis (Optional)
     * @param {number} endTimeMillis (Optional)
     * @return {Promise<Array<BackupRestoreTask>>} listing of advanced backup restore task details
     */
    /* istanbul ignore next: autogenerated */
    listBackupRestoreTasks(startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-restore-tasks`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return json.data.map(task => new backup_restore_task_1.BackupRestoreTask(task));
            });
        });
    }
    /**
     * Gets detailed recovery task information for a specific advanced backup
     * restore task.
     *
     * @param {string} taskUid the restore task details to retrieve
     * @return {Promise<BackupRestoreTaskDetail>} advanced backup restore task details
     */
    /* istanbul ignore next: autogenerated */
    getBackupRestoreTask(taskUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-restore-tasks/${taskUid}`)
                .then(response => {
                const json = response.data;
                return new backup_restore_task_detail_1.BackupRestoreTaskDetail(json);
            });
        });
    }
    /**
     * Gets the list of storage metrics that are available for the vDC.
     *
     * @return {Promise<Array<VdcBackupStorageMetric>>} the list of storage metrics names
     */
    /* istanbul ignore next: autogenerated */
    getBackupStorageMetrics() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-storage-metrics`)
                .then(response => {
                return response.data.data;
            });
        });
    }
    /**
     * Gets a series of vDC backup storage samples for a specified storage metric.
     *
     * @param metric  the storage metric name
     * @param {number} startTimeMillis start of the series (Optional)
     * @param {number} endTimeMillis end of the series (Optional)
     * @return the sample series
     */
    /* istanbul ignore next: autogenerated */
    getBackupStorageSamples(metric, startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/backup-storage-metrics/${metric}/samples`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return new vdc_backup_storage_sample_series_1.VdcBackupStorageSampleSeries(json);
            });
        });
    }
    /**
     * Lists bills for IaaS backup in the specified time range.
     * Both start and end time query params default to the current month.
     *
     * @param {string} start Specifies the start of the range as a year-month in the
     * ISO-8601 calendar system, such as 2007-12. (Optional)
     * @param {string} end Specifies the end of the range as a year-month in the
     * ISO-8601 calendar system, such as 2007-12. (Optional)
     * @return {Promise<Array<IaasBackupBill>>} the list of bills
     */
    /* istanbul ignore next: autogenerated */
    listIaasBackupBills(start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/iaas-backup-bills`, {
                params: {
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new iaas_backup_bill_1.IaasBackupBill(it));
            });
        });
    }
    /**
     * Lists IaaS backup subscriptions that were active in the specified time range.
     *
     * @param {number} startTimeMillis the start time in epoch millis
     * @param {number} endTimeMillis the end time in epoch millis
     * @return {Promise<Array<IaasBackupSubscription>>} list of subscriptions
     */
    /* istanbul ignore next: autogenerated */
    listIaasBackupSubscriptions(startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/iaas-backup-subscriptions`, {
                params: {
                    startTimeMillis: startTimeMillis,
                    endTimeMillis: endTimeMillis
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new iaas_backup_subscription_1.IaasBackupSubscription(it));
            });
        });
    }
    /**
     * Get zerto continuity performance samples series
     */
    getZertoPerfSamples(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vdcs/${this.uuid}/zerto-performance/vdc:${request.counter.name}::latest`, {
                params: {
                    start: request.start,
                    end: request.end
                }
            })
                .then(response => {
                return new perf_samples_series_1.PerfSamplesSeries(response.data);
            });
        });
    }
}
exports.Vdc = Vdc;
internal_compatibility_1.applyMixins(Vdc, [entity_with_perf_samples_1.EntityWithPerfSamples]);


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamicMember = void 0;
/**
 * Dynamic Member.
 */
/* istanbul ignore next: autogenerated */
class DynamicMember {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get operator.
     * @returns {SecurityGroupOperatorType}
     */
    get operator() {
        return this._json.operator;
    }
    /**
     * Get criteria.
     * @returns {Array<CriteriaJson>}
     */
    get criteria() {
        return this._json.criteria;
    }
    /**
     * Get the json representation of this class.
     * @returns {DynamicMemberJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DynamicMember = DynamicMember;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMember = void 0;
/**
 * Security Group Member.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMember {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMember = SecurityGroupMember;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpandedVpg = void 0;
const service_profile_1 = __webpack_require__(234);
const vpg_entities_1 = __webpack_require__(96);
const vpg_vm_1 = __webpack_require__(235);
/**
 * Expanded VPG.
 */
/* istanbul ignore next: autogenerated */
class ExpandedVpg {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * The ID of the company that the VPG belongs to.
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get service profile.
     */
    get serviceProfile() {
        return this._json.service_profile ? new service_profile_1.ServiceProfile(this._json.service_profile) : null;
    }
    /**
     * Get vms.
     * @returns {Array<VpgVm>}
     */
    get vms() {
        return this._json.vms.map(it => new vpg_vm_1.VpgVm(it));
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get service profile uuid.
     * @returns {string}
     */
    get serviceProfileUuid() {
        return this._json.service_profile_uuid;
    }
    /**
     * Get vpg identifier.
     * @returns {string}
     */
    get vpgIdentifier() {
        return this._json.vpg_identifier;
    }
    /**
     * Get vpg name.
     * @returns {string}
     */
    get vpgName() {
        return this._json.vpg_name;
    }
    /**
     * Get organization name.
     * @returns {string}
     */
    get organizationName() {
        return this._json.organization_name;
    }
    /**
     * Get actual rpo.
     * @returns {number}
     */
    get actualRpo() {
        return this._json.actual_rpo;
    }
    /**
     * Get entities.
     * @returns {VpgEntitiesJson}
     */
    get entities() {
        return new vpg_entities_1.VpgEntities(this._json.entities);
    }
    /**
     * Get status.
     * @returns {VpgStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get sub status.
     * @returns {VpgSubStatus}
     */
    get subStatus() {
        return this._json.sub_status;
    }
    /**
     * Get priority.
     * @returns {VpgPriority}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get vms count.
     * @returns {number}
     */
    get vmsCount() {
        return this._json.vms_count;
    }
    /**
     * Get last test.
     * @returns {number}
     */
    get lastTest() {
        return this._json.last_test;
    }
    /**
     * Get source site.
     * @returns {string}
     */
    get sourceSite() {
        return this._json.source_site;
    }
    /**
     * Get target site.
     * @returns {string}
     */
    get targetSite() {
        return this._json.target_site;
    }
    /**
     * Get provisioned storage in mb.
     * @returns {number}
     */
    get provisionedStorageInMb() {
        return this._json.provisioned_storage_in_mb;
    }
    /**
     * Get used storage in mb.
     * @returns {number}
     */
    get usedStorageInMb() {
        return this._json.used_storage_in_mb;
    }
    /**
     * Get iops.
     * @returns {number}
     */
    get iops() {
        return this._json.iops;
    }
    /**
     * Get throughput in mb.
     * @returns {number}
     */
    get throughputInMb() {
        return this._json.throughput_in_mb;
    }
    /**
     * Get service profile identifier.
     * @returns {string}
     */
    get serviceProfileIdentifier() {
        return this._json.service_profile_identifier;
    }
    /**
     * Get backup enabled.
     * @returns {boolean}
     */
    get backupEnabled() {
        return this._json.backup_enabled;
    }
    /**
     * Get recovery site identifier.
     * @returns {string}
     */
    get recoverySiteIdentifier() {
        return this._json.recovery_site_identifier;
    }
    /**
     * Get protected site identifier.
     * @returns {string}
     */
    get protectedSiteIdentifier() {
        return this._json.protected_site_identifier;
    }
    /**
     * Get active process stage.
     * @returns {ActiveProcessStage}
     */
    get activeProcessStage() {
        return this._json.active_process_stage;
    }
    /**
     * Get recovery journal used storage mb.
     * @returns {number}
     */
    get recoveryJournalUsedStorageInMb() {
        return this._json.recovery_journal_used_storage_in_mb;
    }
    /**
     * Get recovery journal provisioned storage in mb for Vpg
     * @returns {number} recovery journal provisioned storage in mb
     */
    get recoveryJournalProvisionedStorageInMb() {
        return this._json.recovery_journal_provisioned_storage_in_mb;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get updated date.
     * @returns {number}
     */
    get updatedDate() {
        return this._json.updated_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {ExpandedVpgJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Return whether or not the vpg is failing over or not.
     * @returns {boolean}
     */
    isFailingOver() {
        return this.status === 'FAILING_OVER' || this.activeProcessStage !== 'NONE';
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ExpandedVpg = ExpandedVpg;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgEntities = void 0;
/**
 * Vpg Entities.
 */
class VpgEntities {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get source for Vpg Entities
     * @returns {EnvironmentType} source
     */
    get source() {
        return this._json.source;
    }
    /**
     * Get target for Vpg Entities
     * @returns {EnvironmentType}
     */
    get target() {
        return this._json.target;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgVmJson} the API object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgEntities = VpgEntities;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoveryGroupDescriptor = void 0;
/**
 * Recovery group descriptor
 */
/* istanbul ignore next: autogenerated */
class RecoveryGroupDescriptor {
    constructor(firstParam, uuid, type, orderIndex) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                uuid: uuid,
                type: type,
                order_index: orderIndex
            };
        }
        else if (firstParam instanceof RecoveryGroupDescriptor) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get type.
     * @returns {RecoveryGroupType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get order index.
     * @returns {number}
     */
    get orderIndex() {
        return this._json.order_index;
    }
    /**
     * Get the json representation of this class.
     * @returns {RecoveryGroupDescriptorJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RecoveryGroupDescriptor = RecoveryGroupDescriptor;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityProvider = void 0;
/* istanbul ignore next: autogenerated */
class IdentityProvider {
    constructor(_jsonData) {
        this._jsonData = _jsonData;
    }
    /**
     * Whether or not to force all users to sign in using SSO. If enabled
     * all users, even local AD users are forced to sign in through SSO.
     * @returns {boolean} enforceSso
     */
    get enforceSso() {
        return this._jsonData.enforce_sso;
    }
    /**
     * Whether or not Identity Provider is enabled
     * @returns {boolean} enabled
     */
    get enabled() {
        return this._jsonData.enabled;
    }
    /**
     * Returns the identity provider type.
     * @returns {IdentityProviderType} type
     */
    get type() {
        return this._jsonData.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {IdentityProviderJson}
     */
    get json() {
        return Object.assign({}, this._jsonData);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._jsonData, undefined, 2);
    }
}
exports.IdentityProvider = IdentityProvider;


/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ timeInterval; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ TimeInterval; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/async.js
var scheduler_async = __webpack_require__(8);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/scan.js
var scan = __webpack_require__(44);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js + 1 modules
var Observable = __webpack_require__(3);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/from.js + 2 modules
var from = __webpack_require__(21);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/empty.js
var empty = __webpack_require__(31);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/defer.js
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new Observable["a" /* Observable */](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(from["a" /* from */])(input) : Object(empty["a" /* empty */])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/map.js
var map = __webpack_require__(15);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timeInterval.js
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
    if (scheduler === void 0) {
        scheduler = scheduler_async["a" /* async */];
    }
    return function (source) {
        return defer(function () {
            return source.pipe(Object(scan["a" /* scan */])(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(map["a" /* map */])(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        });
    };
}
var TimeInterval = /*@__PURE__*/ (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());

//# sourceMappingURL=timeInterval.js.map


/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33);
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65);
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__[/* Subscriber */ "a"]) {
            return nextOrObserver;
        }
        if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__[/* rxSubscriber */ "a"]]) {
            return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__[/* rxSubscriber */ "a"]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__[/* Subscriber */ "a"](_Observer__WEBPACK_IMPORTED_MODULE_2__[/* empty */ "a"]);
    }
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__[/* Subscriber */ "a"](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* observable */ "a"]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InnerSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isInteropObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* observable */ "a"]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__[/* iterator */ "a"]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return observeOn; });
/* unused harmony export ObserveOnOperator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObserveOnSubscriber; });
/* unused harmony export ObserveOnMessage */
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "b"](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[/* Notification */ "a"].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[/* Notification */ "a"].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[/* Notification */ "a"].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[/* Subscriber */ "a"]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return not; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ SubscribeOnObservable_SubscribeOnObservable; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js + 1 modules
var Observable = __webpack_require__(3);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/Immediate.js
var Immediate = __webpack_require__(78);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js + 1 modules
var AsyncAction = __webpack_require__(64);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction_AsapAction = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = Immediate["a" /* Immediate */].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            Immediate["a" /* Immediate */].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(AsyncAction["a" /* AsyncAction */]));

//# sourceMappingURL=AsapAction.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js
var AsyncScheduler = __webpack_require__(61);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler_AsapScheduler = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler["a" /* AsyncScheduler */]));

//# sourceMappingURL=AsapScheduler.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduler/asap.js
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asapScheduler = /*@__PURE__*/ new AsapScheduler_AsapScheduler(AsapAction_AsapAction);
var asap = asapScheduler;
//# sourceMappingURL=asap.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isNumeric.js
var isNumeric = __webpack_require__(29);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




var SubscribeOnObservable_SubscribeOnObservable = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) {
            delayTime = 0;
        }
        if (scheduler === void 0) {
            scheduler = asap;
        }
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.delayTime = delayTime;
        _this.scheduler = scheduler;
        if (!Object(isNumeric["a" /* isNumeric */])(delayTime) || delayTime < 0) {
            _this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            _this.scheduler = asap;
        }
        return _this;
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) {
            delay = 0;
        }
        if (scheduler === void 0) {
            scheduler = asap;
        }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(Observable["a" /* Observable */]));

//# sourceMappingURL=SubscribeOnObservable.js.map


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return schedulePromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[/* Subscription */ "a"]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return scheduleIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[/* Subscription */ "a"]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__[/* iterator */ "a"]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[/* Observable */ "a"](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IlandAbstractAuthProvider = void 0;
/**
 * Abstract Authorization provider class
 */
class IlandAbstractAuthProvider {
    /**
     * Return an Observable to get an up to date token over time.
     * @returns {Observable<string>}
     */
    getTokenObservable() {
        return this._tokenObservable;
    }
}
exports.IlandAbstractAuthProvider = IlandAbstractAuthProvider;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_AUTH_TOKEN_MIN_VALIDITY = exports.DEFAULT_REALM = exports.DEFAULT_AUTH_URL = void 0;
const basic_configuration_1 = __webpack_require__(114);
exports.DEFAULT_AUTH_URL = `${basic_configuration_1.BasicConfiguration.getAuthorizationUrl()}/auth`;
exports.DEFAULT_REALM = 'iland-core';
exports.DEFAULT_AUTH_TOKEN_MIN_VALIDITY = 15; // value in seconds.


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasicConfiguration = void 0;
/**
 * Basic configurations for SDK using environment variables.
 */
class BasicConfiguration {
    /**
     * Get the default API url.
     * @returns {string}
     */
    static getApiUrl() {
        if (process.env.ILAND_API_URL && process.env.ILAND_API_URL !== 'undefined') {
            return process.env.ILAND_API_URL;
        }
        else {
            return 'https://api.ilandcloud.com';
        }
    }
    /**
     * Get the default authorisation url.
     * @returns {string}
     */
    static getAuthorizationUrl() {
        if (process.env.ILAND_AUTHORIZATION_URL && process.env.ILAND_AUTHORIZATION_URL !== 'undefined') {
            return process.env.ILAND_AUTHORIZATION_URL;
        }
        else {
            return 'https://console.ilandcloud.com';
        }
    }
}
exports.BasicConfiguration = BasicConfiguration;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(621)))

/***/ }),
/* 115 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__115__;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupDiskUnit = void 0;
/**
 * Backup Group Disk Unit.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupDiskUnit {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the Id of the controller bus that controls the disk.
     * @returns {number} bus number
     */
    get busNumber() {
        return this._json.bus_number;
    }
    /**
     * Gets the controller type like SCSI, or IDE etc.
     * @returns {string} controller type
     */
    get controllerType() {
        return this._json.controller_type;
    }
    /**
     * Gets the disk file name. This is the VMDK name and not the flat file name.
     * @returns {number} unit number
     */
    get unitNumber() {
        return this._json.unit_number;
    }
    /**
     * Gets the json representation of this class.
     * @returns {BackupGroupDiskUnitJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Gets the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupDiskUnit = BackupGroupDiskUnit;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupIndexingPolicy = void 0;
/**
 * Backup Group Disk Unit.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupIndexingPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets a list of directories to index.
     * @returns {Array<string>} allow prefixes
     */
    get allowPrefixes() {
        return this._json.allow_prefixes;
    }
    /**
     * Gets a list of directories to exclude from indexing.
     * @returns {Array<string>} deny prefixes
     */
    get denyPrefixes() {
        return this._json.deny_prefixes;
    }
    /**
     * Indicates if the files found in an Object (such as a VM) should be indexed.
     * @returns {boolean} disable indexing
     */
    get disableIndexing() {
        return this._json.disable_indexing;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupIndexingPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupIndexingPolicy = BackupGroupIndexingPolicy;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BlackoutPeriod = void 0;
const time_of_day_1 = __webpack_require__(79);
/**
 * Blackout Period.
 */
/* istanbul ignore next: autogenerated */
class BlackoutPeriod {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get day.
     * @returns {Day | null}
     */
    get day() {
        return this.json.day || null;
    }
    /**
     * Get end time.
     * @returns {TimeOfDay}
     */
    get endTime() {
        return new time_of_day_1.TimeOfDay(this._json.end_time);
    }
    /**
     * Get start time.
     * @returns {TimeOfDay}
     */
    get startTime() {
        return new time_of_day_1.TimeOfDay(this._json.start_time);
    }
    /**
     * Get the json representation of this class.
     * @returns {BlackoutPeriodJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BlackoutPeriod = BlackoutPeriod;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendedRetentionPolicy = void 0;
/**
 * Extended Retention Policy.
 */
/* istanbul ignore next: autogenerated */
class ExtendedRetentionPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup run type.
     * @returns {RunType | null}
     */
    get backupRunType() {
        return this._json.backup_run_type || null;
    }
    /**
     * Get days to keep.
     * @returns {number}
     */
    get daysToKeep() {
        return this._json.days_to_keep;
    }
    /**
     * Get multiplier.
     * @returns {number}
     */
    get multiplier() {
        return this._json.multiplier;
    }
    /**
     * Get periodicity.
     * @returns {ReplicationPeriodicity}
     */
    get periodicity() {
        return this._json.periodicity;
    }
    /**
     * Get the json representation of this class.
     * @returns {ExtendedRetentionPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ExtendedRetentionPolicy = ExtendedRetentionPolicy;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SchedulingPolicy = void 0;
const continuous_schedule_1 = __webpack_require__(251);
const daily_schedule_1 = __webpack_require__(252);
const monthly_schedule_1 = __webpack_require__(253);
/**
 * Scheduling Policy.
 */
/* istanbul ignore next: autogenerated */
class SchedulingPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get continuous schedule.
     * @returns {ContinuousSchedule | null}
     */
    get continuousSchedule() {
        return this._json.continuous_schedule ? new continuous_schedule_1.ContinuousSchedule(this._json.continuous_schedule) : null;
    }
    /**
     * Get daily schedule.
     * @returns {DailySchedule | null}
     */
    get dailySchedule() {
        return this._json.daily_schedule ? new daily_schedule_1.DailySchedule(this._json.daily_schedule) : null;
    }
    /**
     * Get monthly schedule.
     * @returns {MonthlySchedule | null}
     */
    get monthlySchedule() {
        return this._json.monthly_schedule ? new monthly_schedule_1.MonthlySchedule(this._json.monthly_schedule) : null;
    }
    /**
     * Get periodicity.
     * @returns {Periodicity}
     */
    get periodicity() {
        return this._json.periodicity;
    }
    /**
     * Get the json representation of this class.
     * @returns {SchedulingPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SchedulingPolicy = SchedulingPolicy;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotArchivalCopyPolicy = void 0;
const archival_external_target_1 = __webpack_require__(122);
/**
 * Snapshot Archival Copy Policy.
 */
/* istanbul ignore next: autogenerated */
class SnapshotArchivalCopyPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get whether snapshots were not captured for all objects in the group (true) or
     * all objects were successfully captured (false).
     * @returns {boolean}
     */
    get isCopyPartial() {
        return this._json.copy_partial;
    }
    /**
     * Get days to keep.
     * @returns {number}
     */
    get daysToKeep() {
        return this._json.days_to_keep;
    }
    /**
     * Get multiplier.
     * @returns {number}
     */
    get multiplier() {
        return this._json.multiplier;
    }
    /**
     * Get periodicity.
     * @returns {ReplicationPeriodicity}
     */
    get periodicity() {
        return this._json.periodicity;
    }
    /**
     * Get archival external target.
     * @returns {ArchivalExternalTarget}
     */
    get target() {
        return new archival_external_target_1.ArchivalExternalTarget(this._json.target);
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotArchivalCopyPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotArchivalCopyPolicy = SnapshotArchivalCopyPolicy;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ArchivalExternalTarget = void 0;
/**
 * Archival External Target.
 */
/* istanbul ignore next: autogenerated */
class ArchivalExternalTarget {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vault id.
     * @returns {number}
     */
    get vaultId() {
        return this._json.vault_id;
    }
    /**
     * Get vault name.
     * @returns {string}
     */
    get vaultName() {
        return this._json.vault_name;
    }
    /**
     * Get vault type.
     * @returns {VaultType}
     */
    get vaultType() {
        return this._json.vault_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {ArchivalExternalTargetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ArchivalExternalTarget = ArchivalExternalTarget;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotReplicationCopyPolicy = void 0;
const replication_target_settings_1 = __webpack_require__(124);
/**
 * Snapshot Replication Copy Policy.
 */
/* istanbul ignore next: autogenerated */
class SnapshotReplicationCopyPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get whether snapshots were not captured for all objects in the group (true) or
     * all objects were successfully captured (false).
     * @returns {boolean}
     */
    get isCopyPartial() {
        return this._json.copy_partial;
    }
    /**
     * Get days to keep.
     * @returns {number}
     */
    get daysToKeep() {
        return this._json.days_to_keep;
    }
    /**
     * Get multiplier.
     * @returns {number}
     */
    get multiplier() {
        return this._json.multiplier;
    }
    /**
     * Get periodicity.
     * @returns {ReplicationPeriodicity}
     */
    get periodicity() {
        return this._json.periodicity;
    }
    /**
     * Get target.
     * @returns {ReplicationTargetSettings}
     */
    get target() {
        return new replication_target_settings_1.ReplicationTargetSettings(this._json.target);
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotReplicationCopyPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotReplicationCopyPolicy = SnapshotReplicationCopyPolicy;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationTargetSettings = void 0;
/**
 * Replication Target Settings.
 */
/* istanbul ignore next: autogenerated */
class ReplicationTargetSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get cluster ID.
     * @returns {number}
     */
    get clusterId() {
        return this._json.cluster_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {ReplicationTargetSettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ReplicationTargetSettings = ReplicationTargetSettings;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyRunStats = void 0;
/**
 * Copy Run Stats.
 */
/* istanbul ignore next: autogenerated */
class CopyRunStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        var _a;
        return (_a = this._json.end_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get is incremental.
     * @returns {boolean | null}
     */
    get isIncremental() {
        var _a;
        return (_a = this._json.is_incremental) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get logical bytes transferred.
     * @returns {number}
     */
    get logicalBytesTransferred() {
        return this._json.logical_bytes_transferred;
    }
    /**
     * Get logical size bytes.
     * @returns {number}
     */
    get logicalSizeBytes() {
        return this._json.logical_size_bytes;
    }
    /**
     * Get logical transfer rate bps.
     * @returns {number}
     */
    get logicalTransferRateBps() {
        return this._json.logical_transfer_rate_bps;
    }
    /**
     * Get physical bytes transferred.
     * @returns {number}
     */
    get physicalBytesTransferred() {
        return this._json.physical_bytes_transferred;
    }
    /**
     * Get start time.
     * @returns {number | null}
     */
    get startTime() {
        var _a;
        return (_a = this._json.start_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {CopyRunStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CopyRunStats = CopyRunStats;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupSummaryStats = void 0;
const backup_summary_stats_1 = __webpack_require__(68);
/**
 * Backup Group Summary Stats.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupSummaryStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup group uid.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get stats.
     * @returns {BackupSummaryStats}
     */
    get stats() {
        return new backup_summary_stats_1.BackupSummaryStats(this._json.stats);
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupSummaryStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupSummaryStats = BackupGroupSummaryStats;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Sample = void 0;
/**
 * Sample.
 */
/* istanbul ignore next: autogenerated */
class Sample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get components.
     * The component samples that contribute to the total value. A map of backup
     * cluster UID to value in bytes. Value may be null if the component has no
     * contribution.
     * @returns {Record<string, number | null>}
     */
    get components() {
        return this._json.components;
    }
    /**
     * Get timestamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get value.
     * @returns {number | null}
     */
    get value() {
        return this._json.value || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {SampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Sample = Sample;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcBackupSummaryStats = void 0;
const backup_group_summary_stats_1 = __webpack_require__(126);
const backup_summary_stats_1 = __webpack_require__(68);
/**
 * vDC Backup Summary Stats.
 */
/* istanbul ignore next: autogenerated */
class VdcBackupSummaryStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get stats.
     * @returns {BackupSummaryStats}
     */
    get stats() {
        return new backup_summary_stats_1.BackupSummaryStats(this._json.stats);
    }
    /**
     * Get backup group stats.
     * @returns {Array<BackupGroupSummaryStats>}
     */
    get backupGroupStats() {
        var _a;
        return (_a = this._json.backup_group_stats) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_summary_stats_1.BackupGroupSummaryStats(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcBackupSummaryStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcBackupSummaryStats = VdcBackupSummaryStats;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgBackupStatus = void 0;
const vdc_backup_status_1 = __webpack_require__(130);
/**
 * Org Backup Status.
 */
/* istanbul ignore next: autogenerated */
class OrgBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get child vDC statuses.
     * @returns {Array<VdcBackupStatus>}
     */
    get childVdcStatuses() {
        return this._json.child_vdc_statuses.map(it => new vdc_backup_status_1.VdcBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgBackupStatus = OrgBackupStatus;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcBackupStatus = void 0;
const backup_group_status_descriptor_1 = __webpack_require__(80);
const vapp_backup_status_1 = __webpack_require__(131);
/**
 * vDC Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VdcBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get backup groups.
     * @returns {Array<BackupGroupStatusDescriptor>}
     */
    get backupGroups() {
        return this._json.backup_groups.map(it => new backup_group_status_descriptor_1.BackupGroupStatusDescriptor(it));
    }
    /**
     * Get child vApp statuses.
     * @returns {Array<VappBackupStatus>}
     */
    get childVAppStatuses() {
        return this._json.child_vapp_statuses.map(it => new vapp_backup_status_1.VappBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcBackupStatus = VdcBackupStatus;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappBackupStatus = void 0;
const backup_group_status_descriptor_1 = __webpack_require__(80);
const vm_backup_status_1 = __webpack_require__(132);
/**
 * vApp Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VappBackupStatus {
    constructor(_backupStatusJson) {
        this._backupStatusJson = _backupStatusJson;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._backupStatusJson.uuid;
    }
    /**
     * Get backup groups.
     * @returns {Array<BackupGroupStatusDescriptor>}
     */
    get backupGroups() {
        return this._backupStatusJson.backup_groups.map(it => new backup_group_status_descriptor_1.BackupGroupStatusDescriptor(it));
    }
    /**
     * Get child vm statuses.
     * @returns {Array<VmBackupStatus>}
     */
    get childVmStatuses() {
        return this._backupStatusJson.child_vm_statuses.map(it => new vm_backup_status_1.VmBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VappBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._backupStatusJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._backupStatusJson, undefined, 2);
    }
}
exports.VappBackupStatus = VappBackupStatus;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmBackupStatus = void 0;
const backup_group_status_descriptor_1 = __webpack_require__(80);
/**
 * VM Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VmBackupStatus {
    constructor(_backupStatusJson) {
        this._backupStatusJson = _backupStatusJson;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._backupStatusJson.uuid;
    }
    /**
     * Get backup groups.
     * @returns {Array<BackupGroupStatusDescriptor>}
     */
    get backupGroups() {
        return this._backupStatusJson.backup_groups.map(it => new backup_group_status_descriptor_1.BackupGroupStatusDescriptor(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VmBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._backupStatusJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._backupStatusJson, undefined, 2);
    }
}
exports.VmBackupStatus = VmBackupStatus;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AlternateVappParams = void 0;
/**
 * Alternate vApp params.
 */
/* istanbul ignore next: autogenerated */
class AlternateVappParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vApp uuid.
     * The UUID of the vApp that the recovered VMs should be recovered in.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get storage profile.
     * The UUID of the storage profile that the recovered objects should be imported to.
     * @returns {string}
     */
    get storageProfile() {
        return this._json.storage_profile;
    }
    /**
     * Get the json representation of this class.
     * @returns {AlternateVappParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AlternateVappParams = AlternateVappParams;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceTreeDetails = void 0;
const device_node_1 = __webpack_require__(277);
/**
 * Device tree details.
 */
/* istanbul ignore next: autogenerated */
class DeviceTreeDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get device length.
     * @returns {number}
     */
    get deviceLength() {
        return this._json.device_length;
    }
    /**
     * Get combine method.
     * Specifies how to combine the children of this node. The combining strategy
     * for child devices. Some of these strategies imply constraint on the number
     * of child devices. e.g. RAID5 will have 5 children. 'LINEAR' indicates
     * children are juxtaposed to form this device.
     * @returns {CombineMethod}
     */
    get combineMethod() {
        return this._json.combine_method;
    }
    /**
     * Get device nodes.
     * @returns {Array<DeviceNode>}
     */
    get deviceNodes() {
        return this._json.device_nodes.map(it => new device_node_1.DeviceNode(it));
    }
    /**
     * Get stripe size.
     * @returns {number}
     */
    get stripeSize() {
        return this._json.stripe_size;
    }
    /**
     * Get the json representation of this class.
     * @returns {DeviceTreeDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DeviceTreeDetails = DeviceTreeDetails;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSnapshotInfo = void 0;
const snapshot_attempt_1 = __webpack_require__(285);
/**
 * File snapshot info.
 */
/* istanbul ignore next: autogenerated */
class FileSnapshotInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get modified time.
     * @returns {number | null}
     */
    get modifiedTime() {
        return this._json.modified_time || null;
    }
    /**
     * Get size bytes.
     * @returns {number}
     */
    get sizeBytes() {
        return this._json.size_bytes;
    }
    /**
     * Get has local copy.
     * @returns {boolean}
     */
    get hasLocalCopy() {
        return this._json.has_local_copy;
    }
    /**
     * Get has remote copy.
     * @returns {boolean}
     */
    get hasRemoteCopy() {
        return this._json.has_remote_copy;
    }
    /**
     * Get has archival copy.
     * @returns {boolean}
     */
    get hasArchivalCopy() {
        return this._json.has_archival_copy;
    }
    /**
     * Get snapshot.
     * @returns {SnapshotAttempt}
     */
    get snapshot() {
        return new snapshot_attempt_1.SnapshotAttempt(this._json.snapshot);
    }
    /**
     * Get the json representation of this class.
     * @returns {FileSnapshotInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FileSnapshotInfo = FileSnapshotInfo;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FilesystemVolume = void 0;
const disk_1 = __webpack_require__(284);
const logical_volume_1 = __webpack_require__(287);
/**
 * Filesystem volume.
 */
/* istanbul ignore next: autogenerated */
class FilesystemVolume {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get is supported.
     * If true, this is a supported filesystem volume type.
     * @returns {boolean}
     */
    get isSupported() {
        return this._json.is_supported;
    }
    /**
     * Get disks.
     * Array of Disks and Partitions. Specifies information about all the disks and partitions
     * needed to mount this logical volume.
     * @returns {Array<Disk>}
     */
    get disks() {
        return this._json.disks.map(it => new disk_1.Disk(it));
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get logical volume.
     * @returns {LogicalVolume | null}
     */
    get logicalVolume() {
        return this._json.logical_volume ? new logical_volume_1.LogicalVolume(this._json.logical_volume) : null;
    }
    /**
     * Get logical volume type.
     * @returns {LogicalVolumeType}
     */
    get logicalVolumeType() {
        return this._json.logical_volume_type;
    }
    /**
     * Get display name.
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get filesystem uuid.
     * @returns {string}
     */
    get filesystemUuid() {
        return this._json.filesystem_uuid;
    }
    /**
     * Get filesystem type.
     * @returns {string}
     */
    get filesystemType() {
        return this._json.filesystem_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {FilesystemVolumeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FilesystemVolume = FilesystemVolume;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmBackupSnapshot = void 0;
const snapshot_version_1 = __webpack_require__(289);
/**
 * VM Backup Snapshot.
 */
/* istanbul ignore next: autogenerated */
class VmBackupSnapshot {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup group uid.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get VM uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get company ID.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get versions.
     * @returns {Array<SnapshotVersion>}
     */
    get versions() {
        return this._json.versions.map(it => new snapshot_version_1.SnapshotVersion(it));
    }
    /**
     * Get OS type.
     * @returns {string}
     */
    get osType() {
        return this._json.os_type;
    }
    /**
     * Get backup group name.
     * @returns {string}
     */
    get backupGroupName() {
        return this._json.backup_group_name;
    }
    /**
     * Get vApp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vDC uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get VM name.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmBackupSnapshotJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmBackupSnapshot = VmBackupSnapshot;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskFilterParams = void 0;
/**
 * Task Filter Params.
 */
/* istanbul ignore next: autogenerated */
class TaskFilterParams {
    constructor(firstParam, entityType, includeDescendantTasks, synced, username, timestampAfter, timestampBefore, queryTimestamp, offset, limit, order) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                entity_uuid: firstParam,
                entity_type: entityType,
                include_descendant_tasks: includeDescendantTasks,
                synced: synced,
                username: username,
                timestamp_after: timestampAfter,
                timestamp_before: timestampBefore,
                query_timestamp: queryTimestamp,
                offset: offset,
                limit: limit,
                order: order
            };
        }
        else if (firstParam instanceof TaskFilterParams) {
            // Copy constructor
            this._json = Object.assign({}, firstParam.json);
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Get include descendant tasks.
     * @returns {boolean}
     */
    get includeDescendantTasks() {
        return this._json.include_descendant_tasks;
    }
    /**
     * Sets the filter property for including or excluding descendant tasks of the entity.
     * @param {boolean} val
     * @returns {TaskFilterParams}
     */
    setIncludeDescendants(val) {
        this._json.include_descendant_tasks = val;
        return this;
    }
    /**
     * Get synced.
     * @returns {boolean}
     */
    get synced() {
        return this._json.synced;
    }
    /**
     * Sets the filter property for excluding tasks with a synced field that doesn't match the specified boolean value.
     * @param {boolean} val
     * @returns {TaskFilterParams}
     */
    setSynced(val) {
        this._json.synced = val;
        return this;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Sets the filter property for excluding tasks that were not initiated by the user with the specified username.
     * @param {string} val
     * @returns {TaskFilterParams}
     */
    setUsername(val) {
        this._json.username = val;
        return this;
    }
    /**
     * Get timestamp after.
     * @returns {number}
     */
    get timestampAfter() {
        return this._json.timestamp_after;
    }
    /**
     * Sets the filter property for excluding tasks that do not have a timestamp after the specified epoch timestamp.
     * @param {number} val
     * @returns {TaskFilterParams}
     */
    setTimestampAfter(val) {
        this._json.timestamp_after = val;
        return this;
    }
    /**
     * Get timestamp before.
     * @returns {number}
     */
    get timestampBefore() {
        return this._json.timestamp_before;
    }
    /**
     * Sets the filter property for excluding tasks that do not have a timestamp before the specified epoch timestamp.
     * @param {number} val
     * @returns {TaskFilterParams}
     */
    setTimestampBefore(val) {
        this._json.timestamp_before = val;
        return this;
    }
    /**
     * Get query timestamp.
     * @returns {number}
     */
    get queryTimestamp() {
        return this._json.query_timestamp;
    }
    /**
     * Sets the query timestamp property. This property is useful for stable pagination over a query result set.
     * @param {number} val
     * @returns {TaskFilterParams}
     */
    setQueryTimestamp(val) {
        this._json.query_timestamp = val;
        return this;
    }
    /**
     * Get offset.
     * @returns {number}
     */
    get offset() {
        return this._json.offset;
    }
    /**
     * Sets the paging offset.
     * @param {number} val
     * @returns {TaskFilterParams}
     */
    setOffset(val) {
        this._json.offset = val;
        return this;
    }
    /**
     * Get limit.
     * @returns {number}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * Sets the paging limit.
     * @param {number} val
     * @returns {TaskFilterParams}
     */
    setLimit(val) {
        this._json.limit = val;
        return this;
    }
    /**
     * Get order.
     * @returns {PagingOrder}
     */
    get order() {
        return this._json.order;
    }
    /**
     * Sets the paging order.
     * @param {PagingOrder} val
     * @returns {TaskFilterParams}
     */
    setOrder(val) {
        this._json.order = val;
        return this;
    }
    /**
     * Get the json representation of this class.
     * @returns {TaskFilterParams}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    getQueryParams() {
        return {
            entityUuid: this.entityUuid,
            entityType: this.entityType,
            includeDescendantTasks: this.includeDescendantTasks,
            synced: this.synced,
            username: this.username,
            timestampAfter: this.timestampAfter,
            timestampBefore: this.timestampBefore,
            queryTimestamp: this.queryTimestamp,
            offset: this.offset,
            limit: this.limit,
            order: this.order
        };
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TaskFilterParams = TaskFilterParams;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EulaSection = void 0;
/**
 * EULA Section
 */
/* istanbul ignore next: autogenerated */
class EulaSection {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get info for Eula Section
     * @returns {string}
     */
    get info() {
        return this._json.info;
    }
    /**
     * Get license for Eula Section
     * @returns {string}
     */
    get license() {
        return this._json.license;
    }
    /**
     * Get the json representation of this class.
     * @returns {EulaSectionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EulaSection = EulaSection;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkIpScope = void 0;
const ip_range_1 = __webpack_require__(32);
const network_sub_allocation_1 = __webpack_require__(141);
/* istanbul ignore next: autogenerated */
class NetworkIpScope {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get inherited.
     * @returns {boolean}
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRange>}
     */
    get ipRanges() {
        return this._json.ip_ranges.map(ipRange => {
            return new ip_range_1.IpRange(ipRange);
        });
    }
    /**
     * Get enabled.
     * @returns {boolean | undefined}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get allocated ip addresses.
     * @returns {Array<string> | undefined}
     */
    get allocatedIpAddresses() {
        return this._json.allocated_ip_addresses;
    }
    /**
     * Get sub allocations.
     * @returns {Array<NetworkSubAllocation> | undefined}
     */
    get subAllocations() {
        return this._json.sub_allocations
            ? this._json.sub_allocations.map(alloc => {
                return new network_sub_allocation_1.NetworkSubAllocation(alloc);
            })
            : undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {NetworkIpScopeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NetworkIpScope = NetworkIpScope;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkSubAllocation = void 0;
/* istanbul ignore next: autogenerated */
class NetworkSubAllocation {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge name.
     * @returns {string}
     */
    get edgeName() {
        return this._json.edge_name;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRangeJson>}
     */
    get ipRanges() {
        return this._json.ip_ranges;
    }
    /**
     * Get the json representation of this class.
     * @returns {NetworkSubAllocationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NetworkSubAllocation = NetworkSubAllocation;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceCostAndUsage = void 0;
const cost_and_usage_1 = __webpack_require__(300);
/* istanbul ignore next: autogenerated */
class ResourceCostAndUsage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get total.
     * @returns {CostAndUsage}
     */
    get total() {
        return new cost_and_usage_1.CostAndUsage(this._json.total);
    }
    /**
     * Get reserved.
     * @returns {CostAndUsage}
     */
    get reserved() {
        return new cost_and_usage_1.CostAndUsage(this._json.reserved);
    }
    /**
     * Get burst.
     * @returns {CostAndUsage}
     */
    get burst() {
        return new cost_and_usage_1.CostAndUsage(this._json.burst);
    }
    /**
     * Get the json representation of this class.
     * @returns {ResourceCostAndUsageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ResourceCostAndUsage = ResourceCostAndUsage;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductSection = void 0;
/**
 * Product Section of a Vm/Vapp
 */
/* istanbul ignore next: autogenerated */
class ProductSection {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the product class that uniquely identifies the software product
     * (typically using reverse domain name convention).
     * @returns {string}
     */
    get productClass() {
        return this._json.product_class;
    }
    /**
     * Get the product instance, if multiple instances of the same product are installed,
     * this is used to identify the different instances.
     * @returns {string}
     */
    get productInstance() {
        return this._json.product_instance;
    }
    /**
     * Get the product.
     * Specifies the name of the product.
     * @returns {string}
     */
    get product() {
        return this._json.product;
    }
    /**
     * Get the product url that specifies a URL which shall resolve to a human readable description of the product.
     * @returns {string}
     */
    get productUrl() {
        return this._json.product_url;
    }
    /**
     * Get the full version that describes the product version in long form.
     * @returns {string}
     */
    get fullVersion() {
        return this._json.full_version;
    }
    /**
     * Get the vendor that specifies the name of the product vendor.
     * @returns {string}
     */
    get vendor() {
        return this._json.vendor;
    }
    /**
     * Get the version that specifies the product version in short form.
     * @returns {string}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get the properties that specify application-level customization parameters and are particularly relevant to
     * appliances that need to be customized during deployment
     * @returns {{ [ key: string]: Array<VmProductSectionPropertyJson> }}
     */
    get properties() {
        return this._json.properties;
    }
    /**
     * Get the info that describes product information for the service.
     * @returns {string}
     */
    get info() {
        return this._json.info;
    }
    /**
     * Get the vendor url that specifies a URL which shall resolve to a human readable description of the vendor.
     * @returns {string}
     */
    get vendorUrl() {
        return this._json.vendor_url;
    }
    /**
     * Get the json representation of this class.
     * @returns {ProductSectionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ProductSection = ProductSection;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportHeader = void 0;
/* istanbul ignore next: autogenerated */
class ReportHeader {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get report type.
     * @returns {ReportTypeJson}
     */
    get reportType() {
        return this._json.report_type;
    }
    /**
     * Get file type.
     * @returns {ReportFormat}
     */
    get fileType() {
        return this._json.file_type;
    }
    /**
     * Get created.
     * @returns {number}
     */
    get created() {
        return this._json.created;
    }
    /**
     * Get the json representation of this class.
     * @returns {ReportHeaderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ReportHeader = ReportHeader;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Snapshot = void 0;
/**
 * Snapshot for a VM or vApp.
 */
/* istanbul ignore next: autogenerated */
class Snapshot {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return new Date(this._json.creation_date);
    }
    /**
     * Get size.
     * @returns {number}
     */
    get size() {
        return this._json.size;
    }
    /**
     * Get powered on.
     * @returns {boolean}
     */
    get poweredOn() {
        return this._json.powered_on;
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Snapshot = Snapshot;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpIpPool = void 0;
const edge_gateway_dhcp_options_1 = __webpack_require__(147);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpIpPool {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get auto configure dns.
     * @returns {boolean}
     */
    get autoConfigureDNS() {
        return this._json.auto_configure_dns;
    }
    /**
     * Get default gateway.
     * @returns {string}
     */
    get defaultGateway() {
        return this._json.default_gateway;
    }
    /**
     * Get domain name.
     * @returns {string}
     */
    get domainName() {
        return this._json.domain_name;
    }
    /**
     * Get primary name server.
     * @returns {string}
     */
    get primaryNameServer() {
        return this._json.primary_name_server;
    }
    /**
     * Get secondary name server.
     * @returns {string}
     */
    get secondaryNameServer() {
        return this._json.secondary_name_server;
    }
    /**
     * Get pool id.
     * @returns {string}
     */
    get poolId() {
        return this._json.pool_id;
    }
    /**
     * Get ip range.
     * @returns {string}
     */
    get ipRange() {
        return this._json.ip_range;
    }
    /**
     * Get subnet mask.
     * @returns {string}
     */
    get subnetMask() {
        return this._json.subnet_mask;
    }
    /**
     * Get lease time.
     * @returns {string}
     */
    get leaseTime() {
        return this._json.lease_time;
    }
    /**
     * Get allow huge range.
     * @returns {boolean}
     */
    get allowHugeRange() {
        return this._json.allow_huge_range;
    }
    /**
     * Get next server.
     * @returns {string}
     */
    get nextServer() {
        return this._json.next_server;
    }
    /**
     * Get dhcp options.
     * @returns {EdgeGatewayDhcpOptions}
     */
    get dhcpOptions() {
        return new edge_gateway_dhcp_options_1.EdgeGatewayDhcpOptions(this._json.dhcp_options);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpIpPoolJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpIpPool = EdgeGatewayDhcpIpPool;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpOther = exports.EdgeGatewayDhcpOption150 = exports.EdgeGatewayDhcpOption121 = exports.EdgeGatewayDhcpOptions = void 0;
const edge_gateway_dhcp_static_route_1 = __webpack_require__(322);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpOptions {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get option121.
     * @returns {EdgeGatewayDhcpOption121}
     */
    get option121() {
        return new EdgeGatewayDhcpOption121(this._json.option121);
    }
    /**
     * Get option66.
     * @returns {string}
     */
    get option66() {
        return this._json.option66;
    }
    /**
     * Get option67.
     * @returns {string}
     */
    get option67() {
        return this._json.option67;
    }
    /**
     * Get option150.
     * @returns {EdgeGatewayDhcpOption150}
     */
    get option150() {
        return new EdgeGatewayDhcpOption150(this._json.option150);
    }
    /**
     * Get option26.
     * @returns {string}
     */
    get option26() {
        return this._json.option26;
    }
    /**
     * Get other.
     * @returns {Array<EdgeGatewayDhcpOther>}
     */
    get other() {
        return this._json.other.map(it => new EdgeGatewayDhcpOther(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpOptionsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpOptions = EdgeGatewayDhcpOptions;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpOption121 {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get static routes.
     * @returns {Array<EdgeGatewayDhcpStaticRoute>}
     */
    get staticRoutes() {
        return this._json.static_routes.map(it => new edge_gateway_dhcp_static_route_1.EdgeGatewayDhcpStaticRoute(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpOption121Json}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpOption121 = EdgeGatewayDhcpOption121;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpOption150 {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get servers.
     * @returns {Array<string>}
     */
    get servers() {
        return this._json.servers;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpOption150Json}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpOption150 = EdgeGatewayDhcpOption150;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpOther {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get code.
     * @returns {string}
     */
    get code() {
        return this._json.code;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpOtherJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpOther = EdgeGatewayDhcpOther;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpLogging = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpLogging {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable.
     * @returns {boolean}
     */
    get enable() {
        return this._json.enable;
    }
    /**
     * Get log level.
     * @returns {LogLevelType}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpLoggingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpLogging = EdgeGatewayDhcpLogging;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelay = void 0;
const edge_gateway_dhcp_relay_agent_1 = __webpack_require__(323);
const edge_gateway_dhcp_relay_server_1 = __webpack_require__(324);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelay {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get relay server.
     * @returns {EdgeGatewayDhcpRelayServer}
     */
    get relayServer() {
        if (!this._json.relay_server) {
            return undefined;
        }
        return new edge_gateway_dhcp_relay_server_1.EdgeGatewayDhcpRelayServer(this._json.relay_server);
    }
    /**
     * Get relay agents.
     * @returns {Array<EdgeGatewayDhcpRelayAgent>}
     */
    get relayAgents() {
        if (!this._json.relay_agents) {
            return [];
        }
        return this._json.relay_agents.map(it => new edge_gateway_dhcp_relay_agent_1.EdgeGatewayDhcpRelayAgent(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelay = EdgeGatewayDhcpRelay;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpStaticBinding = void 0;
const edge_gateway_dhcp_options_1 = __webpack_require__(147);
/**
 * DHCP Static Binding.
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpStaticBinding {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get auto configure dns.
     * @returns {boolean}
     */
    get autoConfigureDNS() {
        return this._json.auto_configure_dns;
    }
    /**
     * Get binding id.
     * @returns {string}
     */
    get bindingId() {
        return this._json.binding_id;
    }
    /**
     * Get vm id.
     * @returns {string}
     */
    get vmId() {
        return this._json.vm_id;
    }
    /**
     * Get vnic id.
     * @returns {number}
     */
    get vnicId() {
        return this._json.vnic_id;
    }
    /**
     * Get hostname.
     * @returns {string}
     */
    get hostname() {
        return this._json.hostname;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get default gateway.
     * @returns {string}
     */
    get defaultGateway() {
        return this._json.default_gateway;
    }
    /**
     * Get domain name.
     * @returns {string}
     */
    get domainName() {
        return this._json.domain_name;
    }
    /**
     * Get primary name server.
     * @returns {string}
     */
    get primaryNameServer() {
        return this._json.primary_name_server;
    }
    /**
     * Get secondary name server.
     * @returns {string}
     */
    get secondaryNameServer() {
        return this._json.secondary_name_server;
    }
    /**
     * Get lease time.
     * @returns {string}
     */
    get leaseTime() {
        return this._json.lease_time;
    }
    /**
     * Get mac address.
     * @returns {string}
     */
    get macAddress() {
        return this._json.mac_address;
    }
    /**
     * Get subnet mask.
     * @returns {string}
     */
    get subnetMask() {
        return this._json.subnet_mask;
    }
    /**
     * Get dhcp options.
     * @returns {EdgeGatewayDhcpOptions}
     */
    get dhcpOptions() {
        return new edge_gateway_dhcp_options_1.EdgeGatewayDhcpOptions(this._json.dhcp_options);
    }
    /**
     * Get next server.
     * @returns {string}
     */
    get nextServer() {
        return this._json.next_server;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpStaticBindingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpStaticBinding = EdgeGatewayDhcpStaticBinding;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayTypeOptionPagingParams = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayTypeOptionPagingParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get page.
     * @returns {number}
     */
    get page() {
        return this._json.page;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayTypeOptionPagingParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayTypeOptionPagingParams = EdgeGatewayDhcpRelayTypeOptionPagingParams;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewall = void 0;
const edge_gateway_firewall_default_policy_1 = __webpack_require__(153);
const edge_gateway_firewall_global_config_1 = __webpack_require__(154);
const edge_gateway_firewall_rule_1 = __webpack_require__(155);
/**
 * Firewall Class
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewall {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get firewall global config.
     * @returns {EdgeGatewayFirewallGlobalConfig}
     */
    get firewallGlobalConfig() {
        return new edge_gateway_firewall_global_config_1.EdgeGatewayFirewallGlobalConfig(this._json.firewall_global_config);
    }
    /**
     * Get firewall default policy.
     * @returns {EdgeGatewayFirewallDefaultPolicy}
     */
    get firewallDefaultPolicy() {
        return new edge_gateway_firewall_default_policy_1.EdgeGatewayFirewallDefaultPolicy(this._json.firewall_default_policy);
    }
    /**
     * Get firewall rules.
     * @returns {Array<EdgeGatewayFirewallRule>}
     */
    get firewallRules() {
        return this._json.firewall_rules.map(rule => new edge_gateway_firewall_rule_1.EdgeGatewayFirewallRule(rule));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewall = EdgeGatewayFirewall;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallDefaultPolicy = void 0;
/**
 * Firewall Default Policy
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallDefaultPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get firewall action type.
     * @returns {EdgeGatewayFirewallActionType}
     */
    get firewallActionType() {
        return this._json.firewall_action_type;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallDefaultPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallDefaultPolicy = EdgeGatewayFirewallDefaultPolicy;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallGlobalConfig = void 0;
/**
 * Firewall Global Config Class
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallGlobalConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get tcp pick ongoing connections.
     * @returns {boolean}
     */
    get tcpPickOngoingConnections() {
        return this._json.tcp_pick_ongoing_connections;
    }
    /**
     * Get tcp allow out of window packets.
     * @returns {boolean}
     */
    get tcpAllowOutOfWindowPackets() {
        return this._json.tcp_allow_out_of_window_packets;
    }
    /**
     * Get tcp send reset for closed vse ports.
     * @returns {boolean}
     */
    get tcpSendResetForClosedVsePorts() {
        return this._json.tcp_send_reset_for_closed_vse_ports;
    }
    /**
     * Get drop invalid traffic.
     * @returns {boolean}
     */
    get dropInvalidTraffic() {
        return this._json.drop_invalid_traffic;
    }
    /**
     * Get log invalid traffic.
     * @returns {boolean}
     */
    get logInvalidTraffic() {
        return this._json.log_invalid_traffic;
    }
    /**
     * Get tcp timeout open.
     * @returns {number}
     */
    get tcpTimeoutOpen() {
        return this._json.tcp_timeout_open;
    }
    /**
     * Get tcp timeout established.
     * @returns {number}
     */
    get tcpTimeoutEstablished() {
        return this._json.tcp_timeout_established;
    }
    /**
     * Get tcp timeout close.
     * @returns {number}
     */
    get tcpTimeoutClose() {
        return this._json.tcp_timeout_close;
    }
    /**
     * Get udp timeout.
     * @returns {number}
     */
    get udpTimeout() {
        return this._json.udp_timeout;
    }
    /**
     * Get icmp timeout.
     * @returns {number}
     */
    get icmpTimeout() {
        return this._json.icmp_timeout;
    }
    /**
     * Get icmp6 timeout.
     * @returns {number}
     */
    get icmp6Timeout() {
        return this._json.icmp6_timeout;
    }
    /**
     * Get ip generic timeout.
     * @returns {number}
     */
    get ipGenericTimeout() {
        return this._json.ip_generic_timeout;
    }
    /**
     * Get enable syn flood protection.
     * @returns {boolean}
     */
    get enableSynFloodProtection() {
        return this._json.enable_syn_flood_protection;
    }
    /**
     * Get log icmp errors.
     * @returns {boolean}
     */
    get logIcmpErrors() {
        return this._json.log_icmp_errors;
    }
    /**
     * Get drop icmp replays.
     * @returns {boolean}
     */
    get dropIcmpReplays() {
        return this._json.drop_icmp_replays;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallGlobalConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallGlobalConfig = EdgeGatewayFirewallGlobalConfig;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallRule = void 0;
const edge_gateway_firewall_rule_application_1 = __webpack_require__(329);
const edge_gateway_firewall_rule_source_destination_1 = __webpack_require__(330);
/**
 * Firewall Rule
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get rule tag.
     * @returns {number}
     */
    get ruleTag() {
        return this._json.rule_tag;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get rule type.
     * @returns {string}
     */
    get ruleType() {
        return this._json.rule_type;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get source.
     * @returns {EdgeGatewayFirewallRuleSourceDestination}
     */
    get source() {
        return new edge_gateway_firewall_rule_source_destination_1.EdgeGatewayFirewallRuleSourceDestination(this._json.source);
    }
    /**
     * Get destination.
     * @returns {EdgeGatewayFirewallRuleSourceDestination}
     */
    get destination() {
        return new edge_gateway_firewall_rule_source_destination_1.EdgeGatewayFirewallRuleSourceDestination(this._json.destination);
    }
    /**
     * Get application.
     * @returns {EdgeGatewayFirewallRuleApplication}
     */
    get application() {
        return new edge_gateway_firewall_rule_application_1.EdgeGatewayFirewallRuleApplication(this._json.application);
    }
    /**
     * Get action type.
     * @returns {EdgeGatewayFirewallActionType}
     */
    get actionType() {
        return this._json.action_type;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get match translated.
     * @returns {boolean}
     */
    get matchTranslated() {
        return this._json.match_translated;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallRule = EdgeGatewayFirewallRule;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallObjectPagingParams = void 0;
/**
 * Edge Gateway Firewall Object Paging Params
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallObjectPagingParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get page.
     * @returns {number}
     */
    get page() {
        return this._json.page;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallObjectPagingParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallObjectPagingParams = EdgeGatewayFirewallObjectPagingParams;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecGlobal = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayIpsecGlobal {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get psk.
     * @returns {string}
     */
    get psk() {
        return this._json.psk;
    }
    /**
     * Get service certificate.
     * @returns {string}
     */
    get serviceCertificate() {
        return this._json.service_certificate;
    }
    /**
     * Get ca certificates.
     * @returns {Array<string>}
     */
    get caCertificates() {
        return this._json.ca_certificates;
    }
    /**
     * Get crl certificates.
     * @returns {Array<string>}
     */
    get crlCertificates() {
        return this._json.crl_certificates;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayIpsecGlobalJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIpsecGlobal = EdgeGatewayIpsecGlobal;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecLogging = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayIpsecLogging {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable.
     * @returns {boolean}
     */
    get enable() {
        return this._json.enable;
    }
    /**
     * Get log level.
     * @returns {LogLevelType}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get the json representation of this class.
     * @returns {Logging}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIpsecLogging = EdgeGatewayIpsecLogging;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecSite = void 0;
const edge_gateway_ipsec_tunnel_interface_1 = __webpack_require__(336);
/* istanbul ignore next: autogenerated */
class EdgeGatewayIpsecSite {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get local id.
     * @returns {string}
     */
    get localId() {
        return this._json.local_id;
    }
    /**
     * Get local ip.
     * @returns {string}
     */
    get localIp() {
        return this._json.local_ip;
    }
    /**
     * Get peer id.
     * @returns {string}
     */
    get peerId() {
        return this._json.peer_id;
    }
    /**
     * Get peer ip.
     * @returns {string}
     */
    get peerIp() {
        return this._json.peer_ip;
    }
    /**
     * Get ipsec session type.
     * @returns {EdgeGatewayIPsecSessionType}
     */
    get ipsecSessionType() {
        return this._json.ipsec_session_type;
    }
    /**
     * Get compliance suite.
     * @returns {EdgeGatewayIpsecComplianceSuiteType}
     */
    get complianceSuite() {
        return this._json.compliance_suite;
    }
    /**
     * Get encryption algorithm.
     * @returns {EdgeGatewayIpsecEncryptionAlgorithmType}
     */
    get encryptionAlgorithm() {
        return this._json.encryption_algorithm;
    }
    /**
     * Get enable pfs.
     * @returns {boolean}
     */
    get enablePfs() {
        return this._json.enable_pfs;
    }
    /**
     * Get dh group.
     * @returns {string}
     */
    get dhGroup() {
        return this._json.dh_group;
    }
    /**
     * Get local subnets.
     * @returns {Array<string>}
     */
    get localSubnets() {
        return this._json.local_subnets;
    }
    /**
     * Get peer subnets.
     * @returns {Array<string>}
     */
    get peerSubnets() {
        return this._json.peer_subnets;
    }
    /**
     * Get psk.
     * @returns {string}
     */
    get psk() {
        return this._json.psk;
    }
    /**
     * Get authentication mode.
     * @returns {string}
     */
    get authenticationMode() {
        return this._json.authentication_mode;
    }
    /**
     * Get extension.
     * @returns {string}
     */
    get extension() {
        return this._json.extension;
    }
    /**
     * Get ike option.
     * @returns {EdgeGatewayIpsecIkeOptionType}
     */
    get ikeOption() {
        return this._json.ike_option;
    }
    /**
     * Get digest algorithm.
     * @returns {EdgeGatewayIpsecDigestAlgorithmType}
     */
    get digestAlgorithm() {
        return this._json.digest_algorithm;
    }
    /**
     * Get responder only.
     * @returns {boolean}
     */
    get responderOnly() {
        return this._json.responder_only;
    }
    /**
     * Get tunnel interface.
     * @returns {EdgeGatewayIpsecTunnelInterface}
     */
    get tunnelInterface() {
        return new edge_gateway_ipsec_tunnel_interface_1.EdgeGatewayIpsecTunnelInterface(this._json.tunnel_interface);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayIpsecSiteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIpsecSite = EdgeGatewayIpsecSite;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnLogging = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnLogging {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable.
     * @returns {boolean}
     */
    get enable() {
        return this._json.enable;
    }
    /**
     * Get log level.
     * @returns {LogLevelType}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnLoggingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnLogging = EdgeGatewayL2VpnLogging;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnSite = void 0;
const edge_gateway_l2vpn_client_1 = __webpack_require__(338);
const edge_gateway_l2vpn_server_1 = __webpack_require__(341);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnSite {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get client.
     * @returns {EdgeGatewayL2VpnClient | undefined}
     */
    get client() {
        if (!this._json.client) {
            return undefined;
        }
        return new edge_gateway_l2vpn_client_1.EdgeGatewayL2VpnClient(this._json.client);
    }
    /**
     * Get server.
     * @returns {EdgeGatewayL2VpnServer | undefined}
     */
    get server() {
        if (!this._json.server) {
            return undefined;
        }
        return new edge_gateway_l2vpn_server_1.EdgeGatewayL2VpnServer(this._json.server);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnSiteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnSite = EdgeGatewayL2VpnSite;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnUser = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user id.
     * @returns {string}
     */
    get userId() {
        return this._json.user_id;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnUserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnUser = EdgeGatewayL2VpnUser;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayNat = void 0;
const edge_gateway_nat64_rule_1 = __webpack_require__(164);
const edge_gateway_nat_rule_1 = __webpack_require__(165);
/**
 * Edge Gateway NAT
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayNat {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get nat rules.
     * @returns {Array<EdgeGatewayNatRule>}
     */
    get natRules() {
        return this._json.nat_rules.map(it => new edge_gateway_nat_rule_1.EdgeGatewayNatRule(it));
    }
    /**
     * Get nat64 rules.
     * @returns {Array<EdgeGatewayNat64Rule>}
     */
    get nat64Rules() {
        return this._json.nat64_rules.map(it => new edge_gateway_nat64_rule_1.EdgeGatewayNat64Rule(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayNatJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayNat = EdgeGatewayNat;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayNat64Rule = void 0;
/**
 * Edge Gateway NAT 64 Rule
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayNat64Rule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get rule id.
     * @returns {number}
     */
    get ruleId() {
        return this._json.rule_id;
    }
    /**
     * Get rule tag.
     * @returns {number}
     */
    get ruleTag() {
        return this._json.rule_tag;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get match ipv6 destination prefix.
     * @returns {string}
     */
    get matchIpv6DestinationPrefix() {
        return this._json.match_ipv6_destination_prefix;
    }
    /**
     * Get translated ipv4 source prefix.
     * @returns {string}
     */
    get translatedIpv4SourcePrefix() {
        return this._json.translated_ipv4_source_prefix;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayNat64RuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayNat64Rule = EdgeGatewayNat64Rule;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayNatRule = void 0;
/**
 * Edge Gateway NAT Rule
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayNatRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get rule id.
     * @returns {number}
     */
    get ruleId() {
        return this._json.rule_id;
    }
    /**
     * Get rule tag.
     * @returns {number}
     */
    get ruleTag() {
        return this._json.rule_tag;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get translated address.
     * @returns {string}
     */
    get translatedAddress() {
        return this._json.translated_address;
    }
    /**
     * Get rule type.
     * @returns {string}
     */
    get ruleType() {
        return this._json.rule_type;
    }
    /**
     * Get action.
     * @returns {EdgeGatewayNatActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get vnic.
     * @returns {string}
     */
    get vnic() {
        return this._json.vnic;
    }
    /**
     * Get original address.
     * @returns {string}
     */
    get originalAddress() {
        return this._json.original_address;
    }
    /**
     * Get dnat match source address.
     * @returns {string}
     */
    get dnatMatchSourceAddress() {
        return this._json.dnat_match_source_address;
    }
    /**
     * Get snat match destination address.
     * @returns {string}
     */
    get snatMatchDestinationAddress() {
        return this._json.snat_match_destination_address;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get original port.
     * @returns {string}
     */
    get originalPort() {
        return this._json.original_port;
    }
    /**
     * Get translated port.
     * @returns {string}
     */
    get translatedPort() {
        return this._json.translated_port;
    }
    /**
     * Get dnat match source port.
     * @returns {string}
     */
    get dnatMatchSourcePort() {
        return this._json.dnat_match_source_port;
    }
    /**
     * Get snat match destination port.
     * @returns {string}
     */
    get snatMatchDestinationPort() {
        return this._json.snat_match_destination_port;
    }
    /**
     * Get icmp type.
     * @returns {string}
     */
    get icmpType() {
        return this._json.icmp_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayNatRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayNatRule = EdgeGatewayNatRule;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingBGPConfig = void 0;
const bgp_neighbour_1 = __webpack_require__(167);
const redistribution_1 = __webpack_require__(168);
/**
 * Routing BGP Configuration
 */
/* istanbul ignore next: autogenerated */
class RoutingBGPConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get local as.
     * @returns {number}
     */
    get localAs() {
        return this._json.local_as;
    }
    /**
     * Get local as number.
     * @returns {string}
     */
    get localAsNumber() {
        return this._json.local_as_number;
    }
    /**
     * Get bgp neighbours.
     * @returns {Array<BGPNeighbour>}
     */
    get bgpNeighbours() {
        return this._json.bgp_neighbours.map(it => new bgp_neighbour_1.BGPNeighbour(it));
    }
    /**
     * Get redistribution.
     * @returns {Redistribution | undefined}
     */
    get redistribution() {
        return this._json.redistribution ? new redistribution_1.Redistribution(this._json.redistribution) : undefined;
    }
    /**
     * Get graceful restart.
     * @returns {boolean}
     */
    get gracefulRestart() {
        return this._json.graceful_restart;
    }
    /**
     * Get default originate.
     * @returns {boolean}
     */
    get defaultOriginate() {
        return this._json.default_originate;
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingBGPConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingBGPConfig = RoutingBGPConfig;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BGPNeighbour = void 0;
const bgp_filter_1 = __webpack_require__(347);
/**
 * BGP Neighbor
 */
/* istanbul ignore next: autogenerated */
class BGPNeighbour {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get remote as.
     * @returns {number | undefined}
     */
    get remoteAs() {
        return this._json.remote_as || undefined;
    }
    /**
     * Get remote as number.
     * @returns {string}
     */
    get remoteAsNumber() {
        return this._json.remote_as_number;
    }
    /**
     * Get weight.
     * @returns {number}
     */
    get weight() {
        return this._json.weight;
    }
    /**
     * Get hold down timer.
     * @returns {number}
     */
    get holdDownTimer() {
        return this._json.hold_down_timer;
    }
    /**
     * Get keep alive timer.
     * @returns {number}
     */
    get keepAliveTimer() {
        return this._json.keep_alive_timer;
    }
    /**
     * Get password.
     * @returns {string | undefined}
     */
    get password() {
        return this._json.password || undefined;
    }
    /**
     * Get remove private as.
     * @returns {boolean}
     */
    get removePrivateAs() {
        return this._json.remove_private_as;
    }
    /**
     * Get bgp filters.
     * @returns {Array<BGPFilter>}
     */
    get bgpFilters() {
        return this._json.bgp_filters.map(it => new bgp_filter_1.BGPFilter(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BGPNeighbourJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BGPNeighbour = BGPNeighbour;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Redistribution = void 0;
const rule_1 = __webpack_require__(169);
/**
 * Redistribution
 */
/* istanbul ignore next: autogenerated */
class Redistribution {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get rules.
     * @returns {Array<Rule>}
     */
    get rules() {
        return this._json.rules.map(it => new rule_1.Rule(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RedistributionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Redistribution = Redistribution;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Rule = void 0;
const from_1 = __webpack_require__(348);
/**
 * Rule
 */
class Rule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get prefix name.
     * @returns {string}
     */
    get prefixName() {
        return this._json.prefix_name;
    }
    /**
     * Get from.
     * @returns {From}
     */
    get from() {
        return new from_1.From(this._json.from);
    }
    /**
     * Get action.
     * @returns {ActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get the json representation of this class.
     * @returns {RuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Rule = Rule;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingGlobalConfig = void 0;
const ip_prefix_1 = __webpack_require__(171);
const logging_1 = __webpack_require__(172);
/**
 * Routing Global Configuration
 */
/* istanbul ignore next: autogenerated */
class RoutingGlobalConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get router id.
     * @returns {string | undefined}
     */
    get routerId() {
        return this._json.router_id || undefined;
    }
    /**
     * Get ecmp.
     * @returns {boolean}
     */
    get ecmp() {
        return this._json.ecmp;
    }
    /**
     * Get logging.
     * @returns {Logging}
     */
    get logging() {
        return new logging_1.Logging(this._json.logging);
    }
    /**
     * Get ip prefixes.
     * @returns {Array<IpPrefix>}
     */
    get ipPrefixes() {
        return this._json.ip_prefixes.map(it => new ip_prefix_1.IpPrefix(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingGlobalConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingGlobalConfig = RoutingGlobalConfig;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpPrefix = void 0;
/**
 * IP Prefix
 */
/* istanbul ignore next: autogenerated */
class IpPrefix {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get ge.
     * @returns {number}
     */
    get ge() {
        return this._json.ge;
    }
    /**
     * Get le.
     * @returns {number}
     */
    get le() {
        return this._json.le;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpPrefixJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpPrefix = IpPrefix;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Logging = void 0;
/**
 * Logging
 */
/* istanbul ignore next: autogenerated */
class Logging {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable.
     * @returns {boolean}
     */
    get enable() {
        return this._json.enable;
    }
    /**
     * Get log level.
     * @returns {LogLevelType}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoggingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Logging = Logging;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingOSPFConfig = void 0;
const ospf_area_1 = __webpack_require__(349);
const ospf_interface_1 = __webpack_require__(174);
const redistribution_1 = __webpack_require__(168);
/**
 * Routing OSPF Configuration
 */
/* istanbul ignore next: autogenerated */
class RoutingOSPFConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get graceful restart.
     * @returns {boolean}
     */
    get gracefulRestart() {
        return this._json.graceful_restart;
    }
    /**
     * Get default originate.
     * @returns {boolean}
     */
    get defaultOriginate() {
        return this._json.default_originate;
    }
    /**
     * Get ospf areas.
     * @returns {Array<OSPFArea>}
     */
    get ospfAreas() {
        return this._json.ospf_areas.map(it => new ospf_area_1.OSPFArea(it));
    }
    /**
     * Get ospf interfaces.
     * @returns {Array<OSPFInterface>}
     */
    get ospfInterfaces() {
        return this._json.ospf_interfaces.map(it => new ospf_interface_1.OSPFInterface(it));
    }
    /**
     * Get redistribution.
     * @returns {Redistribution}
     */
    get redistribution() {
        return new redistribution_1.Redistribution(this._json.redistribution);
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingOSPFConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingOSPFConfig = RoutingOSPFConfig;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OSPFInterface = void 0;
/**
 * OSPF Interface
 */
/* istanbul ignore next: autogenerated */
class OSPFInterface {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vnic.
     * @returns {number}
     */
    get vnic() {
        return this._json.vnic;
    }
    /**
     * Get area id.
     * @returns {number}
     */
    get areaId() {
        return this._json.area_id;
    }
    /**
     * Get hello interval.
     * @returns {number}
     */
    get helloInterval() {
        return this._json.hello_interval;
    }
    /**
     * Get dead interval.
     * @returns {number}
     */
    get deadInterval() {
        return this._json.dead_interval;
    }
    /**
     * Get priority.
     * @returns {number}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get cost.
     * @returns {number}
     */
    get cost() {
        return this._json.cost;
    }
    /**
     * Get mtu ignore.
     * @returns {boolean}
     */
    get mtuIgnore() {
        return this._json.mtu_ignore;
    }
    /**
     * Get the json representation of this class.
     * @returns {OSPFInterfaceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OSPFInterface = OSPFInterface;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingStaticConfig = void 0;
const default_route_1 = __webpack_require__(176);
const route_1 = __webpack_require__(177);
/**
 * Routing Static Configuration
 */
/* istanbul ignore next: autogenerated */
class RoutingStaticConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get default route.
     * @returns {DefaultRoute | undefined}
     */
    get defaultRoute() {
        return this._json.default_route ? new default_route_1.DefaultRoute(this._json.default_route) : undefined;
    }
    /**
     * Get static routes.
     * @returns {Array<Route>}
     */
    get staticRoutes() {
        return this._json.static_routes.map(it => new route_1.Route(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingStaticConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingStaticConfig = RoutingStaticConfig;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultRoute = void 0;
/**
 * Default Route
 */
/* istanbul ignore next: autogenerated */
class DefaultRoute {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description || undefined;
    }
    /**
     * Get type.
     * @returns {string | undefined}
     */
    get type() {
        return this._json.type || undefined;
    }
    /**
     * Get mtu.
     * @returns {number}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Get vnic.
     * @returns {number}
     */
    get vnic() {
        return this._json.vnic;
    }
    /**
     * Get gateway address.
     * @returns {string}
     */
    get gatewayAddress() {
        return this._json.gateway_address;
    }
    /**
     * Get admin distance.
     * @returns {number}
     */
    get adminDistance() {
        return this._json.admin_distance;
    }
    /**
     * Get the json representation of this class.
     * @returns {DefaultRouteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DefaultRoute = DefaultRoute;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Route = void 0;
/**
 * Route
 */
/* istanbul ignore next: autogenerated */
class Route {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description || undefined;
    }
    /**
     * Get vnic.
     * @returns {number}
     */
    get vnic() {
        return this._json.vnic;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get next hop.
     * @returns {string}
     */
    get nextHop() {
        return this._json.next_hop;
    }
    /**
     * Get mtu.
     * @returns {number}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get admin distance.
     * @returns {number}
     */
    get adminDistance() {
        return this._json.admin_distance;
    }
    /**
     * Get the json representation of this class.
     * @returns {RouteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Route = Route;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpn = void 0;
const edge_gateway_ssl_vpn_advanced_config_1 = __webpack_require__(179);
const edge_gateway_ssl_vpn_authentication_configuration_1 = __webpack_require__(180);
const edge_gateway_ssl_vpn_client_configuration_1 = __webpack_require__(181);
const edge_gateway_ssl_vpn_client_install_package_1 = __webpack_require__(182);
const edge_gateway_ssl_vpn_ip_address_pool_1 = __webpack_require__(183);
const edge_gateway_ssl_vpn_logging_1 = __webpack_require__(184);
const edge_gateway_ssl_vpn_private_network_1 = __webpack_require__(185);
const edge_gateway_ssl_vpn_server_settings_1 = __webpack_require__(186);
const edge_gateway_ssl_vpn_user_1 = __webpack_require__(187);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpn {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewaySslVpnLogging | null}
     */
    get logging() {
        return this._json.logging ? new edge_gateway_ssl_vpn_logging_1.EdgeGatewaySslVpnLogging(this._json.logging) : null;
    }
    /**
     * Get advanced config.
     * @returns {EdgeGatewaySslVpnAdvancedConfig | null}
     */
    get advancedConfig() {
        return this._json.advanced_config ? new edge_gateway_ssl_vpn_advanced_config_1.EdgeGatewaySslVpnAdvancedConfig(this._json.advanced_config) : null;
    }
    /**
     * Get client configuration.
     * @returns {EdgeGatewaySslVpnClientConfiguration | null}
     */
    get clientConfiguration() {
        return this._json.client_configuration ? new edge_gateway_ssl_vpn_client_configuration_1.EdgeGatewaySslVpnClientConfiguration(this._json.client_configuration) : null;
    }
    /**
     * Get ip address pools.
     * @returns {Array<EdgeGatewaySslVpnIpAddressPool>}
     */
    get ipAddressPools() {
        return this._json.ip_address_pools ? this._json.ip_address_pools.map(it => new edge_gateway_ssl_vpn_ip_address_pool_1.EdgeGatewaySslVpnIpAddressPool(it)) : [];
    }
    /**
     * Get private networks.
     * @returns {Array<EdgeGatewaySslVpnPrivateNetwork>}
     */
    get privateNetworks() {
        return this._json.private_networks ? this._json.private_networks.map(it => new edge_gateway_ssl_vpn_private_network_1.EdgeGatewaySslVpnPrivateNetwork(it)) : [];
    }
    /**
     * Get users.
     * @returns {Array<EdgeGatewaySslVpnUser>}
     */
    get users() {
        return this._json.users ? this._json.users.map(it => new edge_gateway_ssl_vpn_user_1.EdgeGatewaySslVpnUser(it)) : [];
    }
    /**
     * Get client install packages.
     * @returns {Array<EdgeGatewaySslVpnClientInstallPackage>}
     */
    get clientInstallPackages() {
        return this._json.client_install_packages
            ? this._json.client_install_packages.map(it => new edge_gateway_ssl_vpn_client_install_package_1.EdgeGatewaySslVpnClientInstallPackage(it))
            : [];
    }
    /**
     * Get authentication configuration.
     * @returns {EdgeGatewaySslVpnAuthenticationConfiguration | null}
     */
    get authenticationConfiguration() {
        return this._json.authentication_configuration
            ? new edge_gateway_ssl_vpn_authentication_configuration_1.EdgeGatewaySslVpnAuthenticationConfiguration(this._json.authentication_configuration)
            : null;
    }
    /**
     * Get server settings.
     * @returns {EdgeGatewaySslVpnServerSettings  | null}
     */
    get serverSettings() {
        return this._json.server_settings ? new edge_gateway_ssl_vpn_server_settings_1.EdgeGatewaySslVpnServerSettings(this._json.server_settings) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpn = EdgeGatewaySslVpn;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAdvancedConfig = void 0;
const edge_gateway_ssl_vpn_timeout_1 = __webpack_require__(353);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnAdvancedConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable compression.
     * @returns {boolean}
     */
    get enableCompression() {
        return this._json.enable_compression;
    }
    /**
     * Get force virtual keyboard.
     * @returns {boolean}
     */
    get forceVirtualKeyboard() {
        return this._json.force_virtual_keyboard;
    }
    /**
     * Get randomize virtual keys.
     * @returns {boolean}
     */
    get randomizeVirtualKeys() {
        return this._json.randomize_virtual_keys;
    }
    /**
     * Get prevent multiple logon.
     * @returns {boolean}
     */
    get preventMultipleLogon() {
        return this._json.prevent_multiple_logon;
    }
    /**
     * Get client notification.
     * @returns {string}
     */
    get clientNotification() {
        return this._json.client_notification;
    }
    /**
     * Get enable public url access.
     * @returns {boolean}
     */
    get enablePublicUrlAccess() {
        return this._json.enable_public_url_access;
    }
    /**
     * Get timeout.
     * @returns {EdgeGatewaySslVpnTimeout}
     */
    get timeout() {
        return new edge_gateway_ssl_vpn_timeout_1.EdgeGatewaySslVpnTimeout(this._json.timeout);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnAdvancedConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnAdvancedConfig = EdgeGatewaySslVpnAdvancedConfig;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAuthenticationConfiguration = void 0;
const edge_gateway_ssl_vpn_password_authentication_1 = __webpack_require__(354);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnAuthenticationConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get password authentication.
     * @returns {EdgeGatewaySslVpnPasswordAuthentication | null}
     */
    get passwordAuthentication() {
        return this._json.password_authentication
            ? new edge_gateway_ssl_vpn_password_authentication_1.EdgeGatewaySslVpnPasswordAuthentication(this._json.password_authentication)
            : null;
    }
    /**
     * Get certificate id.
     * @returns {string}
     */
    get certificateId() {
        return this._json.certificate_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnAuthenticationConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnAuthenticationConfiguration = EdgeGatewaySslVpnAuthenticationConfiguration;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnClientConfiguration = void 0;
const edge_gateway_ssl_vpn_full_tunnel_1 = __webpack_require__(362);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnClientConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get auto reconnect.
     * @returns {boolean}
     */
    get autoReconnect() {
        return this._json.auto_reconnect;
    }
    /**
     * Get full tunnel.
     * @returns {EdgeGatewaySslVpnFullTunnel}
     */
    get fullTunnel() {
        return new edge_gateway_ssl_vpn_full_tunnel_1.EdgeGatewaySslVpnFullTunnel(this._json.full_tunnel);
    }
    /**
     * Get upgrade notification.
     * @returns {boolean}
     */
    get upgradeNotification() {
        return this._json.upgrade_notification;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnClientConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnClientConfiguration = EdgeGatewaySslVpnClientConfiguration;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnClientInstallPackage = void 0;
const edge_gateway_ssl_vpn_gateway_1 = __webpack_require__(363);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnClientInstallPackage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get profile name.
     * @returns {string}
     */
    get profileName() {
        return this._json.profile_name;
    }
    /**
     * Get gateway list.
     * @returns {Array<EdgeGatewaySslVpnGateway>}
     */
    get gatewayList() {
        return this._json.gateway_list.map(it => new edge_gateway_ssl_vpn_gateway_1.EdgeGatewaySslVpnGateway(it));
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get create linux client.
     * @returns {boolean}
     */
    get createLinuxClient() {
        return this._json.create_linux_client;
    }
    /**
     * Get create mac client.
     * @returns {boolean}
     */
    get createMacClient() {
        return this._json.create_mac_client;
    }
    /**
     * Get start client on logon.
     * @returns {boolean}
     */
    get startClientOnLogon() {
        return this._json.start_client_on_logon;
    }
    /**
     * Get hide systray icon.
     * @returns {boolean}
     */
    get hideSystrayIcon() {
        return this._json.hide_systray_icon;
    }
    /**
     * Get remember password.
     * @returns {boolean}
     */
    get rememberPassword() {
        return this._json.remember_password;
    }
    /**
     * Get silent mode operation.
     * @returns {boolean}
     */
    get silentModeOperation() {
        return this._json.silent_mode_operation;
    }
    /**
     * Get silent mode installation.
     * @returns {boolean}
     */
    get silentModeInstallation() {
        return this._json.silent_mode_installation;
    }
    /**
     * Get hide network adaptor.
     * @returns {boolean}
     */
    get hideNetworkAdaptor() {
        return this._json.hide_network_adaptor;
    }
    /**
     * Get create desktop icon.
     * @returns {boolean}
     */
    get createDesktopIcon() {
        return this._json.create_desktop_icon;
    }
    /**
     * Get enforce server security cert validation.
     * @returns {boolean}
     */
    get enforceServerSecurityCertValidation() {
        return this._json.enforce_server_security_cert_validation;
    }
    /**
     * Get disconnect on cert validation failure.
     * @returns {boolean}
     */
    get disconnectOnCertValidationFailure() {
        return this._json.disconnect_on_cert_validation_failure;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnClientInstallPackageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnClientInstallPackage = EdgeGatewaySslVpnClientInstallPackage;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnIpAddressPool = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnIpAddressPool {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get ip range.
     * @returns {string}
     */
    get ipRange() {
        return this._json.ip_range;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get wins server.
     * @returns {string}
     */
    get winsServer() {
        return this._json.wins_server;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnIpAddressPoolJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnIpAddressPool = EdgeGatewaySslVpnIpAddressPool;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnLogging = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnLogging {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enable.
     * @returns {boolean}
     */
    get enable() {
        return this._json.enable;
    }
    /**
     * Get log level.
     * @returns {LogLevelType}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnLoggingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnLogging = EdgeGatewaySslVpnLogging;


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnPrivateNetwork = void 0;
const edge_gateway_ssl_vpn_send_over_tunnel_1 = __webpack_require__(364);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnPrivateNetwork {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get send over tunnel.
     * @returns {EdgeGatewaySslVpnSendOverTunnel | null}
     */
    get sendOverTunnel() {
        return this._json.send_over_tunnel ? new edge_gateway_ssl_vpn_send_over_tunnel_1.EdgeGatewaySslVpnSendOverTunnel(this._json.send_over_tunnel) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnPrivateNetworkJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnPrivateNetwork = EdgeGatewaySslVpnPrivateNetwork;


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnServerSettings = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnServerSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get certificate id.
     * @returns {string}
     */
    get certificateId() {
        return this._json.certificate_id;
    }
    /**
     * Get cipher list.
     * @returns {Array<EdgeGatewaySslVpnCipherType>}
     */
    get cipherList() {
        return this._json.cipher_list;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnServerSettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnServerSettings = EdgeGatewaySslVpnServerSettings;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnUser = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user id.
     * @returns {string}
     */
    get userId() {
        return this._json.user_id;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get first name.
     * @returns {string}
     */
    get firstName() {
        return this._json.first_name;
    }
    /**
     * Get last name.
     * @returns {string}
     */
    get lastName() {
        return this._json.last_name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get disable user account.
     * @returns {boolean}
     */
    get disableUserAccount() {
        return this._json.disable_user_account;
    }
    /**
     * Get password never expires.
     * @returns {boolean}
     */
    get passwordNeverExpires() {
        return this._json.password_never_expires;
    }
    /**
     * Get allow change password.
     * @returns {boolean}
     */
    get allowChangePassword() {
        return this._json.allow_change_password;
    }
    /**
     * Get change password on next login.
     * @returns {boolean}
     */
    get changePasswordOnNextLogin() {
        return this._json.change_password_on_next_login;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnUserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnUser = EdgeGatewaySslVpnUser;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressGroup = void 0;
const vnic_secondary_addresses_1 = __webpack_require__(366);
/**
 * Edge Gateway VNIC Address Group.
 */
/* istanbul ignore next: autogenerated */
class AddressGroup {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get primary address.
     * @returns {string}
     */
    get primaryAddress() {
        return this._json.primary_address;
    }
    /**
     * Get secondary addresses.
     * @returns {SecondaryAddresses}
     */
    get secondaryAddresses() {
        return this._json.secondary_addresses ? new vnic_secondary_addresses_1.SecondaryAddresses(this._json.secondary_addresses) : null;
    }
    /**
     * Get subnet mask.
     * @returns {string}
     */
    get subnetMask() {
        return this._json.subnet_mask;
    }
    /**
     * Get subnet prefix length.
     * @returns {number}
     */
    get subnetPrefixLength() {
        return this._json.subnet_prefix_length;
    }
    /**
     * Get the json representation of this class.
     * @returns {AddressGroup}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AddressGroup = AddressGroup;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallRule = void 0;
class FirewallRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get destination IPq
     * @returns {string | null}
     */
    get destinationIp() {
        return this._json.destination_ip;
    }
    /**
     * Get destination port range.
     * @returns {string | null}
     */
    get destinationPortRange() {
        return this._json.destination_port_range;
    }
    /**
     * Get direction.
     * @returns {string | null}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get ICMP sub type.
     * @returns {string | null}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get ID.
     * @returns {string | null}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get policy
     * @returns {string | null}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get port
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get Protocol.
     * @returns {Array<string>}
     */
    get protocol() {
        return this._json.protocol || [];
    }
    /**
     * Get source IP
     * @returns {string | null}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get source port range
     * @returns {string | null}
     */
    get sourcePortRange() {
        return this._json.source_port_range;
    }
    /**
     * Check weather this FirewallRule has logging activated or not.
     * @returns {boolean}
     */
    get logging() {
        return this._json.logging;
    }
    /**
     * Check weather this FirewallRule is enabled or not.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Check weather this FirewallRule match on translate or not.
     * @returns {boolean}
     */
    get matchOnTranslate() {
        return this._json.match_on_translate;
    }
    /**
     * Get index
     * @returns {number}
     */
    get idx() {
        return this._json.idx;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {FirewallRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallRule = FirewallRule;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LbPoolServicePort = void 0;
const lb_pool_health_check_1 = __webpack_require__(385);
/**
 * LbPoolServicePort class
 */
class LbPoolServicePort {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Check weather LbPoolServicePort is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol
     * @returns {string | null}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get algorithm
     * @returns {string | null}
     */
    get algorithm() {
        return this._json.algorithm;
    }
    /**
     * Get port
     * @returns {string | null}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get health check port
     * @returns {string | null}
     */
    get healthCheckPort() {
        return this._json.health_check_port;
    }
    /**
     * Get list of health checks.
     * @returns {Array<LbPoolHealthCheck>}
     */
    get healthChecks() {
        return this._json.health_checks.map(lbPoolHealthCheck => new lb_pool_health_check_1.LbPoolHealthCheck(lbPoolHealthCheck));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LbPoolServicePortJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LbPoolServicePort = LbPoolServicePort;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayNatRule = void 0;
/**
 * GatewayNatRule class
 */
/* istanbul ignore next: autogenerated */
class GatewayNatRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get rule type.
     * @returns {string}
     */
    get ruleType() {
        return this._json.rule_type;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get icmp sub type.
     * @returns {string | null}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get original ip.
     * @returns {string}
     */
    get originalIp() {
        return this._json.original_ip;
    }
    /**
     * Get original port.
     * @returns {string | null}
     */
    get originalPort() {
        return this._json.original_port;
    }
    /**
     * Get protocol.
     * @returns {string | null}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get translated ip.
     * @returns {string}
     */
    get translatedIp() {
        return this._json.translated_ip;
    }
    /**
     * Get translated port.
     * @returns {string | null}
     */
    get translatedPort() {
        return this._json.translated_port;
    }
    /**
     * Get interface name.
     * @returns {string}
     */
    get interfaceName() {
        return this._json.interface_name;
    }
    /**
     * Get rule index.
     * @returns {number}
     */
    get ruleIndex() {
        return this._json.rule_index;
    }
    /**
     * Get the json representation of this class.
     * @returns {GatewayNatRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GatewayNatRule = GatewayNatRule;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkPerfSampleSerie = void 0;
const network_perf_sample_1 = __webpack_require__(391);
/**
 * NetworkPerfSampleSerie class
 */
class NetworkPerfSampleSerie {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get summary
     * @returns {string | null}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Get interval
     * @returns {number}
     */
    get interval() {
        return this._json.interval;
    }
    /**
     * Get group
     * @returns {PerfGroupType | null}
     */
    get group() {
        return this._json.group;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get type
     * @returns {PerfStatsType | null}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get unit
     * @returns {string | null}
     */
    get unit() {
        return this._json.unit;
    }
    /**
     * Get a list of network perf samples.
     * @returns {Array<NetworkPerfSample>}
     */
    get samples() {
        return this._json.samples.map(sample => new network_perf_sample_1.NetworkPerfSample(sample));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {NetworkPerfSampleSerieJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NetworkPerfSampleSerie = NetworkPerfSampleSerie;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnAuthentication = void 0;
const edge_ssl_vpn_ad_authentication_server_1 = __webpack_require__(396);
const edge_ssl_vpn_ldap_authentication_server_1 = __webpack_require__(397);
const edge_ssl_vpn_local_authentication_server_1 = __webpack_require__(194);
const edge_ssl_vpn_radius_authentication_server_1 = __webpack_require__(398);
const edge_ssl_vpn_rsa_authentication_server_1 = __webpack_require__(399);
/**
 * EdgeSslVpnAuthentication class
 */
class EdgeSslVpnAuthentication {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get a list of authentication servers
     * @returns {Array<EdgeSslVpnAuthenticationServer>}
     */
    get authenticationServers() {
        const authServers = [];
        for (const authServer of this._json.authentication_servers) {
            switch (authServer.type) {
                case 'LOCAL':
                    authServers.push(new edge_ssl_vpn_local_authentication_server_1.EdgeSslVpnLocalAuthenticationServer(authServer));
                    break;
                case 'LDAP':
                    authServers.push(new edge_ssl_vpn_ldap_authentication_server_1.EdgeSslVpnLdapAuthenticationServer(authServer));
                    break;
                case 'AD':
                    authServers.push(new edge_ssl_vpn_ad_authentication_server_1.EdgeSslVpnAdAuthenticationServer(authServer));
                    break;
                case 'RADIUS':
                    authServers.push(new edge_ssl_vpn_radius_authentication_server_1.EdgeSslVpnRadiusAuthenticationServer(authServer));
                    break;
                case 'RSA':
                    authServers.push(new edge_ssl_vpn_rsa_authentication_server_1.EdgeSslVpnRsaAuthenticationServer(authServer));
                    break;
            }
        }
        return authServers;
    }
    /**
     * Get secondary authentication server
     * @returns {EdgeSslVpnAuthenticationServer | null}
     */
    get secondaryAuthenticationServer() {
        const authServer = this._json.secondary_authentication_server;
        if (authServer) {
            switch (authServer.type) {
                case 'LOCAL':
                    return new edge_ssl_vpn_local_authentication_server_1.EdgeSslVpnLocalAuthenticationServer(authServer);
                case 'LDAP':
                    return new edge_ssl_vpn_ldap_authentication_server_1.EdgeSslVpnLdapAuthenticationServer(authServer);
                case 'AD':
                    return new edge_ssl_vpn_ad_authentication_server_1.EdgeSslVpnAdAuthenticationServer(authServer);
                case 'RADIUS':
                    return new edge_ssl_vpn_radius_authentication_server_1.EdgeSslVpnRadiusAuthenticationServer(authServer);
                case 'RSA':
                    return new edge_ssl_vpn_rsa_authentication_server_1.EdgeSslVpnRsaAuthenticationServer(authServer);
            }
        }
        return null;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeSslVpnAuthenticationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnAuthentication = EdgeSslVpnAuthentication;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnLocalAuthenticationServer = void 0;
const edge_ssl_vpn_authentication_server_1 = __webpack_require__(50);
/**
 * SslVpnLocalAuthenticationServer class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnLocalAuthenticationServer extends edge_ssl_vpn_authentication_server_1.EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get pwd min length.
     * @returns {number}
     */
    get pwdMinLength() {
        return this._json.pwd_min_length;
    }
    /**
     * Get pwd max length.
     * @returns {number}
     */
    get pwdMaxLength() {
        return this._json.pwd_max_length;
    }
    /**
     * Get pwd min alphabets.
     * @returns {number}
     */
    get pwdMinAlphabets() {
        return this._json.pwd_min_alphabets;
    }
    /**
     * Get pwd min digits.
     * @returns {number}
     */
    get pwdMinDigits() {
        return this._json.pwd_min_digits;
    }
    /**
     * Get pwd min special characters.
     * @returns {number}
     */
    get pwdMinSpecialCharacters() {
        return this._json.pwd_min_special_characters;
    }
    /**
     * Get allow user id within pwd.
     * @returns {boolean}
     */
    get allowUserIdWithinPwd() {
        return this._json.allow_user_id_within_pwd;
    }
    /**
     * Get pwd lifetime.
     * @returns {number}
     */
    get pwdLifetime() {
        return this._json.pwd_lifetime;
    }
    /**
     * Get pwd expiry notification.
     * @returns {number}
     */
    get pwdExpiryNotification() {
        return this._json.pwd_expiry_notification;
    }
    /**
     * Get retry count.
     * @returns {number}
     */
    get retryCount() {
        return this._json.retry_count;
    }
    /**
     * Get retry duration.
     * @returns {number}
     */
    get retryDuration() {
        return this._json.retry_duration;
    }
    /**
     * Get lockout duration.
     * @returns {number}
     */
    get lockoutDuration() {
        return this._json.lockout_duration;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnLocalAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnLocalAuthenticationServer = EdgeSslVpnLocalAuthenticationServer;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnClientInstallPackage = void 0;
const edge_ssl_vpn_gateway_1 = __webpack_require__(400);
/**
 * SslVpnClientInstallPackage class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnClientInstallPackage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get profile name.
     * @returns {string}
     */
    get profileName() {
        return this._json.profile_name;
    }
    /**
     * Get gateway list.
     * @returns {Array<EdgeSslVpnGateway>}
     */
    get gatewayList() {
        return this._json.gateway_list.map(gateway => new edge_ssl_vpn_gateway_1.EdgeSslVpnGateway(gateway));
    }
    /**
     * Get start client on login.
     * @returns {boolean}
     */
    get startClientOnLogin() {
        return this._json.start_client_on_login;
    }
    /**
     * Get hide systray icon.
     * @returns {boolean}
     */
    get hideSystrayIcon() {
        return this._json.hide_systray_icon;
    }
    /**
     * Get remember password.
     * @returns {boolean}
     */
    get rememberPassword() {
        return this._json.remember_password;
    }
    /**
     * Get silent mode operation.
     * @returns {boolean}
     */
    get silentModeOperation() {
        return this._json.silent_mode_operation;
    }
    /**
     * Get silent mode installation.
     * @returns {boolean}
     */
    get silentModeInstallation() {
        return this._json.silent_mode_installation;
    }
    /**
     * Get hide network adaptor.
     * @returns {boolean}
     */
    get hideNetworkAdaptor() {
        return this._json.hide_network_adaptor;
    }
    /**
     * Get create desktop icon.
     * @returns {boolean}
     */
    get createDesktopIcon() {
        return this._json.create_desktop_icon;
    }
    /**
     * Get enforce server security cert validation.
     * @returns {boolean}
     */
    get enforceServerSecurityCertValidation() {
        return this._json.enforce_server_security_cert_validation;
    }
    /**
     * Get create linux client.
     * @returns {boolean}
     */
    get createLinuxClient() {
        return this._json.create_linux_client;
    }
    /**
     * Get create mac client.
     * @returns {boolean}
     */
    get createMacClient() {
        return this._json.create_mac_client;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnClientInstallPackageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnClientInstallPackage = EdgeSslVpnClientInstallPackage;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnIpPool = void 0;
/**
 * EdgeSslVpnIpPool class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnIpPool {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get ip range.
     * @returns {string}
     */
    get ipRange() {
        return this._json.ip_range;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get wins server.
     * @returns {string}
     */
    get winsServer() {
        return this._json.wins_server;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnIpPoolJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnIpPool = EdgeSslVpnIpPool;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnPrivateNetwork = void 0;
/**
 * EdgeSslVpnPrivateNetwork class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnPrivateNetwork {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get ports.
     * @returns {string}
     */
    get ports() {
        return this._json.ports;
    }
    /**
     * Get optimize.
     * @returns {boolean}
     */
    get optimize() {
        return this._json.optimize;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnPrivateNetworkJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnPrivateNetwork = EdgeSslVpnPrivateNetwork;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnUser = void 0;
/**
 * EdgeSslVpnUser class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user id.
     * @returns {string}
     */
    get userId() {
        return this._json.user_id;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get first name.
     * @returns {string}
     */
    get firstName() {
        return this._json.first_name;
    }
    /**
     * Get last name.
     * @returns {string}
     */
    get lastName() {
        return this._json.last_name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get disable account.
     * @returns {boolean}
     */
    get disableAccount() {
        return this._json.disable_account;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get password never expires.
     * @returns {boolean}
     */
    get passwordNeverExpires() {
        return this._json.password_never_expires;
    }
    /**
     * Get change pwd on next login.
     * @returns {boolean}
     */
    get changePwdOnNextLogin() {
        return this._json.change_pwd_on_next_login;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnUserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnUser = EdgeSslVpnUser;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Role = void 0;
const policy_1 = __webpack_require__(200);
/**
 * Role.
 */
class Role {
    constructor(_json) {
        this._json = _json;
        this._policies = this._json.policies.map(it => new policy_1.Policy(it));
    }
    /**
     * Gets the UUID of the role.
     * @returns {string} role UUID
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Gets the ID of the company that the role is associated with.
     * @returns {string} company ID
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Gets the name of the role.
     * @returns {string} the role name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the role description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the policies that define the role.
     * @returns {Array<Policy>} the array of role policies
     */
    get policies() {
        return this._policies.slice();
    }
    /**
     * Gets the role type.
     * @returns {RoleType} role type
     */
    get type() {
        return this._json.type;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Return the policy for the specified uuid.
     * @param {string} entityUuid
     * @returns {Policy | null}
     */
    getPolicy(entityUuid) {
        for (const p of this._policies) {
            if (p.entityUuid === entityUuid) {
                return p;
            }
        }
        return null;
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {RoleJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.Role = Role;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyBuilder = exports.Policy = void 0;
const permission_service_1 = __webpack_require__(201);
/**
 * Policy.
 */
class Policy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the entity UUID associated with the policy.
     * @returns {string} the entity UUID
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Gets the entity domain of the policy.
     * @returns {IamEntityType} the entity domain
     */
    get entityDomain() {
        return this._json.domain;
    }
    /**
     * Gets the policy type.
     * @returns {PolicyType} the policy type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the permissions assigned to the policy.
     * @returns {Array<PermissionType>} the policy permissions
     */
    get permissions() {
        if (this._json.permissions && this._json.permissions.length > 0) {
            return this._json.permissions.slice();
        }
        else {
            return [];
        }
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {PolicyJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Indicate whether the policy has the specified permission.
     * @param {PermissionType} permissionType
     * @returns {boolean}
     */
    hasPermission(permissionType) {
        const permission = permission_service_1.PermissionService.getPermission(permissionType);
        if (this.permissions.length > 0) {
            return this.permissions.indexOf(permissionType) > -1;
        }
        else {
            return ((permission !== undefined && permission.domain === this.entityDomain && this.type === 'ADMIN') ||
                (permission !== undefined &&
                    permission.domain === this.entityDomain &&
                    permission.accessType === 'READ' &&
                    this.type === 'READ_ONLY'));
        }
    }
}
exports.Policy = Policy;
/**
 * Policy Builder.
 */
class PolicyBuilder {
    /**
     * Creates a new PolicyBuilder.
     * @param {string} _entityUuid the UUID of the entity that the policy will apply to
     * @param {IamEntityType} _entityDomain the EntityDomain of the entity that the policy will apply to
     * @param {PolicyType} _type the policy type
     */
    constructor(_entityUuid, _entityDomain, _type) {
        this._entityUuid = _entityUuid;
        this._entityDomain = _entityDomain;
        this._type = _type;
        this._permissions = [];
    }
    /**
     * Set an array of permissions.
     * @param {Array<PermissionType>} array
     * @throws Error
     */
    setPermissions(array) {
        this._permissions = [];
        if (array.length > 0) {
            for (const permission of array) {
                // eslint-disable-next-line no-useless-catch
                try {
                    this.addPermission(permission);
                }
                catch (err) {
                    throw err;
                }
            }
        }
        return this;
    }
    /**
     * Adds a permission.
     * @param {PermissionType} permission the permission to add
     * @returns {PolicyBuilder} the builder
     * @throws Error
     */
    addPermission(permission) {
        const perm = permission_service_1.PermissionService.getPermission(permission);
        if (perm) {
            const domain = perm.domain;
            if (domain !== this._entityDomain) {
                throw new Error('Attempted to add permission=' +
                    permission +
                    ' in domain=' +
                    domain +
                    ' to policy in domain=' +
                    this._entityDomain +
                    '.');
            }
            if (this._type !== 'CUSTOM') {
                throw new Error('Attempted to add permission to policy of type=' +
                    this._type +
                    '. Permissions may only be explicitly added to policies with type=CUSTOM');
            }
            if (perm && !perm.availableToCustomPolicy) {
                throw new Error('Permission=' + permission + ' cannot be assigned to a custom policy.');
            }
            if (!this._permissions.some(it => it === permission)) {
                this._permissions.push(permission);
            }
        }
        else {
            throw new Error('Permission=' + permission + " doesn't exist.");
        }
        return this;
    }
    /**
     * Removes a permission.
     * @param {PermissionType} permission the permission to remove
     * @returns {PolicyBuilder} the builder
     */
    removePermission(permission) {
        const idx = this._permissions.findIndex(it => it === permission);
        if (idx >= 0) {
            this._permissions.splice(idx, 1);
        }
        return this;
    }
    /**
     * Builds the policy.
     * @returns {Policy} the new policy
     */
    build() {
        return new Policy({
            entity_uuid: this._entityUuid,
            domain: this._entityDomain,
            type: this._type,
            permissions: this._permissions
        });
    }
}
exports.PolicyBuilder = PolicyBuilder;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionService = void 0;
const domain_permission_map_1 = __webpack_require__(404);
const permission_map_1 = __webpack_require__(202);
/**
 * PermissionService
 */
class PermissionService {
    constructor() {
        this.permissions = permission_map_1.PermissionsMap.getInstance().permissions;
        this.domainPermissions = domain_permission_map_1.DomainPermissionsMap.getInstance().domainPermissions;
    }
    /**
     * Get the instance of PermissionService. Singleton implementation.
     * @returns {PermissionService}
     */
    static getInstance() {
        if (!PermissionService.instance) {
            PermissionService.instance = new PermissionService();
        }
        return PermissionService.instance;
    }
    /**
     * Get the decorated permission for the specified permission type.
     * @param {PermissionType} permission
     * @returns {Permission | undefined}
     */
    static getPermission(permission) {
        return permission_map_1.PermissionsMap.getInstance().permissions.get(permission);
    }
    /**
     * Get implied permission for the current permission.
     * @param {Array<PermissionType> | undefined} originalPermissions
     * @returns {Array<Permission> | null}
     */
    getImpliedPermissions(originalPermissions) {
        if (originalPermissions === undefined) {
            return [];
        }
        const impliedPermissions = [];
        for (const permissionType of originalPermissions) {
            const permission = this.permissions.get(permissionType);
            if (permission && permission.impliedPermissions !== null) {
                for (const impliedPermission of permission.impliedPermissions) {
                    impliedPermissions.push(this.permissions.get(impliedPermission));
                }
            }
        }
        return impliedPermissions;
    }
    /**
     * Get all available permissions for an IamEntityType.
     * @param {IamEntityType} domain
     * @returns {Array<Permission> | undefined}
     */
    getAvailablePermissionsForDomain(domain) {
        return this.domainPermissions.get(domain);
    }
    /**
     * Get all required permissions for an IamEntityType.
     * @param {IamEntityType | undefined} domain
     * @returns {Array<Permission> | undefined}
     */
    getRequiredPermissionsForDomain(domain) {
        if (domain !== undefined) {
            const permissionMap = this.domainPermissions.get(domain);
            if (permissionMap) {
                return permissionMap.filter(item => {
                    return item.requiredForCustomPolicy;
                });
            }
        }
        return undefined;
    }
    /**
     * Get all view permissions for an IamEntityType.
     * @param {IamEntityType | undefined} domain
     * @returns {Permission | undefined}
     */
    getViewPermissionForDomain(domain) {
        if (domain !== undefined) {
            const domainPermissions = this.getAvailablePermissionsForDomain(domain);
            let permissions;
            let permission;
            if (domainPermissions) {
                permissions = domainPermissions.filter(p => {
                    return (p.permissionType === 'VIEW_COMPANY' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD' ||
                        p.permissionType === 'VIEW_ILAND_BACKUP' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_LOCATION' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_ORG' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VPG' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VCC_FAILOVER_PLAN' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_CATALOG' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_MEDIA' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VAPP_TEMPLATE' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VDC' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_EDGE' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_INTERNAL_NETWORK' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VAPP' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VAPP_NETWORK' ||
                        p.permissionType === 'VIEW_ILAND_CLOUD_VM' ||
                        p.permissionType === 'VIEW_ILAND_BACKUP_LOCATION' ||
                        p.permissionType === 'VIEW_ILAND_BACKUP_TENANT' ||
                        p.permissionType === 'MANAGE_ILAND_OBJECT_STORAGE' ||
                        p.permissionType === 'MANAGE_ILAND_OBJECT_STORAGE_LOCATION');
                });
                if (permissions) {
                    permission = permissions[0];
                }
                return permission;
            }
        }
        return undefined;
    }
}
exports.PermissionService = PermissionService;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionsMap = void 0;
const permission_1 = __webpack_require__(405);
/**
 * PermissionsMap
 */
class PermissionsMap {
    constructor() {
        this._permissions = new Map();
        // O365 level permissions
        this._permissions.set('VIEW_ILAND_O365', new permission_1.Permission('VIEW_ILAND_O365', 'O365_PRODUCT', 'READ', true, true, ['VIEW_ILAND_O365_LOCATION']));
        this._permissions.set('VIEW_ILAND_O365_BILLING', new permission_1.Permission('VIEW_ILAND_O365_BILLING', 'O365_PRODUCT', 'READ', true, false, ['VIEW_ILAND_O365_LOCATION_BILLING']));
        this._permissions.set('VIEW_ILAND_O365_ORGANIZATION', new permission_1.Permission('VIEW_ILAND_O365_ORGANIZATION', 'O365_ORGANIZATION', 'READ', true, true, [
            'VIEW_ILAND_O365_JOB',
            'VIEW_ILAND_O365_RESTORE_SESSION'
        ]));
        this._permissions.set('VIEW_ILAND_O365_JOB', new permission_1.Permission('VIEW_ILAND_O365_JOB', 'O365_JOB', 'READ', true, false, ['VIEW_ILAND_O365_JOB_SESSION']));
        this._permissions.set('VIEW_ILAND_O365_RESTORE_SESSION', new permission_1.Permission('VIEW_ILAND_O365_RESTORE_SESSION', 'O365_RESTORE_SESSION', 'READ', true, false, null));
        this._permissions.set('VIEW_ILAND_O365_JOB_SESSION', new permission_1.Permission('VIEW_ILAND_O365_JOB_SESSION', 'O365_JOB_SESSION', 'READ', false, false, null));
        this._permissions.set('VIEW_ILAND_O365_LOCATION_BILLING', new permission_1.Permission('VIEW_ILAND_O365_LOCATION_BILLING', 'O365_LOCATION', 'READ', true, false, null));
        this._permissions.set('VIEW_ILAND_O365_LOCATION', new permission_1.Permission('VIEW_ILAND_O365_LOCATION', 'O365_LOCATION', 'READ', true, true, ['VIEW_ILAND_O365_ORGANIZATION']));
        this._permissions.set('MANAGE_ILAND_O365_ORGANIZATION', new permission_1.Permission('MANAGE_ILAND_O365_ORGANIZATION', 'O365_ORGANIZATION', 'WRITE', true, false, [
            'MANAGE_ILAND_O365_RESTORE_SESSION'
        ]));
        this._permissions.set('MANAGE_ILAND_O365_RESTORE_SESSION', new permission_1.Permission('MANAGE_ILAND_O365_RESTORE_SESSION', 'O365_RESTORE_SESSION', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_O365_JOB', new permission_1.Permission('MANAGE_ILAND_O365_JOB', 'O365_JOB', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_O365_JOB', new permission_1.Permission('CREATE_ILAND_O365_JOB', 'O365_ORGANIZATION', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_O365_JOB', new permission_1.Permission('DELETE_ILAND_O365_JOB', 'O365_JOB', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_O365_ORGANIZATION', new permission_1.Permission('CREATE_ILAND_O365_ORGANIZATION', 'COMPANY', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_O365_ORGANIZATION', new permission_1.Permission('DELETE_ILAND_O365_ORGANIZATION', 'O365_ORGANIZATION', 'WRITE', true, false, null));
        // BACKUP_GROUP level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_BACKUP_GROUP', new permission_1.Permission('VIEW_ILAND_CLOUD_BACKUP_GROUP', 'IAAS_BACKUP_GROUP', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_BACKUP_GROUP_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_BACKUP_GROUP_CONFIGURATION', 'IAAS_BACKUP_GROUP', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_BACKUP_GROUP', new permission_1.Permission('DELETE_ILAND_CLOUD_BACKUP_GROUP', 'IAAS_BACKUP_GROUP', 'WRITE', true, false, null));
        // VCC_BACKUP_TENANT level permissions
        this._permissions.set('VIEW_ILAND_BACKUP_TENANT', new permission_1.Permission('VIEW_ILAND_BACKUP_TENANT', 'VCC_BACKUP_TENANT', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_BACKUP_TENANT_STORAGE', new permission_1.Permission('MANAGE_ILAND_BACKUP_TENANT_STORAGE', 'VCC_BACKUP_TENANT', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_BACKUP_TENANT_PASSWORD', new permission_1.Permission('MANAGE_ILAND_BACKUP_TENANT_PASSWORD', 'VCC_BACKUP_TENANT', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_BACKUP_TENANT', new permission_1.Permission('MANAGE_ILAND_BACKUP_TENANT', 'VCC_BACKUP_TENANT', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_BACKUP_TENANT', new permission_1.Permission('DELETE_ILAND_BACKUP_TENANT', 'VCC_BACKUP_TENANT', 'WRITE', true, false, null));
        // VCC_BACKUP_JOB level permissions
        this._permissions.set('MANAGE_ILAND_BACKUP_TENANT_JOB', new permission_1.Permission('MANAGE_ILAND_BACKUP_TENANT_JOB', 'VAC_BACKUP_JOB', 'WRITE', true, false, null)),
            // VCC_BACKUP_LOCATION level permissions
            this._permissions.set('VIEW_ILAND_BACKUP_LOCATION', new permission_1.Permission('VIEW_ILAND_BACKUP_LOCATION', 'VCC_BACKUP_LOCATION', 'READ', true, true, ['VIEW_ILAND_BACKUP_TENANT']));
        this._permissions.set('VIEW_ILAND_BACKUP_LOCATION_BILLING', new permission_1.Permission('VIEW_ILAND_BACKUP_LOCATION_BILLING', 'VCC_BACKUP_LOCATION', 'READ', true, false, null));
        this._permissions.set('MANAGE_ILAND_BACKUP_DATA_CENTER_STORAGE', new permission_1.Permission('MANAGE_ILAND_BACKUP_DATA_CENTER_STORAGE', 'VCC_BACKUP_LOCATION', 'WRITE', true, false, [
            'MANAGE_ILAND_BACKUP_TENANT_STORAGE'
        ]));
        // IAAS_VM level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VM', new permission_1.Permission('VIEW_ILAND_CLOUD_VM', 'IAAS_VM', 'READ', true, true, null));
        this._permissions.set('VIEW_ILAND_CLOUD_VM_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_VM_BILLING', 'IAAS_VM', 'READ', true, false, null));
        this._permissions.set('ACCESS_ILAND_CLOUD_VM_CONSOLE', new permission_1.Permission('ACCESS_ILAND_CLOUD_VM_CONSOLE', 'IAAS_VM', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VM_POWER_STATE', new permission_1.Permission('MANAGE_ILAND_CLOUD_VM_POWER_STATE', 'IAAS_VM', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VM_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VM_CONFIGURATION', 'IAAS_VM', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VM_SNAPSHOTS', new permission_1.Permission('MANAGE_ILAND_CLOUD_VM_SNAPSHOTS', 'IAAS_VM', 'WRITE', true, false, null));
        this._permissions.set('COPY_MOVE_RESTORE_ILAND_CLOUD_VM', new permission_1.Permission('COPY_MOVE_RESTORE_ILAND_CLOUD_VM', 'IAAS_VM', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_VM', new permission_1.Permission('DELETE_ILAND_CLOUD_VM', 'IAAS_VM', 'WRITE', true, false, null));
        // IAAS_VAPP_NETWORK level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VAPP_NETWORK', new permission_1.Permission('VIEW_ILAND_CLOUD_VAPP_NETWORK', 'IAAS_VAPP_NETWORK', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_NETWORK_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_NETWORK_CONFIGURATION', 'IAAS_VAPP_NETWORK', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_VAPP_NETWORK', new permission_1.Permission('DELETE_ILAND_CLOUD_VAPP_NETWORK', 'IAAS_VAPP_NETWORK', 'WRITE', true, false, null));
        // IAAS_VAPP level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VAPP', new permission_1.Permission('VIEW_ILAND_CLOUD_VAPP', 'IAAS_VAPP', 'READ', true, true, [
            'VIEW_ILAND_CLOUD_VM',
            'VIEW_ILAND_CLOUD_VAPP_NETWORK'
        ]));
        this._permissions.set('VIEW_ILAND_CLOUD_VAPP_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_VAPP_BILLING', 'IAAS_VAPP', 'READ', true, false, ['VIEW_ILAND_CLOUD_VM_BILLING']));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_POWER_STATE', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_POWER_STATE', 'IAAS_VAPP', 'WRITE', true, false, [
            'MANAGE_ILAND_CLOUD_VM_POWER_STATE'
        ]));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_CONFIGURATION', 'IAAS_VAPP', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_SNAPSHOTS', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_SNAPSHOTS', 'IAAS_VAPP', 'WRITE', true, false, ['MANAGE_ILAND_CLOUD_VM_SNAPSHOTS']));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_LEASES', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_LEASES', 'IAAS_VAPP', 'WRITE', true, false, null));
        this._permissions.set('COPY_MOVE_DOWNLOAD_ILAND_CLOUD_VAPP', new permission_1.Permission('COPY_MOVE_DOWNLOAD_ILAND_CLOUD_VAPP', 'IAAS_VAPP', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_VAPP', new permission_1.Permission('DELETE_ILAND_CLOUD_VAPP', 'IAAS_VAPP', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_VAPP_VMS', new permission_1.Permission('CREATE_ILAND_CLOUD_VAPP_VMS', 'IAAS_VAPP', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_VAPP_NETWORKS', new permission_1.Permission('CREATE_ILAND_CLOUD_VAPP_NETWORKS', 'IAAS_VAPP', 'WRITE', true, false, null));
        // IAAS_INTERNAL_NETWORK level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_INTERNAL_NETWORK', new permission_1.Permission('VIEW_ILAND_CLOUD_INTERNAL_NETWORK', 'IAAS_INTERNAL_NETWORK', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_INTERNAL_NETWORK_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_INTERNAL_NETWORK_CONFIGURATION', 'IAAS_INTERNAL_NETWORK', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_INTERNAL_NETWORK', new permission_1.Permission('DELETE_ILAND_CLOUD_INTERNAL_NETWORK', 'IAAS_INTERNAL_NETWORK', 'WRITE', true, false, null));
        // IAAS_EDGE level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_EDGE', new permission_1.Permission('VIEW_ILAND_CLOUD_EDGE', 'IAAS_EDGE', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_DHCP_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_DHCP_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_LOAD_BALANCER_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_LOAD_BALANCER_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_STATIC_ROUTING_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_STATIC_ROUTING_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_RATE_LIMIT_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_RATE_LIMIT_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_IPSEC_VPN_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_IPSEC_VPN_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_SSL_VPN_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_SSL_VPN_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_FIREWALL_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_FIREWALL_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_NAT_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_NAT_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_L2_VPN_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_L2_VPN_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_CERTIFICATE_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_CERTIFICATE_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_SETTINGS_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_SETTINGS_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_EDGE_SSL_VPN_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_EDGE_SSL_VPN_CONFIGURATION', 'IAAS_EDGE', 'WRITE', true, false, null));
        // IAAS_VDC level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VDC', new permission_1.Permission('VIEW_ILAND_CLOUD_VDC', 'IAAS_VDC', 'READ', true, true, [
            'VIEW_ILAND_CLOUD_VAPP',
            'VIEW_ILAND_CLOUD_EDGE',
            'VIEW_ILAND_CLOUD_INTERNAL_NETWORK'
        ]));
        this._permissions.set('VIEW_ILAND_CLOUD_VDC_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_VDC_BILLING', 'IAAS_VDC', 'READ', true, false, ['VIEW_ILAND_CLOUD_VAPP_BILLING']));
        this._permissions.set('MANAGE_ILAND_CLOUD_VDC_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VDC_CONFIGURATION', 'IAAS_VDC', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_VDC_VAPPS', new permission_1.Permission('CREATE_ILAND_CLOUD_VDC_VAPPS', 'IAAS_VDC', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_VDC_CATALOG_ITEMS', new permission_1.Permission('CREATE_ILAND_CLOUD_VDC_CATALOG_ITEMS', 'IAAS_VDC', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_VDC_INTERNAL_NETWORKS', new permission_1.Permission('CREATE_ILAND_CLOUD_VDC_INTERNAL_NETWORKS', 'IAAS_VDC', 'WRITE', true, false, null));
        // IAAS_VAPP_TEMPLATE level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VAPP_TEMPLATE', new permission_1.Permission('VIEW_ILAND_CLOUD_VAPP_TEMPLATE', 'IAAS_VAPP_TEMPLATE', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VAPP_TEMPLATE_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VAPP_TEMPLATE_CONFIGURATION', 'IAAS_VAPP_TEMPLATE', 'WRITE', true, false, null));
        this._permissions.set('DOWNLOAD_ILAND_CLOUD_VAPP_TEMPLATE', new permission_1.Permission('DOWNLOAD_ILAND_CLOUD_VAPP_TEMPLATE', 'IAAS_VAPP_TEMPLATE', 'READ', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_VAPP_TEMPLATE', new permission_1.Permission('DELETE_ILAND_CLOUD_VAPP_TEMPLATE', 'IAAS_VAPP_TEMPLATE', 'WRITE', true, false, null));
        // IAAS_MEDIA level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_MEDIA', new permission_1.Permission('VIEW_ILAND_CLOUD_MEDIA', 'IAAS_MEDIA', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_MEDIA_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_MEDIA_CONFIGURATION', 'IAAS_MEDIA', 'WRITE', true, true, null));
        this._permissions.set('CLONE_DOWNLOAD_ILAND_CLOUD_MEDIA', new permission_1.Permission('CLONE_DOWNLOAD_ILAND_CLOUD_MEDIA', 'IAAS_MEDIA', 'READ', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_MEDIA', new permission_1.Permission('DELETE_ILAND_CLOUD_MEDIA', 'IAAS_MEDIA', 'WRITE', true, false, null));
        // IAAS_CATALOG level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_CATALOG', new permission_1.Permission('VIEW_ILAND_CLOUD_CATALOG', 'IAAS_CATALOG', 'READ', true, true, [
            'VIEW_ILAND_CLOUD_VAPP_TEMPLATE',
            'VIEW_ILAND_CLOUD_MEDIA'
        ]));
        this._permissions.set('MANAGE_ILAND_CLOUD_CATALOG_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_CATALOG_CONFIGURATION', 'IAAS_CATALOG', 'WRITE', true, false, null));
        this._permissions.set('DELETE_ILAND_CLOUD_CATALOG', new permission_1.Permission('DELETE_ILAND_CLOUD_CATALOG', 'IAAS_CATALOG', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_CATALOG_VAPP_TEMPLATES', new permission_1.Permission('CREATE_ILAND_CLOUD_CATALOG_VAPP_TEMPLATES', 'IAAS_CATALOG', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_CATALOG_MEDIA', new permission_1.Permission('CREATE_ILAND_CLOUD_CATALOG_MEDIA', 'IAAS_CATALOG', 'WRITE', true, false, null));
        // IAAS VCC FAILOVER PLAN permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VCC_FAILOVER_PLAN', new permission_1.Permission('VIEW_ILAND_CLOUD_VCC_FAILOVER_PLAN', 'IAAS_VCC_FAILOVER_PLAN', 'READ', true, true, null));
        this._permissions.set('TEST_ILAND_CLOUD_VCC_FAILOVER_PLAN', new permission_1.Permission('TEST_ILAND_CLOUD_VCC_FAILOVER_PLAN', 'IAAS_VCC_FAILOVER_PLAN', 'WRITE', true, false, null));
        this._permissions.set('START_ILAND_CLOUD_VCC_FAILOVER_PLAN', new permission_1.Permission('START_ILAND_CLOUD_VCC_FAILOVER_PLAN', 'IAAS_VCC_FAILOVER_PLAN', 'WRITE', true, false, null));
        this._permissions.set('UNDO_ILAND_CLOUD_VCC_FAILOVER_PLAN', new permission_1.Permission('UNDO_ILAND_CLOUD_VCC_FAILOVER_PLAN', 'IAAS_VCC_FAILOVER_PLAN', 'WRITE', true, false, null));
        // IAAS_VPG level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_VPG', new permission_1.Permission('VIEW_ILAND_CLOUD_VPG', 'IAAS_VPG', 'READ', true, true, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_VPG_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_VPG_CONFIGURATION', 'IAAS_VPG', 'WRITE', true, false, null));
        this._permissions.set('INITIATE_ILAND_CLOUD_VPG_TEST_FAILOVER', new permission_1.Permission('INITIATE_ILAND_CLOUD_VPG_TEST_FAILOVER', 'IAAS_VPG', 'WRITE', true, false, null));
        this._permissions.set('INITIATE_ILAND_CLOUD_VPG_LIVE_FAILOVER', new permission_1.Permission('INITIATE_ILAND_CLOUD_VPG_LIVE_FAILOVER', 'IAAS_VPG', 'WRITE', true, false, null));
        // IAAS_ORGANIZATION level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_ORG', new permission_1.Permission('VIEW_ILAND_CLOUD_ORG', 'IAAS_ORGANIZATION', 'READ', true, true, [
            'VIEW_ILAND_CLOUD_VDC',
            'VIEW_ILAND_CLOUD_CATALOG',
            'VIEW_ILAND_CLOUD_VPG'
        ]));
        this._permissions.set('VIEW_ILAND_CLOUD_ORG_SECURITY', new permission_1.Permission('VIEW_ILAND_CLOUD_ORG_SECURITY', 'IAAS_ORGANIZATION', 'READ', true, false, null));
        this._permissions.set('VIEW_ILAND_CLOUD_ORG_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_ORG_BILLING', 'IAAS_ORGANIZATION', 'READ', true, false, ['VIEW_ILAND_CLOUD_VDC_BILLING']));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_CONFIGURATION', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_CONFIGURATION', 'IAAS_ORGANIZATION', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_DNS', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_DNS', 'IAAS_ORGANIZATION', 'WRITE', true, false, null));
        this._permissions.set('CREATE_ILAND_CLOUD_ORG_CATALOGS', new permission_1.Permission('CREATE_ILAND_CLOUD_ORG_CATALOGS', 'IAAS_ORGANIZATION', 'WRITE', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_SECURITY', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_SECURITY', 'IAAS_ORGANIZATION', 'WRITE', true, false, [
            'VIEW_ILAND_CLOUD_ORG_SECURITY'
        ]));
        this._permissions.set('VIEW_ILAND_CLOUD_ORG_DR_RUNBOOKS', new permission_1.Permission('VIEW_ILAND_CLOUD_ORG_DR_RUNBOOKS', 'IAAS_ORGANIZATION', 'READ', true, false, ['VIEW_ILAND_CLOUD_VPG']));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_DR_RUNBOOKS', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_DR_RUNBOOKS', 'IAAS_ORGANIZATION', 'WRITE', true, false, [
            'VIEW_ILAND_CLOUD_ORG_DR_RUNBOOKS',
            'INITIATE_ILAND_CLOUD_VPG_LIVE_FAILOVER',
            'INITIATE_ILAND_CLOUD_VPG_TEST_FAILOVER',
            'MANAGE_ILAND_CLOUD_VPG_CONFIGURATION'
        ]));
        this._permissions.set('VIEW_ILAND_CLOUD_ORG_VDI', new permission_1.Permission('VIEW_ILAND_CLOUD_ORG_VDI', 'IAAS_ORGANIZATION', 'READ', true, false, null));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_VDI', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_VDI', 'IAAS_ORGANIZATION', 'WRITE', true, false, ['VIEW_ILAND_CLOUD_ORG_VDI']));
        this._permissions.set('MANAGE_ILAND_CLOUD_ORG_VDI_DEPLOYMENTS', new permission_1.Permission('MANAGE_ILAND_CLOUD_ORG_VDI_DEPLOYMENTS', 'IAAS_ORGANIZATION', 'WRITE', true, false, [
            'VIEW_ILAND_CLOUD_ORG_VDI',
            'CREATE_ILAND_CLOUD_VDC_VAPPS'
        ]));
        // IAAS_LOCATION level permissions
        this._permissions.set('VIEW_ILAND_CLOUD_LOCATION', new permission_1.Permission('VIEW_ILAND_CLOUD_LOCATION', 'IAAS_LOCATION', 'READ', true, true, ['VIEW_ILAND_CLOUD_ORG']));
        this._permissions.set('VIEW_ILAND_CLOUD_LOCATION_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_LOCATION_BILLING', 'IAAS_LOCATION', 'READ', true, false, ['VIEW_ILAND_CLOUD_ORG_BILLING']));
        // VCC_BACKUP_PRODUCT level permissions
        this._permissions.set('VIEW_ILAND_BACKUP', new permission_1.Permission('VIEW_ILAND_BACKUP', 'VCC_BACKUP_PRODUCT', 'READ', true, true, ['VIEW_ILAND_BACKUP_LOCATION']));
        this._permissions.set('VIEW_ILAND_BACKUP_BILLING', new permission_1.Permission('VIEW_ILAND_BACKUP_BILLING', 'VCC_BACKUP_PRODUCT', 'READ', true, false, [
            'VIEW_ILAND_BACKUP_LOCATION_BILLING'
        ]));
        // IAAS_PRODUCT level permissions
        this._permissions.set('VIEW_ILAND_CLOUD', new permission_1.Permission('VIEW_ILAND_CLOUD', 'IAAS_PRODUCT', 'READ', true, true, ['VIEW_ILAND_CLOUD_LOCATION']));
        this._permissions.set('VIEW_ILAND_CLOUD_BILLING', new permission_1.Permission('VIEW_ILAND_CLOUD_BILLING', 'IAAS_PRODUCT', 'READ', true, false, ['VIEW_ILAND_CLOUD_LOCATION_BILLING']));
        // OBJECT_STORAGE_LOCATION level permissions
        this._permissions.set('MANAGE_ILAND_OBJECT_STORAGE_LOCATION', new permission_1.Permission('MANAGE_ILAND_OBJECT_STORAGE_LOCATION', 'OBJECT_STORAGE_LOCATION', 'WRITE', true, false, null));
        // OBJECT_STORAGE_PRODUCT level permissions
        this._permissions.set('MANAGE_ILAND_OBJECT_STORAGE', new permission_1.Permission('MANAGE_ILAND_OBJECT_STORAGE', 'OBJECT_STORAGE_PRODUCT', 'WRITE', true, false, [
            'MANAGE_ILAND_OBJECT_STORAGE_LOCATION'
        ]));
        // OBJECT_STORAGE_CEPH_TENANT level permissions
        this._permissions.set('CREATE_ILAND_OBJECT_STORAGE_USER_SESSION', new permission_1.Permission('CREATE_ILAND_OBJECT_STORAGE_USER_SESSION', 'OBJECT_STORAGE_CEPH_TENANT', 'READ', true, false, null)),
            this._permissions.set('CREATE_ILAND_OBJECT_STORAGE_KEY', new permission_1.Permission('CREATE_ILAND_OBJECT_STORAGE_KEY', 'OBJECT_STORAGE_CEPH_TENANT', 'WRITE', true, false, null)),
            this._permissions.set('DELETE_ILAND_OBJECT_STORAGE_KEY', new permission_1.Permission('DELETE_ILAND_OBJECT_STORAGE_KEY', 'OBJECT_STORAGE_CEPH_TENANT', 'WRITE', true, false, null)),
            this._permissions.set('VIEW_ILAND_CEPH_OBJECT_STORAGE_TENANT', new permission_1.Permission('VIEW_ILAND_CEPH_OBJECT_STORAGE_TENANT', 'OBJECT_STORAGE_CEPH_TENANT', 'READ', true, false, null)),
            this._permissions.set('MANAGE_ILAND_CEPH_OBJECT_STORAGE', new permission_1.Permission('MANAGE_ILAND_CEPH_OBJECT_STORAGE', 'OBJECT_STORAGE_CEPH_TENANT', 'WRITE', true, false, [
                'CREATE_ILAND_OBJECT_STORAGE_USER_SESSION',
                'CREATE_ILAND_OBJECT_STORAGE_KEY',
                'DELETE_ILAND_OBJECT_STORAGE_KEY',
                'VIEW_ILAND_CEPH_OBJECT_STORAGE_TENANT'
            ])),
            // OBJECT_STORAGE_CEPH_LOCATION level permissions
            this._permissions.set('VIEW_ILAND_CEPH_OBJECT_STORAGE_LOCATION', new permission_1.Permission('VIEW_ILAND_CEPH_OBJECT_STORAGE_LOCATION', 'OBJECT_STORAGE_CEPH_LOCATION', 'READ', true, false, null)),
            // COMPANY level permissions
            this._permissions.set('VIEW_COMPANY', new permission_1.Permission('VIEW_COMPANY', 'COMPANY', 'READ', true, true, ['VIEW_ILAND_CLOUD', 'VIEW_ILAND_BACKUP']));
        this._permissions.set('VIEW_COMPANY_SUPPORT_TICKETS', new permission_1.Permission('VIEW_COMPANY_SUPPORT_TICKETS', 'COMPANY', 'READ', true, false, null));
        this._permissions.set('VIEW_COMPANY_IAM', new permission_1.Permission('VIEW_COMPANY_IAM', 'COMPANY', 'READ', true, false, null));
        this._permissions.set('MANAGE_COMPANY_IAM', new permission_1.Permission('MANAGE_COMPANY_IAM', 'COMPANY', 'WRITE', false, false, ['VIEW_COMPANY_IAM']));
        this._permissions.set('MANAGE_COMPANY_IDENTITY_PROVIDER', new permission_1.Permission('MANAGE_COMPANY_IDENTITY_PROVIDER', 'COMPANY', 'WRITE', false, false, ['VIEW_COMPANY_IAM']));
        this._permissions.set('MANAGE_COMPANY_SETTINGS', new permission_1.Permission('MANAGE_COMPANY_SETTINGS', 'COMPANY', 'WRITE', true, false, ['VIEW_COMPANY']));
        this._permissions.set('MANAGE_COMPANY_SUPPORT_TICKETS', new permission_1.Permission('MANAGE_COMPANY_SUPPORT_TICKETS', 'COMPANY', 'WRITE', true, false, ['VIEW_COMPANY_SUPPORT_TICKETS']));
        this._permissions.set('CREATE_ILAND_BACKUP_TENANT', new permission_1.Permission('CREATE_ILAND_BACKUP_TENANT', 'COMPANY', 'WRITE', true, false, null));
    }
    /**
     * Get an instance of PermissionMap. Singleton implementation.
     * @returns {PermissionsMap}
     */
    static getInstance() {
        if (!PermissionsMap.instance) {
            PermissionsMap.instance = new PermissionsMap();
        }
        return PermissionsMap.instance;
    }
    /**
     * Get the permissions map.
     * @returns {Map<PermissionType, Permission>}
     */
    get permissions() {
        return this._permissions;
    }
}
exports.PermissionsMap = PermissionsMap;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgIntegratedBackupStatus = void 0;
const vdc_integrated_backup_status_1 = __webpack_require__(204);
/**
 * Org Integrated Backup Status.
 */
/* istanbul ignore next: autogenerated */
class OrgIntegratedBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the UUID of the org.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get the org's backup configuration status.
     * @returns {IntegratedBackupStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get the statuses of child vDCs.
     * @returns {Array<VdcIntegratedBackupStatus>}
     */
    get vdcStatuses() {
        return this._json.vdc_statuses.map(it => new vdc_integrated_backup_status_1.VdcIntegratedBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgIntegratedBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgIntegratedBackupStatus = OrgIntegratedBackupStatus;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcIntegratedBackupStatus = void 0;
const vapp_integrated_backup_status_1 = __webpack_require__(205);
/**
 * vDC Integrated Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VdcIntegratedBackupStatus {
    constructor(_intBackupStatusJson) {
        this._intBackupStatusJson = _intBackupStatusJson;
    }
    /**
     * Get the UUID of the vDC.
     * @returns {string}
     */
    get vdcUuid() {
        return this._intBackupStatusJson.vdc_uuid;
    }
    /**
     * Get the vDC's backup configuration status.
     * @returns {IntegratedBackupStatus}
     */
    get status() {
        return this._intBackupStatusJson.status;
    }
    /**
     * Get the statuses of child vApps.
     * @returns {Array<VappIntegratedBackupStatus>}
     */
    get vappStatuses() {
        return this._intBackupStatusJson.vapp_statuses.map(it => new vapp_integrated_backup_status_1.VappIntegratedBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcIntegratedBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._intBackupStatusJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._intBackupStatusJson, undefined, 2);
    }
}
exports.VdcIntegratedBackupStatus = VdcIntegratedBackupStatus;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappIntegratedBackupStatus = void 0;
const vm_integrated_backup_status_1 = __webpack_require__(206);
/**
 * vApp Integrated Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VappIntegratedBackupStatus {
    constructor(_intBackupStatusJson) {
        this._intBackupStatusJson = _intBackupStatusJson;
    }
    /**
     * Get the UUID of the vApp.
     * @returns {string}
     */
    get vappUuid() {
        return this._intBackupStatusJson.vapp_uuid;
    }
    /**
     * Get the vApp's backup configuration status.
     * @returns {IntegratedBackupStatus}
     */
    get status() {
        return this._intBackupStatusJson.status;
    }
    /**
     * Get the statuses of child VMs.
     * @returns {Array<VmIntegratedBackupStatus>}
     */
    get vmStatuses() {
        return this._intBackupStatusJson.vm_statuses.map(it => new vm_integrated_backup_status_1.VmIntegratedBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VappIntegratedBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._intBackupStatusJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._intBackupStatusJson, undefined, 2);
    }
}
exports.VappIntegratedBackupStatus = VappIntegratedBackupStatus;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmIntegratedBackupStatus = void 0;
/**
 * VM Integrated Backup Status.
 */
/* istanbul ignore next: autogenerated */
class VmIntegratedBackupStatus {
    constructor(_intBackupStatusJson) {
        this._intBackupStatusJson = _intBackupStatusJson;
    }
    /**
     * Get the UUID of the VM.
     * @returns {string}
     */
    get vmUuid() {
        return this._intBackupStatusJson.vm_uuid;
    }
    /**
     * Get the integrated backup config status of the VM.
     * @returns {IntegratedBackupStatus}
     */
    get status() {
        return this._intBackupStatusJson.status;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmIntegratedBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._intBackupStatusJson);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._intBackupStatusJson, undefined, 2);
    }
}
exports.VmIntegratedBackupStatus = VmIntegratedBackupStatus;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractNetwork = void 0;
const entity_1 = __webpack_require__(9);
const ip_range_1 = __webpack_require__(32);
/**
 * Abstract Network.
 */
class AbstractNetwork extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets the description.
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the datacenter location identifier.
     * @returns {string} location ID
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the UUID of the Org that the network is associated with.
     * @returns {string} Org UUID
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Gets the UUID of the vDC that the network is associated with.
     * @returns {string} vDC UUID
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Gets the primary DNS host.
     * @returns {string} primary DNS host
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Gets the secondary DSN host.
     * @returns {string} secondary DNS host
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Gets the DNS suffix.
     * @returns {string} DNS suffix
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Gets the networks fence mode.
     * @returns {FenceModeType} fence mode
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Gets the gateway address of the network.
     * @returns {string} gateway address
     */
    get gatewayAddress() {
        return this._json.gateway;
    }
    /**
     * Gets the netmask of the network.
     * @returns {string} netmask
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Gets the static IP Ranges for the newtork.
     * @returns {[IpRange]} static IP ranges
     */
    get ipRanges() {
        return this._json.ip_ranges.map(ipRangeJson => new ip_range_1.IpRange(ipRangeJson));
    }
    /**
     * Indicates whether this network is inherited.
     * @returns {boolean} value
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Gets the UUID of the parent external network if this is a bridged network, otherwise null.
     * @returns {string|null} parent external network UUID
     */
    get parentNetworkUuid() {
        return this._json.parent_network_uuid;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AbstractNetwork = AbstractNetwork;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365BackupRepository = void 0;
/**
 * O365 Backup Repository
 */
/* istanbul ignore next: autogenerated */
class O365BackupRepository {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name of Backup Repo
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description of Backup Repo
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get id of Backup Repo
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365BackupRepositoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365BackupRepository = O365BackupRepository;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Job = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const o365_job_selected_excluded_items_1 = __webpack_require__(408);
const o365_job_session_1 = __webpack_require__(409);
const o365_restore_session_1 = __webpack_require__(90);
/**
 * O365 Backup Job entity
 */
/* istanbul ignore next: autogenerated */
class O365Job extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get a O365 Job by UUID
     * @param uuid
     * @returns {Promise<O365Job>} promise that resolves with a O365 Job
     */
    static getO365Job(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-jobs/${uuid}`)
                .then(res => {
                const json = res.data;
                return new O365Job(json);
            });
        });
    }
    /**
     * Get the O365 Job entity type
     * @returns {EntityType}
     */
    get entityType() {
        return 'O365_JOB';
    }
    /**
     * Get the location id of the O365 Job
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get the O365 organization uuid of the O365 Job
     * @returns {string}
     */
    get o365OrganizationUuid() {
        return this._json.o365_organization_uuid;
    }
    /**
     * Get the O365 Job description
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the Last Run of the O365 Job
     * @returns {number}
     */
    get lastRun() {
        return this._json.last_run;
    }
    /**
     * Get the Next Run of the O365 Job
     * @returns {number}
     */
    get nextRun() {
        return this._json.next_run;
    }
    /**
     * Is the O365 Job enabled
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.enabled;
    }
    /**
     * Get the O365 Job Backup Type
     * @returns {O365JobBackupType}
     */
    get backupType() {
        return this._json.backup_type;
    }
    /**
     * Get the last status of the O365 Job
     * @returns {O365JobStatus}
     */
    get lastStatus() {
        return this._json.last_status;
    }
    /**
     * Get the schedule policy of the O365 Job
     * @returns {O365JobSchedulePolicy}
     */
    get schedulePolicy() {
        return this._json.schedule_policy;
    }
    /**
     * Indicates whether the Backup Job has the OneDrive service
     * @returns {boolean}
     */
    get hasOneDrive() {
        return this._json.type_veod;
    }
    /**
     * Indicates whether the Backup Job has the Exchange service
     * @returns {boolean}
     */
    get hasExchange() {
        return this._json.type_vex;
    }
    /**
     * Indicates whether the Backup Job has the SharePoint service
     * @returns {boolean}
     */
    get hasSharepoint() {
        return this._json.type_vesp;
    }
    /**
     * Indicates whether the Backup Job has the Teams service
     * @returns {boolean}
     */
    get hasTeams() {
        return this._json.type_vet;
    }
    /**
     * Gets the Excluded Items for a SelectedItems type of Backup Job
     * @returns {O365BackupJobSelectedExcludedItems | null}
     */
    get excludedItems() {
        return this._json.excluded_items ? new o365_job_selected_excluded_items_1.O365BackupJobSelectedExcludedItems(this._json.excluded_items) : null;
    }
    /**
     * Gets the Selected Items for a SelectedItems type of Backup Job
     * @returns {O365BackupJobSelectedExcludedItems | null}
     */
    get selectedItems() {
        return this._json.selected_items ? new o365_job_selected_excluded_items_1.O365BackupJobSelectedExcludedItems(this._json.selected_items) : null;
    }
    /**
     * Indicates whether the Backup Job has at least 1 restore session with a status of success or warning
     * @returns {boolean}
     */
    get restoreSessionExist() {
        return this._json.is_restore_session_exist;
    }
    /**
     * Refreshes the O365 Job data by retrieving it from the API again.
     * @return {Promise<O365Job>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-jobs/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets paginated Job Sessions for O365 Job
     * @param {number} [page]
     * @param {number} [pageSize]
     * @returns {Promise<Array<O365JobSession>>}
     */
    /* istanbul ignore next: autogenerated */
    getJobSessions(page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-jobs/${this.uuid}/job-sessions`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_job_session_1.O365JobSession(it));
            });
        });
    }
    /**
     * Start an O365 Restore Session
     * @param {O365RestoreSessionStartRequest} request
     * @returns {Promise<O365RestoreSession>} the restore session created
     */
    /* istanbul ignore next: autogenerated */
    startRestoreSession(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/o365-jobs/${this.uuid}/actions/start-restore-session`, request.json)
                .then(response => {
                const json = response.data;
                return new o365_restore_session_1.O365RestoreSession(json);
            });
        });
    }
    /**
     * Start O365 Backup Job
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    startJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-jobs/${this.uuid}/actions/start-backup-job`);
        });
    }
    /**
     * Stop O365 Backup Job
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    stopJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-jobs/${this.uuid}/actions/stop-backup-job`);
        });
    }
    /**
     * Enable O365 Backup Job
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    enableJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-jobs/${this.uuid}/actions/enable`);
        });
    }
    /**
     * Disable O365 Backup Job
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    disableJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/o365-jobs/${this.uuid}/actions/disable`);
        });
    }
    /**
     * Modify an O365 Job's schedule policy
     * @param {O365JobSchedulePolicyRequest} request - the job schedule policy request object
     * @returns {Promise<O365Job>} the modified o365 job
     */
    /* istanbul ignore next: autogenerated */
    updateSchedulePolicy(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/o365-jobs/${this.uuid}/actions/modify`, request.json)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Modify an O365 backup job
     * @param {O365JobRequest} request
     * @returns {Promise<O365Job>}
     */
    /* istanbul ignore next: autogenerated */
    updateJob(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/o365-jobs/${this.uuid}/actions/modifyJob`, request.json)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Delete O365 Backup Job
     * @return {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    deleteJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/o365-jobs/${this.uuid}`);
        });
    }
}
exports.O365Job = O365Job;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointSite = void 0;
/**
 * O365 SharePoint Site
 */
/* istanbul ignore next: autogenerated */
class O365SharePointSite {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Site
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the url of the SharePoint Site
     */
    get url() {
        return this._json.url;
    }
    /**
     * Gets the name of the SharePoint Site
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the cloud boolean of the SharePoint Site
     */
    get isCloud() {
        return this._json.cloud;
    }
    /**
     * Gets the title of the SharePoint Site
     */
    get title() {
        return this._json.title;
    }
    /**
     * Gets backed up boolean of the SharePoint Site
     */
    get isBackedUp() {
        return this._json.backed_up;
    }
    /**
     * Get the available boolean of the SharePoint Site
     */
    get isAvailable() {
        return this._json.available;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointSiteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointSite = O365SharePointSite;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Team = void 0;
/**
 * O365 Team
 */
/* istanbul ignore next: autogenerated */
class O365Team {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the O365 Team description
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the O365 Team display name
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get whether the Office 365 Team is backed up
     * @returns {boolean}
     */
    get isBackedUp() {
        return this._json.is_backed_up;
    }
    /**
     * Get the O365 Team mail
     * @returns {string}
     */
    get mail() {
        return this._json.mail;
    }
    /**
     * Get the native id of O365 Team
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get the O365 VBO Organization iland platform UUID
     * @returns {string}
     */
    get organizationUuid() {
        return this._json.organization_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365Team = O365Team;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Org = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const backup_group_1 = __webpack_require__(46);
const backup_policy_1 = __webpack_require__(66);
const org_backup_summary_stats_1 = __webpack_require__(269);
const org_backup_status_1 = __webpack_require__(129);
const catalog_1 = __webpack_require__(69);
const bill_1 = __webpack_require__(39);
const billing_legacy_response_1 = __webpack_require__(302);
const billing_summary_1 = __webpack_require__(70);
const org_vdc_bills_1 = __webpack_require__(303);
const entity_1 = __webpack_require__(9);
const report_header_1 = __webpack_require__(144);
const edge_1 = __webpack_require__(71);
const network_perf_sample_serie_1 = __webpack_require__(192);
const org_integrated_backup_status_1 = __webpack_require__(203);
const internal_network_1 = __webpack_require__(72);
const perf_counter_1 = __webpack_require__(73);
const perf_samples_series_1 = __webpack_require__(74);
const task_1 = __webpack_require__(10);
const vapp_network_1 = __webpack_require__(75);
const vapp_template_1 = __webpack_require__(49);
const vapp_1 = __webpack_require__(76);
const failover_plan_1 = __webpack_require__(217);
const vdc_1 = __webpack_require__(92);
const vdi_automation_deployment_1 = __webpack_require__(488);
const vdi_automation_group_1 = __webpack_require__(489);
const vdi_automation_group_deployment_summary_1 = __webpack_require__(233);
const vdi_org_deployment_summary_1 = __webpack_require__(490);
const vdi_team_1 = __webpack_require__(491);
const vdi_user_1 = __webpack_require__(492);
const vm_1 = __webpack_require__(41);
const expanded_vpg_1 = __webpack_require__(95);
const bandwidth_usage_summary_1 = __webpack_require__(493);
const billing_sample_serie_1 = __webpack_require__(218);
const check_dns_zone_1 = __webpack_require__(494);
const disaster_recovery_runbook_1 = __webpack_require__(495);
const dns_record_1 = __webpack_require__(499);
const dns_zone_1 = __webpack_require__(500);
const external_network_1 = __webpack_require__(501);
const ip_address_set_1 = __webpack_require__(502);
const is_compliance_org_1 = __webpack_require__(503);
const nessus_launch_1 = __webpack_require__(504);
const nessus_scan_1 = __webpack_require__(505);
const nessus_scan_details_1 = __webpack_require__(506);
const nessus_scan_opt_out_1 = __webpack_require__(514);
const nessus_scan_update_1 = __webpack_require__(515);
const org_currency_code_1 = __webpack_require__(516);
const org_dns_zone_1 = __webpack_require__(517);
const public_ip_assignment_1 = __webpack_require__(518);
const anti_malware_over_time_1 = __webpack_require__(519);
const compliance_over_time_1 = __webpack_require__(521);
const firewall_over_time_1 = __webpack_require__(523);
const log_inspection_over_time_1 = __webpack_require__(525);
const report_with_content_1 = __webpack_require__(527);
const report_with_summary_1 = __webpack_require__(528);
const vulnerability_over_time_1 = __webpack_require__(529);
const vpg_protection_info_1 = __webpack_require__(531);
/**
 * IaaS Organization.
 */
class Org extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets an Org by UUID.
     * @param uuid Org UUID
     * @returns {Promise<Org>} promise that resolves with the Org
     */
    static getOrg(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Org(json);
            });
        });
    }
    /**
     * Gets the list of performance counters that can be used to query for VPGs usage data (common for all orgs).
     * @returns {Promise<Array<PerfCounter>>} performance counters
     */
    /* istanbul ignore next: autogenerated */
    static getVpgPerformanceCounters() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get('/orgs/performance-counters-vpg')
                .then(response => {
                const json = response.data.data;
                return json.map(it => new perf_counter_1.PerfCounter(it));
            });
        });
    }
    get entityType() {
        return 'IAAS_ORGANIZATION';
    }
    /**
     * Indicates whether the Org is enabled.
     * @returns {boolean} value
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Gets the description.
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the vCloud HREF
     * @returns {string} vCloud HREF
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Gets the datacenter location identifier.
     * @returns {string} location ID
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the Orgs max vApp runtime lease setting.
     * @returns {number} vApp max runtime lease
     */
    get vappMaxRuntimeLease() {
        return this._json.vapp_max_runtime_lease;
    }
    /**
     * Gets the vApps max storage lease setting.
     * @returns {number} vApp max storage lease
     */
    get vappMaxStorageLease() {
        return this._json.vapp_max_storage_lease;
    }
    /**
     * Gets the Orgs vApp template max storage lease setting.
     * @returns {number} vApp template max storage lease
     */
    get vappTemplateMaxStorageLease() {
        return this._json.vapp_template_max_storage_lease;
    }
    /**
     * Indicates whether the Org is configured such that vApps are deleted upon storage lease expiration vs. being marked
     * as an expired item.
     * @returns {boolean} value
     */
    get vappDeletedOnStorageLeaseExpiration() {
        return this._json.vapp_delete_on_storage_expire;
    }
    /**
     * Indicates whether the Org is configured such that vApp templates are deleted upon storage lease expiration vs.
     * being marked as an expired item.
     * @returns {boolean} value
     */
    get vappTemplateDeletedOnStorageLeaseExpiration() {
        return this._json.vapp_template_delete_on_storage_expire;
    }
    /**
     * Indicates whether the Org is a Zerto continuity target.
     * @returns {boolean} value
     */
    get zertoTarget() {
        return this._json.zerto_target;
    }
    /**
     * Indicates whether the Org is a VCCR continuity target.
     * @returns {boolean} value
     */
    get vccrTarget() {
        return this._json.vccr_target;
    }
    /**
     * Gets the full name of the organization.
     * @returns {string} full name
     */
    get fullName() {
        return this._json.fullname;
    }
    /**
     * Gets the company ID (CRM).
     * @returns {string} company ID
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {OrgJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Refreshes the Org data by retrieving it from the API again.
     * @returns {Promise<Org>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets a list of historical bills for the organization. All bills with timestamps between the start and end
     * parameters are returned.
     * @param {Date} start the begin timestamp of the query range
     * @param {Date} end the end timestamp of the query range
     * @returns {Promise<Array<Bill>>} promise that resolves with the list of historical bills
     */
    getHistoricalBilling(start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/historical-billing`, {
                params: {
                    start: start.valueOf(),
                    end: end.valueOf()
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new bill_1.Bill(it));
            });
        });
    }
    /**
     * Gets the organization's current billing summary.
     * @returns {Promise<BillingSummary>} promise that resolves with the current billing summary
     */
    getBillingSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/billing-summary`)
                .then(response => {
                const json = response.data;
                return new billing_summary_1.BillingSummary(json);
            });
        });
    }
    /**
     * Gets the list of bills for each vDC within the org, for the specified range of billing periods.
     * @param {number} startMonth the begin range month specified as an integer in the range 1-12
     * @param {number} startYear the begin range year
     * @param {number} endMonth the end range month specified as an integer in the range 1-12
     * @param {number} endYear the end range month
     * @returns {Promise<Array<OrgVdcBills>>} a promise that resolves with the list of org vdc bill objects
     */
    getBillingByVdcInRange(startMonth, startYear, endMonth, endYear) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/historical-billing-by-vdc`, {
                params: {
                    startMonth: startMonth,
                    startYear: startYear,
                    endMonth: endMonth,
                    endYear: endYear
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new org_vdc_bills_1.OrgVdcBills(it));
            });
        });
    }
    /**
     * Gets the list of bills for each vDC within the org, for the specified billing month/year.
     * @param {number} month the month to get vDC bills for in the range 1-12
     * @param {number} year the year to get vDC bills for
     * @returns {Promise<Array<OrgVdcBills|null>>} a promise that resolves with the org vdc bill object or null if none
     * exists for the specified month
     */
    getBillingByVdc(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.getBillingByVdcInRange(month, year, month, year).then(bills => {
                return bills.length === 1 ? bills[0] : null;
            });
        });
    }
    /**
     * Gets the organization's bill for the specified month/year.
     * @param {number} month a month specified as an integer in the range 1-12
     * @param {number} year a year
     * @returns {Promise<Bill>} a promise that resolves with the bill
     */
    getBill(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/billing`, {
                params: {
                    month: month,
                    year: year
                }
            })
                .then(response => {
                const json = response.data;
                return new bill_1.Bill(json);
            });
        });
    }
    /**
     * Gets the Orgs child vDCs.
     * @returns {Promise<Vdc[]>} promise that resolves with an array of child vDCs
     */
    getVdcs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdcs`)
                .then(response => {
                const json = response.data.data;
                return json.map(vdcJson => new vdc_1.Vdc(vdcJson));
            });
        });
    }
    /**
     * Gets the Orgs child vApps.
     * @returns {Promise<Vapp[]>} promise that resolves with an array of child vApps
     */
    getVapps() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vapps`)
                .then(response => {
                const json = response.data.data;
                return json.map(vappJson => new vapp_1.Vapp(vappJson));
            });
        });
    }
    /**
     * Gets the Orgs child VMs.
     * @returns {Promise<Vm[]>} promise that resolves with an array of child VMs
     */
    getVms() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vms`)
                .then(response => {
                const json = response.data.data;
                return json.map(vmJson => new vm_1.Vm(vmJson));
            });
        });
    }
    /**
     * Gets the Orgs child Edges.
     * @returns {Promise<Edge[]>} promise that resolves with an array of child Edges
     */
    getEdges() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/edges`)
                .then(response => {
                const json = response.data.data;
                return json.map(edgeJson => new edge_1.Edge(edgeJson));
            });
        });
    }
    /**
     * Gets the Orgs child internal networks.
     * @returns {Promise<InternalNetwork[]>} promise that resolves with an array of child Internal networks
     */
    getInternalNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/org-vdc-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(netJson => new internal_network_1.InternalNetwork(netJson));
            });
        });
    }
    /**
     * Gets the Orgs child vApp networks.
     * @returns {Promise<VappNetwork[]>} promise that resolves with an array of child vApp networks
     */
    getVappNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vapp-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(netJson => new vapp_network_1.VappNetwork(netJson));
            });
        });
    }
    /**
     * Updates the organizations vapp template lease settings.
     * @param {OrgVappTemplateLeaseUpdateRequest} spec the new lease settings
     * @returns {Promise<Org>} a promise that resolves with the updated org
     */
    /* istanbul ignore next: autogenerated */
    updateVappTemplateLeaseSettings(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/update-vapp-template-lease-settings`, spec.json)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Updates the organization's vApp lease settings.
     * @param {OrgVappLeaseUpdateRequest} spec the new lease settings
     * @returns {Promise<Org>} a promise that resolves with the updated org
     */
    /* istanbul ignore next: autogenerated */
    updateOrgVappLeaseSettings(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/update-vapp-lease-settings`, spec.json)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets all DNS records for the organization.
     * @returns {Promise<Array<DnsRecord>>} a promise that resolves with a list of DNS records.
     */
    getDnsRecords() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/dns-records`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new dns_record_1.DnsRecord(it));
            });
        });
    }
    /**
     * Adds a new DNS record for the org.
     * @param {DnsRecordCreateRequest} record the new record
     * @returns {Promise<DnsRecord>} a promise that resolves with the new record
     */
    addDnsRecord(record) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/dns-records`, record.json)
                .then(response => {
                const json = response.data;
                return new dns_record_1.DnsRecord(json);
            });
        });
    }
    /**
     * Updates a DNS record within the org.
     * @param {DnsRecordUpdateRequest} record the updated record
     * @returns {Promise<DnsRecord>} a promise that resolves with the updated record
     */
    updateDnsRecord(record) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/dns-records/${record.id}`, record.json)
                .then(response => {
                const json = response.data;
                return new dns_record_1.DnsRecord(json);
            });
        });
    }
    /**
     * Deletes a DNS record within the org.
     * @param {number} recordId the record ID
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    deleteDnsRecord(recordId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/dns-records/${recordId}`);
        });
    }
    /**
     * Gets all DNS zones that exist within the org.
     * @returns {Promise<Array<OrgDnsZone>>} a promise that resolves with the list of DNS zones
     */
    getOrgDnsZones() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/dns-zones`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new org_dns_zone_1.OrgDnsZone(it));
            });
        });
    }
    /**
     * Adds a new DNS zone within the org.
     * @param {DnsZoneCreateRequest} zoneSpec the new DNS zone details
     * @returns {Promise<DnsZone>} a promise that resolves with the newly created DNS zone
     */
    addDnsZone(zoneSpec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/dns-zones`, zoneSpec.json)
                .then(response => {
                const json = response.data;
                return new dns_zone_1.DnsZone(json);
            });
        });
    }
    /**
     * Deletes a DNS zone from the org.
     * @param {number} zoneId the ID of the zone
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    deleteDnsZone(zoneId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/dns-zones/${zoneId}`);
        });
    }
    /**
     * Checks the status of a DNS zone within the org.
     * @param {number} zoneId the ID of the zone
     * @returns {Promise<CheckDnsZone>} a promise that resolves with the zone check results
     */
    checkDnsZone(zoneId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/dns-zones/${zoneId}/is-valid`)
                .then(response => {
                const json = response.data;
                return new check_dns_zone_1.CheckDnsZone(json);
            });
        });
    }
    /**
     * Gets all IP addresses available for assignment in PTR records.
     * @returns {Promise<IpAddressSet>} a promise that resolves with the set of available IP addresses
     */
    getAvailableIpsForPtrRecords() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/unmapped-dns-ptr-ip-addresses`)
                .then(response => {
                const json = response.data;
                return new ip_address_set_1.IpAddressSet(json);
            });
        });
    }
    /**
     * Gets all catalogs within the organization.
     * @returns {Promise<Array<Catalog>>} returns a promise that resolves with the list of organization catalogs
     */
    /* istanbul ignore next: autogenerated */
    getOrgCatalogs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/catalogs`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new catalog_1.Catalog(it));
            });
        });
    }
    /**
     * Get the continuity protection reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getContinuityProtectionReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/continuity-protection-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the disaster recovery admin reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getDisasterRecoveryAdminReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/dr-admin-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the billing reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getBillingReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/billing-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the VM inventory reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getVmInventoryReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vm-inventory-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the support request reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getSupportRequestReports(orgUuid, format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/support-request-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the cloud event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getCloudEventReports(orgUuid, format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/cloud-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the login event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getLoginEventReports(orgUuid, format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/login-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the VM encryption reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getVMEncryptionReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vm-encryption-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the HIPAA reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getHIPAAReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/hipaa-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the web reputation reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getWebReputationEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/web-reputation-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the DPI event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getDPIEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/dpi-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the integrity event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getIntegrityEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/integrity-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the firewall event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getFirewallEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/firewall-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the log inspection event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getLogInspectionEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/log-inspection-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the anti-malware event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getAntimalwareEventReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/anti-malware-event-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get the vulnerability event reports available for download for the given organization.
     * @param {string} the report format to filter on
     * @param {boolean} whether to return the sole latest report for this org
     * @returns {Promise<Array<ReportHeader>>} promise Promise that resolves with a list of Report
     */
    /* istanbul ignore next: autogenerated */
    getVulnerabilityReports(format, latest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vulnerability-reports`, {
                params: {
                    format: format,
                    latest: latest
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new report_header_1.ReportHeader(it));
            });
        });
    }
    /**
     * Get a report with its JSON content.  This endpoint is experimental.
     * @param {string} the report UUID
     * @private
     * @returns {Promise<ReportWithContent>} promise Promise that resolves with the report with content
     */
    /* istanbul ignore next: autogenerated */
    getReportWithContent(reportUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/reports/${reportUuid}`)
                .then(response => {
                const json = response.data;
                return new report_with_content_1.ReportWithContent(json);
            });
        });
    }
    /**
     * Get a report with its JSON summary.  This endpoint is experimental.
     * @param {string} the report UUID
     * @private
     * @returns {Promise<ReportWithSummary>} promise Promise that resolves with the report with summary
     */
    /* istanbul ignore next: autogenerated */
    getReportWithSummary(reportUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/reports/${reportUuid}/summary`)
                .then(response => {
                const json = response.data;
                return new report_with_summary_1.ReportWithSummary(json);
            });
        });
    }
    /**
     * Get the antimalware over time serie for the given organization and date range.
     * @param {number} start Start date (defaults to one month prior to end param)
     * @param {number} end End date (defaults to current time if not provided)
     * @param {number} limit Limit on number of samples to return (defaults to 730)
     * @returns {Promise<AntimalwareOverTime>} promise Promise that resolves with a AntimalwareOverTime serie
     */
    /* istanbul ignore next: autogenerated */
    getAntimalwareOverTimeSerie(start, end, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/anti-malware-over-time`, {
                params: {
                    start: start,
                    end: end,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data;
                return new anti_malware_over_time_1.AntimalwareOverTime(json);
            });
        });
    }
    /**
     * Get the compliance over time serie for the given organization and serie name.
     * @param {SerieType} type Type of the series (ANTI_MALWARE, VULNERABILITY, LOG_INSPECTION, FIREWALL)
     * @param {number} start Start date (defaults to one month prior to end param)
     * @param {number} end End date (defaults to current time if not provided)
     * @param {number} limit Limit on number of samples to return (defaults to 60)
     * @returns {Promise<ComplianceOverTime>} promise Promise that resolves with a ComplianceOverTime serie
     */
    /* istanbul ignore next: autogenerated */
    getComplianceOverTimeSerie(type, start, end, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/compliance-over-time`, {
                params: {
                    type: type,
                    start: start,
                    end: end,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data;
                return new compliance_over_time_1.ComplianceOverTime(json);
            });
        });
    }
    /**
     * Get the firewall over time serie for the given organization and date range.
     * @param {number} start Start date (defaults to Jan 1, 1970)
     * @param {number} end End date (defaults to current time if not provided)
     * @param {number} limit Limit on number of samples to return (defaults to 730)
     * @returns {Promise<FirewallOverTime>} promise Promise that resolves with a FirewallOverTime serie
     */
    /* istanbul ignore next: autogenerated */
    getFirewallOverTimeSerie(start, end, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/firewall-over-time`, {
                params: {
                    start: start,
                    end: end,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data;
                return new firewall_over_time_1.FirewallOverTime(json);
            });
        });
    }
    /**
     * Get the log inspection over time serie for the given organization and date range.
     * @param {number} start Start date (defaults to Jan 1, 1970)
     * @param {number} end End date (defaults to current time if not provided)
     * @param {number} limit Limit on number of samples to return (defaults to 730)
     * @returns {Promise<LogInspectionOverTime>} promise Promise that resolves with a LogInspectionOverTime serie
     */
    /* istanbul ignore next: autogenerated */
    getLogInspectionOverTimeSerie(start, end, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/log-inspection-over-time`, {
                params: {
                    start: start,
                    end: end,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data;
                return new log_inspection_over_time_1.LogInspectionOverTime(json);
            });
        });
    }
    /**
     * Get the vulnerability over time serie for the given organization and date range.
     * @param {number} start Start date (defaults to Jan 1, 1970)
     * @param {number} end End date (defaults to current time if not provided)
     * @param {number} limit Limit on number of samples to return (defaults to 730)
     * @returns {Promise<VulnerabilityOverTime>} promise Promise that resolves with a ComplianceOverTime serie
     */
    /* istanbul ignore next: autogenerated */
    getVulnerabilityOverTimeSerie(start, end, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vulnerability-over-time`, {
                params: {
                    start: start,
                    end: end,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data;
                return new vulnerability_over_time_1.VulnerabilityOverTime(json);
            });
        });
    }
    /**
     * Generate the anti-malware report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateAntiMalwareReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-antimalware-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the billing report for a given organization.
     * @param {BillingReportRequest} billingReportSpec Billing report
     * ({@link http://doc.10.api.iland.test/1.0/apidocs/#!/org-reporting/generateBillingReport|Doc})
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateBillingReport(billingReportSpec, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-billing-report`, billingReportSpec.json, {
                params: {
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate a continuity protection summary report for the given organization.
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateContinuityProtectionSummaryReport(format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-continuity-protection-report`, {}, {
                params: {
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the DPI event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateDPIEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-dpi-event-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the dr admin report for the given organization.
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateDRAdminReport(format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-dr-admin-report`, {}, {
                params: {
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the ecs event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateEcsEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-event-history-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the firewall event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateFirewallEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-firewall-event-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the HIPAA report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateHipaaReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-hipaa-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the integrity event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateIntegrityEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-integrity-event-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the log inspection report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateLogInspectionReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-log-inspection-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the login event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateLoginEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-login-event-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the support request history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateSupportRequestReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-support-request-report`, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the VM encryption report for the given organization.
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email 3mail address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateVmEncryptionReport(format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-vm-encryption-report`, {}, {
                params: {
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the vm inventory report for a given organization.
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email 3mail address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateVmInventoryReport(emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-vm-inventory-report`, {}, {
                params: {
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the vulnerability report for the given organization.
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateVulnerabilityReport(format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-vulnerability-report`, {}, {
                params: {
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Generate the web reputation event history report for the given organization and time range.
     * @param {number} start Start date as timestamp
     * @param {number} end End date as timestamp
     * @param {string} format Report format ('pdf' or 'html')
     * @param {boolean} emailOnCompletion Whether to email the report upon successful generation
     * @param {string} email Email address to send the report to if emailOnCompletion is true,
     * defaults to the user's profile email if not specified
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    generateWebReputationEventHistoryReport(start, end, format, emailOnCompletion, email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/generate-web-reputation-event-report`, {}, {
                params: {
                    start: start,
                    end: end,
                    format: format,
                    emailOnCompletion: emailOnCompletion,
                    email: email
                }
            })
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get the number of events for the given organization, date range, and report type.
     * @param {string} report Type Type of report to filter on
     * @param {number} start Start date (defaults to yesterday)
     * @param {number} end End date (defaults to today)
     * @returns {Promise<number>} promise Promise that resolves with the reports count
     */
    /* istanbul ignore next: autogenerated */
    getReportsCount(reportType, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/report-count`, {
                params: {
                    reportType: reportType,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                return response.data.count;
            });
        });
    }
    /**
     * Gets all disaster recovery runbooks in the org.
     * @returns {Promise<Array<DisasterRecoveryRunbook>>} a promise that resolves with all runbooks in the org
     */
    /* istanbul ignore next: autogenerated */
    getRecoveryRunbooks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/disaster-recovery-runbooks`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new disaster_recovery_runbook_1.DisasterRecoveryRunbook(it));
            });
        });
    }
    /**
     * Creates a new disaster recovery runbook.
     * @param {DisasterRecoveryRunbookCreateRequest} spec the new runbook specification
     * @returns {Promise<DisasterRecoveryRunbook>} a promise that resolves with the new runbook
     */
    /* istanbul ignore next: autogenerated */
    createRecoveryRunbook(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/disaster-recovery-runbooks`, spec.json)
                .then(response => {
                const json = response.data;
                return new disaster_recovery_runbook_1.DisasterRecoveryRunbook(json);
            });
        });
    }
    /**
     * Gets all vApp templates within the org.
     * @returns {Promise<Array<VappTemplate>>} a promise that resolves with the list of vapp templates
     */
    /* istanbul ignore next: autogenerated */
    getVappTemplates() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vapp-templates`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_template_1.VappTemplate(it));
            });
        });
    }
    /**
     * Get all external networks that are associated with the specified organization.
     * @returns {Promise<Array<ExternalNetwork>>} promise Promise that resolves with an Array of ExternalNetworks
     */
    /* istanbul ignore next: autogenerated */
    getExternalNetworks() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/external-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new external_network_1.ExternalNetwork(it));
            });
        });
    }
    /**
     * Launches a new Nessus scan.
     * @param {number} scanTemplateId the ID of the template for the scan
     * @returns {Promise<NessusLaunch>} a promise that resolves with the launch result
     */
    /* istanbul ignore next: autogenerated */
    launchNessusScan(scanTemplateId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}/actions/launch-scan`)
                .then(response => {
                const json = response.data;
                return new nessus_launch_1.NessusLaunch(json);
            });
        });
    }
    /**
     * Pauses a Nessus scan.
     * @param {number} scanTemplateId the ID of the template that the scan is derived from
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    /* istanbul ignore next: autogenerated */
    pauseNessusScan(scanTemplateId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}/actions/pause-scan`);
        });
    }
    /**
     * Stops a Nessus scan.
     * @param {number} scanTemplateId the ID of the template that the scan is derived from
     * @returns {Promise<any>} a promise that resolves when the operation completes.
     */
    /* istanbul ignore next: autogenerated */
    stopNessusScan(scanTemplateId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}/actions/stop-scan`);
        });
    }
    /**
     * Resumes a Nessus scan.
     * @param {number} scanTemplateId the ID of the template that the scan is derived from.
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    /* istanbul ignore next: autogenerated */
    resumeNessusScan(scanTemplateId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}/actions/resume-scan`);
        });
    }
    /**
     * Gets all Nessus scan templates for the org.
     * @param {number} offset paging offset
     * @param {number} limit paging limit
     * @returns {Promise<Array<NessusScan>>} a promise that resolves with the list of Nessus scans
     */
    /* istanbul ignore next: autogenerated */
    getNessusScanTemplates(offset, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/nessus-scan-templates`, {
                params: {
                    offset: offset,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new nessus_scan_1.NessusScan(it));
            });
        });
    }
    /**
     * Gets the Nessus scan results for a specified template.
     * @param {number} scanTemplateId the ID of the template
     * @param {number} offset the paging offset
     * @param {number} limit the paging limit
     * @returns {Promise<Array<NessusScan>>} a promise that resolves with the list of nessus scan results
     */
    /* istanbul ignore next: autogenerated */
    getNessusScanResultsForTemplate(scanTemplateId, offset, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}/nessus-scan-results`, {
                params: {
                    offset: offset,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new nessus_scan_1.NessusScan(it));
            });
        });
    }
    /**
     * Get Nessus scan result.
     * @param {string} scanResultUuid the UUID of the result to retrieve
     * @returns {Promise<NessusScanDetails>} a promise that resolves with the nessus sacan details
     */
    /* istanbul ignore next: autogenerated */
    getNessusScanResult(scanResultUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/nessus-scans-results/${scanResultUuid}`)
                .then(response => {
                const json = response.data;
                return new nessus_scan_details_1.NessusScanDetails(json);
            });
        });
    }
    /**
     * Update a nessus scan template.
     * @param {number} scanTemplateId the template ID
     * @param {NessusScanUpdateRequest} spec the udpate spec
     * @returns {Promise<NessusScanUpdate>} a promise that resolves with the scan update result
     */
    /* istanbul ignore next: autogenerated */
    updateNessusScanTemplate(scanTemplateId, spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/nessus-scan-templates/${scanTemplateId}`, spec.json)
                .then(response => {
                const json = response.data;
                return new nessus_scan_update_1.NessusScanUpdate(json);
            });
        });
    }
    /**
     * Update Nessus scan opt out preferences.
     * @param {NessusScanOptOutCreateRequest} request opt out request
     * @returns {Promise<NessusScanOptOut>} a promise that resolves with the opt out details
     */
    /* istanbul ignore next: autogenerated */
    updateNessusScanOptOutPreferences(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/update-nessus-scan-opt-out-preferences`, request.json)
                .then(response => {
                const json = response.data;
                return new nessus_scan_opt_out_1.NessusScanOptOut(json);
            });
        });
    }
    /**
     * Gets Nessus scan opt out preferences.
     * @returns {Promise<NessusScanOptOut>} a promise that resolves with the orgs Nessus scan opt out details
     */
    /* istanbul ignore next: autogenerated */
    getNessusScanOptOutPreferences() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/nessus-scan-opt-out-preferences`)
                .then(response => {
                const json = response.data;
                return new nessus_scan_opt_out_1.NessusScanOptOut(json);
            });
        });
    }
    /**
     * Get all VPGs that belong to the org.
     * @param {Array<VpgSubEntityRequest>} expand the list of expansions to include in the response
     * @returns {Promise<Array<ExpandedVpg>>} a promise that resolves with the vpgs
     */
    /* istanbul ignore next: autogenerated */
    getVpgs(expand) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vpgs`, {
                params: {
                    expand: expand
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new expanded_vpg_1.ExpandedVpg(it));
            });
        });
    }
    /**
     * Creates a catalog.
     * @param {CatalogCreateRequest} request the create catalog request.
     * @returns {Promise<Task>} a promise that resolves with a task
     */
    /* istanbul ignore next: autogenerated */
    createCatalog(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/catalog`, request.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Indicates whether the org is an advanced security org.
     * @returns {Promise<isAdvancedSecurityOrg>} a promise that resolves with the result indicating whether this is an
     * advanced security org
     */
    /* istanbul ignore next: autogenerated */
    isAdvancedSecurityOrg() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/is-compliance-org`)
                .then(response => {
                const json = response.data;
                return new is_compliance_org_1.IsComplianceOrg(json);
            });
        });
    }
    /**
     * Gets the billing currency code for this org.
     * @returns {Promise<OrgCurrencyCode>} a promise that resolves with the org's currency code.
     */
    /* istanbul ignore next: autogenerated */
    getBillingCurrencyCode() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/billing-currency-code`)
                .then(response => {
                const json = response.data;
                return new org_currency_code_1.OrgCurrencyCode(json);
            });
        });
    }
    /**
     * Gets the org's public IP assignments.
     * @returns {Promise<Array<PublicIpAssignment>>} a promise that resolves with the org's public ip assignments
     */
    /* istanbul ignore next: autogenerated */
    getPublicIpAssignments() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/public-ip-assignments`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new public_ip_assignment_1.PublicIpAssignment(it));
            });
        });
    }
    /**
     * Get a list of series detailing the hourly cost over an invoice period for
     * all vDCs in a given Organization.
     * @param {number} year the year
     * @param {number} month the month in range 1-12
     * @param {Array<string>} additionalFields additional bill fields that should be included in the series
     * @returns {Promise<Array<BillingSampleSerie>>} promise Promise that resolves with a list of series of samples
     * detailing hourly vDC total cost by hour for the invoice period
     */
    /* istanbul ignore next: autogenerated */
    getVdcCostOverInvoicePeriodSeries(year, month, additionalFields) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdcs-cost-over-invoice-period`, {
                params: {
                    year: year,
                    month: month,
                    additionalFields: additionalFields
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new billing_sample_serie_1.BillingSampleSerie(it));
            });
        });
    }
    /**
     * Batch test failover for one or more VPGs within an org.
     * @param {BatchFailoverTestParamsRequest} params the batch failover test parameters
     * @returns {Promise<Task>} promise Promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    batchFailoverTest(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/vpg-batch-failover-test`, params.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Initiates a batch live failover on one or more VPGs withing an org.
     * @param {BatchFailoverParamsRequest} params the batch failover parameters
     * @returns {Promise<Task>} promise promise that resolves with a Task
     */
    /* istanbul ignore next: autogenerated */
    batchFailover(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/vpg-batch-failover`, params.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Gets a vCD edge gateway usage summary, summarizing the total bandwidth used
     * for both inbound and outbound edge network traffic.
     *
     * If no start/end dates are provided it will default to the latest hour
     * range. If you pass a custom time range both start and end date must be
     * passed together
     * @param {string} type Type
     * @param {number} start Start date
     * @param {number} end End date
     * @returns {Promise<Array<NetworkPerfSampleSerie>>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeNetworkUsageSummary(type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/edge-network-usage-summary`, {
                params: {
                    type: type,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new network_perf_sample_serie_1.NetworkPerfSampleSerie(it));
            });
        });
    }
    /**
     * Gets usage data for a VCD edge gateway. Returns a time series showing the
     * average inbound and outbound network thoughput in KBps.
     * @param {string} type Type
     * @param {number} start Start date
     * @param {number} end End date
     * @returns {Promise<Array<NetworkPerfSampleSerie>>}
     */
    /* istanbul ignore next: autogenerated */
    getEdgeNetworkUsageOverTime(type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/edge-network-usage-over-time`, {
                params: {
                    type: type,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new network_perf_sample_serie_1.NetworkPerfSampleSerie(it));
            });
        });
    }
    /**
     * Get the network usage for the organization
     * @param {string} type Type
     * @param {number} start Start Date
     * @param {number} end End Date
     * @returns {Promise<Array<NetworkPerfSampleSerie>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgBandwidthUsage(type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/bandwidth-usage`, {
                params: {
                    type: type,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new network_perf_sample_serie_1.NetworkPerfSampleSerie(it));
            });
        });
    }
    /**
     * Get the network usage summary for the organization
     * @param {string} type Type
     * @param {number} start Start Date
     * @param {number} end End Date
     * @returns {Promise<Array<NetworkPerfSampleSerie>>}
     */
    /* istanbul ignore next: autogenerated */
    getBandwidthSummation(type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/bandwidth-summation`, {
                params: {
                    type: type,
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new network_perf_sample_serie_1.NetworkPerfSampleSerie(it));
            });
        });
    }
    /**
     * Gets the bandwidth usage information for the organization.
     * @param {number} month the month in range 1-12
     * @param {number} year the year
     * @returns {Promise<BandwidthUsageSummary>} a promise that resolves with the bandwidth usage information
     */
    /* istanbul ignore next: autogenerated */
    getBandwidthUsage(month, year) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/bandwidth-usage-summary`, {
                params: {
                    month: month,
                    year: year
                }
            })
                .then(response => {
                const json = response.data;
                return new bandwidth_usage_summary_1.BandwidthUsageSummary(json);
            });
        });
    }
    /**
     * Retrieve a CSV report email with all event history for a given Org.
     * @returns {Promise<void>} there is no response object.
     */
    emailEventHistory(email) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/actions/email-event-history`, {
                email: email
            })
                .then(() => undefined);
        });
    }
    /**
     * Retrieve the VCC Failover Plans within this org.
     */
    /* istanbul ignore next: autogenerated */
    getVccFailoverPlans() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vcc-failover-plans`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new failover_plan_1.VCCFailoverPlan(it));
            });
        });
    }
    /**
     * Retrieve the org's VPG protection summary.
     */
    /* istanbul ignore next: autogenerated */
    getVpgsProtectionSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vpgs-protection-info`)
                .then(response => {
                const json = response.data;
                return new vpg_protection_info_1.VpgsProtectionInfo(json);
            });
        });
    }
    /**
     * Retrieve VDI teams that are configured within the org.
     *
     * @return {Promise<Array<VdiTeam>>} a promise that resolves with the array of VDI teams
     */
    /* istanbul ignore next: autogenerated */
    listVdiTeams() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/teams`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vdi_team_1.VdiTeam(it));
            });
        });
    }
    /**
     * Retrieve a VDI team by UUID.
     *
     * @param {string} uuid the uuid of the VDI team
     * @return {Promise<VdiTeam>} a promise that resolves with the VDI team
     */
    /* istanbul ignore next: autogenerated */
    getVdiTeam(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/teams/${uuid}`)
                .then(response => {
                const json = response.data;
                return new vdi_team_1.VdiTeam(json);
            });
        });
    }
    /**
     * Delete a VDI team.
     *
     * @param {string} uuid the UUID of the team to delete
     * @return {Promise} that resolves when the delete operation completes successfully
     */
    /* istanbul ignore next: autogenerated */
    deleteVdiTeam(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/vdi/teams/${uuid}`);
        });
    }
    /**
     * Update a VDI team.
     *
     * @param {string} uuid the UUID of the VDI team to update
     * @param {VdiTeamUpdateRequest} the update request params
     * @return {Promise<VdiTeam>} a promise that resolves with the updated VDI team
     */
    /* istanbul ignore next: autogenerated */
    updateVdiTeam(uuid, update) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/vdi/teams/${uuid}`, update.json)
                .then(response => {
                const json = response.data;
                return new vdi_team_1.VdiTeam(json);
            });
        });
    }
    /**
     * Create a VDI team.
     *
     * @param {VdiTeamUpdateRequest} teamData the VDI team creation request params
     * @return {Promise<VdiTeam>} a promise that resolves with the team details
     */
    /* istanbul ignore next: autogenerated */
    createVdiTeam(teamData) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/vdi/teams`, teamData.json)
                .then(response => {
                const json = response.data;
                return new vdi_team_1.VdiTeam(json);
            });
        });
    }
    /**
     * Retrieve VDI users that are configured within the org.
     *
     * @return {Promise<Array<VdiUser>>} a promise that resolves with the array of VDI users
     */
    /* istanbul ignore next: autogenerated */
    listVdiUsers() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/users`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vdi_user_1.VdiUser(it));
            });
        });
    }
    /**
     * Retrieve a VDI user by UUID.
     *
     * @param {string} uuid the UUID of the VDI user to retrieve
     * @return {Promise<VdiUser>} a promise that resolves with the VDI user
     */
    /* istanbul ignore next: autogenerated */
    getVdiUser(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/users/${uuid}`)
                .then(response => {
                const json = response.data;
                return new vdi_user_1.VdiUser(json);
            });
        });
    }
    /**
     * Delete a VDI user.
     *
     * @param {string} uuid the UUID of the VDI user to delete
     * @return {Promise} that resolves when the operation completes successfully
     */
    /* istanbul ignore next: autogenerated */
    deleteVdiUser(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/vdi/users/${uuid}`);
        });
    }
    /**
     * Update a VDI user.
     *
     * @param {string} uuid the UUID of the VDI user to update
     * @param {VdiUserUpdateRequest} the update request params
     * @return {Promise<VdiUser>} a promise that resolves with the VDI user
     */
    /* istanbul ignore next: autogenerated */
    updateVdiUser(uuid, update) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/vdi/users/${uuid}`, update.json)
                .then(response => {
                const json = response.data;
                return new vdi_user_1.VdiUser(json);
            });
        });
    }
    /**
     * Create a VDI user.
     *
     * @param {VdiUserUpdateRequest} userData the new user params
     * @return {Promise<VdiUser>} a promise that resolves with the VDI user
     */
    /* istanbul ignore next: autogenerated */
    createVdiUser(userData) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/vdi/users`, userData.json)
                .then(response => {
                const json = response.data;
                return new vdi_user_1.VdiUser(json);
            });
        });
    }
    /**
     * Retrieve VDI automation groups that are configured within the org.
     *
     * @return {Promise<Array<VdiAutomationGroup>>} a promise that resolves with the array of VDI automation groups
     */
    /* istanbul ignore next: autogenerated */
    listVdiAutomationGroups() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/automation-groups`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vdi_automation_group_1.VdiAutomationGroup(it));
            });
        });
    }
    /**
     * Retrieve a VDI automation group.
     *
     * @param {string} automationGroupUuid the UUID of the VDI automation group to retrieve
     * @return {Promise<VdiAutomationGroup>} a promise that resolves with the VDI automation group
     */
    /* istanbul ignore next: autogenerated */
    getVdiAutomationGroup(automationGroupUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}`)
                .then(response => {
                const json = response.data;
                return new vdi_automation_group_1.VdiAutomationGroup(json);
            });
        });
    }
    /**
     * Delete a VDI automation group.
     *
     * @param {string} uuid the UUID of the automation group to delete
     * @return {Promise} a promise that resolves when the delete operation completes successfully
     */
    /* istanbul ignore next: autogenerated */
    deleteVdiAutomationGroup(automationGroupUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}`);
        });
    }
    /**
     * Update a VDI automation group.
     *
     * @param {string} automationGroupUuid the UUID of the VDI automation group
     * @param {VdiAutomationGroupUpdateRequest} the automation group update params
     * @return {Promise<VdiAutomationGroup>} a promise that resolves with the updated VDI automation group
     */
    /* istanbul ignore next: autogenerated */
    updateVdiAutomationGroup(automationGroupUuid, update) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}`, update.json)
                .then(response => {
                const json = response.data;
                return new vdi_automation_group_1.VdiAutomationGroup(json);
            });
        });
    }
    /**
     * Create a VDI automation group.
     *
     * @param {VdiAutomationGroupUpdateRequest} the new VDI automation group params
     * @return {Promise<VdiAutomationGroup>} a promise that resolves with the new VDI automation group
     */
    /* istanbul ignore next: autogenerated */
    createVdiAutomationGroup(createParams) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/vdi/automation-groups`, createParams.json)
                .then(response => {
                const json = response.data;
                return new vdi_automation_group_1.VdiAutomationGroup(json);
            });
        });
    }
    /**
     * Deploy a VDI automation group.
     *
     * @param {string} automationGroupUuid the UUID of the VDI automation group to deploy
     * @return {Promise} a promise that resolves when the deployment request has successfully been queued
     */
    /* istanbul ignore next: autogenerated */
    deployVdiAutomationGroup(automationGroupUuid, deployParams) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}/actions/deploy`, deployParams.json);
        });
    }
    /**
     * Retrieve list of VDI automation deployments.
     *
     * @param {string} automationGroupUuid the UUID of the automation group to list deployments for
     * @return {Promise<Array<VdiAutomationDeployment>>} a promise that resolves with the array of VDI automation
     * deployments
     */
    /* istanbul ignore next: autogenerated */
    listVdiAutomationDeployments(automationGroupUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}/deployments`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vdi_automation_deployment_1.VdiAutomationDeployment(it));
            });
        });
    }
    /**
     * Get a VDI automation deployment.
     *
     * @param {string} automationGroupUuid the UUID of the VDI automation group
     * @param {string} deploymentUuid the UUID of the VDI automation deployment
     * @return {Promise<VdiAutomationDeployment>} a promise that resolves with the VDI automation deployment
     */
    /* istanbul ignore next: autogenerated */
    getVdiAutomationDeployment(automationGroupUuid, deploymentUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}/deployments/${deploymentUuid}`)
                .then(response => {
                const json = response.data;
                return new vdi_automation_deployment_1.VdiAutomationDeployment(json);
            });
        });
    }
    /**
     * Destroy a VDI automation deployment.
     *
     * @param {string} automationGroupUuid the UUID of the automation group
     * @param {string} deploymentUuid the UUID of the VDI deployment
     * @return {Promise} a promise that resolves when the deployment has been queued for tear down
     */
    /* istanbul ignore next: autogenerated */
    destroyVdiAutomationDeployment(automationGroupUuid, deploymentUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}/deployments/` + `${deploymentUuid}/actions/destroy`);
        });
    }
    /**
     * Destroy all VDI automation deployments that are associated with a particular automation group.
     *
     * @param {string} automationGroupUuid the UUID of the automation group
     * @return {Promise} a promise that resolves when all deployments have successfully been queued for tear down
     */
    /* istanbul ignore next: autogenerated */
    destroyAllVdiAutomationDeployments(automationGroupUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/orgs/${this.uuid}/vdi/automation-groups/${automationGroupUuid}/deployments/actions/destroy`);
        });
    }
    /**
     * Retrieve the org VDI automation deployment summary.
     *
     * @return {Promise<VdiOrgDeploymentSummary>} a promise that resolves with the org VDI deployment summary
     */
    /* istanbul ignore next: autogenerated */
    getOrgVdiDeploymentSummary() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/deployment-summaries`)
                .then(response => {
                const json = response.data;
                return new vdi_org_deployment_summary_1.VdiOrgDeploymentSummary(json);
            });
        });
    }
    /**
     * Retrieve a VDI automation group deployment summary.
     *
     * @param {string} automationGroupUuid the UUID of the VDI automation group
     * @return {Promise<VdiAutomationGroupDeploymentSummary>} a promise that resolves with the org deployment summary
     */
    /* istanbul ignore next: autogenerated */
    getVdiAutomationGroupDeploymentSummary(automationGroupUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/vdi/deployment-summaries/${automationGroupUuid}`)
                .then(response => {
                const json = response.data;
                return new vdi_automation_group_deployment_summary_1.VdiAutomationGroupDeploymentSummary(json);
            });
        });
    }
    /**
     * Whether or not this org has legacy billing.
     *
     * @return {Promise<BillingLegacyResponse>} a promise that resolves with the billing legacy response.
     */
    hasLegacyBilling() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/legacy-billing-info`)
                .then(response => {
                const json = response.data;
                return new billing_legacy_response_1.BillingLegacyResponse(json);
            });
        });
    }
    /**
     * Gets the Org's integrated backup status.
     * @returns {Promise<OrgIntegratedBackupStatus>}
     */
    /* istanbul ignore next: autogenerated */
    getIntegratedBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/integrated-backup-status`)
                .then(response => {
                const json = response.data;
                return new org_integrated_backup_status_1.OrgIntegratedBackupStatus(json);
            });
        });
    }
    /**
     * List the existing backup groups that are configured in a specified
     * organization.
     *
     * @param {boolean} includeDeleted Whether to include deleted backup groups. Default is false. (Optional)
     * @param {boolean} includeSummaryStats Default is false. (Optional)
     * @param {boolean} includeLastRun Default is false. (Optional)
     * @param {boolean} includeBackupPolicy Default is false. (Optional)
     * @return {Promise<Array<BackupGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroups(includeDeleted, includeSummaryStats, includeLastRun, includeBackupPolicy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/backup-groups`, {
                params: {
                    includeDeleted: includeDeleted !== null && includeDeleted !== void 0 ? includeDeleted : false,
                    includeSummaryStats: includeSummaryStats !== null && includeSummaryStats !== void 0 ? includeSummaryStats : false,
                    includeLastRun: includeLastRun !== null && includeLastRun !== void 0 ? includeLastRun : false,
                    includeBackupPolicy: includeBackupPolicy !== null && includeBackupPolicy !== void 0 ? includeBackupPolicy : false
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_1.BackupGroup(it));
            });
        });
    }
    /**
     * Gets backup group summary stats for the Org.
     * Stat time-range defaults to the past 24 hours.
     * Both startTimeMillis and endTimeMillis params are required if one is used.
     *
     * @param {number} startTimeMillis Default is 24 hours ago. (Optional)
     * @param {number} endTimeMillis Default is now. (Optional)
     *
     * @return {Promise<OrgGroupSummaryStats>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupGroupSummaryStats(startTimeMillis, endTimeMillis) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/backup-group-summary-stats`, {
                params: {
                    startTimeMillis: startTimeMillis !== null && startTimeMillis !== void 0 ? startTimeMillis : null,
                    endTimeMillis: endTimeMillis !== null && endTimeMillis !== void 0 ? endTimeMillis : null
                }
            })
                .then(response => {
                const json = response.data;
                return new org_backup_summary_stats_1.OrgBackupSummaryStats(json);
            });
        });
    }
    /**
     * List the existing backup policies that are configured in an organization.
     *
     * @param {boolean} includeVdcScopedPolicies
     * @return {Promise<Array<BackupPolicy>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupPolicies(includeVdcScopedPolicies) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/backup-policies`, {
                params: {
                    includeVdcScopedPolicies: includeVdcScopedPolicies
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_policy_1.BackupPolicy(it));
            });
        });
    }
    /**
     * Get details of an individual org-scoped backup policy.
     *
     * @param {string} backupPolicyUid
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupPolicy(backupPolicyUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/backup-policies/${backupPolicyUid}`)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Create a new org-scoped backup policy.
     *
     * @param {BackupPolicyUpdateRequest} creationRequest
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    createBackupPolicy(creationRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/orgs/${this.uuid}/backup-policies`, creationRequest.json)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Update a backup policy.
     *
     * @param {string} backupPolicyUid
     * @param {BackupPolicyUpdateRequest} updateRequest
     * @return {Promise<BackupPolicy>}
     */
    /* istanbul ignore next: autogenerated */
    updateBackupPolicy(backupPolicyUid, updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/orgs/${this.uuid}/backup-policies/${backupPolicyUid}`, updateRequest.json)
                .then(response => {
                const json = response.data;
                return new backup_policy_1.BackupPolicy(json);
            });
        });
    }
    /**
     * Gets the org's backup status.
     * @return {Promise<OrgBackupStatus>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupStatus() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/backup-status`)
                .then(response => {
                const json = response.data;
                return new org_backup_status_1.OrgBackupStatus(json);
            });
        });
    }
    /**
     * Delete a backup policy.
     *
     * @param {string} backupPolicyUid
     * @return {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    deleteBackupPolicy(backupPolicyUid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/orgs/${this.uuid}/backup-policies/${backupPolicyUid}`);
        });
    }
    /**
     * Returns aggregated samples for VPGs in an org given a performance serie and
     * time range. The samples returned are dynamic (5 minute samples for range less than a
     * day, hourly for range more than a day, and daily for range more than a month).
     * @param {string} group
     * @param {string} name
     * @param {string} type
     * @param {number} [start]
     * @param {number} [end]
     * @returns {Promise<PerfSampleSeries>} performance sample series
     */
    /* istanbul ignore next: autogenerated */
    getOrgPerfFor(group, name, type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/orgs/${this.uuid}/performance/${group}::${name}::${type}`, {
                params: {
                    start: start !== null && start !== void 0 ? start : null,
                    end: end !== null && end !== void 0 ? end : null
                }
            })
                .then(response => {
                const perfSampleJson = response.data;
                return new perf_samples_series_1.PerfSamplesSeries(perfSampleJson);
            });
        });
    }
}
exports.Org = Org;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmSummary = void 0;
/**
 * VM Summary
 */
class VmSummary {
    constructor(firstParam) {
        if (firstParam instanceof VmSummary) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns reserved CPU.
     * @returns {number}
     */
    get reservedCpu() {
        return this._json.reserved_cpu;
    }
    /**
     * Returns reserved memory.
     * @returns {number}
     */
    get reservedMemory() {
        return this._json.reserved_mem;
    }
    /**
     * Returns consumed CPU.
     * @returns {number}
     */
    get consumedCpu() {
        return this._json.consumed_cpu;
    }
    /**
     * Returns consumed memory.
     * @returns {number}
     */
    get consumedMemory() {
        return this._json.consumed_mem;
    }
    /**
     * Returns consumed disk.
     * @returns {number}
     */
    get consumedDisk() {
        return this._json.consumed_disk;
    }
    /**
     * Returns provisioned disk.
     * @returns {number}
     */
    get provisionedDisk() {
        return this._json.provisioned_disk;
    }
    /**
     * Returns configured disk.
     * @returns {number}
     */
    get configuredDisk() {
        return this._json.configured_disk;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BootOptionsJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VmSummary = VmSummary;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmMemorySizeUpdateRequest = void 0;
class VmMemorySizeUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                memory_size: firstParam
            };
        }
        else if (firstParam instanceof VmMemorySizeUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get memory size.
     * @returns {string}
     */
    get memorySize() {
        return Number(this._json.memory_size);
    }
    /**
     * Get the json representation of this class.
     * @returns {VmMemorySizeUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmMemorySizeUpdateRequest = VmMemorySizeUpdateRequest;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmResourceSummary = void 0;
/**
 * VM Resource Summary.
 */
/* istanbul ignore next: autogenerated */
class VmResourceSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get reserved cpu.
     * @returns {number}
     */
    get reservedCpu() {
        return this._json.reserved_cpu;
    }
    /**
     * Get reserved mem.
     * @returns {number}
     */
    get reservedMem() {
        return this._json.reserved_mem;
    }
    /**
     * Get consumed cpu.
     * @returns {number}
     */
    get consumedCpu() {
        return this._json.consumed_cpu;
    }
    /**
     * Get consumed mem.
     * @returns {number}
     */
    get consumedMem() {
        return this._json.consumed_mem;
    }
    /**
     * Get consumed disk.
     * @returns {number}
     */
    get consumedDisk() {
        return this._json.consumed_disk;
    }
    /**
     * Get provisioned disk.
     * @returns {number}
     */
    get provisionedDisk() {
        return this._json.provisioned_disk;
    }
    /**
     * Get configured disk.
     * @returns {number}
     */
    get configuredDisk() {
        return this._json.configured_disk;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmResourceSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmResourceSummary = VmResourceSummary;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappResourceSummary = void 0;
/**
 * Vapp resource summary.
 */
/* istanbul ignore next: autogenerated */
class VappResourceSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get reserved cpu.
     * @returns {number}
     */
    get reservedCpu() {
        return this._json.reserved_cpu;
    }
    /**
     * Get reserved mem.
     * @returns {number}
     */
    get reservedMem() {
        return this._json.reserved_mem;
    }
    /**
     * Get consumed cpu.
     * @returns {number}
     */
    get consumedCpu() {
        return this._json.consumed_cpu;
    }
    /**
     * Get consumed mem.
     * @returns {number}
     */
    get consumedMem() {
        return this._json.consumed_mem;
    }
    /**
     * Get consumed disk.
     * @returns {number}
     */
    get consumedDisk() {
        return this._json.consumed_disk;
    }
    /**
     * Get provisioned disk.
     * @returns {number}
     */
    get provisionedDisk() {
        return this._json.provisioned_disk;
    }
    /**
     * Get configured disk.
     * @returns {number}
     */
    get configuredDisk() {
        return this._json.configured_disk;
    }
    /**
     * Get number of vms.
     * @returns {number}
     */
    get numberOfVms() {
        return this._json.number_of_vms;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappResourceSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappResourceSummary = VappResourceSummary;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VCCFailoverPlan = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const task_1 = __webpack_require__(10);
const failover_plan_vm_1 = __webpack_require__(457);
/**
 * VCC Failover Plan.
 */
/* istanbul ignore next: autogenerated */
class VCCFailoverPlan extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets a VCC Failover Plan by UUID.
     * @param {string} uuid
     * @returns {Promise<VCCFailoverPlan>} promise that resolves with the VCC Failover Plan
     */
    static getFailoverPlan(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-failover-plans/${uuid}`)
                .then(response => {
                const json = response.data;
                return new VCCFailoverPlan(json);
            });
        });
    }
    get entityType() {
        return 'IAAS_VCC_FAILOVER_PLAN';
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get last test.
     * @returns {number}
     */
    get lastTest() {
        return this._json.last_test;
    }
    /**
     * Get vcc tenant uid.
     * @returns {string}
     */
    get vccTenantUid() {
        return this._json.vcc_tenant_uid;
    }
    /**
     * Get vcc tenant name.
     * @returns {string}
     */
    get vccTenantName() {
        return this._json.vcc_tenant_name;
    }
    /**
     * Get vms.
     * @returns {Array<VCCFailoverPlanVm>}
     */
    get vms() {
        return this._json.vms.map(it => new failover_plan_vm_1.VCCFailoverPlanVm(it));
    }
    /**
     * Get status.
     * @returns {VccFailoverPlanStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get the json representation of this class.
     * @returns {VCCFailoverPlanJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the VCC Failover Plan data by retrieving it from the API again.
     * @returns {Promise<VCCFailoverPlan>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-failover-plans/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Invokes a failover test for this failover plan.
     * @returns {Promise<Task>} async task details
     */
    /* istanbul ignore next: autogenerated */
    failoverTest() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vcc-failover-plans/${this.uuid}/actions/failover-test`, {})
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Invokes a live failover operation for this failover plan.
     * @returns {Promise<Task>} async task details
     */
    /* istanbul ignore next: autogenerated */
    failoverStart(spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vcc-failover-plans/${this.uuid}/actions/failover-start`, spec.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Executes the undo action for a previous failover operation on this failover plan.
     * @returns {Promise<Task>} async task details
     */
    /* istanbul ignore next: autogenerated */
    failoverUndo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vcc-failover-plans/${this.uuid}/actions/failover-undo`, {})
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
}
exports.VCCFailoverPlan = VCCFailoverPlan;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingSampleSerie = void 0;
const billing_sample_1 = __webpack_require__(459);
/* istanbul ignore next: autogenerated */
class BillingSampleSerie {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get entity name.
     * @returns {string}
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * Get interval.
     * @returns {number}
     */
    get interval() {
        return this._json.interval;
    }
    /**
     * Get summary.
     * @returns {string}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Get samples.
     * @returns {Array<BillingSample>}
     */
    get samples() {
        return this._json.samples.map(sample => {
            return new billing_sample_1.BillingSample(sample);
        });
    }
    /**
     * Get currency code.
     * @returns {string}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get the json representation of this class.
     * @returns {BillingSampleSerieJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BillingSampleSerie = BillingSampleSerie;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer2 = void 0;
const distributed_firewall_layer2_rule_1 = __webpack_require__(460);
/**
 * Distributed Firewall Layer 2 Object (Ethernet).
 */
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer2 {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get rules.
     * @returns {Array<DistributedFirewallLayer2Rule>}
     */
    get rules() {
        return (this._json.rules || []).map(it => new distributed_firewall_layer2_rule_1.DistributedFirewallLayer2Rule(it));
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get generation number.
     * @returns {number}
     */
    get generationNumber() {
        return this._json.generation_number;
    }
    /**
     * Get timestamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get tcp strict.
     * @returns {boolean}
     */
    get tcpStrict() {
        return this._json.tcp_strict;
    }
    /**
     * Get stateless.
     * @returns {boolean}
     */
    get stateless() {
        return this._json.stateless;
    }
    /**
     * Get use sid.
     * @returns {boolean}
     */
    get useSid() {
        return this._json.use_sid;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer2Json}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer2 = DistributedFirewallLayer2;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleAppliedTo = void 0;
/**
 * Distributed Firewall Rule Applied To Response.
 */
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleAppliedTo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleAppliedToJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleAppliedTo = DistributedFirewallRuleAppliedTo;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleDestination = void 0;
/**
 * Distributed Firewall Rule Destination.
 */
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleDestination {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleDestinationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleDestination = DistributedFirewallRuleDestination;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleServiceObject = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleServiceObject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleServiceObjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleServiceObject = DistributedFirewallRuleServiceObject;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleServiceProtocol = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleServiceProtocol {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get destination port.
     * @returns {number}
     */
    get destinationPort() {
        return this._json.destination_port;
    }
    /**
     * Get protocol.
     * @returns {number}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get protocol name.
     * @returns {DistributedFirewallProtocolNameType}
     */
    get protocolName() {
        return this._json.protocol_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleServiceProtocolJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleServiceProtocol = DistributedFirewallRuleServiceProtocol;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleSource = void 0;
/**
 * Distributed Firewall Rule Source.
 */
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleSource {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleSourceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleSource = DistributedFirewallRuleSource;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer3 = void 0;
const distributed_firewall_layer3_rule_1 = __webpack_require__(462);
/**
 * Distributed Firewall Layer 3 Object (General).
 */
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer3 {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get rules.
     * @returns {Array<DistributedFirewallLayer3Rule>}
     */
    get rules() {
        return (this._json.rules || []).map(it => new distributed_firewall_layer3_rule_1.DistributedFirewallLayer3Rule(it));
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get generation number.
     * @returns {number}
     */
    get generationNumber() {
        return this._json.generation_number;
    }
    /**
     * Get timestamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get tcp strict.
     * @returns {boolean}
     */
    get tcpStrict() {
        return this._json.tcp_strict;
    }
    /**
     * Get stateless.
     * @returns {boolean}
     */
    get stateless() {
        return this._json.stateless;
    }
    /**
     * Get use sid.
     * @returns {boolean}
     */
    get useSid() {
        return this._json.use_sid;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer3Json}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer3 = DistributedFirewallLayer3;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectPagingParams = void 0;
/* istanbul ignore next: autogenerated */
class ObjectPagingParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get page.
     * @returns {number}
     */
    get page() {
        return this._json.page;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get filter.
     * @returns {string}
     */
    get filter() {
        return this._json.filter;
    }
    /**
     * Get the json representation of this class.
     * @returns {ObjectPagingParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ObjectPagingParams = ObjectPagingParams;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroup = void 0;
const dynamic_member_1 = __webpack_require__(93);
const securityGroupMember_1 = __webpack_require__(94);
/**
 * Security Group.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroup {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get included member.
     * @returns {Array<SecurityGroupMember>}
     */
    get includedMember() {
        return this._json.included_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get excluded member.
     * @returns {Array<SecurityGroupMember>}
     */
    get excludedMember() {
        return this._json.excluded_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get dynamic member.
     * @returns {Array<DynamicMember>}
     */
    get dynamicMember() {
        return this._json.dynamic_member ? this._json.dynamic_member.map(it => new dynamic_member_1.DynamicMember(it)) : [];
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroup = SecurityGroup;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOptionPagingParams = void 0;
/**
 * Security Group Member Option Paging Params.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOptionPagingParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get page.
     * @returns {number}
     */
    get page() {
        return this._json.page;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get filter.
     * @returns {string | undefined}
     */
    get filter() {
        return this._json.filter || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionPagingParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOptionPagingParams = SecurityGroupMemberOptionPagingParams;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOptionType = void 0;
/**
 * Security Group Member Option Type.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOptionType {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionTypeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOptionType = SecurityGroupMemberOptionType;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTag = void 0;
/**
 * Security Tag.
 */
/* istanbul ignore next: autogenerated */
class SecurityTag {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get vm count.
     * @returns {number}
     */
    get vmCount() {
        return this._json.vm_count;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTag = SecurityTag;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObjectPagingParams = void 0;
/**
 * Security Tag Object Paging Params.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObjectPagingParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get page.
     * @returns {number}
     */
    get page() {
        return this._json.page;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get filter.
     * @returns {string | undefined}
     */
    get filter() {
        return this._json.filter || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectPagingParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObjectPagingParams = SecurityTagObjectPagingParams;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObjectType = void 0;
/**
 * Security Tag Object Type.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObjectType {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectTypeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObjectType = SecurityTagObjectType;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiAutomationGroupDeploymentSummary = void 0;
/**
 * VDI Automation Group Deployment Summary.
 */
/* istanbul ignore next: autogenerated */
class VdiAutomationGroupDeploymentSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get automation group uuid.
     * @returns {string}
     */
    get automationGroupUuid() {
        return this._json.automation_group_uuid;
    }
    /**
     * Get automation group name.
     * @returns {string}
     */
    get automationGroupName() {
        return this._json.automation_group_name;
    }
    /**
     * Get number of pending deploys.
     * @returns {number}
     */
    get numberOfPendingDeploys() {
        return this._json.number_of_pending_deploys;
    }
    /**
     * Get number of ready deployments.
     * @returns {number}
     */
    get numberOfReadyDeployments() {
        return this._json.number_of_ready_deployments;
    }
    /**
     * Get number of pending undeploys.
     * @returns {number}
     */
    get numberOfPendingUndeploys() {
        return this._json.number_of_pending_undeploys;
    }
    /**
     * Get number of failed deploys.
     * @returns {number}
     */
    get numberOfFailedDeploys() {
        return this._json.number_of_failed_deploys;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiAutomationGroupDeploymentSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiAutomationGroupDeploymentSummary = VdiAutomationGroupDeploymentSummary;


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceProfile = void 0;
/**
 * Service Profile
 */
class ServiceProfile {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid for Service Profile
     * @returns {string} uuid
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get location for Service Profile
     * @returns {string} location
     */
    get location() {
        return this._json.location;
    }
    /**
     * Get identifier for Service Profile
     * @returns {string} identifier
     */
    get serviceProfileIdentifier() {
        return this._json.service_profile_identifier;
    }
    /**
     * Get name for Service Profile
     * @returns {string} name
     */
    get serviceProfileName() {
        return this._json.service_profile_name;
    }
    /**
     * Get description for Service Profile
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get history for Service Profile
     * @returns {number} history
     */
    get history() {
        return this._json.history;
    }
    /**
     * Get max journal size in percent for Service Profile
     * @returns {number}  max journal size in percent
     */
    get maxJournalSizeInPercent() {
        return this._json.max_journal_size_in_percent;
    }
    /**
     * Get rpo for Service Profile
     * @returns {number} rpo
     */
    get rpo() {
        return this._json.rpo;
    }
    /**
     * Get test interval for Service Profile
     * @returns {number} test interval
     */
    get testInterval() {
        return this._json.test_interval;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {ServiceProfileJson} the API object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.ServiceProfile = ServiceProfile;


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgVm = void 0;
const vpg_entities_1 = __webpack_require__(96);
/**
 * Vpg VM.
 */
class VpgVm {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get location id for Vpg VM
     * @returns {string} location id
     */
    get location() {
        return this._json.location;
    }
    /**
     * Get org uuid for Vpg Vm
     * @returns {string} org uuid
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vpg uuid for Vpg VM
     * @returns {string} vpg uuid
     */
    get vpgUuid() {
        return this._json.vpg_uuid;
    }
    /**
     * Get uuid for Vpg VM
     * @returns {string} uuid
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get VM name for Vpg Vm
     * @returns {string} vm name
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get VM identifier for Vpg VM
     * @returns {string} vm identifier
     */
    get vmIdentifier() {
        return this._json.vm_identifier;
    }
    /**
     * Get org name for Vpg VM
     * @returns {string} org name
     */
    get orgName() {
        return this._json.organization_name;
    }
    /**
     * Get actual rpo for Vpg VM
     * @returns {number} actual rpo
     */
    get actualRpo() {
        return this._json.actual_rpo;
    }
    /**
     * Get entities for Vpg VM
     * @returns {VpgEntities} entites
     */
    get entities() {
        return new vpg_entities_1.VpgEntities(this._json.entities);
    }
    /**
     * Get status for Vpg VM
     * @returns {VpgStatus} status
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get sub status for Vpg VM
     * @returns {VpgSubStatus} sub status
     */
    get subStatus() {
        return this._json.sub_status;
    }
    /**
     * Get priority for Vpg Vm
     * @returns {VpgPriority} priority
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get source site for Vpg VM
     * @returns {string} source site
     */
    get sourceSite() {
        return this._json.source_site;
    }
    /**
     * Get target site for Vpg VM
     * @returns {string} target site
     */
    get targetSite() {
        return this._json.target_site;
    }
    /**
     * Get last test for Vpg VM
     * @returns {number} last test
     */
    get lastTest() {
        return this._json.last_test;
    }
    /**
     * Get provisioned storage in mb for Vpg VM
     * @returns {number} provisioned storage in mb
     */
    get provisionedStorageInMb() {
        return this._json.provisioned_storage_in_mb;
    }
    /**
     * Get used storage in percent for Vpg VM
     * @returns {number} used storage in percent
     */
    get usedStorageInPercent() {
        return this._json.used_storage_in_mb;
    }
    /**
     * Get iops for Vpg VM
     * @returns {number} iops
     */
    get iops() {
        return this._json.iops;
    }
    /**
     * Get throughput in mb for Vpg VM
     * @returns {number} throughput in mb
     */
    get throughputInMb() {
        return this._json.throughput_in_mb;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgVmJson} the API object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgVm = VpgVm;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgFailoverReportDetails = exports.VpgFailoverReportData = exports.DetailedRecoveryStep = exports.VmRecoverySettings = exports.BootOrderSettings = exports.NetworkMapping = void 0;
/**
 * Network Mapping
 */
class NetworkMapping {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get source network for Network Mapping
     * @returns {string} source network
     */
    get sourceNetwork() {
        return this._json.source_network;
    }
    /**
     * Get failover move target network for Network Mapping
     * @returns {string} failover move target network
     */
    get failoverMoveTargetNetwork() {
        return this._json.failover_move_target_network;
    }
    /**
     * Get failover test target network for Network Mapping
     * @returns {string} failover test target network
     */
    get failoverTestTargetNetwork() {
        return this._json.failover_test_target_network;
    }
    /**
     * Get reverse configuration failover test network for Network Mapping
     * @returns {string} reverse configuration failover test network
     */
    get reverseConfigFailoverTestNetwork() {
        return this._json.reverse_configuration_failover_test_network;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {NetworkMappingJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.NetworkMapping = NetworkMapping;
/**
 * Boot Order Settings
 */
class BootOrderSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name for Boot Order Settings
     * @returns {string} name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get VMs in group for Boot Order Settings
     * @returns {string} VMs in group
     */
    get vmsInGroup() {
        return this._json.vms_in_group;
    }
    /**
     * Get startup delay for Boot Order Settings
     * @returns {string} startup delay
     */
    get startupDelay() {
        return this._json.startup_delay;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BootOrderSettingsJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BootOrderSettings = BootOrderSettings;
/**
 * Vm Recovery Settings
 */
class VmRecoverySettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name for Vm Recovery Settings
     * @returns {string} name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get recovery hosts for Vm Recovery Settings
     * @returns {string} recovery hosts
     */
    get recoveryHost() {
        return this._json.recovery_host;
    }
    /**
     * Get recovery networks for Vm Recovery Settings
     * @returns {Map<string, string>} recovery networks
     */
    get recoveryNetworks() {
        return this._json.recovery_networks;
    }
    /**
     * Get recovery data stores for Vm Recovery Settings
     * @returns {Map<string, string>} recovery data stores
     */
    get recoveryDatastores() {
        return this._json.recovery_datastores;
    }
    /**
     * Get recovery folder for Vm Recovery Settings
     * @returns {string} recovery folder
     */
    get recoveryFolder() {
        return this._json.recovery_folder;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VmRecoverySettingsJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VmRecoverySettings = VmRecoverySettings;
/**
 * Detailed Recovery Step
 */
class DetailedRecoveryStep {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number for Detailed Recovery Step
     * @returns {string} number
     */
    get number() {
        return this._json.number;
    }
    /**
     * Get description for Detailed Recovery Step
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get result for Detailed Recovery Step
     * @returns {string} result
     */
    get result() {
        return this._json.result;
    }
    /**
     * Get start time for Detailed Recovery Step
     * @returns {string} start time
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get end time for Detailed Recovery Step
     * @returns {string} end time
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get execution time for Detailed Recovery Step
     * @returns {string} execution time
     */
    get executionTime() {
        return this._json.execution_time;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {DetailedRecoveryStepJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.DetailedRecoveryStep = DetailedRecoveryStep;
/**
 * Vpg Failover Report Data
 */
class VpgFailoverReportData {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get Vpg name for Vpg Failover Report Data
     * @returns {string} Vpg name
     */
    get vpgName() {
        return this._json.vpg_name;
    }
    /**
     * Get report generation date for Vpg Failover Report Data
     * @returns {string} report generation date
     */
    get reportGenerationDate() {
        return this._json.report_generation_date;
    }
    /**
     * Get operation name for Vpg Failover Report Data
     * @returns {string} operation name
     */
    get operationName() {
        return this._json.operation_name;
    }
    /**
     * Get point in time for Vpg Failover Report Data
     * @returns {string} point in time
     */
    get pointInTime() {
        return this._json.point_in_time;
    }
    /**
     * Get start time for Vpg Failover Report Data
     * @returns {string} start time
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get end time for Vpg Failover Report Data
     * @returns {string} end time
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get rto for Vpg Failover Report Data
     * @returns {string} rto
     */
    get rto() {
        return this._json.rto;
    }
    /**
     * Get operation result for Vpg Failover Report Data
     * @returns {string} operation result
     */
    get operationResult() {
        return this._json.operation_result;
    }
    /**
     * Get user notes for Vpg Failover Report Data
     * @returns {string} user notes
     */
    get userNotes() {
        return this._json.user_notes;
    }
    /**
     * Get protected site for Vpg Failover Report Data
     * @returns {string} protected site
     */
    get protectedSite() {
        return this._json.protected_site;
    }
    /**
     * Get recovery site for Vpg Failover Report Data
     * @returns {string} recovery site
     */
    get recoverySite() {
        return this._json.recovery_site;
    }
    /**
     * Get default recovery host for Vpg Failover Report Data
     * @returns {string} default recovery host
     */
    get defaultRecoveryHost() {
        return this._json.default_recovery_host;
    }
    /**
     * Get default recovery data store for Vpg Failover Report Data
     * @returns {string} default recovery data store
     */
    get defaultRecoveryDatastore() {
        return this._json.default_recovery_datastore;
    }
    /**
     * Get default failover move network for Vpg Failover Report Data
     * @returns {string} default failover move network
     */
    get defaulFailoverMoveNetwork() {
        return this._json.default_failover_move_network;
    }
    /**
     * Get recovery organization for Vpg Failover Report Data
     * @returns {string} recovery org
     */
    get recoveryOrg() {
        return this._json.recovery_organization;
    }
    /**
     * Get recovery Vdc for Vpg Failover Report Data
     * @returns {string} recovery Vdc
     */
    get recoveryVdc() {
        return this._json.recovery_vdc;
    }
    /**
     * Get guest customization for Vpg Failover Report Data
     * @returns {string} guest customization
     */
    get guestCustomization() {
        return this._json.guest_customization;
    }
    /**
     * Get default test recovery network for Vpg Failover Report Data
     * @returns {string} default test recovery network
     */
    get defaultTestRecoveryNetwork() {
        return this._json.default_test_recovery_network;
    }
    /**
     * Get default recovery folder for Vpg Failover Report Data
     * @returns {string} default recovery folder
     */
    get defaultRecoveryFolder() {
        return this._json.default_recovery_folder;
    }
    /**
     * Get post recovery script for Vpg Failover Report Data
     * @returns {string} post recovery script
     */
    get postRecoveryScript() {
        return this._json.post_recovery_script;
    }
    /**
     * Get boot order settings message for Vpg Failover Report Data
     * @returns {string} boot order settings message
     */
    get bootOrderSettingsMessage() {
        return this._json.boot_order_settings_message;
    }
    /**
     * Get network mappings for Vpg Failover Report Data
     * @returns {Array<NetworkMapping>} network mappings
     */
    get networkMappings() {
        return this._json.network_mappings.map(net => new NetworkMapping(net));
    }
    /**
     * Get boot order settings for Vpg Failover Report Data
     * @returns {Array<BootOrderSettings>} boot order settings
     */
    get bootOrderSettings() {
        return this._json.boot_order_settings.map(boot => new BootOrderSettings(boot));
    }
    /**
     * Get VM recovery settings for Vpg Failover Report Data
     * @returns {Array<VmRecoverySettings>} VM recovery settings
     */
    get vmRecoverySettings() {
        return this._json.vm_recovery_settings.map(vm => new VmRecoverySettings(vm));
    }
    /**
     * Get detailed recovery step list for Vpg Failover Report Data
     * @returns {Array<DetailedRecoveryStep>} detailed recovery step list
     */
    get detailedRecoveryStepList() {
        return this._json.detailed_recovery_step_list.map(step => new DetailedRecoveryStep(step));
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgFailoverReportDataJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgFailoverReportData = VpgFailoverReportData;
/**
 * Vpg Failover Report Details
 */
class VpgFailoverReportDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get location id for Vpg Failover Report Details
     * @returns {string} location id
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get task uuid for Vpg Failover Report Details
     * @returns {string} task uuid
     */
    get taskUuid() {
        return this._json.task_uuid;
    }
    /**
     * Get task complete timestamp for Vpg Failover Report Details
     * @returns {number} timestamp
     */
    get taskCompleteTimestamp() {
        return this._json.task_complete_timestamp;
    }
    /**
     * Get status for Vpg Failover Report Details
     * @returns {Status} status
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get data for Vpg Failover Report Details
     * @returns {VpgFailoverReportData} data
     */
    get data() {
        return new VpgFailoverReportData(this._json.data);
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgFailoverReportDetailsJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgFailoverReportDetails = VpgFailoverReportDetails;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const backup_group_1 = __webpack_require__(46);
const catalog_1 = __webpack_require__(69);
const jpeg_image_1 = __webpack_require__(85);
const company_1 = __webpack_require__(311);
const edge_1 = __webpack_require__(71);
const role_1 = __webpack_require__(199);
const internal_network_1 = __webpack_require__(72);
const media_1 = __webpack_require__(48);
const o365_job_1 = __webpack_require__(209);
const o365_organization_1 = __webpack_require__(88);
const o365_restore_session_1 = __webpack_require__(90);
const org_1 = __webpack_require__(212);
const ba_company_1 = __webpack_require__(238);
const ba_job_1 = __webpack_require__(239);
const vapp_network_1 = __webpack_require__(75);
const vapp_template_1 = __webpack_require__(49);
const vapp_1 = __webpack_require__(76);
const cloud_tenant_1 = __webpack_require__(241);
const failover_plan_1 = __webpack_require__(217);
const vdc_1 = __webpack_require__(92);
const vm_1 = __webpack_require__(41);
const expanded_vpg_1 = __webpack_require__(95);
const account_even_1 = __webpack_require__(549);
const inbox_message_1 = __webpack_require__(242);
const inbox_message_list_1 = __webpack_require__(550);
const inventory_entity_1 = __webpack_require__(551);
const message_count_1 = __webpack_require__(552);
const user_entity_history_subscription_1 = __webpack_require__(553);
const user_session_1 = __webpack_require__(554);
/**
 * User.
 */
class User {
    constructor(_apiUser) {
        this._apiUser = _apiUser;
    }
    /**
     * Gets a user by username.
     * @param username the user's username
     * @returns {Promise<User>}
     */
    static getUser(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${username}`)
                .then(response => {
                const apiUser = response.data;
                return new User(apiUser);
            });
        });
    }
    /**
     * Gets the currently authenticated user.
     * @returns {Promise<User>}
     */
    static getCurrentUser() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getAuthProvider()
                .getAuthenticatedUsername()
                .then((username) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                if (username) {
                    return User.getUser(username);
                }
                else {
                    return new Promise(function (_, reject) {
                        reject();
                    });
                }
            }));
        });
    }
    /**
     * Gets the user's username.
     * @returns {string} username
     */
    get username() {
        return this._apiUser.name;
    }
    /**
     * Gets the user's address.
     * @returns {string} address
     */
    get address() {
        return this._apiUser.address;
    }
    /**
     * Gets the user's city.
     * @returns {string} city
     */
    get city() {
        return this._apiUser.city;
    }
    /**
     * Gets the user's company.
     * @returns {string} company
     */
    get company() {
        return this._apiUser.company;
    }
    /**
     * Gets the user's country.
     * @returns {string} country
     */
    get country() {
        return this._apiUser.country;
    }
    /**
     * Gets the user's created date.
     * @returns {Date} created date
     */
    get createdDate() {
        return new Date(this._apiUser.created_date);
    }
    /**
     * Gets the user's domain.
     * @returns {string | UserDomainJson}
     */
    get domain() {
        return this._apiUser.domain;
    }
    /**
     * Indicates whether the user is deleted.
     * @returns {boolean} value
     */
    get deleted() {
        return this._apiUser.deleted;
    }
    /**
     * Gets the deleted date of the user.
     * @returns {Date} deleted date or null if the user is not deleted
     */
    get deletedDate() {
        return this._apiUser.deleted_date ? new Date(this._apiUser.deleted_date) : null;
    }
    /**
     * Gets the user's email address.
     * @returns {string} email address
     */
    get email() {
        return this._apiUser.email;
    }
    /**
     * Gets the user's full name.
     * @returns {string} full name
     */
    get fullName() {
        return this._apiUser.fullname;
    }
    /**
     * Indicates whether the user is locked out of their account.
     * @returns {boolean} value
     */
    get locked() {
        return this._apiUser.locked;
    }
    /**
     * Gets the phone number of the user.
     * @returns {string} phone number
     */
    get phoneNumber() {
        return this._apiUser.phone;
    }
    /**
     * Gets the user's state.
     * @returns {string} state
     */
    get state() {
        return this._apiUser.state;
    }
    /**
     * Gets the user type.
     * @returns {UserType} user type
     */
    get userType() {
        return this._apiUser.user_type;
    }
    /**
     * Gets the user's zip code.
     * @returns {string} zip code.
     */
    get zip() {
        return this._apiUser.zip;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._apiUser, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {UserJson} the API User object
     */
    get json() {
        return Object.assign({}, this._apiUser);
    }
    /**
     * Retrieves a new representation of the user from the API.
     * @returns {Promise<User>} promise that resolves with updated user
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}`)
                .then(response => {
                this._apiUser = response.data;
                return this;
            });
        });
    }
    /**
     * Update the user.
     * @param {UserUpdateRequest} request
     * @returns {Promise<User>}
     */
    update(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/users/${this.username}`, request.json)
                .then(response => {
                const json = response.data;
                return new User(json);
            });
        });
    }
    /**
     * Delete the current user.
     * @returns {Promise<void>}
     * @throws Error
     */
    delete() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/users/${this.username}`);
        });
    }
    /**
     * Gets the user's inventory within the specified company..
     * @param {string} companyId the ID of the company to retrieve inventory for
     * @returns {Promise<CompanyInventory>}  entity inventory
     * @throws Error
     */
    getInventoryInCompany(companyId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/inventory`, {
                params: {
                    company: companyId
                }
            })
                .then(response => {
                const userInventory = response.data;
                return new inventory_entity_1.CompanyInventoryImpl(userInventory.inventory[0]);
            }, () => {
                throw new Error(`No inventory found for company with id=${companyId}.`);
            });
        });
    }
    /**
     * Gets the user's entity inventory.
     * @returns {Promise<Array<CompanyInventory>>} user's entity inventory
     */
    getInventory() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/inventory`)
                .then(response => {
                const userInventory = response.data;
                return userInventory.inventory.map(it => new inventory_entity_1.CompanyInventoryImpl(it));
            });
        });
    }
    /**
     * Gets the user's list of companies.
     * @returns {Promise<Array<Company>>} user's list of companies
     */
    getCompanies() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies`)
                .then(response => {
                const companiesList = response.data.data;
                return companiesList.map(it => new company_1.Company(it));
            });
        });
    }
    /**
     * Gets the user's role for a company
     * @param {string} companyUuid
     * @returns {Promise<Role>}
     */
    getRole(companyUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/roles/${companyUuid}`)
                .then(response => {
                const role = response.data;
                return new role_1.Role(role);
            });
        });
    }
    /**
     * Assign a role to a user.
     * @param {string} companyUuid
     * @param {string} roleUuid
     * @returns {Promise<any>}
     */
    assignRole(companyUuid, roleUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().put(`/users/${this.username}/roles/${companyUuid}`, {
                role_uuid: roleUuid
            });
        });
    }
    /**
     * Un-assign a role from a user.
     * @param {string} companyUuid
     * @returns {Promise<any>}
     */
    unassignRole(companyUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/users/${this.username}/roles/${companyUuid}`);
        });
    }
    /**
     * Get active sessions for a user.
     * @returns {Promise<Array<UserSession>>} a promise that resolves to a list of active user sessions.
     */
    /* istanbul ignore next: autogenerated */
    getActiveSessions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/sessions`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new user_session_1.UserSession(it));
            });
        });
    }
    /**
     * End all active user sessions.
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    endAllActiveSessions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/users/${this.username}/sessions`);
        });
    }
    /**
     * Updates the user's profile picture.
     * @param {JpegImage} pictureBytes
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    updatePicture(picture) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().put(`/users/${this.username}/picture`, picture.toUint8Array(), {
                headers: {
                    'Content-Type': 'image/jpeg'
                }
            });
        });
    }
    /**
     * Get the user picture.
     * @returns {Promise<JpegImage>}
     */
    /* istanbul ignore next: autogenerated */
    getPicture() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/picture`, {
                headers: {
                    Accept: 'image/jpeg'
                },
                responseType: 'arraybuffer'
            })
                .then(response => {
                return new jpeg_image_1.JpegImage(response.data);
            });
        });
    }
    /**
     * Move a user message to a specified folder.
     * @param {string} uuid
     * @param {MoveMessageRequest} spec
     */
    /* istanbul ignore next: autogenerated */
    moveMessage(uuid, spec) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/users/${this.username}/messages/${uuid}/actions/move`, spec.json)
                .then(response => {
                const json = response.data;
                return new inbox_message_1.InboxMessage(json);
            });
        });
    }
    /**
     * Get a inbox message.
     * @param {string} uuid
     */
    /* istanbul ignore next: autogenerated */
    getMessage(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/messages/${uuid}`)
                .then(response => {
                const json = response.data;
                return new inbox_message_1.InboxMessage(json);
            });
        });
    }
    /**
     * Mark message as read.
     * @param {string} uuid
     */
    /* istanbul ignore next: autogenerated */
    markMessageAsRead(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/users/${this.username}/messages/${uuid}/actions/mark-as-read`)
                .then(response => {
                const json = response.data;
                return new inbox_message_1.InboxMessage(json);
            });
        });
    }
    /**
     * Updates a batch of inbox messages.
     * @param {BatchInboxUpdateRequest} batchUpdate
     */
    /* istanbul ignore next: autogenerated */
    batchInboxUpdate(batchUpdate) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/users/${this.username}/messages/actions/batch-update`, batchUpdate.json);
        });
    }
    /**
     * Mark all messages in a folder as read.
     * @param {InboxMarkAllAsReadRequest} request
     */
    /* istanbul ignore next: autogenerated */
    markAllMessagesAsRead(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/users/${this.username}/messages/actions/mark-all-as-read`, request.json);
        });
    }
    /**
     * Deletes inbox message.
     * @param {string} uuid
     */
    /* istanbul ignore next: autogenerated */
    deleteMessage(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/users/${this.username}/messages/${uuid}`)
                .then(response => {
                const json = response.data;
                return new inbox_message_1.InboxMessage(json);
            });
        });
    }
    /**
     * Get unread message count.
     * @param {MessageFolder} folder
     */
    /* istanbul ignore next: autogenerated */
    getUnreadMessageCount(folder) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/unread-message-count`, {
                params: {
                    folder: folder
                }
            })
                .then(response => {
                const json = response.data;
                return new message_count_1.MessageCount(json);
            });
        });
    }
    /**
     * Get the message headers.
     * @param {InboxMessageFilterParams} filters
     * @returns {Promise<InboxMessageList>>}
     */
    /* istanbul ignore next: autogenerated */
    getMessageHeaders(filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/messages`, {
                params: filters.json
            })
                .then(response => {
                const json = response.data;
                return new inbox_message_list_1.InboxMessageList(json);
            });
        });
    }
    /**
     * Get the user account events.
     * @param {number} offset
     * @param {number} limit
     * @param {number} dateFrom
     * @param {number} dateTo
     * @returns {Promise<Array<AccountEvent>>}
     */
    /* istanbul ignore next: autogenerated */
    getAccountEvents(offset, limit, dateFrom, dateTo) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/account-events`, {
                params: {
                    offset: offset,
                    limit: limit,
                    dateFrom: dateFrom,
                    dateTo: dateTo
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new account_even_1.AccountEvent(it));
            });
        });
    }
    /**
     * Get the orgs for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Org>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgs(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/orgs`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new org_1.Org(it));
            });
        });
    }
    /**
     * Get the vDCS for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Vdc>>}
     */
    /* istanbul ignore next: autogenerated */
    getVdcs(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vdcs`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vdc_1.Vdc(it));
            });
        });
    }
    /**
     * Get the vApps for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Vapp>>}
     */
    /* istanbul ignore next: autogenerated */
    getVapps(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vapps`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_1.Vapp(it));
            });
        });
    }
    /**
     * Get the VMs for a company and a user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Vm>>}
     */
    /* istanbul ignore next: autogenerated */
    getVms(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vms`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vm_1.Vm(it));
            });
        });
    }
    /**
     * Get the media for a company and a user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Media>>}
     */
    /* istanbul ignore next: autogenerated */
    getMedia(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/media`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new media_1.Media(it));
            });
        });
    }
    /**
     * Get the vApp templates for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<VappTemplate>>}
     */
    /* istanbul ignore next: autogenerated */
    getVappTemplates(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vapp-templates`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_template_1.VappTemplate(it));
            });
        });
    }
    /**
     * Get the edges for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Edge>>}
     */
    /* istanbul ignore next: autogenerated */
    getEdges(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/edges`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_1.Edge(it));
            });
        });
    }
    /**
     * Get the VPGs for the company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<VpgSubEntityRequest>>}
     */
    /* istanbul ignore next: autogenerated */
    getVpgs(companyId, location, expand) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vpgs`, {
                params: {
                    location: location,
                    expand: expand
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new expanded_vpg_1.ExpandedVpg(it));
            });
        });
    }
    /**
     * Get the cloud tenants for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<CloudTenant>>}
     */
    /* istanbul ignore next: autogenerated */
    getCloudTenants(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vcc-backup-tenants`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new cloud_tenant_1.CloudTenant(it));
            });
        });
    }
    /**
     * Get the backup companies for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<BaCompany>>}
     */
    /* istanbul ignore next: autogenerated */
    getVacCompanies(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vac-companies`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new ba_company_1.BaCompany(it));
            });
        });
    }
    /**
     * Get the backup jobs for a company and user.
     * @param {string} companyId
     * @param {string} locationId
     * @returns {Promise<Array<BaJob>>}
     */
    /* istanbul ignore next: autogenerated */
    getVacJobs(companyId, locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vac-jobs`, {
                params: {
                    location: locationId
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new ba_job_1.BaJob(it));
            });
        });
    }
    /**
     * Get the org vdc networks for company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<OrgVdcNetwork>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgVdcNetworks(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/org-vdc-networks`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new internal_network_1.InternalNetwork(it));
            });
        });
    }
    /**
     * Get the vApp networks for company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<VappNetwork>>}
     */
    /* istanbul ignore next: autogenerated */
    getVappNetworks(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vapp-networks`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_network_1.VappNetwork(it));
            });
        });
    }
    /**
     * Get the catalogs for company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<Catalog>>}
     */
    /* istanbul ignore next: autogenerated */
    getCatalogs(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/catalogs`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new catalog_1.Catalog(it));
            });
        });
    }
    /**
     * Get the VCC failover plans for a company and user.
     * @param {string} companyId
     * @param {string} location
     * @returns {Promise<Array<VCCFailoverPlan>>}
     */
    /* istanbul ignore next: autogenerated */
    getVccFailoverPlans(companyId, location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/vcc-failover-plans`, {
                params: {
                    location: location
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new failover_plan_1.VCCFailoverPlan(it));
            });
        });
    }
    /**
     * Get the O365 Organizations for a company and user
     * @param {string} companyId
     * @param {string} locationId
     * @return {Promise<Array<O365Organization>>}
     */
    /* istanbul ignore next: autogenerated */
    getO365Organizations(companyId, locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/o365-organizations`, {
                params: {
                    location: locationId
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_organization_1.O365Organization(it));
            });
        });
    }
    /**
     * Get the O365 Jobs for a company and user
     * @param {string} companyId
     * @param {string} locationId
     * @return {Promise<Array<O365Job>>}
     */
    /* istanbul ignore next: autogenerated */
    getO365Jobs(companyId, locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/o365-jobs`, {
                params: {
                    location: locationId
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_job_1.O365Job(it));
            });
        });
    }
    /**
     * Get the O365 Active Restore Sessions for a company and user
     * @param {string} companyId
     * @param {string} locationId
     * @return {Promise<Array<O365RestoreSession>>}
     */
    /* istanbul ignore next: autogenerated */
    getO365RestoreSessions(companyId, locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/o365-restore-sessions`, {
                params: {
                    location: locationId
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_restore_session_1.O365RestoreSession(it));
            });
        });
    }
    /**
     * Get entity history subscriptions for a given user.
     * @return {Promise<Array<UserEntityHistorySubscription>>} list of entity history subscriptions
     */
    /* istanbul ignore next: autogenerated */
    getEntityHistorySubscriptions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/entity-history-subscriptions`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new user_entity_history_subscription_1.UserEntityHistorySubscription(it));
            });
        });
    }
    /**
     * Add an entity history subscription.
     * @param {UserEntityHistorySubscriptionCreateRequest} request
     * @return {Promise<UserEntityHistorySubscription>} the created entity history subscription
     */
    /* istanbul ignore next: autogenerated */
    subscribeToEntityHistory(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/users/${this.username}/actions/subscribe-to-entity-history`, request.json)
                .then(response => {
                const json = response.data;
                return new user_entity_history_subscription_1.UserEntityHistorySubscription(json);
            });
        });
    }
    /**
     * Remove an entity history subscription.
     * @param {UserEntityHistorySubscriptionDeleteRequest} request
     * @return {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    removeEntityHistorySubscription(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/users/${this.username}/actions/unsubscribe-from-entity-history`, request.json);
        });
    }
    /**
     * List the existing backup groups that are configured for a specific
     * company and user.
     *
     * @param {string} companyId
     * @param {string} location
     * @param {boolean} includeSummaryStats Default is false. (Optional)
     * @param {boolean} includeLastRun Default is false. (Optional)
     * @param {boolean} includeBackupPolicy Default is false. (Optional)
     * @returns {Promise<Array<BackupGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroups(companyId, location, includeSummaryStats, includeLastRun, includeBackupPolicy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${this.username}/companies/${companyId}/backup-groups`, {
                params: {
                    location: location,
                    includeSummaryStats: includeSummaryStats !== null && includeSummaryStats !== void 0 ? includeSummaryStats : false,
                    includeLastRun: includeLastRun !== null && includeLastRun !== void 0 ? includeLastRun : false,
                    includeBackupPolicy: includeBackupPolicy !== null && includeBackupPolicy !== void 0 ? includeBackupPolicy : false
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_1.BackupGroup(it));
            });
        });
    }
}
exports.User = User;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompany = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const ba_backup_resource_1 = __webpack_require__(535);
const ba_company_backup_history_1 = __webpack_require__(538);
const ba_job_1 = __webpack_require__(239);
const ba_backup_directory_list_1 = __webpack_require__(539);
const ba_backup_file_list_1 = __webpack_require__(541);
const vac_perf_sample_1 = __webpack_require__(543);
/* istanbul ignore next: autogenerated */
class BaCompany extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Refreshes the Ba Company data by retrieving it from the API again.
     * @param {string} uuid the company uuid
     * @returns {Promise<BaCompany>} promise that resolves with this object
     */
    static getVacCompany(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${uuid}`)
                .then(response => {
                const json = response.data;
                return new BaCompany(json);
            });
        });
    }
    get entityType() {
        return 'VCC_BACKUP_TENANT';
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get crm.
     * @returns {string}
     */
    get crm() {
        return this._json.crm;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get contract uuid.
     * @returns {string}
     */
    get contractUuid() {
        return this._json.contract_uuid;
    }
    /**
     * Get owner name.
     * @returns {string}
     */
    get ownerName() {
        return this._json.owner_name;
    }
    /**
     * Get backup resources.
     * @returns {Array<BaBackupResource> | null}
     */
    get backupResources() {
        return this._json.backup_resources ? this._json.backup_resources.map(it => new ba_backup_resource_1.BaBackupResource(it)) : null;
    }
    /**
     * Get last active.
     * @returns {Date | null}
     */
    get lastActive() {
        return this._json.last_active ? new Date(this._json.last_active) : null;
    }
    /**
     * Get last result.
     * @returns {string}
     */
    get lastResult() {
        return this._json.last_result;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get instance uid.
     * @returns {string}
     */
    get instanceUid() {
        return this._json.instance_uid;
    }
    /**
     * Get cloud connect agent uid.
     * @returns {string}
     */
    get cloudConnectAgentUid() {
        return this._json.cloud_connect_agent_uid;
    }
    /**
     * Get site name.
     * @returns {string}
     */
    get siteName() {
        return this._json.site_name;
    }
    /**
     * Get vcd organization uid.
     * @returns {string}
     */
    get vcdOrganizationUid() {
        return this._json.vcd_organization_uid;
    }
    /**
     * Get tenant type.
     * @returns {string}
     */
    get tenantType() {
        return this._json.tenant_type;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get title.
     * @returns {string}
     */
    get title() {
        return this._json.title;
    }
    /**
     * Get first name.
     * @returns {string}
     */
    get firstName() {
        return this._json.first_name;
    }
    /**
     * Get last name.
     * @returns {string}
     */
    get lastName() {
        return this._json.last_name;
    }
    /**
     * Get user name.
     * @returns {string}
     */
    get userName() {
        return this._json.user_name;
    }
    /**
     * Get email address.
     * @returns {string}
     */
    get emailAddress() {
        return this._json.email_address;
    }
    /**
     * Get is enabled.
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.is_enabled;
    }
    /**
     * Get tax id.
     * @returns {string}
     */
    get taxId() {
        return this._json.tax_id;
    }
    /**
     * Get telephone.
     * @returns {string}
     */
    get telephone() {
        return this._json.telephone;
    }
    /**
     * Get country.
     * @returns {string}
     */
    get country() {
        return this._json.country;
    }
    /**
     * Get city.
     * @returns {string}
     */
    get city() {
        return this._json.city;
    }
    /**
     * Get street.
     * @returns {string}
     */
    get street() {
        return this._json.street;
    }
    /**
     * Get us state. System ID of a USA states where a company is located.
     * @returns {string}
     */
    get usState() {
        return this._json.us_state;
    }
    /**
     * Get zip code.
     * @returns {string}
     */
    get zipCode() {
        return this._json.zip_code;
    }
    /**
     * Get domain.
     * @returns {string}
     */
    get domain() {
        return this._json.domain;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get notes.
     * @returns {string}
     */
    get notes() {
        return this._json.notes;
    }
    /**
     * Get backup protection enabled.
     * @returns {boolean}
     */
    get backupProtectionEnabled() {
        return this._json.backup_protection_enabled;
    }
    /**
     * Get backup protection period.
     * @returns {number}
     */
    get backupProtectionPeriod() {
        return this._json.backup_protection_period;
    }
    /**
     * Get network failover resources enabled.
     * @returns {boolean}
     */
    get networkFailoverResourcesEnabled() {
        return this._json.network_failover_resources_enabled;
    }
    /**
     * Get number of public ip.
     * @returns {number}
     */
    get numberOfPublicIp() {
        return this._json.number_of_public_ip;
    }
    /**
     * Get public ip enabled.
     * @returns {boolean}
     */
    get publicIpEnabled() {
        return this._json.public_ip_enabled;
    }
    /**
     * Get max concurrent tasks.
     * @returns {number}
     */
    get maxConcurrentTasks() {
        return this._json.max_concurrent_tasks;
    }
    /**
     * Get bandwidth throttling enabled.
     * @returns {boolean}
     */
    get bandwidthThrottlingEnabled() {
        return this._json.bandwidth_throttling_enabled;
    }
    /**
     * Get allowed bandwidth.
     * @returns {number}
     */
    get allowedBandwidth() {
        return this._json.allowed_bandwidth;
    }
    /**
     * Get allowed bandwidth units.
     * @returns {string}
     */
    get allowedBandwidthUnits() {
        return this._json.allowed_bandwidth_units;
    }
    /**
     * Get gateway failover enabled.
     * @returns {boolean}
     */
    get gatewayFailoverEnabled() {
        return this._json.gateway_failover_enabled;
    }
    /**
     * Get vms backed up.
     * @returns {number}
     */
    get vmsBackedUp() {
        return this._json.vms_backed_up;
    }
    /**
     * Get vms replicated.
     * @returns {number}
     */
    get vmsReplicated() {
        return this._json.vms_replicated;
    }
    /**
     * Get vms backed up to cloud.
     * @returns {number}
     */
    get vmsBackedUpToCloud() {
        return this._json.vms_backed_up_to_cloud;
    }
    /**
     * Get managed physical workstations.
     * @returns {number}
     */
    get managedPhysicalWorkstations() {
        return this._json.managed_physical_workstations;
    }
    /**
     * Get managed cloud workstations.
     * @returns {number}
     */
    get managedCloudWorkstations() {
        return this._json.managed_cloud_workstations;
    }
    /**
     * Get managed physical servers.
     * @returns {number}
     */
    get managedPhysicalServers() {
        return this._json.managed_physical_servers;
    }
    /**
     * Get managed cloud servers.
     * @returns {number}
     */
    get managedCloudServers() {
        return this._json.managed_cloud_servers;
    }
    /**
     * Get expiration enabled.
     * @returns {boolean}
     */
    get expirationEnabled() {
        return this._json.expiration_enabled;
    }
    /**
     * Get expiration date.
     * @returns {Date | null}
     */
    get expirationDate() {
        return this._json.expiration_date ? new Date(this._json.expiration_date) : null;
    }
    /**
     * Get total storage quota.
     * @returns {number}
     */
    get totalStorageQuota() {
        return this._json.total_storage_quota;
    }
    /**
     * Get used storage quota.
     * @returns {number}
     */
    get usedStorageQuota() {
        return this._json.used_storage_quota;
    }
    /**
     * Get endpoint.
     * @returns {string}
     */
    get endpoint() {
        return this._json.endpoint;
    }
    /**
     * Get agent and sub tenant count.
     * @returns {number}
     */
    get agentAndSubTenantCount() {
        return this._json.agent_and_sub_tenant_count;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the Ba Company data by retrieving it from the API again.
     * @returns {Promise<BaCompany>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Gets the storage usage for the Ba Company
     * @param {number} start
     * @param {number} end
     * @param {PerfIntervalType} interval
     * @param {number} limit
     * @returns {Promise<Array<VacPerfSample>>} array of Vac Perf Samples
     */
    getStorageUsage(start, end, interval, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${this.uuid}/storage-usage`, {
                params: {
                    start: start,
                    end: end,
                    interval: interval,
                    limit: limit
                }
            })
                .then(response => {
                const samples = response.data.data;
                return samples.map(it => new vac_perf_sample_1.VacPerfSample(it));
            });
        });
    }
    /**
     * Gets the backup history for the BaCompany
     * @param {number} offset
     * @param {number} limit
     * @returns {Promise<Array<BaCompanyBackupHistory>>} array of Vac BaCompany Backup History objects
     */
    getBackupHistory(offset, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${this.uuid}/backup-history`, {
                params: {
                    offset: offset,
                    limit: limit
                }
            })
                .then(response => {
                const samples = response.data.data;
                return samples.map(it => new ba_company_backup_history_1.BaCompanyBackupHistory(it));
            });
        });
    }
    /**
     * @deprecated (we are adding the request at company/location level instead, so this one won't be used anymore.
     * We'll need to remove it at some point.)
     * Upgrades the contract for the BaCompany
     * @param {BaCompanyContractUpgradeRequest} updateContractRequest
     * @returns {Promise}
     */
    upgradeTenantContract(updateContractRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const request = updateContractRequest.json;
            return iland_1.Iland.getHttp().post(`/vac-companies/${this.uuid}/actions/request-upgrade-contract`, request);
        });
    }
    /**
     * Update BaCompany name
     * @param {BaCompanyUpdateRequest} updateRequest
     * @returns {Promise<BaCompany>}
     */
    updateVacCompany(updateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const request = updateRequest.json;
            return iland_1.Iland.getHttp()
                .put(`/vac-companies/${this.uuid}`, request)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Reset the password for a given tenant (BaCompany)
     * @param {BaCompanyPasswordResetRequest} resetPasswordRequest
     * @returns {Promise}
     */
    resetVacCompanyPassword(resetPasswordRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const request = resetPasswordRequest.json;
            return iland_1.Iland.getHttp().post(`/vac-companies/${this.uuid}/actions/update-password`, request);
        });
    }
    /**
     * Update storage quota for a given tenant (BaCompany)
     * @param {BaBackupResourceUpdateRequest} backupResourceUpdateRequest
     * @returns {Promise}
     */
    updateVacCompanyStorageQuota(backupResourceUpdateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const request = backupResourceUpdateRequest.json;
            return iland_1.Iland.getHttp().put(`/vac-companies/${this.uuid}/actions/update-storage-quota`, request);
        });
    }
    /**
     * Delete the VAC company.
     * @returns {Promise}
     */
    deleteVacCompany() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/vac-companies/${this.uuid}`);
        });
    }
    /**
     * Get VAC backup directories.
     * @param {BaBackupFilterParams} params The request params
     * @returns {Promise<BaBackupDirectoryList | null>}
     */
    getBackupDirectoryList(params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${this.uuid}/vac-backup-directories`, { params: params.json })
                .then(response => {
                return response.data ? new ba_backup_directory_list_1.BaBackupDirectoryList(response.data) : null;
            });
        });
    }
    /**
     * Get VAC backup files for a specific directory.
     * @param {string} backupDirectoryId The backup directory ID.
     * @param {BaBackupFilterParams} params The request params
     * @returns {Promise<BaBackupFileList | null>}
     */
    getBackupFileList(backupDirectoryId, params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-companies/${this.uuid}/${backupDirectoryId}/vac-backup-files`, { params: params.json })
                .then(response => {
                return response.data ? new ba_backup_file_list_1.BaBackupFileList(response.data) : null;
            });
        });
    }
    /**
     * Gets a list of VAC jobs for a given VAC company.
     * @returns {Promise<Array<BaJob>>} Array of VAC jobs
     */
    getBackupJobs() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`vac-companies/${this.uuid}/jobs`)
                .then(response => {
                const jobs = response.data.data;
                return jobs.map(it => new ba_job_1.BaJob(it));
            });
        });
    }
}
exports.BaCompany = BaCompany;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaJob = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const task_1 = __webpack_require__(10);
/* istanbul ignore next: autogenerated */
class BaJob {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get a VAC Job by UUID
     * @param uuid
     * @returns {Promise<BaJob>} promise that resolves with a VAC Job
     */
    static getBackupJob(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-jobs/${uuid}`)
                .then(res => {
                const json = res.data;
                return new BaJob(json);
            });
        });
    }
    /**
     * Get UUID.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Name of the job configured in Veeam Backup & Replication.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Status of the latest job session. Possible values: Success, Warning, Failed, Running, No Info
     * @returns {BaJobStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Veeam Backup & Replication job type.
     * @returns {BaJobType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets date and time when the latest job session started.
     * @returns {Date | null}
     */
    get lastRun() {
        return this._json.last_run ? new Date(this._json.last_run) : null;
    }
    /**
     * Gets date and time when the latest job session finished.
     * @returns {Date | null}
     */
    get endTime() {
        return this._json.end_time ? new Date(this._json.end_time) : null;
    }
    /**
     * Gets time taken to complete the latest job session in seconds.
     * @returns {number}
     */
    get duration() {
        return this._json.duration;
    }
    /**
     * Gets rate at which VM data was processed during the latest job session in bytes per second (MB/s).
     * @returns {number}
     */
    get processionRate() {
        return this._json.procession_rate;
    }
    /**
     * Gets average time taken to complete a job session in seconds.
     * @returns {number}
     */
    get avgDuration() {
        return this._json.avg_duration;
    }
    /**
     * Gets total amount of data that was transferred to target during the latest job session in MB.
     * @returns {number}
     */
    get transferredData() {
        return this._json.transferred_data;
    }
    /**
     * Gets bottleneck in the process of transferring the data from source to target.
     * @returns {BaJobBottleneck}
     */
    get bottleneck() {
        return this._json.bottleneck;
    }
    /**
     * Gets name of the Veeam Backup & Replication or Veeam Cloud Connect server on which a job was configured.
     * @returns {string}
     */
    get serverName() {
        return this._json.server_name;
    }
    /**
     * Indicates whether a job schedule is enabled.
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.is_enabled;
    }
    /**
     * Gets number of VMs protected by the job.
     * @returns {number}
     */
    get protectedVms() {
        return this._json.protected_vms;
    }
    /**
     * Gets type of schedule configured for the job.
     * @returns {BaJobSchedulingType}
     */
    get schedulingType() {
        return this._json.scheduling_type;
    }
    /**
     * Gets the company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Gets the location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the iland company uuid for the VAC job.
     * @returns {string}
     */
    get companyUuid() {
        return this._json.company_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaJobJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the VAC Job data by retrieving it from the API again.
     * @returns {Promise<BaJob>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-jobs/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Enable a VAC job.
     * @returns {Promise<Task>>}
     */
    enableVacJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vac-jobs/${this.uuid}/action/enable`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Disable a VAC job.
     * @returns {Promise<Task>>}
     */
    disableVacJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vac-jobs/${this.uuid}/action/disable`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Start a VAC job.
     * @returns {Promise<Task>}
     */
    startVacJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vac-jobs/${this.uuid}/action/start`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Stop a VAC job.
     * @returns {Promise<Task>}
     */
    stopVacJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vac-jobs/${this.uuid}/action/stop`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Retry a VAC job.
     * @returns {Promise<Task>}
     */
    retryVacJob() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vac-jobs/${this.uuid}/action/retry`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Get the history for a VAC job given a start and end date.
     * If start or end is not passed then it defaults start to a week ago and sets end as current time.
     * @param {number} start Start date in milliseconds
     * @param {number} end End date in milliseconds
     * @returns {Promise<Array<BaJob>>} List of jobs for the given period
     */
    /* istanbul ignore next: autogenerated */
    getVacJobHistory(start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vac-jobs/${this.uuid}/history`, {
                params: {
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new BaJob(it));
            });
        });
    }
}
exports.BaJob = BaJob;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupFilterParams = void 0;
/**
 * BaBackupFilterParams class
 */
/* istanbul ignore next: autogenerated */
class BaBackupFilterParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get offset.
     * @returns {number}
     */
    get offset() {
        return this._json.offset;
    }
    /**
     * Get limit.
     * @returns {number}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * Get order.
     * @returns {PagingOrder}
     */
    get order() {
        return this._json.order;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupFilterParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupFilterParams = BaBackupFilterParams;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTenant = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const cloud_tenant_backup_history_1 = __webpack_require__(544);
const cloud_tenant_resource_1 = __webpack_require__(545);
const vcc_perf_sample_1 = __webpack_require__(548);
/**
 * Cloud Tenant.
 */
class CloudTenant extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets a Cloud Tenant by UUID.
     * @param {string} uuid
     * @returns {Promise<CloudTenant>} promise that resolves with the Cloud Tenant
     */
    static getCloudTenant(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-backup-tenants/${uuid}`)
                .then(response => {
                const json = response.data;
                return new CloudTenant(json);
            });
        });
    }
    get entityType() {
        return 'VCC_BACKUP_TENANT';
    }
    /**
     * Gets the uid of the Cloud Tenant.
     * @returns {string} id value
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Indicates whether the Cloud Tenant is enabled.
     * @returns {boolean} value
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Gets the resources of the Cloud Tenant.
     * @returns {CloudTenantResource[]} resources
     */
    get resources() {
        return this._json.resources.resources.map(it => new cloud_tenant_resource_1.CloudTenantResource(it));
    }
    /**
     * Get the last result of the Cloud Tenant.
     * @returns {string} last result
     */
    get lastResult() {
        return this._json.last_result;
    }
    /**
     * Gets the last active of the Cloud Tenant.
     * @returns {number} value
     */
    get lastActive() {
        return this._json.last_active;
    }
    /**
     * Gets the throttling enabled value of the Cloud Tenant.
     * @returns {boolean} value
     */
    get throttlingEnabled() {
        return this._json.throttling_enabled;
    }
    /**
     * Gets the throttling speed limit of the Cloud Tenant.
     * @returns {number} speed limit
     */
    get throttlingSpeedLimit() {
        return this._json.throttling_speed_limit;
    }
    /**
     * Gets the throttling speed unit of the Cloud Tenant.
     * @returns {string} speed unit
     */
    get throttlingSpeedUnit() {
        return this._json.throttling_speed_unit;
    }
    /**
     * Gets the public IP count of the Cloud Tenant.
     * @returns {number} public ip count
     */
    get publicIpCount() {
        return this._json.public_ip_count;
    }
    /**
     * Gets the backup count of the Cloud Tenant.
     * @returns {number} backup count
     */
    get backupCount() {
        return this._json.backup_count;
    }
    /**
     * Gets the company ID of the Cloud Tenant.
     * @returns {string} company ID
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Gets the owner name of the Cloud Tenant.
     * @returns {string} owner name
     */
    get ownerName() {
        return this._json.owner_name;
    }
    /**
     * Gets the contract uuid for the Cloud Tenant.
     * @returns {string} contract uuid
     */
    get contractUuid() {
        return this._json.contract_uuid;
    }
    /**
     * Gets the location id of the Cloud Tenant.
     * @returns {string} location id
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the end point of the Cloud Tenant.
     * @returns {string} end point
     */
    get endPoint() {
        return this._json.endpoint;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CloudTenantJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Gets the storage usage for the Cloud Tenant
     * @param {number} start
     * @param {number} end
     * @param {number} limit
     * @param {PerfIntervalType} interval
     * @returns {Promise<VccPerfSample[]>} array of Vcc Perf Samples
     */
    getStorageUsageFor(start, end, limit, interval) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-backup-tenants/${this.uuid}/storage-usage`, {
                params: {
                    start: start,
                    end: end,
                    limit: limit,
                    interval: interval
                }
            })
                .then(response => {
                const samples = response.data.data;
                return samples.map(sample => new vcc_perf_sample_1.VccPerfSample(sample));
            });
        });
    }
    /**
     * Upgrades the contract for the Cloud Tenant
     * @param {UpdateTenantContractRequest} contract
     * @returns {Promise<any>}
     */
    /* istanbul ignore next: autogenerated */
    upgradeTenantContract(updateContractRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/vcc-backup-tenants/${this.uuid}/actions/upgrade-contract`, updateContractRequest.json);
        });
    }
    /**
     * Get the backup history for the Cloud Tenant
     * @param {number} offset
     * @param {number} limit
     * @returns {Promise<CloudTenantBackupHistory[]>} array of Cloud Tenant Backup History objects
     */
    getBackupHistoryFor(offset, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-backup-tenants/${this.uuid}/backup-history`, {
                params: {
                    offset: offset,
                    limit: limit
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(backupHistoryJson => new cloud_tenant_backup_history_1.CloudTenantBackupHistory(backupHistoryJson));
            });
        });
    }
    /**
     * Refreshes the Cloud Tenant data by retrieving it from the API again.
     * @returns {Promise<CloudTenant>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vcc-backup-tenants/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
}
exports.CloudTenant = CloudTenant;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InboxMessage = void 0;
/**
 * Inbox Message.
 */
/* istanbul ignore next: autogenerated */
class InboxMessage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get subject.
     * @returns {string}
     */
    get subject() {
        return this._json.subject;
    }
    /**
     * Get content.
     * @returns {string}
     */
    get content() {
        return this._json.content;
    }
    /**
     * Get hash.
     * @returns {string}
     */
    get hash() {
        return this._json.hash;
    }
    /**
     * Get folder.
     * @returns {MessageFolder}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get read.
     * @returns {boolean}
     */
    get read() {
        return this._json.read;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get the json representation of this class.
     * @returns {InboxMessageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.InboxMessage = InboxMessage;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RedistributionUpdateRequest = void 0;
const rule_1 = __webpack_require__(169);
/**
 * Redistribution Update Request
 */
/* istanbul ignore next: autogenerated */
class RedistributionUpdateRequest {
    constructor(firstParam, rules) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                rules: rules
            };
        }
        else if (firstParam instanceof RedistributionUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get rules.
     * @returns {Array<Rule>}
     */
    get rules() {
        return this._json.rules.map(it => new rule_1.Rule(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RedistributionUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RedistributionUpdateRequest = RedistributionUpdateRequest;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Event = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const event_list_1 = __webpack_require__(598);
/**
 * Event.
 */
class Event {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets an event by UUID.
     * @param uuid event UUID
     * @returns {Promise<Event>} promise that resolves with the Event
     */
    static getEvent(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/events/${uuid}`)
                .then(response => {
                const json = response.data;
                return new Event(json);
            });
        });
    }
    /**
     * Get a list of events depending on filter params.
     * @param filterParams
     * @returns {Promise<EventList>} promise that resolves with the EventList
     */
    static getEvents(filterParams) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/events`, {
                params: filterParams.getQueryParams()
            })
                .then(response => {
                const json = response.data;
                return new event_list_1.EventList(json);
            });
        });
    }
    /**
     * Gets the event UUID.
     * @returns {string} the UUID
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Gets the event owner type.
     * @returns {EventOwnerType} the owner type
     */
    get ownerType() {
        return this._json.owner_type;
    }
    /**
     * Gets the event owner ID.
     * @returns {string} the owner ID
     */
    get ownerId() {
        return this._json.owner_id;
    }
    /**
     * Gets the entity UUID.
     * @returns {string} the entity UUID
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Gets the entity type.
     * @returns {EntityType} the entity type
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Gets the entity name.
     * @returns {string} the entity name
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * Gets the event type.
     * @returns {EventType} the event type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the event timestamp.
     * @returns {Date} the event timestamp
     */
    get timestamp() {
        return new Date(this._json.timestamp);
    }
    /**
     * Gets the UUID of the task that is associated with the event or null if not applicable.
     * @returns {string | null} the task UUID or null
     */
    get taskUuid() {
        return this._json.task_uuid ? this._json.task_uuid : null;
    }
    /**
     * Gets the username of the user who caused the event.
     * @returns {string} the username
     */
    get initiatedByUsername() {
        return this._json.initiated_by_username;
    }
    /**
     * Gets the full name of the user who caused the event.
     * @returns {string} the user's full name
     */
    get initiatedByFullName() {
        return this._json.initiated_by_full_name;
    }
    /**
     * Gets the string describing the event.
     * @returns {string} the event description
     */
    get details() {
        return this._json.details;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {EventJson} the API json object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.Event = Event;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpScope = void 0;
const ip_range_1 = __webpack_require__(32);
const network_sub_allocation_1 = __webpack_require__(141);
/**
 * Ip Scope.
 */
/* istanbul ignore next: autogenerated */
class IpScope {
    constructor(firstParam, enabled, gateway, netmask, primaryDns, secondaryDns, dnsSuffix, ipRanges, allocatedIpAddresses, subAllocations) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                inherited: firstParam,
                enabled: enabled,
                gateway: gateway,
                netmask: netmask,
                primary_dns: primaryDns,
                secondary_dns: secondaryDns,
                dns_suffix: dnsSuffix,
                ip_ranges: ipRanges,
                allocated_ip_addresses: allocatedIpAddresses,
                sub_allocations: subAllocations
            };
        }
        else if (firstParam instanceof IpScope) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get inherited.
     * @returns {boolean | undefined}
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Get enabled.
     * @returns {boolean | undefined}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRange>}
     */
    get ipRanges() {
        return this._json.ip_ranges.map(it => new ip_range_1.IpRange(it));
    }
    /**
     * Get allocated ip addresses.
     * @returns {Array<string> | undefined}
     */
    get allocatedIpAddresses() {
        return this._json.allocated_ip_addresses;
    }
    /**
     * Get sub allocations.
     * @returns {Array<NetworkSubAllocation> | undefined}
     */
    get subAllocations() {
        return this._json.sub_allocations ? this._json.sub_allocations.map(it => new network_sub_allocation_1.NetworkSubAllocation(it)) : undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpScopeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpScope = IpScope;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRuleServiceProtocolRequest = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallRuleServiceProtocolRequest {
    constructor(firstParam, destinationPort, protocol, protocolName) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                source_port: firstParam,
                destination_port: destinationPort,
                protocol: protocol,
                protocol_name: protocolName
            };
        }
        else if (firstParam instanceof DistributedFirewallRuleServiceProtocolRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get destination port.
     * @returns {number}
     */
    get destinationPort() {
        return this._json.destination_port;
    }
    /**
     * Get protocol.
     * @returns {number}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get protocol name.
     * @returns {DistributedFirewallProtocolNameType}
     */
    get protocolName() {
        return this._json.protocol_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRuleServiceProtocolRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRuleServiceProtocolRequest = DistributedFirewallRuleServiceProtocolRequest;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallValueTypeRequest = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallValueTypeRequest {
    constructor(firstParam, type, name, isValid) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                value: firstParam,
                type: type,
                name: name,
                is_valid: isValid
            };
        }
        else if (firstParam instanceof DistributedFirewallValueTypeRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get isValid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallValueTypeRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallValueTypeRequest = DistributedFirewallValueTypeRequest;


/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "config", function() { return /* reexport */ internal_config["a" /* config */]; });
__webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return /* reexport */ InnerSubscriber["a" /* InnerSubscriber */]; });
__webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return /* reexport */ OuterSubscriber["a" /* OuterSubscriber */]; });
__webpack_require__.d(__webpack_exports__, "Scheduler", function() { return /* reexport */ Scheduler["a" /* Scheduler */]; });
__webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return /* reexport */ Subject["a" /* AnonymousSubject */]; });
__webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return /* reexport */ SubjectSubscription["a" /* SubjectSubscription */]; });
__webpack_require__.d(__webpack_exports__, "Subscriber", function() { return /* reexport */ Subscriber["a" /* Subscriber */]; });
__webpack_require__.d(__webpack_exports__, "fromPromise", function() { return /* reexport */ fromPromise; });
__webpack_require__.d(__webpack_exports__, "fromIterable", function() { return /* reexport */ fromIterable; });
__webpack_require__.d(__webpack_exports__, "ajax", function() { return /* reexport */ ajax; });
__webpack_require__.d(__webpack_exports__, "webSocket", function() { return /* reexport */ webSocket; });
__webpack_require__.d(__webpack_exports__, "ajaxGet", function() { return /* reexport */ ajaxGet; });
__webpack_require__.d(__webpack_exports__, "ajaxPost", function() { return /* reexport */ ajaxPost; });
__webpack_require__.d(__webpack_exports__, "ajaxDelete", function() { return /* reexport */ ajaxDelete; });
__webpack_require__.d(__webpack_exports__, "ajaxPut", function() { return /* reexport */ ajaxPut; });
__webpack_require__.d(__webpack_exports__, "ajaxPatch", function() { return /* reexport */ ajaxPatch; });
__webpack_require__.d(__webpack_exports__, "ajaxGetJSON", function() { return /* reexport */ ajaxGetJSON; });
__webpack_require__.d(__webpack_exports__, "AjaxObservable", function() { return /* reexport */ AjaxObservable_AjaxObservable; });
__webpack_require__.d(__webpack_exports__, "AjaxSubscriber", function() { return /* reexport */ AjaxObservable_AjaxSubscriber; });
__webpack_require__.d(__webpack_exports__, "AjaxResponse", function() { return /* reexport */ AjaxResponse; });
__webpack_require__.d(__webpack_exports__, "AjaxError", function() { return /* reexport */ AjaxError; });
__webpack_require__.d(__webpack_exports__, "AjaxTimeoutError", function() { return /* reexport */ AjaxTimeoutError; });
__webpack_require__.d(__webpack_exports__, "WebSocketSubject", function() { return /* reexport */ WebSocketSubject_WebSocketSubject; });
__webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return /* reexport */ combineLatest["a" /* CombineLatestOperator */]; });
__webpack_require__.d(__webpack_exports__, "dispatch", function() { return /* reexport */ dispatch; });
__webpack_require__.d(__webpack_exports__, "SubscribeOnObservable", function() { return /* reexport */ SubscribeOnObservable["a" /* SubscribeOnObservable */]; });
__webpack_require__.d(__webpack_exports__, "Timestamp", function() { return /* reexport */ timestamp["a" /* Timestamp */]; });
__webpack_require__.d(__webpack_exports__, "TimeInterval", function() { return /* reexport */ timeInterval["a" /* TimeInterval */]; });
__webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return /* reexport */ groupBy["a" /* GroupedObservable */]; });
__webpack_require__.d(__webpack_exports__, "defaultThrottleConfig", function() { return /* reexport */ throttle["a" /* defaultThrottleConfig */]; });
__webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return /* reexport */ rxSubscriber["a" /* rxSubscriber */]; });
__webpack_require__.d(__webpack_exports__, "iterator", function() { return /* reexport */ iterator["a" /* iterator */]; });
__webpack_require__.d(__webpack_exports__, "observable", function() { return /* reexport */ observable["a" /* observable */]; });
__webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return /* reexport */ ArgumentOutOfRangeError["a" /* ArgumentOutOfRangeError */]; });
__webpack_require__.d(__webpack_exports__, "EmptyError", function() { return /* reexport */ EmptyError["a" /* EmptyError */]; });
__webpack_require__.d(__webpack_exports__, "Immediate", function() { return /* reexport */ Immediate["a" /* Immediate */]; });
__webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return /* reexport */ ObjectUnsubscribedError["a" /* ObjectUnsubscribedError */]; });
__webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return /* reexport */ TimeoutError["a" /* TimeoutError */]; });
__webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return /* reexport */ UnsubscriptionError["a" /* UnsubscriptionError */]; });
__webpack_require__.d(__webpack_exports__, "applyMixins", function() { return /* reexport */ applyMixins; });
__webpack_require__.d(__webpack_exports__, "errorObject", function() { return /* reexport */ errorObject; });
__webpack_require__.d(__webpack_exports__, "hostReportError", function() { return /* reexport */ hostReportError["a" /* hostReportError */]; });
__webpack_require__.d(__webpack_exports__, "identity", function() { return /* reexport */ identity["a" /* identity */]; });
__webpack_require__.d(__webpack_exports__, "isArray", function() { return /* reexport */ isArray["a" /* isArray */]; });
__webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return /* reexport */ isArrayLike["a" /* isArrayLike */]; });
__webpack_require__.d(__webpack_exports__, "isDate", function() { return /* reexport */ isDate["a" /* isDate */]; });
__webpack_require__.d(__webpack_exports__, "isFunction", function() { return /* reexport */ isFunction["a" /* isFunction */]; });
__webpack_require__.d(__webpack_exports__, "isIterable", function() { return /* reexport */ isIterable["a" /* isIterable */]; });
__webpack_require__.d(__webpack_exports__, "isNumeric", function() { return /* reexport */ isNumeric["a" /* isNumeric */]; });
__webpack_require__.d(__webpack_exports__, "isObject", function() { return /* reexport */ isObject["a" /* isObject */]; });
__webpack_require__.d(__webpack_exports__, "isObservable", function() { return /* reexport */ isInteropObservable["a" /* isInteropObservable */]; });
__webpack_require__.d(__webpack_exports__, "isPromise", function() { return /* reexport */ isPromise["a" /* isPromise */]; });
__webpack_require__.d(__webpack_exports__, "isScheduler", function() { return /* reexport */ isScheduler["a" /* isScheduler */]; });
__webpack_require__.d(__webpack_exports__, "noop", function() { return /* reexport */ noop["a" /* noop */]; });
__webpack_require__.d(__webpack_exports__, "not", function() { return /* reexport */ not["a" /* not */]; });
__webpack_require__.d(__webpack_exports__, "pipe", function() { return /* reexport */ pipe["a" /* pipe */]; });
__webpack_require__.d(__webpack_exports__, "root", function() { return /* reexport */ root["a" /* root */]; });
__webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return /* reexport */ subscribeTo["a" /* subscribeTo */]; });
__webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return /* reexport */ subscribeToArray["a" /* subscribeToArray */]; });
__webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return /* reexport */ subscribeToIterable["a" /* subscribeToIterable */]; });
__webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return /* reexport */ subscribeToObservable["a" /* subscribeToObservable */]; });
__webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return /* reexport */ subscribeToPromise["a" /* subscribeToPromise */]; });
__webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return /* reexport */ subscribeToResult["a" /* subscribeToResult */]; });
__webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return /* reexport */ toSubscriber["a" /* toSubscriber */]; });
__webpack_require__.d(__webpack_exports__, "tryCatch", function() { return /* reexport */ tryCatch; });

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/config.js
var internal_config = __webpack_require__(16);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/InnerSubscriber.js
var InnerSubscriber = __webpack_require__(102);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/OuterSubscriber.js
var OuterSubscriber = __webpack_require__(14);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Scheduler.js
var Scheduler = __webpack_require__(77);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subject.js
var Subject = __webpack_require__(6);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/SubjectSubscription.js
var SubjectSubscription = __webpack_require__(60);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscriber.js
var Subscriber = __webpack_require__(1);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Observable.js + 1 modules
var Observable = __webpack_require__(3);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js
var subscribeToPromise = __webpack_require__(56);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js
var schedulePromise = __webpack_require__(109);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/fromPromise.js
/** PURE_IMPORTS_START _Observable,_util_subscribeToPromise,_scheduled_schedulePromise PURE_IMPORTS_END */



function fromPromise(input, scheduler) {
    if (!scheduler) {
        return new Observable["a" /* Observable */](Object(subscribeToPromise["a" /* subscribeToPromise */])(input));
    }
    else {
        return Object(schedulePromise["a" /* schedulePromise */])(input, scheduler);
    }
}
//# sourceMappingURL=fromPromise.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js
var subscribeToIterable = __webpack_require__(57);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js
var scheduleIterable = __webpack_require__(110);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/fromIterable.js
/** PURE_IMPORTS_START _Observable,_util_subscribeToIterable,_scheduled_scheduleIterable PURE_IMPORTS_END */



function fromIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    if (!scheduler) {
        return new Observable["a" /* Observable */](Object(subscribeToIterable["a" /* subscribeToIterable */])(input));
    }
    else {
        return Object(scheduleIterable["a" /* scheduleIterable */])(input, scheduler);
    }
}
//# sourceMappingURL=fromIterable.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/root.js
var root = __webpack_require__(17);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/map.js
var map = __webpack_require__(15);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/dom/AjaxObservable.js
/** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */





function getCORSRequest() {
    if (root["a" /* root */].XMLHttpRequest) {
        return new root["a" /* root */].XMLHttpRequest();
    }
    else if (!!root["a" /* root */].XDomainRequest) {
        return new root["a" /* root */].XDomainRequest();
    }
    else {
        throw new Error('CORS is not supported by your browser');
    }
}
function getXMLHttpRequest() {
    if (root["a" /* root */].XMLHttpRequest) {
        return new root["a" /* root */].XMLHttpRequest();
    }
    else {
        var progId = void 0;
        try {
            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
            for (var i = 0; i < 3; i++) {
                try {
                    progId = progIds[i];
                    if (new root["a" /* root */].ActiveXObject(progId)) {
                        break;
                    }
                }
                catch (e) {
                }
            }
            return new root["a" /* root */].ActiveXObject(progId);
        }
        catch (e) {
            throw new Error('XMLHttpRequest is not supported by your browser');
        }
    }
}
function ajaxGet(url, headers) {
    if (headers === void 0) {
        headers = null;
    }
    return new AjaxObservable_AjaxObservable({ method: 'GET', url: url, headers: headers });
}
function ajaxPost(url, body, headers) {
    return new AjaxObservable_AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
}
function ajaxDelete(url, headers) {
    return new AjaxObservable_AjaxObservable({ method: 'DELETE', url: url, headers: headers });
}
function ajaxPut(url, body, headers) {
    return new AjaxObservable_AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
}
function ajaxPatch(url, body, headers) {
    return new AjaxObservable_AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });
}
var mapResponse = /*@__PURE__*/ Object(map["a" /* map */])(function (x, index) { return x.response; });
function ajaxGetJSON(url, headers) {
    return mapResponse(new AjaxObservable_AjaxObservable({
        method: 'GET',
        url: url,
        responseType: 'json',
        headers: headers
    }));
}
var AjaxObservable_AjaxObservable = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AjaxObservable, _super);
    function AjaxObservable(urlOrRequest) {
        var _this = _super.call(this) || this;
        var request = {
            async: true,
            createXHR: function () {
                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();
            },
            crossDomain: true,
            withCredentials: false,
            headers: {},
            method: 'GET',
            responseType: 'json',
            timeout: 0
        };
        if (typeof urlOrRequest === 'string') {
            request.url = urlOrRequest;
        }
        else {
            for (var prop in urlOrRequest) {
                if (urlOrRequest.hasOwnProperty(prop)) {
                    request[prop] = urlOrRequest[prop];
                }
            }
        }
        _this.request = request;
        return _this;
    }
    AjaxObservable.prototype._subscribe = function (subscriber) {
        return new AjaxObservable_AjaxSubscriber(subscriber, this.request);
    };
    AjaxObservable.create = (function () {
        var create = function (urlOrRequest) {
            return new AjaxObservable(urlOrRequest);
        };
        create.get = ajaxGet;
        create.post = ajaxPost;
        create.delete = ajaxDelete;
        create.put = ajaxPut;
        create.patch = ajaxPatch;
        create.getJSON = ajaxGetJSON;
        return create;
    })();
    return AjaxObservable;
}(Observable["a" /* Observable */]));

var AjaxObservable_AjaxSubscriber = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](AjaxSubscriber, _super);
    function AjaxSubscriber(destination, request) {
        var _this = _super.call(this, destination) || this;
        _this.request = request;
        _this.done = false;
        var headers = request.headers = request.headers || {};
        if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
        }
        var contentTypeHeader = _this.getHeader(headers, 'Content-Type');
        if (!contentTypeHeader && !(root["a" /* root */].FormData && request.body instanceof root["a" /* root */].FormData) && typeof request.body !== 'undefined') {
            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
        }
        request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));
        _this.send();
        return _this;
    }
    AjaxSubscriber.prototype.next = function (e) {
        this.done = true;
        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
        var result;
        try {
            result = new AjaxResponse(e, xhr, request);
        }
        catch (err) {
            return destination.error(err);
        }
        destination.next(result);
    };
    AjaxSubscriber.prototype.send = function () {
        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
        try {
            var xhr = this.xhr = request.createXHR();
            this.setupEvents(xhr, request);
            if (user) {
                xhr.open(method, url, async, user, password);
            }
            else {
                xhr.open(method, url, async);
            }
            if (async) {
                xhr.timeout = request.timeout;
                xhr.responseType = request.responseType;
            }
            if ('withCredentials' in xhr) {
                xhr.withCredentials = !!request.withCredentials;
            }
            this.setHeaders(xhr, headers);
            if (body) {
                xhr.send(body);
            }
            else {
                xhr.send();
            }
        }
        catch (err) {
            this.error(err);
        }
    };
    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
        if (!body || typeof body === 'string') {
            return body;
        }
        else if (root["a" /* root */].FormData && body instanceof root["a" /* root */].FormData) {
            return body;
        }
        if (contentType) {
            var splitIndex = contentType.indexOf(';');
            if (splitIndex !== -1) {
                contentType = contentType.substring(0, splitIndex);
            }
        }
        switch (contentType) {
            case 'application/x-www-form-urlencoded':
                return Object.keys(body).map(function (key) { return encodeURIComponent(key) + "=" + encodeURIComponent(body[key]); }).join('&');
            case 'application/json':
                return JSON.stringify(body);
            default:
                return body;
        }
    };
    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
        for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
                xhr.setRequestHeader(key, headers[key]);
            }
        }
    };
    AjaxSubscriber.prototype.getHeader = function (headers, headerName) {
        for (var key in headers) {
            if (key.toLowerCase() === headerName.toLowerCase()) {
                return headers[key];
            }
        }
        return undefined;
    };
    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
        var progressSubscriber = request.progressSubscriber;
        function xhrTimeout(e) {
            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (progressSubscriber) {
                progressSubscriber.error(e);
            }
            var error;
            try {
                error = new AjaxTimeoutError(this, request);
            }
            catch (err) {
                error = err;
            }
            subscriber.error(error);
        }
        xhr.ontimeout = xhrTimeout;
        xhrTimeout.request = request;
        xhrTimeout.subscriber = this;
        xhrTimeout.progressSubscriber = progressSubscriber;
        if (xhr.upload && 'withCredentials' in xhr) {
            if (progressSubscriber) {
                var xhrProgress_1;
                xhrProgress_1 = function (e) {
                    var progressSubscriber = xhrProgress_1.progressSubscriber;
                    progressSubscriber.next(e);
                };
                if (root["a" /* root */].XDomainRequest) {
                    xhr.onprogress = xhrProgress_1;
                }
                else {
                    xhr.upload.onprogress = xhrProgress_1;
                }
                xhrProgress_1.progressSubscriber = progressSubscriber;
            }
            var xhrError_1;
            xhrError_1 = function (e) {
                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                var error;
                try {
                    error = new AjaxError('ajax error', this, request);
                }
                catch (err) {
                    error = err;
                }
                subscriber.error(error);
            };
            xhr.onerror = xhrError_1;
            xhrError_1.request = request;
            xhrError_1.subscriber = this;
            xhrError_1.progressSubscriber = progressSubscriber;
        }
        function xhrReadyStateChange(e) {
            return;
        }
        xhr.onreadystatechange = xhrReadyStateChange;
        xhrReadyStateChange.subscriber = this;
        xhrReadyStateChange.progressSubscriber = progressSubscriber;
        xhrReadyStateChange.request = request;
        function xhrLoad(e) {
            var _a = xhrLoad, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (this.readyState === 4) {
                var status_1 = this.status === 1223 ? 204 : this.status;
                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                if (status_1 === 0) {
                    status_1 = response ? 200 : 0;
                }
                if (status_1 < 400) {
                    if (progressSubscriber) {
                        progressSubscriber.complete();
                    }
                    subscriber.next(e);
                    subscriber.complete();
                }
                else {
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    var error = void 0;
                    try {
                        error = new AjaxError('ajax error ' + status_1, this, request);
                    }
                    catch (err) {
                        error = err;
                    }
                    subscriber.error(error);
                }
            }
        }
        xhr.onload = xhrLoad;
        xhrLoad.subscriber = this;
        xhrLoad.progressSubscriber = progressSubscriber;
        xhrLoad.request = request;
    };
    AjaxSubscriber.prototype.unsubscribe = function () {
        var _a = this, done = _a.done, xhr = _a.xhr;
        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
            xhr.abort();
        }
        _super.prototype.unsubscribe.call(this);
    };
    return AjaxSubscriber;
}(Subscriber["a" /* Subscriber */]));

var AjaxResponse = /*@__PURE__*/ (function () {
    function AjaxResponse(originalEvent, xhr, request) {
        this.originalEvent = originalEvent;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
    }
    return AjaxResponse;
}());

var AjaxErrorImpl = /*@__PURE__*/ (function () {
    function AjaxErrorImpl(message, xhr, request) {
        Error.call(this);
        this.message = message;
        this.name = 'AjaxError';
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
        return this;
    }
    AjaxErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return AjaxErrorImpl;
})();
var AjaxError = AjaxErrorImpl;
function parseJson(xhr) {
    if ('response' in xhr) {
        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
    }
    else {
        return JSON.parse(xhr.responseText || 'null');
    }
}
function parseXhrResponse(responseType, xhr) {
    switch (responseType) {
        case 'json':
            return parseJson(xhr);
        case 'xml':
            return xhr.responseXML;
        case 'text':
        default:
            return ('response' in xhr) ? xhr.response : xhr.responseText;
    }
}
function AjaxTimeoutErrorImpl(xhr, request) {
    AjaxError.call(this, 'ajax timeout', xhr, request);
    this.name = 'AjaxTimeoutError';
    return this;
}
var AjaxTimeoutError = AjaxTimeoutErrorImpl;
//# sourceMappingURL=AjaxObservable.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/dom/ajax.js
/** PURE_IMPORTS_START _AjaxObservable PURE_IMPORTS_END */

var ajax = /*@__PURE__*/ (function () { return AjaxObservable_AjaxObservable.create; })();
//# sourceMappingURL=ajax.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/Subscription.js
var Subscription = __webpack_require__(4);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/ReplaySubject.js + 3 modules
var ReplaySubject = __webpack_require__(36);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/dom/WebSocketSubject.js
/** PURE_IMPORTS_START tslib,_.._Subject,_.._Subscriber,_.._Observable,_.._Subscription,_.._ReplaySubject PURE_IMPORTS_END */






var DEFAULT_WEBSOCKET_CONFIG = {
    url: '',
    deserializer: function (e) { return JSON.parse(e.data); },
    serializer: function (value) { return JSON.stringify(value); },
};
var WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';
var WebSocketSubject_WebSocketSubject = /*@__PURE__*/ (function (_super) {
    tslib_es6["b" /* __extends */](WebSocketSubject, _super);
    function WebSocketSubject(urlConfigOrSource, destination) {
        var _this = _super.call(this) || this;
        if (urlConfigOrSource instanceof Observable["a" /* Observable */]) {
            _this.destination = destination;
            _this.source = urlConfigOrSource;
        }
        else {
            var config = _this._config = tslib_es6["a" /* __assign */]({}, DEFAULT_WEBSOCKET_CONFIG);
            _this._output = new Subject["b" /* Subject */]();
            if (typeof urlConfigOrSource === 'string') {
                config.url = urlConfigOrSource;
            }
            else {
                for (var key in urlConfigOrSource) {
                    if (urlConfigOrSource.hasOwnProperty(key)) {
                        config[key] = urlConfigOrSource[key];
                    }
                }
            }
            if (!config.WebSocketCtor && WebSocket) {
                config.WebSocketCtor = WebSocket;
            }
            else if (!config.WebSocketCtor) {
                throw new Error('no WebSocket constructor can be found');
            }
            _this.destination = new ReplaySubject["a" /* ReplaySubject */]();
        }
        return _this;
    }
    WebSocketSubject.prototype.lift = function (operator) {
        var sock = new WebSocketSubject(this._config, this.destination);
        sock.operator = operator;
        sock.source = this;
        return sock;
    };
    WebSocketSubject.prototype._resetState = function () {
        this._socket = null;
        if (!this.source) {
            this.destination = new ReplaySubject["a" /* ReplaySubject */]();
        }
        this._output = new Subject["b" /* Subject */]();
    };
    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
        var self = this;
        return new Observable["a" /* Observable */](function (observer) {
            try {
                self.next(subMsg());
            }
            catch (err) {
                observer.error(err);
            }
            var subscription = self.subscribe(function (x) {
                try {
                    if (messageFilter(x)) {
                        observer.next(x);
                    }
                }
                catch (err) {
                    observer.error(err);
                }
            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
            return function () {
                try {
                    self.next(unsubMsg());
                }
                catch (err) {
                    observer.error(err);
                }
                subscription.unsubscribe();
            };
        });
    };
    WebSocketSubject.prototype._connectSocket = function () {
        var _this = this;
        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;
        var observer = this._output;
        var socket = null;
        try {
            socket = protocol ?
                new WebSocketCtor(url, protocol) :
                new WebSocketCtor(url);
            this._socket = socket;
            if (binaryType) {
                this._socket.binaryType = binaryType;
            }
        }
        catch (e) {
            observer.error(e);
            return;
        }
        var subscription = new Subscription["a" /* Subscription */](function () {
            _this._socket = null;
            if (socket && socket.readyState === 1) {
                socket.close();
            }
        });
        socket.onopen = function (e) {
            var _socket = _this._socket;
            if (!_socket) {
                socket.close();
                _this._resetState();
                return;
            }
            var openObserver = _this._config.openObserver;
            if (openObserver) {
                openObserver.next(e);
            }
            var queue = _this.destination;
            _this.destination = Subscriber["a" /* Subscriber */].create(function (x) {
                if (socket.readyState === 1) {
                    try {
                        var serializer = _this._config.serializer;
                        socket.send(serializer(x));
                    }
                    catch (e) {
                        _this.destination.error(e);
                    }
                }
            }, function (e) {
                var closingObserver = _this._config.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                if (e && e.code) {
                    socket.close(e.code, e.reason);
                }
                else {
                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));
                }
                _this._resetState();
            }, function () {
                var closingObserver = _this._config.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                socket.close();
                _this._resetState();
            });
            if (queue && queue instanceof ReplaySubject["a" /* ReplaySubject */]) {
                subscription.add(queue.subscribe(_this.destination));
            }
        };
        socket.onerror = function (e) {
            _this._resetState();
            observer.error(e);
        };
        socket.onclose = function (e) {
            _this._resetState();
            var closeObserver = _this._config.closeObserver;
            if (closeObserver) {
                closeObserver.next(e);
            }
            if (e.wasClean) {
                observer.complete();
            }
            else {
                observer.error(e);
            }
        };
        socket.onmessage = function (e) {
            try {
                var deserializer = _this._config.deserializer;
                observer.next(deserializer(e));
            }
            catch (err) {
                observer.error(err);
            }
        };
    };
    WebSocketSubject.prototype._subscribe = function (subscriber) {
        var _this = this;
        var source = this.source;
        if (source) {
            return source.subscribe(subscriber);
        }
        if (!this._socket) {
            this._connectSocket();
        }
        this._output.subscribe(subscriber);
        subscriber.add(function () {
            var _socket = _this._socket;
            if (_this._output.observers.length === 0) {
                if (_socket && _socket.readyState === 1) {
                    _socket.close();
                }
                _this._resetState();
            }
        });
        return subscriber;
    };
    WebSocketSubject.prototype.unsubscribe = function () {
        var _socket = this._socket;
        if (_socket && _socket.readyState === 1) {
            _socket.close();
        }
        this._resetState();
        _super.prototype.unsubscribe.call(this);
    };
    return WebSocketSubject;
}(Subject["a" /* AnonymousSubject */]));

//# sourceMappingURL=WebSocketSubject.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/dom/webSocket.js
/** PURE_IMPORTS_START _WebSocketSubject PURE_IMPORTS_END */

function webSocket(urlConfigOrSource) {
    return new WebSocketSubject_WebSocketSubject(urlConfigOrSource);
}
//# sourceMappingURL=webSocket.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/combineLatest.js
var combineLatest = __webpack_require__(58);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/range.js
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function range(start, count, scheduler) {
    if (start === void 0) {
        start = 0;
    }
    return new Observable["a" /* Observable */](function (subscriber) {
        if (count === undefined) {
            count = start;
            start = 0;
        }
        var index = 0;
        var current = start;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(current++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
        return undefined;
    });
}
function dispatch(state) {
    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
    if (index >= count) {
        subscriber.complete();
        return;
    }
    subscriber.next(start);
    if (subscriber.closed) {
        return;
    }
    state.index = index + 1;
    state.start = start + 1;
    this.schedule(state);
}
//# sourceMappingURL=range.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js + 3 modules
var SubscribeOnObservable = __webpack_require__(108);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timestamp.js
var timestamp = __webpack_require__(84);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/timeInterval.js + 1 modules
var timeInterval = __webpack_require__(99);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/groupBy.js
var groupBy = __webpack_require__(83);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/operators/throttle.js
var throttle = __webpack_require__(51);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js
var rxSubscriber = __webpack_require__(33);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/iterator.js
var iterator = __webpack_require__(18);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/symbol/observable.js
var observable = __webpack_require__(19);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js
var ArgumentOutOfRangeError = __webpack_require__(23);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/EmptyError.js
var EmptyError = __webpack_require__(28);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/Immediate.js
var Immediate = __webpack_require__(78);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js
var ObjectUnsubscribedError = __webpack_require__(22);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/TimeoutError.js
var TimeoutError = __webpack_require__(107);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js
var UnsubscriptionError = __webpack_require__(45);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/applyMixins.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function applyMixins(derivedCtor, baseCtors) {
    for (var i = 0, len = baseCtors.length; i < len; i++) {
        var baseCtor = baseCtors[i];
        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
            var name_1 = propertyKeys[j];
            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
        }
    }
}
//# sourceMappingURL=applyMixins.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/errorObject.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var errorObject = { e: {} };
//# sourceMappingURL=errorObject.js.map

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/hostReportError.js
var hostReportError = __webpack_require__(24);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/identity.js
var identity = __webpack_require__(20);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isArray.js
var isArray = __webpack_require__(11);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isArrayLike.js
var isArrayLike = __webpack_require__(53);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isDate.js
var isDate = __webpack_require__(59);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isFunction.js
var isFunction = __webpack_require__(34);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isIterable.js
var isIterable = __webpack_require__(104);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isNumeric.js
var isNumeric = __webpack_require__(29);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isObject.js
var isObject = __webpack_require__(52);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isInteropObservable.js
var isInteropObservable = __webpack_require__(103);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isPromise.js
var isPromise = __webpack_require__(55);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/isScheduler.js
var isScheduler = __webpack_require__(12);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/noop.js
var noop = __webpack_require__(26);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/not.js
var not = __webpack_require__(106);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/pipe.js
var pipe = __webpack_require__(43);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeTo.js
var subscribeTo = __webpack_require__(35);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToArray.js
var subscribeToArray = __webpack_require__(54);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js
var subscribeToObservable = __webpack_require__(101);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/subscribeToResult.js
var subscribeToResult = __webpack_require__(13);

// EXTERNAL MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/toSubscriber.js
var toSubscriber = __webpack_require__(100);

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal/util/tryCatch.js
/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */

var tryCatchTarget;
function tryCatcher() {
    errorObject.e = undefined;
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject.e = e;
        return errorObject;
    }
    finally {
        tryCatchTarget = undefined;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
//# sourceMappingURL=tryCatch.js.map

// CONCATENATED MODULE: /Users/jonathan/Sites/1111-front/node_modules/rxjs/_esm5/internal-compatibility/index.js
/** PURE_IMPORTS_START  PURE_IMPORTS_END */























































//# sourceMappingURL=index.js.map


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IlandBrowserAuthProvider = void 0;
const tslib_1 = __webpack_require__(5);
const rxjs_1 = __webpack_require__(37);
const abstract_auth_provider_1 = __webpack_require__(112);
const auth_provider_interfaces_1 = __webpack_require__(113);
const Keycloak = __webpack_require__(622);
class IlandBrowserAuthProvider extends abstract_auth_provider_1.IlandAbstractAuthProvider {
    constructor(config) {
        super();
        const kcConfig = {
            clientId: config.clientId,
            resource: config.clientId,
            url: config.url ? config.url : auth_provider_interfaces_1.DEFAULT_AUTH_URL,
            'public-client': true,
            realm: auth_provider_interfaces_1.DEFAULT_REALM
        };
        this._keycloak = Keycloak(kcConfig);
        this._tokenObservable = new rxjs_1.Observable((observable) => {
            this.getToken()
                .then(() => {
                observable.next(this.getTokenSync());
            })
                .catch(reason => {
                observable.error(reason);
            });
            this._keycloak.onAuthRefreshSuccess = () => {
                observable.next(this.getTokenSync());
            };
            this._keycloak.onAuthRefreshError = () => {
                observable.error("[keycloak][onAuthRefreshError] Can't refresh the access token.");
            };
        });
    }
    /**
     * Activate the role testing mode.
     * @param roleUuid
     */
    testRole(roleUuid) {
        this._testingRoleUuid = roleUuid;
    }
    /**
     * End role testing session.
     */
    endRoleTest() {
        this._testingRoleUuid = undefined;
    }
    /**
     * Return the current complete access token
     * @returns {string | undefined} the access token
     */
    getTokenSync() {
        return this.getImpersonateToken(this._keycloak.token);
    }
    /**
     * Get the token. The token will be automatically refreshed when needed.
     * @returns {Promise<string>}
     */
    getToken() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                this._keycloak
                    .updateToken(auth_provider_interfaces_1.DEFAULT_AUTH_TOKEN_MIN_VALIDITY)
                    .success(() => {
                    resolve(this.getTokenSync());
                })
                    .error(() => tslib_1.__awaiter(this, void 0, void 0, function* () {
                    return this._init().then(() => {
                        resolve(this.getTokenSync());
                    }, err => {
                        reject(err);
                    });
                }));
            });
        });
    }
    /**
     * Gets the username of the currently authenticated user.
     * @returns {string} username
     */
    getAuthenticatedUsername() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.getToken().then(() => {
                return this._keycloak.profile.username;
            });
        });
    }
    /**
     * Log out the authenticated user.
     * @returns {Promise<any>} promise that resolves when logout is complete.
     */
    logout(options) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const redirectUri = options && options.redirectUri ? options.redirectUri : null;
            return new Promise((resolve, reject) => {
                this._keycloak
                    .logout({ redirectUri: redirectUri })
                    .success(() => {
                    resolve(null);
                })
                    .error(function () {
                    reject(null);
                });
            });
        });
    }
    /**
     * If we have an impersonated role initialized with the SDK, we need to update all token.
     * @param {string | undefined} token
     * @returns {string | undefined} the complete token.
     */
    getImpersonateToken(token) {
        return this._testingRoleUuid && token ? `impersonate=${this._testingRoleUuid};${token}` : token;
    }
    /**
     * Init keycloak.
     * @protected
     * @returns {Promise<boolean>}
     */
    _init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                this._keycloak
                    .init({
                    onLoad: 'login-required'
                })
                    .success((result) => {
                    this._keycloak
                        .loadUserProfile()
                        .success(() => {
                        resolve(result);
                    })
                        .error(error => {
                        reject(error);
                    });
                })
                    .error((error) => {
                    reject(error);
                });
            });
        });
    }
}
exports.IlandBrowserAuthProvider = IlandBrowserAuthProvider;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiError = void 0;
/**
 * Wrapper for iland API errors.
 */
class ApiError extends Error {
    /**
     * Constructor.
     * @param {ApiErrorJson} _json error JSON from the API
     */
    constructor(_json) {
        super(_json.detail_message ? _json.detail_message : _json.message);
        this._json = _json;
        Object.setPrototypeOf(this, ApiError.prototype);
    }
    /**
     * Gets the error message.
     * @returns {string}
     */
    getMessage() {
        return this._json.message;
    }
    /**
     * Gets the error detail message.
     * @returns {string|any} detailed message or null if none exists
     */
    getDetailMessage() {
        return this._json.detail_message || null;
    }
    /**
     * Gets the error type.
     * @returns {ApiErrorType} the type of API error
     */
    getType() {
        return this._json.type;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {ApiErrorJson} the API Error JSON object
     */
    getJson() {
        return Object.assign({}, this._json);
    }
}
exports.ApiError = ApiError;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ContinuousSchedule = void 0;
/**
 * Continuous Schedule.
 */
/* istanbul ignore next: autogenerated */
class ContinuousSchedule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup interval in minutes.
     * @returns {number}
     */
    get backupIntervalMins() {
        return this._json.backup_interval_mins;
    }
    /**
     * Get the json representation of this class.
     * @returns {ContinuousScheduleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ContinuousSchedule = ContinuousSchedule;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DailySchedule = void 0;
/**
 * Daily Schedule.
 */
/* istanbul ignore next: autogenerated */
class DailySchedule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get days.
     * @returns {Array<Day>}
     */
    get days() {
        return this._json.days;
    }
    /**
     * Get the json representation of this class.
     * @returns {DailyScheduleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DailySchedule = DailySchedule;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MonthlySchedule = void 0;
/**
 * Monthly Schedule.
 */
/* istanbul ignore next: autogenerated */
class MonthlySchedule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get day.
     * @returns {Day}
     */
    get day() {
        return this._json.day;
    }
    /**
     * Get day count.
     * @returns {DayCount}
     */
    get dayCount() {
        return this._json.day_count;
    }
    /**
     * Get the json representation of this class.
     * @returns {MonthlyScheduleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MonthlySchedule = MonthlySchedule;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRun = void 0;
const backup_run_stats_1 = __webpack_require__(255);
const source_backup_status_1 = __webpack_require__(256);
/**
 * Backup Run.
 */
/* istanbul ignore next: autogenerated */
class BackupRun {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get error message.
     * @returns {string | null}
     */
    get errorMessage() {
        return this._json.error_message || null;
    }
    /**
     * Get success message.
     * @returns {string | null}
     */
    get successMessage() {
        return this._json.success_message || null;
    }
    /**
     * Get metadata deleted.
     * @returns {boolean}
     */
    get metadataDeleted() {
        return this._json.metadata_deleted;
    }
    /**
     * Get quiesced.
     * @returns {boolean}
     */
    get quiesced() {
        return this._json.quiesced;
    }
    /**
     * Get run type.
     * @returns {RunType}
     */
    get runType() {
        return this._json.run_type;
    }
    /**
     * Get sla violated.
     * @returns {boolean | null}
     */
    get slaViolated() {
        var _a;
        return (_a = this._json.sla_violated) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get snapshots deleted.
     * @returns {boolean}
     */
    get snapshotsDeleted() {
        return this._json.snapshots_deleted;
    }
    /**
     * Get snapshots deleted time.
     * @returns {number | null}
     */
    get snapshotsDeletedTime() {
        var _a;
        return (_a = this._json.snapshots_deleted_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get source backup status.
     * @returns {Array<SourceBackupStatus>}
     */
    get sourceBackupStatus() {
        var _a;
        return (_a = this._json.source_backup_status) === null || _a === void 0 ? void 0 : _a.map(it => new source_backup_status_1.SourceBackupStatus(it));
    }
    /**
     * Get stats.
     * @returns {BackupRunStats}
     */
    get stats() {
        return new backup_run_stats_1.BackupRunStats(this._json.stats);
    }
    /**
     * Get status.
     * @returns {StatusBackupRun}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get warnings.
     * @returns {Array<string>}
     */
    get warnings() {
        return this._json.warnings;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupRunJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupRun = BackupRun;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRunStats = void 0;
/**
 * Backup Run Stats.
 */
/* istanbul ignore next: autogenerated */
class BackupRunStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get admitted time.
     * @returns {number | null}
     */
    get admittedTime() {
        return this._json.admitted_time || null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        return this._json.end_time || null;
    }
    /**
     * Get num canceled tasks.
     * @returns {number}
     */
    get numCanceledTasks() {
        return this._json.num_canceled_tasks;
    }
    /**
     * Get num failed tasks.
     * @returns {number}
     */
    get numFailedTasks() {
        return this._json.num_failed_tasks;
    }
    /**
     * Get num successful tasks.
     * @returns {number}
     */
    get numSuccessfulTasks() {
        return this._json.num_successful_tasks;
    }
    /**
     * Get start time in milliseconds.
     * @returns {number}
     */
    get startTimeMillis() {
        return this._json.start_time_millis;
    }
    /**
     * Get start time usecs.
     * @deprecated
     * @returns {number}
     */
    get startTimeUsecs() {
        return this._json.start_time_usecs;
    }
    /**
     * Get time taken millis.
     * @returns {number | null}
     */
    get timeTakenMillis() {
        var _a;
        return (_a = this._json.time_taken_millis) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get total bytes read from source.
     * @returns {number}
     */
    get totalBytesReadFromSource() {
        return this._json.total_bytes_read_from_source;
    }
    /**
     * Get total bytes to read from source.
     * @returns {number}
     */
    get totalBytesToReadFromSource() {
        return this._json.total_bytes_to_read_from_source;
    }
    /**
     * Get total logical backup size bytes.
     * @returns {number}
     */
    get totalLogicalBackupSizeBytes() {
        return this._json.total_logical_backup_size_bytes;
    }
    /**
     * Get total physical backup size bytes.
     * @returns {number}
     */
    get totalPhysicalBackupSizeBytes() {
        return this._json.total_physical_backup_size_bytes;
    }
    /**
     * Get total source size bytes.
     * @returns {number}
     */
    get totalSourceSizeBytes() {
        return this._json.total_source_size_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupRunStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupRunStats = BackupRunStats;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SourceBackupStatus = void 0;
const protection_source_1 = __webpack_require__(47);
const backup_source_stats_1 = __webpack_require__(257);
/**
 * Source Backup Status.
 */
/* istanbul ignore next: autogenerated */
class SourceBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get error.
     * Specifies if an error occurred (if any) while running this task.
     * This field is populated when the status is equal to 'FAILURE'.
     * @returns {string | null}
     */
    get error() {
        return this._json.error || null;
    }
    /**
     * Get is full backup.
     * @returns {boolean}
     */
    get isFullBackup() {
        return this._json.is_full_backup;
    }
    /**
     * Get num restarts.
     * @returns {number}
     */
    get numRestarts() {
        return this._json.num_restarts;
    }
    /**
     * Get quiesced.
     * @returns {boolean}
     */
    get quiesced() {
        return this._json.quiesced;
    }
    /**
     * Get sla violated.
     * @returns {boolean}
     */
    get slaViolated() {
        return this._json.sla_violated;
    }
    /**
     * Get source.
     * @returns {ProtectionSource}
     */
    get source() {
        return new protection_source_1.ProtectionSource(this._json.source);
    }
    /**
     * Get stats.
     * @returns {BackupSourceStats}
     */
    get stats() {
        return new backup_source_stats_1.BackupSourceStats(this._json.stats);
    }
    /**
     * Get status.
     * @returns {StatusSourceBackupStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get warnings.
     * @returns {Array<string>}
     */
    get warnings() {
        return this._json.warnings;
    }
    /**
     * Get the json representation of this class.
     * @returns {SourceBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SourceBackupStatus = SourceBackupStatus;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupSourceStats = void 0;
/**
 * Backup Source Stats.
 */
/* istanbul ignore next: autogenerated */
class BackupSourceStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get admitted time.
     * @returns {number | null}
     */
    get admittedTime() {
        var _a;
        return (_a = this._json.admitted_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        var _a;
        return (_a = this._json.end_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get start time.
     * @returns {number}
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get time taken millis.
     * @returns {number | null}
     */
    get timeTakenMillis() {
        var _a;
        return (_a = this._json.time_taken_millis) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get total bytes read from source.
     * @returns {number}
     */
    get totalBytesReadFromSource() {
        return this._json.total_bytes_read_from_source;
    }
    /**
     * Get total bytes to read from source.
     * @returns {number}
     */
    get totalBytesToReadFromSource() {
        return this._json.total_bytes_to_read_from_source;
    }
    /**
     * Get total logical backup size bytes.
     * @returns {number}
     */
    get totalLogicalBackupSizeBytes() {
        return this._json.total_logical_backup_size_bytes;
    }
    /**
     * Get total physical backup size bytes.
     * @returns {number}
     */
    get totalPhysicalBackupSizeBytes() {
        return this._json.total_physical_backup_size_bytes;
    }
    /**
     * Get total source size bytes.
     * @returns {number}
     */
    get totalSourceSizeBytes() {
        return this._json.total_source_size_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupSourceStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupSourceStats = BackupSourceStats;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyRun = void 0;
const copy_run_stats_1 = __webpack_require__(125);
const copy_snapshot_task_status_1 = __webpack_require__(259);
const snapshot_target_settings_1 = __webpack_require__(260);
/**
 * Copy Run.
 */
/* istanbul ignore next: autogenerated */
class CopyRun {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get copy snapshot tasks.
     * @returns {Array<CopySnapshotTaskStatus>}
     */
    get copySnapshotTasks() {
        var _a;
        return (_a = this._json.copy_snapshot_tasks) === null || _a === void 0 ? void 0 : _a.map(it => new copy_snapshot_task_status_1.CopySnapshotTaskStatus(it));
    }
    /**
     * Get error.
     * @returns {string | null}
     */
    get error() {
        return this._json.error || null;
    }
    /**
     * Get expiry time.
     * @returns {number | null}
     */
    get expiryTime() {
        var _a;
        return (_a = this._json.expiry_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get run start time.
     * @returns {number}
     */
    get runStartTime() {
        return this._json.run_start_time;
    }
    /**
     * Get stats.
     * @returns {CopyRunStats | null}
     */
    get stats() {
        return this._json.stats ? new copy_run_stats_1.CopyRunStats(this._json.stats) : null;
    }
    /**
     * Get status.
     * @returns {StatusCopyRun}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get target.
     * @returns {SnapshotTargetSettings}
     */
    get target() {
        return new snapshot_target_settings_1.SnapshotTargetSettings(this._json.target);
    }
    /**
     * Get the json representation of this class.
     * @returns {CopyRunJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CopyRun = CopyRun;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CopySnapshotTaskStatus = void 0;
const protection_source_1 = __webpack_require__(47);
const copy_run_stats_1 = __webpack_require__(125);
/**
 * Copy Snapshot Task Status.
 */
/* istanbul ignore next: autogenerated */
class CopySnapshotTaskStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get error.
     * @returns {string | null}
     */
    get error() {
        return this._json.error || null;
    }
    /**
     * Get source.
     * @returns {ProtectionSource}
     */
    get source() {
        return new protection_source_1.ProtectionSource(this._json.source);
    }
    /**
     * Get stats.
     * @returns {CopyRunStats}
     */
    get stats() {
        return new copy_run_stats_1.CopyRunStats(this._json.stats);
    }
    /**
     * Get status.
     * @returns {StatusCopySnapshotTaskStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get task end time.
     * @returns {number | null}
     */
    get taskEndTime() {
        var _a;
        return (_a = this._json.task_end_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get task start time.
     * @returns {number}
     */
    get taskStartTime() {
        return this._json.task_start_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {CopySnapshotTaskStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CopySnapshotTaskStatus = CopySnapshotTaskStatus;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotTargetSettings = void 0;
const archival_external_target_1 = __webpack_require__(122);
const replication_target_settings_1 = __webpack_require__(124);
/**
 * Snapshot Target Settings.
 */
/* istanbul ignore next: autogenerated */
class SnapshotTargetSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get archival target.
     * @returns {ArchivalExternalTarget | null}
     */
    get archivalTarget() {
        return this._json.archival_target ? new archival_external_target_1.ArchivalExternalTarget(this._json.archival_target) : null;
    }
    /**
     * Get replication target.
     * @returns {ReplicationTargetSettings | null}
     */
    get replicationTarget() {
        return this._json.replication_target ? new replication_target_settings_1.ReplicationTargetSettings(this._json.replication_target) : null;
    }
    /**
     * Get type.
     * @returns {SnapshotTargetType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotTargetSettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotTargetSettings = SnapshotTargetSettings;


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupStorageSampleSeries = void 0;
const sample_1 = __webpack_require__(127);
/**
 * Backup group storage sample series.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupStorageSampleSeries {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get metric.
     * @returns {BackupGroupStorageMetric}
     */
    get metric() {
        return this._json.metric;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get companyId.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vDC uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get backup group uid.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get samples.
     * @returns {Array<Sample>}
     */
    get samples() {
        return this._json.samples.map(it => new sample_1.Sample(it));
    }
    /**
     * Get backup cluster uid.
     * @returns {string}
     */
    get backupClusterUid() {
        return this._json.backup_cluster_uid;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupStorageSampleSeriesJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupStorageSampleSeries = BackupGroupStorageSampleSeries;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupSourceRef = void 0;
/**
 * Backup Group Source Ref.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupSourceRef {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get entity type.
     * @returns {VCloudProtectionSourceType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupSourceRef}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupSourceRef = BackupGroupSourceRef;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IaasBackupBill = void 0;
/**
 * IaaS backup bill.
 */
/* istanbul ignore next: autogenerated */
class IaasBackupBill {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get month.
     * The billing month, in range 1-12.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get burst usage byte hours.
     * The number of byte-hours that have been consumed as burst.
     * @returns {number}
     */
    get burstUsageByteHours() {
        return this._json.burst_usage_byte_hours;
    }
    /**
     * Get burst cost.
     * The total cost of burst usage.
     * @returns {number}
     */
    get burstCost() {
        return this._json.burst_cost;
    }
    /**
     * Get reserved cost.
     * @returns {number}
     */
    get reservedCost() {
        return this._json.reserved_cost;
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get the total number of byte-hours that have been consumed by local backups
     * @returns {number}
     */
    get localUsageByteHours() {
        return this._json.local_usage_byte_hours;
    }
    /**
     * Get the total number of byte-hours that have been consumed by remote backups
     * @returns {number}
     */
    get remoteUsageByteHours() {
        return this._json.remote_usage_byte_hours;
    }
    /**
     * Get the total number of byte-hours that have been consumed
     * @returns {number}
     */
    get totalUsageByteHours() {
        return this._json.total_usage_byte_hours;
    }
    /**
     * Get the json representation of this class.
     * @returns {IaasBackupBillJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IaasBackupBill = IaasBackupBill;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IaasBackupSubscription = void 0;
/**
 * Iaas backup subscription.
 */
/* istanbul ignore next: autogenerated */
class IaasBackupSubscription {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the json representation of this class.
     * @returns {IaasBackupSubscriptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get activation time.
     * @returns {number}
     */
    get activationTime() {
        return this._json.activation_time;
    }
    /**
     * Get deactivation time.
     * @returns {number | null}
     */
    get deactivationTime() {
        return this._json.deactivation_time || null;
    }
    /**
     * Get reserved amount gb.
     * @returns {number}
     */
    get reservedAmountGb() {
        return this._json.reserved_amount_gb;
    }
    /**
     * Get reserved cost.
     * @returns {number}
     */
    get reservedCost() {
        return this._json.reserved_cost;
    }
    /**
     * Get burst cost per GB-hour.
     * @returns {number}
     */
    get burstCostPerGbHour() {
        return this._json.burst_cost_per_gb_hour;
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IaasBackupSubscription = IaasBackupSubscription;


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcBackupStorageSampleSeries = void 0;
const sample_1 = __webpack_require__(127);
/**
 * vDC backup storage sample series.
 */
/* istanbul ignore next: autogenerated */
class VdcBackupStorageSampleSeries {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get metric.
     * @returns {VdcBackupStorageMetric}
     */
    get metric() {
        return this._json.metric;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get vDC uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get samples.
     * @returns {Array<Sample>}
     */
    get samples() {
        return this._json.samples.map(it => new sample_1.Sample(it));
    }
    /**
     * Get backup cluster id.
     * @returns {string}
     */
    get backupClusterId() {
        return this._json.backup_cluster_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcBackupStorageSampleSeriesJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcBackupStorageSampleSeries = VdcBackupStorageSampleSeries;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalVdcBackupClusterInfo = void 0;
/**
 * Local vDC Backup Cluster Info.
 */
/* istanbul ignore next: autogenerated */
class LocalVdcBackupClusterInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {LocalVdcBackupClusterInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LocalVdcBackupClusterInfo = LocalVdcBackupClusterInfo;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteVdcBackupClusterInfo = void 0;
/**
 * Remote vDC Backup Cluster Info.
 */
/* istanbul ignore next: autogenerated */
class RemoteVdcBackupClusterInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uid.
     * @returns {string}
     */
    get uid() {
        return this._json.uid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get status.
     * @returns {RemoteBackupClusterStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get the json representation of this class.
     * @returns {RemoteVdcBackupClusterInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RemoteVdcBackupClusterInfo = RemoteVdcBackupClusterInfo;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcBackupClusterInfo = void 0;
const local_vdc_backup_cluster_info_1 = __webpack_require__(266);
const remote_vdc_backup_cluster_info_1 = __webpack_require__(267);
/**
 * vDC Backup Cluster Info.
 */
/* istanbul ignore next: autogenerated */
class VdcBackupClusterInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vDC uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get local cluster.
     * @returns {LocalVdcBackupClusterInfo}
     */
    get localCluster() {
        return new local_vdc_backup_cluster_info_1.LocalVdcBackupClusterInfo(this._json.local_cluster);
    }
    /**
     * Get remote clusters.
     * @returns {Array<RemoteVdcBackupClusterInfo>}
     */
    get remoteClusters() {
        return this._json.remote_clusters.map(it => new remote_vdc_backup_cluster_info_1.RemoteVdcBackupClusterInfo(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcBackupClusterInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcBackupClusterInfo = VdcBackupClusterInfo;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgBackupSummaryStats = void 0;
const backup_summary_stats_1 = __webpack_require__(68);
const vdc_backup_summary_stats_1 = __webpack_require__(128);
/**
 * Org Backup Summary Stats.
 */
/* istanbul ignore next: autogenerated */
class OrgBackupSummaryStats {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get stats.
     * @returns {BackupSummaryStats}
     */
    get stats() {
        return new backup_summary_stats_1.BackupSummaryStats(this._json.stats);
    }
    /**
     * Get vDC stats.
     * @returns {Array<VdcBackupSummaryStats>}
     */
    get vdcStats() {
        var _a;
        return (_a = this._json.vdc_stats) === null || _a === void 0 ? void 0 : _a.map(it => new vdc_backup_summary_stats_1.VdcBackupSummaryStats(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgBackupSummaryStatsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgBackupSummaryStats = OrgBackupSummaryStats;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyLocationBackupStatus = void 0;
const org_backup_status_1 = __webpack_require__(129);
/**
 * Company Location Backup Status.
 */
/* istanbul ignore next: autogenerated */
class CompanyLocationBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get child org statuses.
     * @returns {Array<OrgBackupStatus>}
     */
    get childOrgStatuses() {
        return this._json.child_org_statuses.map(it => new org_backup_status_1.OrgBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {CompanyLocationBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CompanyLocationBackupStatus = CompanyLocationBackupStatus;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappBackupStatusDetail = void 0;
const vapp_backup_status_1 = __webpack_require__(131);
/**
 * vApp backup status detail.
 */
/* istanbul ignore next: autogenerated */
class VappBackupStatusDetail extends vapp_backup_status_1.VappBackupStatus {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get has advanced backups.
     * Whether the vApp has the advanced backups offering.
     * @returns {boolean}
     */
    get hasAdvancedBackups() {
        return this._json.has_advanced_backups;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappBackupStatusDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappBackupStatusDetail = VappBackupStatusDetail;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmBackupStatusDetail = void 0;
const vm_backup_status_1 = __webpack_require__(132);
/**
 * VM backup status detail.
 */
/* istanbul ignore next: autogenerated */
class VmBackupStatusDetail extends vm_backup_status_1.VmBackupStatus {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get has advanced backups.
     * Whether the vApp has the advanced backups offering.
     * @returns {boolean}
     */
    get hasAdvancedBackups() {
        return this._json.has_advanced_backups;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmBackupStatusDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmBackupStatusDetail = VmBackupStatusDetail;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRestoreTaskDetail = void 0;
const backup_restore_task_1 = __webpack_require__(81);
/**
 * Backup restore task detail.
 */
/* istanbul ignore next: autogenerated */
class BackupRestoreTaskDetail extends backup_restore_task_1.BackupRestoreTask {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get the UUID of the associated iland task.
     * @returns {string | null}
     */
    get taskUuid() {
        return this._json.task_uuid ? this._json.task_uuid : null;
    }
    /**
     * Get the full name of the user who initiated the restore operation.
     * @returns {string | null}
     */
    get userFullName() {
        return this._json.user_full_name ? this._json.user_full_name : null;
    }
    /**
     * Get the username of the user who initiated the restore operation.
     * @returns {string | null}
     */
    get username() {
        return this._json.username ? this._json.username : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupRestoreTaskDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupRestoreTaskDetail = BackupRestoreTaskDetail;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTaskObject = void 0;
const protection_source_1 = __webpack_require__(47);
/**
 * Restore task object.
 */
/* istanbul ignore next: autogenerated */
class RestoreTaskObject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup run uid.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get source.
     * @returns {ProtectionSource}
     */
    get source() {
        return new protection_source_1.ProtectionSource(this._json.source);
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreTaskObjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreTaskObject = RestoreTaskObject;


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTaskObjectState = void 0;
const protection_source_1 = __webpack_require__(47);
/**
 * Restore task object state.
 */
/* istanbul ignore next: autogenerated */
class RestoreTaskObjectState {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get status.
     * @returns {RestoreTaskObjectStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get error.
     * @returns {string | null}
     */
    get error() {
        return this._json.error || null;
    }
    /**
     * Get source.
     * @returns {ProtectionSource}
     */
    get source() {
        return new protection_source_1.ProtectionSource(this._json.source);
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreTaskObjectStateJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreTaskObjectState = RestoreTaskObjectState;


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmRecoveryOptions = void 0;
/* istanbul ignore next: autogenerated */
class VmRecoveryOptions {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get whether the recovered VM is to be powered on.
     */
    get poweredOn() {
        return this._json.powered_on;
    }
    /**
     * Get the suffix that will be appended to the name of the recovered VM.
     */
    get suffix() {
        return this._json.suffix || null;
    }
    /**
     * Get the prefix that will be appended to the name of the recovered VM.
     */
    get prefix() {
        return this._json.prefix || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmRecoveryOptionsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmRecoveryOptions = VmRecoveryOptions;


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceNode = void 0;
const device_tree_details_1 = __webpack_require__(134);
const file_partition_block_1 = __webpack_require__(278);
/**
 * Device node.
 */
/* istanbul ignore next: autogenerated */
class DeviceNode {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get intermediate node.
     * @returns {DeviceTreeDetails}
     */
    get intermediateNode() {
        return new device_tree_details_1.DeviceTreeDetails(this._json.intermediate_node);
    }
    /**
     * Get leaf node.
     * @returns {FilePartitionBlock}
     */
    get leafNode() {
        return new file_partition_block_1.FilePartitionBlock(this._json.leaf_node);
    }
    /**
     * Get the json representation of this class.
     * @returns {DeviceNodeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DeviceNode = DeviceNode;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FilePartitionBlock = void 0;
/**
 * File partition block.
 */
/* istanbul ignore next: autogenerated */
class FilePartitionBlock {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number.
     * Specifies a unique number of the partition within the linear disk file.
     * @returns {number}
     */
    get number() {
        return this._json.number;
    }
    /**
     * Get disk file name.
     * Specifies the disk file name where the logical partition is.
     * @returns {string}
     */
    get diskFileName() {
        return this._json.disk_file_name;
    }
    /**
     * Get offset bytes.
     * Specifies the offset of the block (in bytes) from the beginning of the
     * containing object such as a physical disk or a virtual disk file.
     * @returns {number}
     */
    get offsetBytes() {
        return this._json.offset_bytes;
    }
    /**
     * Get length bytes.
     * Specifies the length of the block in bytes.
     * @returns {number}
     */
    get lengthBytes() {
        return this._json.length_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {FilePartitionBlockJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FilePartitionBlock = FilePartitionBlock;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectoryListingEntry = void 0;
const f_stat_info_1 = __webpack_require__(280);
/**
 * Directory listing entry.
 */
/* istanbul ignore next: autogenerated */
class DirectoryListingEntry {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get f stat info.
     * @returns {FStatInfo | null}
     */
    get fStatInfo() {
        return this._json.f_stat_info ? new f_stat_info_1.FStatInfo(this._json.f_stat_info) : null;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get type.
     * @returns {DirEntryType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get full path.
     * @returns {string}
     */
    get fullPath() {
        return this._json.full_path;
    }
    /**
     * Get the json representation of this class.
     * @returns {DirectoryListingEntryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DirectoryListingEntry = DirectoryListingEntry;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FStatInfo = void 0;
/**
 * F Stat Info.
 */
/* istanbul ignore next: autogenerated */
class FStatInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get modified time.
     * @returns {number}
     */
    get modifiedTime() {
        return this._json.modified_time;
    }
    /**
     * Get size.
     * @returns {number}
     */
    get size() {
        return this._json.size;
    }
    /**
     * Get the json representation of this class.
     * @returns {FStatInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FStatInfo = FStatInfo;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectoryListing = void 0;
const directory_listing_entry_1 = __webpack_require__(279);
/**
 * Directory listing.
 */
/* istanbul ignore next: autogenerated */
class DirectoryListing {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<DirectoryListingEntry>}
     */
    get data() {
        return this._json.data.map(it => new directory_listing_entry_1.DirectoryListingEntry(it));
    }
    /**
     * Get pagination cookie.
     * @returns {string}
     */
    get paginationCookie() {
        return this._json.pagination_cookie;
    }
    /**
     * Get the json representation of this class.
     * @returns {DirectoryListingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DirectoryListing = DirectoryListing;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskBlock = void 0;
/**
 * Disk block.
 */
/* istanbul ignore next: autogenerated */
class DiskBlock {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get offset bytes.
     * @returns {number}
     */
    get offsetBytes() {
        return this._json.offset_bytes;
    }
    /**
     * Get length bytes.
     * @returns {number}
     */
    get lengthBytes() {
        return this._json.length_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {DiskBlockJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DiskBlock = DiskBlock;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskPartition = void 0;
/**
 * Disk partition.
 */
/* istanbul ignore next: autogenerated */
class DiskPartition {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number.
     * Specifies a unique number of the partition within the linear disk file.
     * @returns {number}
     */
    get number() {
        return this._json.number;
    }
    /**
     * Get type uuid.
     * Specifies the partition type uuid.
     * If disk is unpartitioned, this field isnot set.
     * If disk is MBR partitioned, this field is set to a partition type.
     * If disk is GPT partitioned, this field is set to a partition type GUID.
     * @returns {string}
     */
    get typeUuid() {
        return this._json.type_uuid;
    }
    /**
     * Get offset bytes.
     * Specifies the offset of the block (in bytes) from the beginning of the
     * containing object such as a physical disk or a virtual disk file.
     * @returns {number}
     */
    get offsetBytes() {
        return this._json.offset_bytes;
    }
    /**
     * Get length bytes.
     * Specifies the length of the block in bytes.
     * @returns {number}
     */
    get lengthBytes() {
        return this._json.length_bytes;
    }
    /**
     * Get uuid.
     * Specifies the partition uuid.
     * If disk is unpartitioned, this field is not set.
     * If disk is MBR partitioned, this field is not set.
     * If disk is GPT partitioned, this field is set to a partition GUID.
     * @returns {string | null}
     */
    get uuid() {
        return this._json.uuid || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {DiskPartitionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DiskPartition = DiskPartition;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Disk = void 0;
const disk_block_1 = __webpack_require__(282);
const disk_partition_1 = __webpack_require__(283);
/**
 * Disk.
 */
/* istanbul ignore next: autogenerated */
class Disk {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vmdk size bytes.
     * Specifies the disk size in bytes.
     * @returns {number}
     */
    get vmdkSizeBytes() {
        return this._json.vmdk_size_bytes;
    }
    /**
     * Get vmdk file name.
     * Specifies the disk file name. This is the VMDK name and not the flat filename.
     * @returns {string}
     */
    get vmdkFileName() {
        return this._json.vmdk_file_name;
    }
    /**
     * Get disk format.
     * Specifies the format of the virtual disk.
     * @returns {DiskFormat}
     */
    get diskFormat() {
        return this._json.disk_format;
    }
    /**
     * Get disk blocks.
     * Array of Disk Blocks.
     * Specifies a set of disk blocks by defining the location and offset of disk blocks in a disk.
     * @returns {Array<DiskBlock>}
     */
    get diskBlocks() {
        return this._json.disk_blocks.map(it => new disk_block_1.DiskBlock(it));
    }
    /**
     * Get sector size bytes.
     * Specifies the sector size of hard disk. It is used for mapping the disk
     * blocks of the disk file into a linear list of sectors.
     * @returns {number}
     */
    get sectorSizeBytes() {
        return this._json.sector_size_bytes;
    }
    /**
     * Get partition table format.
     * Specifies partition table format on a disk.
     * @returns {PartitionTableFormat}
     */
    get partitionTableFormat() {
        return this._json.partition_table_format;
    }
    /**
     * Get disk partitions.
     * Array of Partitions. Specifies information about all the partitions in this disk.
     * @returns {Array<DiskPartition>}
     */
    get diskPartitions() {
        return this._json.disk_partitions.map(it => new disk_partition_1.DiskPartition(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {DiskJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Disk = Disk;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotAttempt = void 0;
/**
 * Snapshot attempt.
 */
/* istanbul ignore next: autogenerated */
class SnapshotAttempt {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup run uid.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get backup group uid.
     * @returns {string}
     */
    get backupGroupUid() {
        return this._json.backup_group_uid;
    }
    /**
     * Get attempt number.
     * @returns {number}
     */
    get attemptNumber() {
        return this._json.attempt_number;
    }
    /**
     * Get backup run start time.
     * @returns {number}
     */
    get backupRunStartTime() {
        return this._json.backup_run_start_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotAttemptJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotAttempt = SnapshotAttempt;


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FilesAndFoldersInfo = void 0;
/**
 * Files and folders info.
 */
/* istanbul ignore next: autogenerated */
class FilesAndFoldersInfo {
    constructor(firstParam, absolutePath) {
        // Parameters constructor
        if (typeof firstParam === 'boolean') {
            this._json = {
                is_directory: firstParam,
                absolute_path: absolutePath
            };
        }
        else if (firstParam instanceof FilesAndFoldersInfo) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get is directory.
     * Specifies if specified object is a directory or not.
     * @returns {boolean}
     */
    get isDirectory() {
        return this._json.is_directory;
    }
    /**
     * Get absolute path.
     * Specifies the absolute path of the specified file or folder.
     * @returns {string}
     */
    get absolutePath() {
        return this._json.absolute_path;
    }
    /**
     * Get the json representation of this class.
     * @returns {FilesAndFoldersInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FilesAndFoldersInfo = FilesAndFoldersInfo;


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LogicalVolume = void 0;
const device_tree_details_1 = __webpack_require__(134);
/**
 * Logical volume.
 */
/* istanbul ignore next: autogenerated */
class LogicalVolume {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get device root node.
     * @returns {DeviceTreeDetails}
     */
    get deviceRootNode() {
        return new device_tree_details_1.DeviceTreeDetails(this._json.device_root_node);
    }
    /**
     * Get group name.
     * @returns {string}
     */
    get groupName() {
        return this._json.group_name;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get group uuid.
     * @returns {string}
     */
    get groupUuid() {
        return this._json.group_uuid;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {LogicalVolumeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LogicalVolume = LogicalVolume;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmSnapshotRef = void 0;
/**
 * VM Snapshot Ref.
 */
/* istanbul ignore next: autogenerated */
class VmSnapshotRef {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get backup run uid.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmSnapshotRefJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmSnapshotRef = VmSnapshotRef;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotVersion = void 0;
/**
 * Snapshot Version.
 */
/* istanbul ignore next: autogenerated */
class SnapshotVersion {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup run uid.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get start time.
     * @returns {number} time in millis
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get delta size bytes.
     * Specifies the size of the data captured from the source object.
     * For a fullbackup (where Change Block Tracking is not utilized) this field is equal tologicalSizeBytes.
     * For an incremental backup (where Change Block Tracking isutilized),
     * this field specifies the size of the data that has changed since the last backup.
     * @returns {number}
     */
    get deltaSizeBytes() {
        return this._json.delta_size_bytes;
    }
    /**
     * Get attempt number.
     * Specifies the number of the attempts made by the VCloudProtectionJob Run to capture a snapshot of the object.
     * For example, if an snapshot is successfully captured after three attempts, this field equals 3.
     * @returns {number}
     */
    get attemptNumber() {
        return this._json.attempt_number;
    }
    /**
     * Get logical size bytes.
     * Specifies the size of the snapshot if the data is fully hydrated or expanded
     * and not reduced by change-block tracking, compression and deduplication.
     * For example if a VMDK of size 100GB is created with thin provisioning and the disk size to store the VMDK is 20GB.
     * The logical size of this object is 100GB and the physical size is 20GB.
     * @returns {number}
     */
    get logicalSizeBytes() {
        return this._json.logical_size_bytes;
    }
    /**
     * Get app consistent.
     * Specifies if an app-consistent snapshot was captured.
     * For example, was the VM was quiesced before the snapshot was captured.
     * @returns {boolean}
     */
    get appConsistent() {
        return this._json.app_consistent;
    }
    /**
     * Get full backup.
     * Specifies if the snapshot is a full backup.
     * For example, all blocks of the VM is captured and Change Block Tracking is not utilized.
     * @returns {boolean}
     */
    get fullBackup() {
        return this._json.full_backup;
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotVersionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotVersion = SnapshotVersion;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskList = void 0;
const task_1 = __webpack_require__(10);
const task_filter_params_1 = __webpack_require__(138);
/**
 * Task List.
 */
/* istanbul ignore next: autogenerated */
class TaskList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {TaskFilterParams}
     */
    get currentPageParameters() {
        return new task_filter_params_1.TaskFilterParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {TaskFilterParams}
     */
    get nextPageParameters() {
        return new task_filter_params_1.TaskFilterParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<TaskJson>}
     */
    get data() {
        return this._json.data.map(it => new task_1.Task(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {TaskListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TaskList = TaskList;


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateConfiguration = void 0;
const eula_section_1 = __webpack_require__(139);
const vapp_template_network_configuration_1 = __webpack_require__(292);
const vm_template_configuration_1 = __webpack_require__(293);
/**
 * Vapp Template Configuration Response.
 */
/* istanbul ignore next: autogenerated */
class VappTemplateConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vms.
     * @returns {Array<VmTemplateConfigurationJson>}
     */
    get vms() {
        return this._json.vms.map(vmTplConfig => new vm_template_configuration_1.VmTemplateConfiguration(vmTplConfig));
    }
    /**
     * Get networks.
     * @returns {Array<VappTemplateNetworkConfiguration>}
     */
    get networks() {
        return this._json.networks.map(tplConfig => new vapp_template_network_configuration_1.VappTemplateNetworkConfiguration(tplConfig));
    }
    /**
     * Get eula sections if any exist
     * @return {Array<EulaSection>}
     */
    get eulaSections() {
        return this._json.eula_sections.map(it => new eula_section_1.EulaSection(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateConfiguration = VappTemplateConfiguration;


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateNetworkConfiguration = void 0;
const network_ip_scope_1 = __webpack_require__(140);
/**
 * vApp Template Network Configuration Response.
 */
/* istanbul ignore next: autogenerated */
class VappTemplateNetworkConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get fence mode.
     * @returns {FenceModeType}
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Get ip scope.
     * @returns {NetworkIpScope}
     */
    get ipScope() {
        return new network_ip_scope_1.NetworkIpScope(this._json.ip_scope);
    }
    /**
     * Get parent network name.
     * @returns {string}
     */
    get parentNetworkName() {
        return this._json.parent_network_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateNetworkConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateNetworkConfiguration = VappTemplateNetworkConfiguration;


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmTemplateConfiguration = void 0;
const eula_section_1 = __webpack_require__(139);
const template_disk_configuration_1 = __webpack_require__(294);
const template_vnic_configuration_1 = __webpack_require__(295);
/**
 * VM Template Configuration Response.
 */
/* istanbul ignore next: autogenerated */
class VmTemplateConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get memory in bytes.
     * @returns {number}
     */
    get memoryInBytes() {
        return this._json.memory_in_bytes;
    }
    /**
     * Get number of cpus.
     * @returns {number}
     */
    get numberOfCpus() {
        return this._json.number_of_cpus;
    }
    /**
     * Get number of cores per socket.
     * @returns {number}
     */
    get numberOfCoresPerSocket() {
        return this._json.number_of_cores_per_socket;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get hardware version.
     * @returns {string}
     */
    get hardwareVersion() {
        return this._json.hardware_version;
    }
    /**
     * Get operating system version.
     * @returns {string}
     */
    get operatingSystemVersion() {
        return this._json.operating_system_version;
    }
    /**
     * Get expose cpu virtualization.
     * @returns {boolean}
     */
    get exposeCpuVirtualization() {
        return this._json.expose_cpu_virtualization;
    }
    /**
     * Get computer name.
     * @returns {string}
     */
    get computerName() {
        return this._json.computer_name;
    }
    /**
     * Get disks.
     * @returns {Array<TemplateDiskConfiguration>}
     */
    get disks() {
        return this._json.disks.map(tplDiskConfig => new template_disk_configuration_1.TemplateDiskConfiguration(tplDiskConfig));
    }
    /**
     * Get vnics.
     * @returns {Array<TemplateVnicConfiguration>}
     */
    get vnics() {
        return this._json.vnics.map(tplVnicConfig => new template_vnic_configuration_1.TemplateVnicConfiguration(tplVnicConfig));
    }
    /**
     * Get eula sections if any exist
     * @return {Array<EulaSection>}
     */
    get eulaSections() {
        return this._json.eula_sections.map(it => new eula_section_1.EulaSection(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VmTemplateConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmTemplateConfiguration = VmTemplateConfiguration;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateDiskConfiguration = void 0;
/**
 * Template Disk Configuration.
 */
/* istanbul ignore next: autogenerated */
class TemplateDiskConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get size in bytes.
     * @returns {number}
     */
    get sizeInBytes() {
        return this._json.size_in_bytes;
    }
    /**
     * Get disk type.
     * @returns {DiskType}
     */
    get diskType() {
        return this._json.disk_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {TemplateDiskConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TemplateDiskConfiguration = TemplateDiskConfiguration;


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateVnicConfiguration = void 0;
/**
 * Template VNIC Configuration Response.
 */
/* istanbul ignore next: autogenerated */
class TemplateVnicConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get ip assignment mode.
     * @returns {IpAddressingModeType}
     */
    get ipAssignmentMode() {
        return this._json.ip_assignment_mode;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get primary vnic.
     * @returns {boolean}
     */
    get primaryVnic() {
        return this._json.primary_vnic;
    }
    /**
     * Get network adapter type.
     * @returns {AdapterType}
     */
    get networkAdapterType() {
        return this._json.network_adapter_type;
    }
    /**
     * Get needs customization.
     * @returns {boolean}
     */
    get needsCustomization() {
        return this._json.needs_customization;
    }
    /**
     * Get connected.
     * @returns {boolean}
     */
    get connected() {
        return this._json.connected;
    }
    /**
     * Get the json representation of this class.
     * @returns {TemplateVnicConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TemplateVnicConfiguration = TemplateVnicConfiguration;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateDownloadDetails = void 0;
/**
 * vApp template Download Details.
 */
/* istanbul ignore next: autogenerated */
class VappTemplateDownloadDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get size in bytes.
     * @returns {number}
     */
    get sizeInBytes() {
        return this._json.size_in_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateDownloadDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateDownloadDetails = VappTemplateDownloadDetails;


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateVm = void 0;
/* istanbul ignore next: autogenerated */
class VappTemplateVm {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get status.
     * @returns {number}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get size.
     * @returns {number}
     */
    get size() {
        return this._json.size;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get fullname.
     * @returns {string}
     */
    get fullname() {
        return this._json.fullname;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vcloud href.
     * @returns {string}
     */
    get vcloudHref() {
        return this._json.vcloud_href;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get created date.
     * @returns {number}
     */
    get createdDate() {
        return this._json.created_date;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateVmJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateVm = VappTemplateVm;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillLineItem = void 0;
/**
 * Bill Line Item.
 */
class BillLineItem {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the line item name.
     * @returns {string} name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the cost per unit.
     * @returns {number} cost per unit
     */
    get costPerUnit() {
        return this._json.cost_per_unit;
    }
    /**
     * Gets the quantity.
     * @returns {number} quantity
     */
    get quantity() {
        return this._json.quantity;
    }
    /**
     * Gets the product ID.
     * @returns {string} the product ID
     */
    get productId() {
        return this._json.product_id;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BillLineItemJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BillLineItem = BillLineItem;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskCostAndUsage = void 0;
const resource_cost_and_usage_1 = __webpack_require__(142);
/* istanbul ignore next: autogenerated */
class DiskCostAndUsage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get total.
     * @returns {ResourceCostAndUsage}
     */
    get total() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.total);
    }
    /**
     * Get hdd.
     * @returns {ResourceCostAndUsage}
     */
    get hdd() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.hdd);
    }
    /**
     * Get ssd.
     * @returns {ResourceCostAndUsage}
     */
    get ssd() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.ssd);
    }
    /**
     * Get archive.
     * @returns {ResourceCostAndUsage}
     */
    get archive() {
        return new resource_cost_and_usage_1.ResourceCostAndUsage(this._json.archive);
    }
    /**
     * Get the json representation of this class.
     * @returns {DiskCostAndUsageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DiskCostAndUsage = DiskCostAndUsage;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CostAndUsage = void 0;
/* istanbul ignore next: autogenerated */
class CostAndUsage {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get cost.
     * @returns {number}
     */
    get cost() {
        return this._json.cost;
    }
    /**
     * Get usage.
     * @returns {number}
     */
    get usage() {
        return this._json.usage;
    }
    /**
     * Get the json representation of this class.
     * @returns {CostAndUsageJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CostAndUsage = CostAndUsage;


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingCurrencyCode = void 0;
/**
 * Billing Currency Code
 */
/* istanbul ignore next: autogenerated */
class BillingCurrencyCode {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get the json representation of this class.
     * @returns {BillingCurrencyCodeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BillingCurrencyCode = BillingCurrencyCode;


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingLegacyResponse = void 0;
/**
 * Billing legacy response
 */
class BillingLegacyResponse {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Whether or not there is legacy billing type.
     * @returns {boolean} whether or not there is legacy billing type
     */
    get hasLegacyBilling() {
        return this._json.has_legacy_billing;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BillingLegacyResponseJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BillingLegacyResponse = BillingLegacyResponse;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgVdcBills = void 0;
const bill_1 = __webpack_require__(39);
/**
 * Org vDC Bills.
 */
class OrgVdcBills {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the org UUID.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Gets the month as an integer in the range 1 - 12.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Gets the year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Gets the list of bills for each vDC.
     * @returns {Array<Bill>}
     */
    get bills() {
        return this._json.vdc_bills.map(it => new bill_1.Bill(it));
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {OrgVdcBillsJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.OrgVdcBills = OrgVdcBills;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EntityDomain = void 0;
/**
 * EntityDomain
 */
class EntityDomain {
    constructor(entityDomainType) {
        this._entityDomainType = entityDomainType;
        switch (entityDomainType) {
            case 'COMPANY':
                this._parent = null;
                break;
            case 'IAAS_PRODUCT':
                this._parent = 'COMPANY';
                break;
            case 'VCC_BACKUP_PRODUCT':
                this._parent = 'COMPANY';
                break;
            case 'IAAS_LOCATION':
                this._parent = 'VCC_BACKUP_PRODUCT';
                break;
            case 'IAAS_ORGANIZATION':
                this._parent = 'IAAS_LOCATION';
                break;
            case 'IAAS_VPG':
                this._parent = 'IAAS_ORGANIZATION';
                break;
            case 'IAAS_CATALOG':
                this._parent = 'IAAS_ORGANIZATION';
                break;
            case 'IAAS_MEDIA':
                this._parent = 'IAAS_CATALOG';
                break;
            case 'IAAS_VAPP_TEMPLATE':
                this._parent = 'IAAS_CATALOG';
                break;
            case 'IAAS_VDC':
                this._parent = 'IAAS_ORGANIZATION';
                break;
            case 'IAAS_EDGE':
                this._parent = 'IAAS_VDC';
                break;
            case 'IAAS_INTERNAL_NETWORK':
                this._parent = 'IAAS_VDC';
                break;
            case 'IAAS_VAPP':
                this._parent = 'IAAS_VDC';
                break;
            case 'IAAS_VAPP_NETWORK':
                this._parent = 'IAAS_VAPP';
                break;
            case 'IAAS_VM':
                this._parent = 'IAAS_VAPP';
                break;
            case 'VCC_BACKUP_LOCATION':
                this._parent = 'VCC_BACKUP_PRODUCT';
                break;
            case 'VCC_BACKUP_TENANT':
                this._parent = 'VCC_BACKUP_LOCATION';
                break;
            case 'O365_PRODUCT':
                this._parent = 'COMPANY';
                break;
            case 'O365_LOCATION':
                this._parent = 'O365_PRODUCT';
                break;
            case 'O365_ORGANIZATION':
                this._parent = 'O365_LOCATION';
                break;
            case 'O365_JOB':
                this._parent = 'O365_ORGANIZATION';
                break;
            case 'O365_JOB_SESSION':
                this._parent = 'O365_JOB';
                break;
            case 'O365_RESTORE_SESSION':
                this._parent = 'O365_ORGANIZATION';
        }
    }
    /**
     * Return the string representation of this class. Which is an IamEntityType
     * @returns {string}
     */
    toString() {
        return this._entityDomainType.toString();
    }
    /**
     * Get the parent entityDomain.
     * @returns {EntityDomain | null}
     */
    get parent() {
        if (this._parent !== null) {
            return new EntityDomain(this._parent);
        }
        return null;
    }
}
exports.EntityDomain = EntityDomain;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NameId = void 0;
/**
 * NameId Class
 */
class NameId {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get ID.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the json representation of this class.
     * @returns {NameIdJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NameId = NameId;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HasSnapshot = void 0;
/**
 * HasSnapshot. Whether a VM or vApp has a snapshot.
 */
/* istanbul ignore next: autogenerated */
class HasSnapshot {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get has snapshot.
     * @returns {boolean}
     */
    get hasSnapshot() {
        return this._json.has_snapshot;
    }
    /**
     * Get the json representation of this class.
     * @returns {HasSnapshotJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.HasSnapshot = HasSnapshot;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTenantBillHistory = void 0;
const cloud_tenant_bill_1 = __webpack_require__(308);
/**
 * Cloud Tenant Bill History.
 */
/* istanbul ignore next: autogenerated */
class CloudTenantBillHistory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get bills.
     * @returns {{ [key: string]: Array<CloudTenantBill> }}
     */
    get bills() {
        const bills = {};
        for (const k in this._json.bills) {
            const v = this._json.bills[k];
            bills[k] = v.map(it => new cloud_tenant_bill_1.CloudTenantBill(it));
        }
        return bills;
    }
    /**
     * Get the json representation of this class.
     * @returns {CloudTenantBillHistoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CloudTenantBillHistory = CloudTenantBillHistory;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTenantBill = void 0;
/**
 * Cloud Tenant Bill.
 */
/* istanbul ignore next: autogenerated */
class CloudTenantBill {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get total.
     * @returns {number}
     */
    get total() {
        return this._json.total;
    }
    /**
     * Get year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get month.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get storage quota in gb.
     * @returns {number}
     */
    get storageQuotaInGb() {
        return this._json.storage_quota_in_gb;
    }
    /**
     * Get storage price per gb.
     * @returns {number}
     */
    get storagePricePerGb() {
        return this._json.storage_price_per_gb;
    }
    /**
     * Get full month contract cost.
     * @returns {number}
     */
    get fullMonthContractCost() {
        return this._json.full_month_contract_cost;
    }
    /**
     * Get has insider protection.
     * @returns {boolean}
     */
    get hasInsiderProtection() {
        return this._json.has_insider_protection;
    }
    /**
     * Get insider protection price per gb.
     * @returns {number}
     */
    get insiderProtectionPricePerGb() {
        return this._json.insider_protection_price_per_gb;
    }
    /**
     * Get insider protection total.
     * @returns {number}
     */
    get insiderProtectionTotal() {
        return this._json.insider_protection_total;
    }
    /**
     * Get wan accelerator appliance total.
     * @returns {number}
     */
    get wanAcceleratorApplianceTotal() {
        return this._json.wan_accelerator_appliance_total;
    }
    /**
     * Get dedicated veeam gateway total.
     * @returns {number}
     */
    get dedicatedVeeamGatewayTotal() {
        return this._json.dedicated_veeam_gateway_total;
    }
    /**
     * Get rental licenses subscriptions total.
     * @returns {number}
     */
    get rentalLicensesSubscriptionsTotal() {
        return this._json.rental_licenses_subscriptions_total;
    }
    /**
     * Get the cross connect subscriptions total.
     * @returns {number}
     */
    get crossConnectSubscriptionsTotal() {
        return this._json.cross_connect_subscriptions_total;
    }
    /**
     * Get the json representation of this class.
     * @returns {CloudTenantBillJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CloudTenantBill = CloudTenantBill;


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyTwoFactorAuthSettings = void 0;
/**
 * Company Two Factor Auth Settings
 * - To apply 2FA to all users, set 'allUsers' to true and set 'rolesUuids' to null or empty.
 * - To apply 2FA to specific roles, set 'allUsers' to false and fill 'roleUuids' with role uuids.
 */
/* istanbul ignore next: autogenerated */
class CompanyTwoFactorAuthSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get all users.
     * @returns {boolean}
     */
    get allUsers() {
        return this._json.all_users;
    }
    /**
     * Get role uuids.
     * @returns {Array<String>}
     */
    get roleUuids() {
        return this._json.role_uuids || [];
    }
    /**
     * Get the json representation of this class.
     * @returns {CompanyTwoFactorAuthSettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CompanyTwoFactorAuthSettings = CompanyTwoFactorAuthSettings;


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyUser = void 0;
/**
 * Company user class.
 */
/* istanbul ignore next: autogenerated */
class CompanyUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user type.
     * @returns {UserType}
     */
    get userType() {
        return this._json.user_type;
    }
    /**
     * Get locked.
     * @returns {boolean}
     */
    get locked() {
        return this._json.locked;
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get phone.
     * @returns {string}
     */
    get phone() {
        return this._json.phone;
    }
    /**
     * Get company.
     * @returns {string}
     */
    get company() {
        return this._json.company;
    }
    /**
     * Get address.
     * @returns {string}
     */
    get address() {
        return this._json.address;
    }
    /**
     * Get city.
     * @returns {string}
     */
    get city() {
        return this._json.city;
    }
    /**
     * Get state.
     * @returns {string}
     */
    get state() {
        return this._json.state;
    }
    /**
     * Get zip.
     * @returns {string}
     */
    get zip() {
        return this._json.zip;
    }
    /**
     * Get country.
     * @returns {string}
     */
    get country() {
        return this._json.country;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get fullname.
     * @returns {string}
     */
    get fullname() {
        return this._json.fullname;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get created date.
     * @returns {number}
     */
    get createdDate() {
        return this._json.created_date;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get domain.
     * @returns {string | UserDomainJson}
     */
    get domain() {
        return this._json.domain;
    }
    /**
     * Get first name.
     * @returns {string}
     */
    get firstName() {
        return this._json.first_name;
    }
    /**
     * Get last name.
     * @returns {string}
     */
    get lastName() {
        return this._json.last_name;
    }
    /**
     * Get role.
     * @returns {string}
     */
    get role() {
        return this._json.role;
    }
    /**
     * Get login type.
     * @returns {UserLoginType}
     */
    get loginType() {
        return this._json.login_type;
    }
    /**
     * Get invitation status.
     * @returns {UserInvitationStatus}
     */
    get invitationStatus() {
        return this._json.invitation_status;
    }
    /**
     * Get 2FA status.
     * @returns {boolean}
     */
    get twoFactorAuthenticationEnabled() {
        return this._json.two_factor_enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {CompanyUserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CompanyUser = CompanyUser;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Company = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const backup_group_1 = __webpack_require__(46);
const company_location_backup_status_1 = __webpack_require__(270);
const catalog_1 = __webpack_require__(69);
const billing_currency_code_1 = __webpack_require__(301);
const entity_1 = __webpack_require__(9);
const edge_1 = __webpack_require__(71);
const role_1 = __webpack_require__(199);
const company_location_integrated_backup_status_1 = __webpack_require__(406);
const internal_network_1 = __webpack_require__(72);
const media_1 = __webpack_require__(48);
const o365_organization_1 = __webpack_require__(88);
const org_1 = __webpack_require__(212);
const identity_provider_1 = __webpack_require__(98);
const oidc_identity_provider_1 = __webpack_require__(532);
const saml_identity_provider_1 = __webpack_require__(533);
const sso_login_error_1 = __webpack_require__(534);
const task_1 = __webpack_require__(10);
const task_filter_params_1 = __webpack_require__(138);
const user_1 = __webpack_require__(237);
const ba_company_1 = __webpack_require__(238);
const vapp_network_1 = __webpack_require__(75);
const vapp_template_1 = __webpack_require__(49);
const vapp_1 = __webpack_require__(76);
const cloud_tenant_1 = __webpack_require__(241);
const vdc_1 = __webpack_require__(92);
const vm_1 = __webpack_require__(41);
const expanded_vpg_1 = __webpack_require__(95);
const cloud_tenant_bill_history_1 = __webpack_require__(307);
const company_two_factor_auth_settings_1 = __webpack_require__(309);
const company_user_1 = __webpack_require__(310);
const enforce_two_factor_auth_request_1 = __webpack_require__(555);
const o365_audit_log_1 = __webpack_require__(556);
const o365_backup_repository_1 = __webpack_require__(208);
const o365_bill_1 = __webpack_require__(557);
const o365_device_code_1 = __webpack_require__(89);
const o365_organization_set_1 = __webpack_require__(558);
const search_result_1 = __webpack_require__(559);
const support_regarding_option_1 = __webpack_require__(560);
const support_ticket_1 = __webpack_require__(563);
const user_creation_1 = __webpack_require__(566);
const user_two_factor_auth_record_1 = __webpack_require__(567);
const vac_company_quota_status_1 = __webpack_require__(568);
const vac_contract_1 = __webpack_require__(569);
const vm_protection_summary_1 = __webpack_require__(571);
/**
 * Company.
 */
class Company extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets an Company by ID.
     * @param id Company ID
     * @returns {Promise<Company>} promise that resolves with the Company
     */
    static getCompany(id) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${id}`)
                .then(response => {
                const json = response.data;
                return new Company(json);
            });
        });
    }
    get entityType() {
        return 'COMPANY';
    }
    /**
     * Indicates whether the company has the iland cloud product.
     * @returns {boolean} value
     */
    get hasIlandCloud() {
        return this._json.has_iaas;
    }
    /**
     * Indicates whether the company has the iland backup product.
     * @returns {boolean} value
     */
    get hasIlandBackup() {
        return this._json.has_vcc;
    }
    /**
     * Indicates whether the company has the iland Object Storage product
     * @returns {boolean}
     */
    get hasIlandObjectStorage() {
        return this._json.has_object_storage;
    }
    /**
     * Indicates whether the company has iland Veeam Cloud Connection Replication add-on product
     * @returns {boolean}
     */
    get hasIlandVccr() {
        return this._json.has_vccr;
    }
    /**
     * Indicates whether the company has iland Office 365 product
     * @returns {boolean}
     */
    get hasIlandO365() {
        return this._json.has_o365;
    }
    /**
     * Indicates whether the company has the Ceph object storage (Object Storage 2.0) product
     * @returns {boolean}
     */
    get hasCeph() {
        return this._json.has_ceph;
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CompanyJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the Company data by retrieving it from the API again.
     * @returns {Promise<Company>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Get company roles.
     * @returns {Promise<Array<Role>>} task promise
     */
    getRoles() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/roles`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new role_1.Role(it));
            });
        });
    }
    /**
     * Get a company role.
     * @returns {Promise<Role>} a promise with the queried role
     */
    getRole(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/roles/${uuid}`)
                .then(response => {
                const json = response.data;
                return new role_1.Role(json);
            });
        });
    }
    /**
     * Creates a new company role.
     * @returns {Promise<Role>} a promise with the newly created role
     */
    createRole(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/roles`, request.json)
                .then(response => {
                const json = response.data;
                return new role_1.Role(json);
            });
        });
    }
    /**
     * Updates a company role.
     * @returns {Promise<Role>} a promise with the newly created role that has replaced the original
     */
    updateRole(uuid, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/companies/${this.uuid}/roles/${uuid}`, request.json)
                .then(response => {
                const json = response.data;
                return new role_1.Role(json);
            });
        });
    }
    /**
     * Deletes a new company role.
     * @returns {Promise<void>} a promise that indicates success or failure
     */
    deleteRole(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .delete(`/companies/${this.uuid}/roles/${uuid}`)
                .then(() => undefined);
        });
    }
    /**
     * Gets all company users.
     * @returns {Promise<Array<CompanyUser>>} a promise with the list of the company users
     */
    getUsers() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/users`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new company_user_1.CompanyUser(it));
            });
        });
    }
    /**
     * Gets all company users that are assigned to a specified role.
     * @returns {Promise<Array<User>>} a promise with the list of the company users that are assigned to the role
     */
    getUsersWithRole(roleUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/users`, {
                params: {
                    role: roleUuid
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new user_1.User(it));
            });
        });
    }
    /**
     * A company may have multiple user domains if they have users that are shared with other companies. This method
     * returns the identifiers for all domains that are associated with this company.
     * @returns {Promise<Array<string>>} a promise with the list of the company user domains
     */
    getUserDomains() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/user-domains`)
                .then(response => {
                return response.data.data;
            });
        });
    }
    /**
     * Creates a new company user.
     * @returns {Promise<User>} a promise with the newly created user
     */
    createUser(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/users`, request.json)
                .then(response => {
                const json = response.data;
                return new user_1.User(json);
            });
        });
    }
    /**
     * Create multiple users for current company.
     * @param {Array<UserCreateRequest>>} userCreateRequests
     * @returns {Promise<Array<UserCreation>>} response
     */
    /* istanbul ignore next: autogenerated */
    createUsers(userCreateRequests) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/users-batch`, {
                users: userCreateRequests.map(it => it.json)
            })
                .then(response => {
                var _a;
                const json = (((_a = response.data) === null || _a === void 0 ? void 0 : _a.users) || []);
                return json.map(it => new user_creation_1.UserCreation(it));
            });
        });
    }
    /**
     * Get all support tickets
     * @param {number} offset
     * @param {number} limit
     * @returns {Promise<Array<SupportTicket>>}
     */
    getSupportTickets(offset, limit) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/support-tickets`, {
                params: {
                    offset: offset || 0,
                    limit: limit || 10
                }
            })
                .then(response => {
                const supportTickets = response.data.data;
                return supportTickets.map(it => new support_ticket_1.SupportTicket(it));
            });
        });
    }
    /**
     * Get a specified support ticket.
     * @param {number} ticketId
     * @returns {Promise<SupportTicket>}
     */
    getSupportTicket(ticketId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/support-tickets/${ticketId}`)
                .then(response => {
                const supportTicket = response.data;
                return new support_ticket_1.SupportTicket(supportTicket);
            });
        });
    }
    /**
     * Get all organizations in the company location
     * @param {string} locationId
     * @returns {Promise<Array<Org>>}
     */
    getOrganizations(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/orgs`)
                .then(response => {
                const orgs = response.data.data;
                return orgs.map(it => new org_1.Org(it));
            });
        });
    }
    /**
     * Get all vApps in the company location
     * @param {string} locationId
     * @returns {Promise<Array<Vapp>>}
     */
    getVapps(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vapps`)
                .then(response => {
                const vapps = response.data.data;
                return vapps.map(it => new vapp_1.Vapp(it));
            });
        });
    }
    /**
     * Get all vDCs in the company location
     * @param {string} locationId
     * @returns {Promise<Array<Vdc>>}
     */
    getVdcs(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vdcs`)
                .then(response => {
                const vdcs = response.data.data;
                return vdcs.map(it => new vdc_1.Vdc(it));
            });
        });
    }
    /**
     * Get all VMs in the company location
     * @param {string} locationId
     * @returns {Promise<Array<Vm>>}
     */
    getVms(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vms`)
                .then(response => {
                const vms = response.data.data;
                return vms.map(it => new vm_1.Vm(it));
            });
        });
    }
    /**
     * Get all edges in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<Edge>>}
     */
    /* istanbul ignore next: autogenerated */
    getEdges(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/edges`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new edge_1.Edge(it));
            });
        });
    }
    /**
     * Get all media in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<Media>>}
     */
    /* istanbul ignore next: autogenerated */
    getMedia(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/media`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new media_1.Media(it));
            });
        });
    }
    /**
     * Get all vApp templates in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<VappTemplate>>}
     */
    /* istanbul ignore next: autogenerated */
    getVappTemplates(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vapp-templates`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_template_1.VappTemplate(it));
            });
        });
    }
    /**
     * Gets all VPGs in the company location.
     * @param {string} locationId
     * @param {Array<VpgSubEntityRequest>} expand
     * @returns {Promise<Array<ExpandedVpg>>}
     */
    /* istanbul ignore next: autogenerated */
    getVpgs(locationId, expand) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vpgs`, {
                params: {
                    expand: expand
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new expanded_vpg_1.ExpandedVpg(it));
            });
        });
    }
    /**
     * Gets all catalogs in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<Catalog>>}
     */
    /* istanbul ignore next: autogenerated */
    getCatalogs(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/catalogs`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new catalog_1.Catalog(it));
            });
        });
    }
    /**
     * Gets all internal networks in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<InternalNetwork>>}
     */
    /* istanbul ignore next: autogenerated */
    getOrgVdcNetworks(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/org-vdc-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new internal_network_1.InternalNetwork(it));
            });
        });
    }
    /**
     * Gets all the vApp networks in the company location.
     * @param {string} locationId
     * @returns {Promise<Array<VappNetwork>>}
     */
    /* istanbul ignore next: autogenerated */
    getVappNetworks(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vapp-networks`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_network_1.VappNetwork(it));
            });
        });
    }
    /**
     * Gets all the O365 Organizations and total reserved O365 licenses for the company location.
     * @param {string} locationId
     * @return {Promise<O365OrganizationSet>}
     */
    /* istanbul ignore next: autogenerated */
    getO365Organizations(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/o365-organizations`)
                .then(response => {
                const json = response.data;
                return new o365_organization_set_1.O365OrganizationSet(json);
            });
        });
    }
    /**
     * Get O365 bill for Company
     * If no dates passed in, API gets the previous 6 months
     * @param locationId
     * @param startYear - the year to start
     * @param startMonth - startMonth the month to start (1-12)
     * @param endYear - the year to end with
     * @param endMonth -the month to end (1-12)
     */
    /* istanbul ignore next: autogenerated */
    getO365billing(locationId, startYear, startMonth, endYear, endMonth) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/o365-billing`, {
                params: {
                    startYear: startYear,
                    startMonth: startMonth,
                    endYear: endYear,
                    endMonth: endMonth
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_bill_1.O365Bill(it));
            });
        });
    }
    /**
     * Get the O365 Audit log for the company
     * @param locationId
     * @param page
     * @param pageSize
     * @returns {Promise<Array<O365AuditLog>>}
     */
    /* istanbul ignore next: autogenerated */
    getO365AuditLog(locationId, page, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/o365-audit-log`, {
                params: {
                    page: page || 0,
                    pageSize: pageSize || 50
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_audit_log_1.O365AuditLog(it));
            });
        });
    }
    /**
     * Get the O365 Backup Repositories for the company
     * @param locationId {string}
     * @returns {Promise<Array<O365BackupRepository>>}
     */
    /* istanbul ignore next: autogenerated */
    getO365BackupRepositories(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/o365-backup-repositories`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_backup_repository_1.O365BackupRepository(it));
            });
        });
    }
    /**
     * Get the unassigned O365 Backup Repositories for the company
     * @param locationId {string}
     * @returns {Promise<Array<O365BackupRepository>>}
     */
    getUnassignedO365BackupRepositories(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/get-o365-repos-unassigned`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_backup_repository_1.O365BackupRepository(it));
            });
        });
    }
    /**
     * Get the O365 Device code
     * @param locationId {string}
     * @returns {Promise<O365DeviceCode>}
     */
    /* istanbul ignore next: autogenerated */
    getO365DeviceCode(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/actions/get-o365-device-code`)
                .then(response => {
                const json = response.data;
                return new o365_device_code_1.O365DeviceCode(json);
            });
        });
    }
    /**
     * Change the company logo
     * @param {Uint8Array} logo
     * @returns {Promise<any>}
     */
    setLogo(logo) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/logo`, logo, {
                headers: {
                    'Content-Type': 'image/jpeg'
                }
            });
        });
    }
    /**
     * Get a company logo
     * @returns {Promise<Uint8Array | null>}
     */
    getLogo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/logo`, {
                headers: {
                    Accept: http_1.Http.versionMime('image/jpeg')
                },
                responseType: 'arraybuffer'
            })
                .then(response => {
                return new Uint8Array(response.data);
            }, () => {
                return null;
            });
        });
    }
    /**
     * Delete a company logo
     * @returns {Promise<any>}
     */
    deleteLogo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/companies/${this.uuid}/logo`);
        });
    }
    /**
     *  Creates a new support ticket.
     *  @param {SupportTicketCreateRequest} newSupportTicket
     *  @returns {Promise<SupportTicket>}
     */
    /* istanbul ignore next: autogenerated */
    createSupportTicket(newSupportTicket) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/support-tickets`, newSupportTicket.json)
                .then(response => {
                const json = response.data;
                return new support_ticket_1.SupportTicket(json);
            });
        });
    }
    /**
     * Updates a support ticket.
     * @param {number} ticketId
     * @param {SupportTicketUpdateRequest} supportTicket
     * @returns {Promise<SupportTicket>}
     */
    /* istanbul ignore next: autogenerated */
    updateSupportTicket(ticketId, supportTicket) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/companies/${this.uuid}/support-tickets/${ticketId}`, supportTicket.json)
                .then(response => {
                const json = response.data;
                return new support_ticket_1.SupportTicket(json);
            });
        });
    }
    /**
     * Get all cloud tenants in company location.
     * @param {string} location
     * @returns {Array<Promise<CloudTenant>>}
     */
    /* istanbul ignore next: autogenerated */
    getCloudTenants(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let url;
            if (location && location.length > 0) {
                url = `/companies/${this.uuid}/location/${location}/vcc-backup-tenants`;
            }
            else {
                url = `/companies/${this.uuid}/vcc-backup-tenants`;
            }
            return iland_1.Iland.getHttp()
                .get(url)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new cloud_tenant_1.CloudTenant(it));
            });
        });
    }
    /**
     * Get all vac companies in company. You can also get all vac-companies for a specific company and location.
     * @param {string} locationId (Optional) the location ID.
     * @returns {Array<Promise<BaCompany>>}
     */
    /* istanbul ignore next: autogenerated */
    getVacCompanies(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (locationId) {
                return iland_1.Iland.getHttp()
                    .get(`/companies/${this.uuid}/location/${locationId}/vac-companies`)
                    .then(response => {
                    const json = response.data.data;
                    return json.map(it => new ba_company_1.BaCompany(it));
                });
            }
            else {
                return iland_1.Iland.getHttp()
                    .get(`/companies/${this.uuid}/vac-companies`)
                    .then(response => {
                    const json = response.data.data;
                    return json.map(it => new ba_company_1.BaCompany(it));
                });
            }
        });
    }
    /**
     * Get vac quota status in company location.
     * @param {string} locationUuid
     * @returns {Promise<VacCompanyQuotaStatus>}
     */
    /* istanbul ignore next: autogenerated */
    getVacQuotaStatus(locationUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${locationUuid}/${this.uuid}/vac-storage-status`)
                .then(response => {
                const json = response.data;
                return new vac_company_quota_status_1.VacCompanyQuotaStatus(json);
            });
        });
    }
    /**
     * Request VAC contract upgrade.
     * @param {string} locationUuid
     * @param {BaCompanyContractUpgradeRequest} upgradeRequest
     * @returns {Promise}
     */
    /* istanbul ignore next: autogenerated */
    requestVacContractUpgrade(locationUuid, upgradeRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/locations/${locationUuid}/${this.uuid}/request-upgrade-contract`, upgradeRequest.json);
        });
    }
    /**
     * Create a new VAC company.
     * @param {string} locationUuid
     * @param {BaCompanyCreateRequest} creationRequest
     * @returns {Promise}
     */
    /* istanbul ignore next: autogenerated */
    createBaCompany(locationUuid, creationRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/location/${locationUuid}/actions/create-vac-company`, creationRequest.json);
        });
    }
    /**
     * Create a new O365 Organization.
     * @param {string} locationUuid
     * @param {O365OrgCreateModifyRequest} creationRequest
     * @returns {Promise<O365Organization>}
     */
    /* istanbul ignore next: autogenerated */
    createO365Organization(locationUuid, creationRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/location/${locationUuid}/actions/create-o365-org`, creationRequest.json)
                .then(response => {
                const json = response.data;
                return new o365_organization_1.O365Organization(json);
            });
        });
    }
    /**
     * Get support ticket regarding options.
     * @returns {Array<SupportRegardingOption>}
     */
    /* istanbul ignore next: autogenerated */
    getSupportTicketRegardingOptions() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/support-tickets/regarding-options`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new support_regarding_option_1.SupportRegardingOption(it));
            });
        });
    }
    /**
     * Get the billing history for the cloud tenants.
     * @returns {Promise<CloudTenantBillHistory>} promise resolving to the cloud tenant billing history
     */
    /* istanbul ignore next: autogenerated */
    getCloudTenantBillingHistory(location, startYear, startMonth, endYear, endMonth) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/vcc-backup-tenants-billing`, {
                params: {
                    location: location,
                    startYear: startYear,
                    startMonth: startMonth,
                    endYear: endYear,
                    endMonth: endMonth
                }
            })
                .then(response => {
                const json = response.data;
                return new cloud_tenant_bill_history_1.CloudTenantBillHistory(json);
            });
        });
    }
    /**
     * Get the vac billing currency code for the company location.
     * @returns {Promise<BillingCurrencyCode>} promise resolving to the billing currency code
     */
    /* istanbul ignore next: autogenerated */
    getVacBillingCurrencyCode(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${location}/${this.uuid}/vac-currency-code`)
                .then(response => {
                const json = response.data;
                return new billing_currency_code_1.BillingCurrencyCode(json);
            });
        });
    }
    /**
     * Get company tasks.
     * @param {CompanyTaskFilterParams} filters used to get tasks matching specific criteria
     * @returns {Promise<TaskList>} a promise that resolves with a task list
     */
    getTasks(filters) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (filters) {
                return task_1.Task.getTasks(new task_filter_params_1.TaskFilterParams(this.uuid, 'COMPANY', filters.includeDescendantTasks, filters.synced, filters.username, filters.timestampAfter, filters.timestampBefore, filters.queryTimestamp, filters.offset, filters.limit, filters.order));
            }
            else {
                return task_1.Task.getTasks(new task_filter_params_1.TaskFilterParams(this.uuid, 'COMPANY'));
            }
        });
    }
    /**
     * Perform a full-text search of entities pertaining to this company.
     * @param {string} query Query string
     * @param {number} pageOffset Page offset for return documents
     * @param {number} pageSize Number of hits per page (default value is 10 and maximum is 50)
     * @returns {Promise<SearchResult>} a promise that resolves with a SearchResult
     */
    /* istanbul ignore next: autogenerated */
    search(query, pageOffset, pageSize) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/search`, {
                params: {
                    query: query,
                    pageOffset: pageOffset,
                    pageSize: pageSize
                }
            })
                .then(response => {
                const json = response.data;
                return new search_result_1.SearchResult(json);
            });
        });
    }
    /**
     * Gets a report of two-factor auth configuration state for company users.
     * @returns {Promise<Array<UserTwoFactorAuthRecord>>} a promise that resolves with an array of two factor auth records
     */
    /* istanbul ignore next: autogenerated */
    getUserTwoFactorAuthReport() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/user-two-factor-auth-report`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new user_two_factor_auth_record_1.UserTwoFactorAuthRecord(it));
            });
        });
    }
    /**
     * Gets the VAC contract list for a given company location.
     * @returns {Promise<Array<VacContract>>} a promise that resolves with an array of VacContract
     */
    /* istanbul ignore next: autogenerated */
    getVacContractsForCompany(locationUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${locationUuid}/${this.uuid}/vac-contracts`)
                .then(response => {
                const json = response.data.data;
                return json.map(contract => new vac_contract_1.VacContract(contract));
            });
        });
    }
    /**
     * Gets the integrated backup status of entities within the company-location.
     * @param {string} locationUuid
     * @returns {Promise<CompanyLocationIntegratedBackupStatus>} backup status details
     */
    /* istanbul ignore next: autogenerated */
    getIntegratedBackupStatus(locationUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationUuid}/iaas-integrated-backup-status`)
                .then(response => {
                const json = response.data;
                return new company_location_integrated_backup_status_1.CompanyLocationIntegratedBackupStatus(json);
            });
        });
    }
    /**
     * List the existing backup groups that are configured in a specified
     * company-location.
     *
     * @param {string} locationUuid
     * @param {boolean} includeDeleted Default is false. (Optional)
     * @param {boolean} includeSummaryStats Default is false. (Optional)
     * @param {boolean} includeLastRun Default is false. (Optional)
     * @param {boolean} includeBackupPolicy Default is false. (Optional)
     * @returns {Promise<Array<BackupGroup>>}
     */
    /* istanbul ignore next: autogenerated */
    listBackupGroups(locationUuid, includeDeleted, includeSummaryStats, includeLastRun, includeBackupPolicy) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationUuid}/backup-groups`, {
                params: {
                    includeDeleted: includeDeleted !== null && includeDeleted !== void 0 ? includeDeleted : false,
                    includeSummaryStats: includeSummaryStats !== null && includeSummaryStats !== void 0 ? includeSummaryStats : false,
                    includeLastRun: includeLastRun !== null && includeLastRun !== void 0 ? includeLastRun : false,
                    includeBackupPolicy: includeBackupPolicy !== null && includeBackupPolicy !== void 0 ? includeBackupPolicy : false
                }
            })
                .then(response => {
                const json = response.data.data;
                return json.map(it => new backup_group_1.BackupGroup(it));
            });
        });
    }
    /**
     * Gets the backup status of entities within the company-location.
     *
     * @param {string} locationUuid
     * @return {Promise<CompanyLocationBackupStatus>}
     */
    /* istanbul ignore next: autogenerated */
    getBackupStatus(locationUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationUuid}/iaas-backup-status`)
                .then(response => {
                const json = response.data;
                return new company_location_backup_status_1.CompanyLocationBackupStatus(json);
            });
        });
    }
    /**
     * Get the identity provider for the current company.
     * @return {Promise<IdentityProvider>} The identity provider
     */
    /* istanbul ignore next: autogenerated */
    getIdentityProvider() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/idp`)
                .then(response => {
                const json = response.data;
                return new identity_provider_1.IdentityProvider(json);
            });
        });
    }
    /**
     * Get the Identity Provider redirect URI for the current company.
     * @returns {Promise<string>} The redirect URI
     */
    /* istanbul ignore next: autogenerated */
    getIdentityProviderRedirectUri(isOkta = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/idp-redirect-uri`, {
                params: {
                    isOkta: isOkta
                }
            })
                .then(response => {
                var _a;
                return ((_a = response.data) === null || _a === void 0 ? void 0 : _a.redirect_uri) || undefined;
            });
        });
    }
    /**
     * Create OIDC identity provider from config.
     * @param {OIDCIdentityProviderConfigRequest} configCreateRequest
     * @returns {Promise<OIDCIdentityProvider>} OIDCIdentityProvider
     */
    /* istanbul ignore next: autogenerated */
    createOIDCIdentityProvider(configCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/actions/create-oidc-idp`, configCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new oidc_identity_provider_1.OIDCIdentityProvider(json);
            });
        });
    }
    /**
     * Update the OIDC identity provider.
     * @param {OIDCIdentityProviderConfigRequest} oidcIdentityProviderConfigRequest
     * @returns {Promise<unknown>} promise
     */
    /* istanbul ignore next: autogenerated */
    updateOIDCIdentityProvider(oidcIdentityProviderConfigRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().put(`/companies/${this.uuid}/actions/update-oidc-provider`, oidcIdentityProviderConfigRequest.json);
        });
    }
    /**
     * Create SAML identity provider from config.
     * @param {SAMLIdentityProviderConfigRequest} samlIdentityProviderConfigRequest
     * @returns {Promise<SAMLIdentityProvider>} promise
     */
    /* istanbul ignore next: autogenerated */
    createSAMLIdentityProvider(samlIdentityProviderConfigRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/actions/create-saml-idp`, samlIdentityProviderConfigRequest.json)
                .then(response => {
                const json = response.data;
                return new saml_identity_provider_1.SAMLIdentityProvider(json);
            });
        });
    }
    /**
     * Update the SAML identity provider.
     * @param {SAMLIdentityProviderConfigRequest} samlIdentityProviderConfigRequest
     * @returns {Promise<unknown>} promise
     */
    /* istanbul ignore next: autogenerated */
    updateSAMLIdentityProvider(samlIdentityProviderConfigRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().put(`/companies/${this.uuid}/actions/update-saml-provider`, samlIdentityProviderConfigRequest.json);
        });
    }
    /**
     * Create Google identity provider from config.
     * @param {GoogleIdentityProviderConfigRequest} configCreateRequest
     * @returns {Promise<OIDCIdentityProvider>} promise
     */
    /* istanbul ignore next: autogenerated */
    createGoogleIdentityProvider(configCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/actions/create-google-idp`, configCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new oidc_identity_provider_1.OIDCIdentityProvider(json);
            });
        });
    }
    /**
     * Update Google identity provider.
     * @param {GoogleIdentityProviderConfigRequest} configCreateRequest
     * @returns {Promise<OIDCIdentityProvider>} promise
     */
    /* istanbul ignore next: autogenerated */
    updateGoogleIdentityProvider(configCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/companies/${this.uuid}/actions/update-google-idp`, configCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new oidc_identity_provider_1.OIDCIdentityProvider(json);
            });
        });
    }
    /**
     * Create Okta Identity Provider
     * @param {OktaIdentityProviderCreateRequest} configCreateRequest
     * @returns {Promise<OktaIdentityProvider>} promise
     */
    /* istanbul ignore next: autogenerated */
    createOktaIdentityProvider(configCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/actions/create-okta-idp`, configCreateRequest.json)
                .then(response => {
                const json = response.data;
                return new saml_identity_provider_1.SAMLIdentityProvider(json);
            });
        });
    }
    /**
     * Update Okta Identity Provider
     * @param {OktaIdentityProviderCreateRequest} configCreateRequest
     * @returns {Promise<OktaIdentityProvider>} promise
     */
    /* istanbul ignore next: autogenerated */
    updateOktaIdentityProvider(configRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/companies/${this.uuid}/actions/update-okta-idp`, configRequest.json)
                .then(response => {
                const json = response.data;
                return new saml_identity_provider_1.SAMLIdentityProvider(json);
            });
        });
    }
    /**
     * Delete the specified identity provider.
     * @returns {Promise<unknown>} promise
     */
    /* istanbul ignore next: autogenerated */
    deleteIdentityProvider() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/companies/${this.uuid}/idp`);
        });
    }
    /**
     * Create a new SSO user for current company.
     * @param {SsoUserCreateRequest} createRequest
     * @returns {Promise<CompanyUser>} Promise that resolves with the created SSO user.
     */
    /* istanbul ignore next: autogenerated */
    createSSOUser(createRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/sso-user`, createRequest.json)
                .then(response => {
                const json = response.data;
                return new company_user_1.CompanyUser(json);
            });
        });
    }
    /**
     * Create multiple SSO users for current company.
     * @param {Array<SsoUserCreateRequest>} ssoUserCreateRequestList List of SsoUserCreateRequest.
     * @returns {Promise<Array<CompanyUser>>} Promise that resolves with the list of created SSO users.
     */
    /* istanbul ignore next: autogenerated */
    createSSOUsers(ssoUserCreateRequestList) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${this.uuid}/users-sso-batch`, {
                users: ssoUserCreateRequestList.map(it => it.json)
            })
                .then(response => {
                var _a;
                const json = (((_a = response.data) === null || _a === void 0 ? void 0 : _a.users) || []);
                return json.map(it => new user_creation_1.UserCreation(it));
            });
        });
    }
    /**
     * Send a user invitation email to the given user.
     * @param {string} username User to send invite email to
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    sendUserInvitationEmail(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/actions/${username}/send-invite-email`);
        });
    }
    /**
     * Send user invitation emails to the given list of users.
     * @param {Array<string>} userNames Users to send invite emails to
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    sendUsersInvitationEmails(userNames) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/actions/send-invite-emails`, {
                users: userNames
            });
        });
    }
    /**
     * Get Identity Provider login errors
     * @returns {Promise<Array<SsoLoginError>>}
     */
    /* istanbul ignore next: autogenerated */
    getSsoLoginErrors() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/idp-account-link-errors`)
                .then(response => {
                var _a;
                const json = (_a = response.data) === null || _a === void 0 ? void 0 : _a.errors;
                return (json === null || json === void 0 ? void 0 : json.map(it => new sso_login_error_1.SsoLoginError(it))) || [];
            });
        });
    }
    /**
     * Enforce two factor authentication for the specified user.
     * @param {string} username The user's username.
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    enforceTwoFactorAuthForUser(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/actions/enforce-two-factor-auth`, {
                username: username
            });
        });
    }
    /**
     * Reset two factor authentication for the specified user. After resetting
     * the user's two factor auth credentials, will default back to the global
     * settings for the company regarding two factor authentication.
     * @param {string} username The user's username.
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    resetTwoFactorAuthForUser(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/companies/${this.uuid}/actions/reset-two-factor-auth`, {
                username: username
            });
        });
    }
    /**
     * Get the specified company's two factor authentication settings.
     * @returns {Promise<CompanyTwoFactorAuthSettings>} Promise that resolves with Company Two Factor Auth Settings.
     */
    /* istanbul ignore next: autogenerated */
    getTwoFactorAuthSettings() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/two-factor-auth-settings`)
                .then(response => {
                const json = response.data;
                return new company_two_factor_auth_settings_1.CompanyTwoFactorAuthSettings(json);
            });
        });
    }
    /**
     * Set the two factor authentication settings. Can either set for all users in the company or for specified roles.
     * - To apply 2FA to all users, set 'allUsers' to true and set 'rolesUuids' to null or empty.
     * - To apply 2FA to specific roles, set 'allUsers' to false and fill 'roleUuids' with role uuids.
     * @param {CompanyTwoFactorAuthSettings | EnforceTwoFactorAuthRequest} settings Two Factor Auth settings or request.
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    setTwoFactorAuthSettings(settings) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const requestJson = {
                all_users: false,
                roles: []
            };
            if (settings instanceof company_two_factor_auth_settings_1.CompanyTwoFactorAuthSettings) {
                requestJson.all_users = settings.allUsers;
                requestJson.roles = settings.roleUuids;
            }
            else {
                requestJson.all_users = settings.allUsers;
                requestJson.roles = settings.roles;
            }
            return iland_1.Iland.getHttp().put(`/companies/${this.uuid}/two-factor-auth-settings`, requestJson);
        });
    }
    /**
     * Enforce the two factor authentication for all users in the company
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    enforceTwoFactorAuthSettingsForAllUsers() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.setTwoFactorAuthSettings(new enforce_two_factor_auth_request_1.EnforceTwoFactorAuthRequest({
                all_users: true,
                roles: []
            }));
        });
    }
    /**
     * Enforce the two factor authentication for specified roles in the company
     * @param {Arrays<string>} rolesUuid List of role uuids.
     * @returns {Promise<unknown>}
     */
    /* istanbul ignore next: autogenerated */
    enforceTwoFactorAuthSettingsForRoles(rolesUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.setTwoFactorAuthSettings(new enforce_two_factor_auth_request_1.EnforceTwoFactorAuthRequest({
                all_users: false,
                roles: rolesUuid
            }));
        });
    }
    /**
     * Get VM Protection Summary for current location.
     * @param {string} locationId Location ID.
     * @returns {Promise<VmProtectionSummary>}
     */
    /* istanbul ignore next: autogenerated */
    getVmProtectionSummary(locationId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.uuid}/location/${locationId}/vms-protection-status-summary`)
                .then(response => {
                const json = response.data;
                return new vm_protection_summary_1.VmProtectionSummary(json);
            });
        });
    }
}
exports.Company = Company;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Certificate = void 0;
const x509_certificate_1 = __webpack_require__(313);
/* istanbul ignore next: autogenerated */
class Certificate {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the object ID of the certificate.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get the description of the certificate.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the scope of the certificate in relation to the edge.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get the subject common name of the certificate.
     * @returns {string}
     */
    get subjectCn() {
        return this._json.subject_cn;
    }
    /**
     * Get the issuer common name of the certificate.
     * @returns {string}
     */
    get issuerCn() {
        return this._json.issuer_cn;
    }
    /**
     * Get the PEM encoding of the certificate.
     * @returns {string}
     */
    get pemEncoding() {
        return this._json.pem_encoding;
    }
    /**
     * Get the type of certificate.
     * Possible values include 'certificate_signed', 'certificate_self_signed', & 'ca_certificate'.
     * @returns {string | null}
     */
    get certificateType() {
        return this._json.certificate_type;
    }
    /**
     * Get the days left until the certificate expires.
     * @returns {number}
     */
    get daysLeftToExpiry() {
        return this._json.days_left_to_expiry;
    }
    /**
     * Get x509 certificate.
     * @returns {Array<X509Certificate>}
     */
    get x509Certificate() {
        return this._json.x509_certificate.map(it => new x509_certificate_1.X509Certificate(it));
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get the json representation of this class.
     * @returns {CertificateJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Certificate = Certificate;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.X509Certificate = void 0;
/* istanbul ignore next: autogenerated */
class X509Certificate {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get subject cn.
     * @returns {string}
     */
    get subjectCn() {
        return this._json.subject_cn;
    }
    /**
     * Get issuer cn.
     * @returns {string}
     */
    get issuerCn() {
        return this._json.issuer_cn;
    }
    /**
     * Get version.
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get serial number.
     * @returns {string}
     */
    get serialNumber() {
        return this._json.serial_number;
    }
    /**
     * Get signature algo name.
     * @returns {string}
     */
    get signatureAlgoName() {
        return this._json.signature_algo_name;
    }
    /**
     * Get signature.
     * @returns {string}
     */
    get signature() {
        return this._json.signature;
    }
    /**
     * Get not before.
     * @returns {Date | undefined}
     */
    get notBefore() {
        if (!this._json.not_before) {
            return undefined;
        }
        return new Date(this._json.not_before);
    }
    /**
     * Get not after.
     * @returns {Date | undefined}
     */
    get notAfter() {
        if (!this._json.not_after) {
            return undefined;
        }
        return new Date(this._json.not_after);
    }
    /**
     * Get issuer.
     * @returns {string}
     */
    get issuer() {
        return this._json.issuer;
    }
    /**
     * Get subject.
     * @returns {string}
     */
    get subject() {
        return this._json.subject;
    }
    /**
     * Get public key algo.
     * @returns {string}
     */
    get publicKeyAlgo() {
        return this._json.public_key_algo;
    }
    /**
     * Get public key length.
     * @returns {number}
     */
    get publicKeyLength() {
        return this._json.public_key_length;
    }
    /**
     * Get rsa public key modulus.
     * @returns {string}
     */
    get rsaPublicKeyModulus() {
        return this._json.rsa_public_key_modulus;
    }
    /**
     * Get rsa public key exponent.
     * @returns {number}
     */
    get rsaPublicKeyExponent() {
        return this._json.rsa_public_key_exponent;
    }
    /**
     * Get sha1 hash.
     * @returns {string}
     */
    get sha1Hash() {
        return this._json.sha1_hash;
    }
    /**
     * Get md5 hash.
     * @returns {string}
     */
    get md5Hash() {
        return this._json.md5_hash;
    }
    /**
     * Get is ca.
     * @returns {boolean}
     */
    get isCa() {
        return this._json.is_ca;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {X509CertificateJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.X509Certificate = X509Certificate;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CRL = void 0;
const x509_crl_1 = __webpack_require__(315);
/* istanbul ignore next: autogenerated */
class CRL {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get issuer cn.
     * @returns {string}
     */
    get issuerCn() {
        return this._json.issuer_cn;
    }
    /**
     * Get pem encoding.
     * @returns {string}
     */
    get pemEncoding() {
        return this._json.pem_encoding;
    }
    /**
     * Get x509 crl.
     * @returns {X509CRL}
     */
    get x509CRL() {
        return new x509_crl_1.X509CRL(this._json.x509_crl);
    }
    /**
     * Get the json representation of this class.
     * @returns {CRLJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CRL = CRL;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.X509CRL = void 0;
/* istanbul ignore next: autogenerated */
class X509CRL {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get version.
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get next update.
     * @returns {number}
     */
    get nextUpdate() {
        return this._json.next_update;
    }
    /**
     * Get issuer.
     * @returns {string}
     */
    get issuer() {
        return this._json.issuer;
    }
    /**
     * Get the json representation of this class.
     * @returns {X509CRLJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.X509CRL = X509CRL;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CSR = void 0;
const attribute_1 = __webpack_require__(87);
const csr_subject_1 = __webpack_require__(317);
/* istanbul ignore next: autogenerated */
class CSR {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get subject.
     * @returns {Array<Attribute>}
     */
    get subject() {
        return this._json.subject.map(it => new attribute_1.Attribute(it));
    }
    /**
     * Get subject formatted data.
     * @returns {CsrSubject}
     */
    get subjectData() {
        return new csr_subject_1.CsrSubject({
            cn: this.getSubjectAttributeValue('cn'),
            ou: this.getSubjectAttributeValue('ou'),
            o: this.getSubjectAttributeValue('o'),
            l: this.getSubjectAttributeValue('l'),
            st: this.getSubjectAttributeValue('st'),
            c: this.getSubjectAttributeValue('c')
        });
    }
    /**
     * Get algorithm.
     * @returns {string}
     */
    get algorithm() {
        return this._json.algorithm;
    }
    /**
     * Get key size.
     * @returns {number}
     */
    get keySize() {
        return this._json.key_size;
    }
    /**
     * Get pem encoding.
     * @returns {string}
     */
    get pemEncoding() {
        return this._json.pem_encoding;
    }
    /**
     * Get the json representation of this class.
     * @returns {CSRJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Return subject attribute value from key
     * @param {string} key
     * @returns {string | undefined}
     */
    getSubjectAttributeValue(key) {
        const attr = this._json.subject.find(it => it.key.toLowerCase() === key.toLowerCase());
        return attr ? attr.value : '';
    }
}
exports.CSR = CSR;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CsrSubject = void 0;
const attribute_1 = __webpack_require__(87);
/* istanbul ignore next: autogenerated */
class CsrSubject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get subject common name.
     * @returns {string}
     */
    get cn() {
        return this._json.cn;
    }
    /**
     * Get subject organization unit.
     * @returns {string}
     */
    get ou() {
        return this._json.ou;
    }
    /**
     * Get subject organization.
     * @returns {string}
     */
    get o() {
        return this._json.o;
    }
    /**
     * Get subject locality.
     * @returns {string}
     */
    get l() {
        return this._json.l;
    }
    /**
     * Get subject state or province.
     * @returns {string}
     */
    get st() {
        return this._json.st;
    }
    /**
     * Get subject country.
     * @returns {string}
     */
    get c() {
        return this._json.c;
    }
    /**
     * Convert to an Array of Attributes.
     * @returns {Array<Attribute>}
     */
    toAttributeArray() {
        return [
            new attribute_1.Attribute({ key: 'CN', value: this._json.cn }),
            new attribute_1.Attribute({ key: 'OU', value: this._json.ou }),
            new attribute_1.Attribute({ key: 'O', value: this._json.o }),
            new attribute_1.Attribute({ key: 'L', value: this._json.l }),
            new attribute_1.Attribute({ key: 'ST', value: this._json.st }),
            new attribute_1.Attribute({ key: 'C', value: this._json.c })
        ];
    }
    /**
     * Get the json representation of this class.
     * @returns {CsrSubjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CsrSubject = CsrSubject;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkpoint = void 0;
/**
 * Checkpoint class
 */
class Checkpoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get uuid
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get time
     * @returns {Date}
     */
    get time() {
        return new Date(this._json.time);
    }
    /**
     * Get export
     * @returns {string | null}
     */
    get export() {
        return this._json.export;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {CheckpointJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Checkpoint = Checkpoint;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Dhcp = void 0;
const dhcp_pool_1 = __webpack_require__(320);
/**
 * Dhcp class
 */
class Dhcp {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the edge UUID.
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather or not a dhcp service is enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get a list of Dhcp pools.
     * @returns {Array<DhcpPool>}
     */
    get dhcpPools() {
        const dhcpPools = this._json.dhcp_pools || [];
        return dhcpPools.map(pool => new dhcp_pool_1.DhcpPool(pool));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeDhcpJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Dhcp = Dhcp;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DhcpPool = void 0;
/**
 * DhcpPool class
 */
class DhcpPool {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather or not this Dhcp Pool is enabled or not.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get network
     * @returns {string | null}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get max lease time.
     * @returns {number | null}
     */
    get maxLeaseTime() {
        return this._json.max_lease_time;
    }
    /**
     * Get default lease time.
     * @returns {number | null}
     */
    get defaultLeaseTime() {
        return this._json.default_lease_time;
    }
    /**
     * Get low IP.
     * @returns {string | null}
     */
    get lowIp() {
        return this._json.low_ip;
    }
    /**
     * Get high IP.
     * @returns {string | null}
     */
    get highIp() {
        return this._json.high_ip;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {DhcpJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DhcpPool = DhcpPool;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcp = void 0;
const edge_gateway_dhcp_ip_pool_1 = __webpack_require__(146);
const edge_gateway_dhcp_logging_1 = __webpack_require__(148);
const edge_gateway_dhcp_relay_1 = __webpack_require__(149);
const edge_gateway_dhcp_static_binding_1 = __webpack_require__(150);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcp {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get static bindings.
     * @returns {Array<EdgeGatewayDhcpStaticBinding>}
     */
    get staticBindings() {
        if (!this._json.static_bindings) {
            return [];
        }
        return this._json.static_bindings.map(it => new edge_gateway_dhcp_static_binding_1.EdgeGatewayDhcpStaticBinding(it));
    }
    /**
     * Get ip pools.
     * @returns {Array<EdgeGatewayDhcpIpPool>}
     */
    get ipPools() {
        if (!this._json.ip_pools) {
            return [];
        }
        return this._json.ip_pools.map(it => new edge_gateway_dhcp_ip_pool_1.EdgeGatewayDhcpIpPool(it));
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayDhcpLogging}
     */
    get logging() {
        if (!this._json.logging) {
            return undefined;
        }
        return new edge_gateway_dhcp_logging_1.EdgeGatewayDhcpLogging(this._json.logging);
    }
    /**
     * Get relay.
     * @returns {EdgeGatewayDhcpRelay}
     */
    get relay() {
        if (!this._json.relay) {
            return undefined;
        }
        return new edge_gateway_dhcp_relay_1.EdgeGatewayDhcpRelay(this._json.relay);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcp = EdgeGatewayDhcp;


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpStaticRoute = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpStaticRoute {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get destination subnet.
     * @returns {string}
     */
    get destinationSubnet() {
        return this._json.destination_subnet;
    }
    /**
     * Get router.
     * @returns {string}
     */
    get router() {
        return this._json.router;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpStaticRouteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpStaticRoute = EdgeGatewayDhcpStaticRoute;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayAgent = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayAgent {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vnic index.
     * @returns {number}
     */
    get vnicIndex() {
        return this._json.vnic_index;
    }
    /**
     * Get gi address.
     * @returns {string}
     */
    get giAddress() {
        return this._json.gi_address;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayAgentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayAgent = EdgeGatewayDhcpRelayAgent;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayServer = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayServer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get grouping object id.
     * @returns {string}
     */
    get groupingObjectId() {
        return this._json.grouping_object_id;
    }
    /**
     * Get ip addresses.
     * @returns {Array<string>}
     */
    get ipAddresses() {
        return this._json.ip_addresses;
    }
    /**
     * Get fqdn.
     * @returns {Array<string>}
     */
    get fqdn() {
        return this._json.fqdn;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayServer = EdgeGatewayDhcpRelayServer;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayType = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayType {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayTypeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayType = EdgeGatewayDhcpRelayType;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayTypeOptionList = void 0;
const edge_gateway_dhcp_relay_type_option_1 = __webpack_require__(327);
const edge_gateway_dhcp_relay_type_option_paging_params_1 = __webpack_require__(151);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayTypeOptionList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {EdgeGatewayDhcpRelayTypeOptionPagingParams}
     */
    get currentPageParameters() {
        return new edge_gateway_dhcp_relay_type_option_paging_params_1.EdgeGatewayDhcpRelayTypeOptionPagingParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {EdgeGatewayDhcpRelayTypeOptionPagingParams}
     */
    get nextPageParameters() {
        return new edge_gateway_dhcp_relay_type_option_paging_params_1.EdgeGatewayDhcpRelayTypeOptionPagingParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<EdgeGatewayDhcpRelayTypeOption>}
     */
    get data() {
        return this._json.data.map(o => new edge_gateway_dhcp_relay_type_option_1.EdgeGatewayDhcpRelayTypeOption(o));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayTypeOptionListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayTypeOptionList = EdgeGatewayDhcpRelayTypeOptionList;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayTypeOption = void 0;
const edge_gateway_dhcp_relay_type_option_property_1 = __webpack_require__(328);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayTypeOption {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get properties.
     * @returns {Array<EdgeGatewayDhcpRelayTypeOptionProperty>}
     */
    get properties() {
        return this._json.properties.map(p => new edge_gateway_dhcp_relay_type_option_property_1.EdgeGatewayDhcpRelayTypeOptionProperty(p));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayTypeOptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayTypeOption = EdgeGatewayDhcpRelayTypeOption;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpRelayTypeOptionProperty = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpRelayTypeOptionProperty {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpRelayTypeOptionPropertyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpRelayTypeOptionProperty = EdgeGatewayDhcpRelayTypeOptionProperty;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallRuleApplication = void 0;
/**
 * Firewall Rule Application
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallRuleApplication {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get application id.
     * @returns {string}
     */
    get applicationId() {
        return this._json.application_id;
    }
    /**
     * Get service.
     * @returns {Array<EdgeGatewayFirewallRuleService>}
     */
    get service() {
        return this._json.service;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallRuleApplicationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallRuleApplication = EdgeGatewayFirewallRuleApplication;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallRuleSourceDestination = void 0;
/**
 * Firewall Rule Source Destination
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallRuleSourceDestination {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get exclude.
     * @returns {boolean}
     */
    get exclude() {
        return this._json.exclude;
    }
    /**
     * Get ip addresses.
     * @returns {Array<string>}
     */
    get ipAddresses() {
        return this._json.ip_addresses;
    }
    /**
     * Get grouping object id.
     * @returns {Array<string>}
     */
    get groupingObjectId() {
        return this._json.grouping_object_id;
    }
    /**
     * Get vnic group id.
     * @returns {Array<string>}
     */
    get vnicGroupId() {
        return this._json.vnic_group_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallRuleSourceDestinationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallRuleSourceDestination = EdgeGatewayFirewallRuleSourceDestination;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallObjectList = void 0;
const edge_gateway_firewall_object_1 = __webpack_require__(332);
const edge_gateway_firewall_object_paging_params_1 = __webpack_require__(156);
/**
 * Edge Gateway Firewall Source Object List Response
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallObjectList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {EdgeGatewayFirewallObjectPagingParams}
     */
    get currentPageParameters() {
        return new edge_gateway_firewall_object_paging_params_1.EdgeGatewayFirewallObjectPagingParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {EdgeGatewayFirewallObjectPagingParams}
     */
    get nextPageParameters() {
        return new edge_gateway_firewall_object_paging_params_1.EdgeGatewayFirewallObjectPagingParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<EdgeGatewayFirewallObject>}
     */
    get data() {
        return this._json.data.map(o => new edge_gateway_firewall_object_1.EdgeGatewayFirewallObject(o));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallObjectListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallObjectList = EdgeGatewayFirewallObjectList;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallObject = void 0;
const edge_gateway_firewall_object_property_1 = __webpack_require__(333);
/**
 * Edge gateway firewall object
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallObject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get properties.
     * @returns {Array<EdgeGatewayFirewallObjectProperty>}
     */
    get properties() {
        return this._json.properties.map(p => new edge_gateway_firewall_object_property_1.EdgeGatewayFirewallObjectProperty(p));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallObjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallObject = EdgeGatewayFirewallObject;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallObjectProperty = void 0;
/**
 * Edge Gateway Firewall Object Property
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallObjectProperty {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallObjectProperty}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallObjectProperty = EdgeGatewayFirewallObjectProperty;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallObjectType = void 0;
/**
 * Edge Gateway Firewall Object Type
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallObjectType {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallObjectTypeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallObjectType = EdgeGatewayFirewallObjectType;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIPsec = void 0;
const edge_gateway_ipsec_global_1 = __webpack_require__(157);
const edge_gateway_ipsec_logging_1 = __webpack_require__(158);
const edge_gateway_ipsec_site_1 = __webpack_require__(159);
/* istanbul ignore next: autogenerated */
class EdgeGatewayIPsec {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayIpsecLogging}
     */
    get logging() {
        return new edge_gateway_ipsec_logging_1.EdgeGatewayIpsecLogging(this._json.logging);
    }
    /**
     * Get sites.
     * @returns {Array<EdgeGatewayIpsecSite>}
     */
    get sites() {
        return this._json.sites.map(it => new edge_gateway_ipsec_site_1.EdgeGatewayIpsecSite(it));
    }
    /**
     * Get global.
     * @returns {EdgeGatewayIpsecGlobal}
     */
    get global() {
        return new edge_gateway_ipsec_global_1.EdgeGatewayIpsecGlobal(this._json.global);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayIPsecJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIPsec = EdgeGatewayIPsec;


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecTunnelInterface = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayIpsecTunnelInterface {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get label.
     * @returns {string}
     */
    get label() {
        return this._json.label;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get mtu.
     * @returns {number}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayIpsecTunnelInterfaceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIpsecTunnelInterface = EdgeGatewayIpsecTunnelInterface;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2Vpn = void 0;
const edge_gateway_l2vpn_logging_1 = __webpack_require__(160);
const edge_gateway_l2vpn_site_1 = __webpack_require__(161);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2Vpn {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayL2VpnLogging}
     */
    get logging() {
        return new edge_gateway_l2vpn_logging_1.EdgeGatewayL2VpnLogging(this._json.logging);
    }
    /**
     * Get l2 v p n site type.
     * @returns {EdgeGatewayL2VpnSiteType}
     */
    get l2VpnSiteType() {
        return this._json.l2_vpn_site_type;
    }
    /**
     * Get l2 vpn site.
     * @returns {EdgeGatewayL2VpnSite | undefined}
     */
    get l2VpnSite() {
        if (!this._json.l2_vpn_site) {
            return undefined;
        }
        return new edge_gateway_l2vpn_site_1.EdgeGatewayL2VpnSite(this._json.l2_vpn_site);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2Vpn = EdgeGatewayL2Vpn;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnClient = void 0;
const edge_gateway_l2vpn_client_configuration_1 = __webpack_require__(339);
const edge_gateway_l2vpn_proxy_settings_1 = __webpack_require__(340);
const edge_gateway_l2vpn_user_1 = __webpack_require__(162);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnClient {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get configuration.
     * @returns {EdgeGatewayL2VpnClientConfiguration | undefined}
     */
    get configuration() {
        if (!this._json.configuration) {
            return undefined;
        }
        return new edge_gateway_l2vpn_client_configuration_1.EdgeGatewayL2VpnClientConfiguration(this._json.configuration);
    }
    /**
     * Get l2 vpn user.
     * @returns {EdgeGatewayL2VpnUser | undefined}
     */
    get l2VpnUser() {
        if (!this._json.l2_vpn_user) {
            return undefined;
        }
        return new edge_gateway_l2vpn_user_1.EdgeGatewayL2VpnUser(this._json.l2_vpn_user);
    }
    /**
     * Get proxy setting.
     * @returns {EdgeGatewayL2VpnProxySettings | undefined}
     */
    get proxySetting() {
        if (!this._json.proxy_setting) {
            return undefined;
        }
        return new edge_gateway_l2vpn_proxy_settings_1.EdgeGatewayL2VpnProxySettings(this._json.proxy_setting);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnClientJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnClient = EdgeGatewayL2VpnClient;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnClientConfiguration = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnClientConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get server address.
     * @returns {string}
     */
    get serverAddress() {
        return this._json.server_address;
    }
    /**
     * Get server port.
     * @returns {number}
     */
    get serverPort() {
        return this._json.server_port;
    }
    /**
     * Get ca certificate.
     * @returns {string}
     */
    get caCertificate() {
        return this._json.ca_certificate;
    }
    /**
     * Get vnic.
     * @returns {Array<number>}
     */
    get vnic() {
        return this._json.vnic;
    }
    /**
     * Get egress optimization.
     * @returns {Array<string>}
     */
    get egressOptimization() {
        return this._json.egress_optimization;
    }
    /**
     * Get encryption algorithm.
     * @returns {Array<EdgeGatewayL2vpnEncryptionAlgorithmType>}
     */
    get encryptionAlgorithm() {
        return this._json.encryption_algorithm;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnClientConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnClientConfiguration = EdgeGatewayL2VpnClientConfiguration;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnProxySettings = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnProxySettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get address.
     * @returns {string}
     */
    get address() {
        return this._json.address;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get user name.
     * @returns {string}
     */
    get userName() {
        return this._json.user_name;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnProxySettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnProxySettings = EdgeGatewayL2VpnProxySettings;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnServer = void 0;
const edge_gateway_l2vpn_server_configuration_1 = __webpack_require__(342);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnServer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get configuration.
     * @returns {EdgeGatewayL2VpnServerConfiguration | undefined}
     */
    get configuration() {
        if (!this._json.configuration) {
            return undefined;
        }
        return new edge_gateway_l2vpn_server_configuration_1.EdgeGatewayL2VpnServerConfiguration(this._json.configuration);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnServer = EdgeGatewayL2VpnServer;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnServerConfiguration = void 0;
const edge_gateway_l2vpn_peer_site_1 = __webpack_require__(343);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnServerConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get listener ip.
     * @returns {string}
     */
    get listenerIp() {
        return this._json.listener_ip;
    }
    /**
     * Get listener port.
     * @returns {number}
     */
    get listenerPort() {
        return this._json.listener_port;
    }
    /**
     * Get encryption algorithm.
     * @returns {Array<EdgeGatewayL2vpnEncryptionAlgorithmType>}
     */
    get encryptionAlgorithm() {
        return this._json.encryption_algorithm ? this._json.encryption_algorithm : [];
    }
    /**
     * Get server certificate.
     * @returns {string}
     */
    get serverCertificate() {
        return this._json.server_certificate;
    }
    /**
     * Get peer sites.
     * @returns {Array<EdgeGatewayL2VpnPeerSite>}
     */
    get peerSites() {
        return this._json.peer_sites ? this._json.peer_sites.map(it => new edge_gateway_l2vpn_peer_site_1.EdgeGatewayL2VpnPeerSite(it)) : [];
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnServerConfigurationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnServerConfiguration = EdgeGatewayL2VpnServerConfiguration;


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnPeerSite = void 0;
const edge_gateway_l2vpn_user_1 = __webpack_require__(162);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnPeerSite {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get l2 vpn user.
     * @returns {EdgeGatewayL2VpnUser}
     */
    get l2VpnUser() {
        return this._json.l2_vpn_user ? new edge_gateway_l2vpn_user_1.EdgeGatewayL2VpnUser(this._json.l2_vpn_user) : null;
    }
    /**
     * Get vnics.
     * @returns {Array<number>}
     */
    get vnics() {
        return this._json.vnics || [];
    }
    /**
     * Get egress optimization.
     * @returns {Array<string>}
     */
    get egressOptimization() {
        return this._json.egress_optimization || [];
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnPeerSiteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnPeerSite = EdgeGatewayL2VpnPeerSite;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2vpnStatistics = void 0;
const edge_gateway_l2vpn_statistics_data_1 = __webpack_require__(345);
/**
 * L2VPN Statistics Object returned by API
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2vpnStatistics {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time stamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get l2vpn statistics data.
     * @returns {Array<EdgeGatewayL2vpnStatisticsData>}
     */
    get data() {
        return (this._json.l2vpn_stats || []).map(it => new edge_gateway_l2vpn_statistics_data_1.EdgeGatewayL2vpnStatisticsData(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2vpnStatisticsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2vpnStatistics = EdgeGatewayL2vpnStatistics;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2vpnStatisticsData = void 0;
/**
 * L2VPN Statistics object
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2vpnStatisticsData {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get tunnel status.
     * @returns {EdgeGatewayL2vpnTunnelStatusType}
     */
    get tunnelStatus() {
        return this._json.tunnel_status;
    }
    /**
     * Get established date.
     * @returns {number}
     */
    get establishedDate() {
        return this._json.established_date;
    }
    /**
     * Get tx bytes from local subnet.
     * @returns {number}
     */
    get txBytesFromLocalSubnet() {
        return this._json.tx_bytes_from_local_subnet;
    }
    /**
     * Get rx bytes on local subnet.
     * @returns {number}
     */
    get rxBytesOnLocalSubnet() {
        return this._json.rx_bytes_on_local_subnet;
    }
    /**
     * Get dropped rx packets.
     * @returns {number}
     */
    get droppedRxPackets() {
        return this._json.dropped_rx_packets;
    }
    /**
     * Get dropped tx packets.
     * @returns {number}
     */
    get droppedTxPackets() {
        return this._json.dropped_tx_packets;
    }
    /**
     * Get failure message.
     * @returns {string}
     */
    get failureMessage() {
        return this._json.failure_message;
    }
    /**
     * Get last updated time.
     * @returns {number}
     */
    get lastUpdatedTime() {
        return this._json.last_updated_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2vpnStatisticsDataJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2vpnStatisticsData = EdgeGatewayL2vpnStatisticsData;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayRouting = void 0;
const routing_bgp_config_1 = __webpack_require__(166);
const routing_global_config_1 = __webpack_require__(170);
const routing_ospf_config_1 = __webpack_require__(173);
const routing_static_config_1 = __webpack_require__(175);
/**
 * Edge Gateway Routing
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayRouting {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get routing global config.
     * @returns {RoutingGlobalConfig}
     */
    get routingGlobalConfig() {
        return new routing_global_config_1.RoutingGlobalConfig(this._json.routing_global_config);
    }
    /**
     * Get routing static config.
     * @returns {RoutingStaticConfig}
     */
    get routingStaticConfig() {
        return new routing_static_config_1.RoutingStaticConfig(this._json.routing_static_config);
    }
    /**
     * Get routing ospf config.
     * @returns {RoutingOSPFConfig}
     */
    get routingOspfConfig() {
        return new routing_ospf_config_1.RoutingOSPFConfig(this._json.routing_ospf_config);
    }
    /**
     * Get routing bgp config.
     * @returns {RoutingBGPConfig | undefined}
     */
    get routingBgpConfig() {
        return this._json.routing_bgp_config ? new routing_bgp_config_1.RoutingBGPConfig(this._json.routing_bgp_config) : undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayRoutingJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayRouting = EdgeGatewayRouting;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BGPFilter = void 0;
/**
 * BGP Filter
 */
/* istanbul ignore next: autogenerated */
class BGPFilter {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get direction.
     * @returns {RoutingDirectionType}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get action.
     * @returns {RoutingActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get network.
     * @returns {string | undefined}
     */
    get network() {
        return this._json.network || undefined;
    }
    /**
     * Get ip prefix ge.
     * @returns {number | undefined}
     */
    get ipPrefixGe() {
        return this._json.ip_prefix_ge || undefined;
    }
    /**
     * Get ip prefix le.
     * @returns {number | undefined}
     */
    get ipPrefixLe() {
        return this._json.ip_prefix_le || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {BGPFilterJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BGPFilter = BGPFilter;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.From = void 0;
/**
 * From
 */
/* istanbul ignore next: autogenerated */
class From {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ospf.
     * @returns {boolean}
     */
    get ospf() {
        return this._json.ospf;
    }
    /**
     * Get bgp.
     * @returns {boolean}
     */
    get bgp() {
        return this._json.bgp;
    }
    /**
     * Get static route.
     * @returns {boolean}
     */
    get staticRoute() {
        return this._json.static_route;
    }
    /**
     * Get connected.
     * @returns {boolean}
     */
    get connected() {
        return this._json.connected;
    }
    /**
     * Get the json representation of this class.
     * @returns {FromJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.From = From;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OSPFArea = void 0;
const authentication_1 = __webpack_require__(350);
/**
 * OSPF Area
 */
/* istanbul ignore next: autogenerated */
class OSPFArea {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get area id.
     * @returns {number}
     */
    get areaId() {
        return this._json.area_id;
    }
    /**
     * Get type.
     * @returns {RoutingAreaType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get authentication.
     * @returns {Authentication}
     */
    get authentication() {
        return new authentication_1.Authentication(this._json.authentication);
    }
    /**
     * Get translate type 7 to type 5.
     * @returns {boolean | undefined}
     */
    get translateType7ToType5() {
        return this._json.translate_type_7_to_type_5 || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {OSPFAreaJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OSPFArea = OSPFArea;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Authentication = void 0;
/**
 * Authentication
 */
/* istanbul ignore next: autogenerated */
class Authentication {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {RoutingAuthenticationType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get value.
     * @returns {string | undefined}
     */
    get value() {
        return this._json.value || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {AuthenticationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Authentication = Authentication;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySSHSettings = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySSHSettings {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get remote access.
     * @returns {boolean}
     */
    get remoteAccess() {
        return this._json.remote_access;
    }
    /**
     * Get user name.
     * @returns {string}
     */
    get userName() {
        return this._json.user_name;
    }
    /**
     * Get ssh login banner.
     * @returns {string}
     */
    get sshLoginBanner() {
        return this._json.ssh_login_banner;
    }
    /**
     * Get password expiry.
     * @returns {number}
     */
    get passwordExpiry() {
        return this._json.password_expiry;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySSHSettingsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySSHSettings = EdgeGatewaySSHSettings;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySyslog = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySyslog {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get server addresses.
     * @returns {Array<string>}
     */
    get serverAddresses() {
        return this._json.server_addresses;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySyslogJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySyslog = EdgeGatewaySyslog;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnTimeout = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnTimeout {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get forced timeout.
     * @returns {number}
     */
    get forcedTimeout() {
        return this._json.forced_timeout;
    }
    /**
     * Get session idle timeout.
     * @returns {number}
     */
    get sessionIdleTimeout() {
        return this._json.session_idle_timeout;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnTimeoutJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnTimeout = EdgeGatewaySslVpnTimeout;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnPasswordAuthentication = void 0;
const edge_gateway_ssl_vpn_ad_auth_server_1 = __webpack_require__(355);
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
const edge_gateway_ssl_vpn_ldap_auth_server_1 = __webpack_require__(356);
const edge_gateway_ssl_vpn_local_auth_server_1 = __webpack_require__(357);
const edge_gateway_ssl_vpn_radius_auth_server_1 = __webpack_require__(360);
const edge_gateway_ssl_vpn_rsa_auth_server_1 = __webpack_require__(361);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnPasswordAuthentication {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get authentication timeout.
     * @returns {number}
     */
    get authenticationTimeout() {
        return this._json.authentication_timeout;
    }
    /**
     * Get primary auth servers.
     * @returns {Array<EdgeGatewaySslVpnAuthServer>}
     */
    get primaryAuthServers() {
        return this._json.primary_auth_servers
            ? this._json.primary_auth_servers.map(it => {
                switch (it.auth_server_type.toString()) {
                    case 'AD':
                        return new edge_gateway_ssl_vpn_ad_auth_server_1.EdgeGatewaySslVpnAdAuthServer(it);
                    case 'LDAP':
                        return new edge_gateway_ssl_vpn_ldap_auth_server_1.EdgeGatewaySslVpnLdapAuthServer(it);
                    case 'LOCAL':
                        return new edge_gateway_ssl_vpn_local_auth_server_1.EdgeGatewaySslVpnLocalAuthServer(it);
                    case 'RADIUS':
                        return new edge_gateway_ssl_vpn_radius_auth_server_1.EdgeGatewaySslVpnRadiusAuthServer(it);
                    case 'RSA':
                        return new edge_gateway_ssl_vpn_rsa_auth_server_1.EdgeGatewaySslVpnRsaAuthServer(it);
                    default:
                        return new edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer(it);
                }
            })
            : [];
    }
    /**
     * Get secondary auth server.
     * @returns {EdgeGatewaySslVpnAuthServer | null}
     */
    get secondaryAuthServer() {
        if (!this._json.secondary_auth_server) {
            return null;
        }
        const it = this._json.secondary_auth_server;
        switch (it.auth_server_type.toString()) {
            case 'AD':
                return new edge_gateway_ssl_vpn_ad_auth_server_1.EdgeGatewaySslVpnAdAuthServer(it);
            case 'LDAP':
                return new edge_gateway_ssl_vpn_ldap_auth_server_1.EdgeGatewaySslVpnLdapAuthServer(it);
            case 'LOCAL':
                return new edge_gateway_ssl_vpn_local_auth_server_1.EdgeGatewaySslVpnLocalAuthServer(it);
            case 'RADIUS':
                return new edge_gateway_ssl_vpn_radius_auth_server_1.EdgeGatewaySslVpnRadiusAuthServer(it);
            case 'RSA':
                return new edge_gateway_ssl_vpn_rsa_auth_server_1.EdgeGatewaySslVpnRsaAuthServer(it);
            default:
                return new edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer(it);
        }
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnPasswordAuthenticationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnPasswordAuthentication = EdgeGatewaySslVpnPasswordAuthentication;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAdAuthServer = void 0;
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnAdAuthServer extends edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._json.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get enable ssl.
     * @returns {boolean}
     */
    get enableSsl() {
        return this._json.enable_ssl;
    }
    /**
     * Get search base.
     * @returns {string}
     */
    get searchBase() {
        return this._json.search_base;
    }
    /**
     * Get bind domain name.
     * @returns {string}
     */
    get bindDomainName() {
        return this._json.bind_domain_name;
    }
    /**
     * Get bind password.
     * @returns {string}
     */
    get bindPassword() {
        return this._json.bind_password;
    }
    /**
     * Get login attribute name.
     * @returns {string}
     */
    get loginAttributeName() {
        return this._json.login_attribute_name;
    }
    /**
     * Get search filter.
     * @returns {string}
     */
    get searchFilter() {
        return this._json.search_filter;
    }
    /**
     * Get certificate sha1 digest.
     * @returns {string}
     */
    get certificateSha1Digest() {
        return this._json.certificate_sha1_digest;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._json.auth_server_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnAdAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnAdAuthServer = EdgeGatewaySslVpnAdAuthServer;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnLdapAuthServer = void 0;
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnLdapAuthServer extends edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._json.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get enable ssl.
     * @returns {boolean}
     */
    get enableSsl() {
        return this._json.enable_ssl;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get search base.
     * @returns {string}
     */
    get searchBase() {
        return this._json.search_base;
    }
    /**
     * Get bind domain name.
     * @returns {string}
     */
    get bindDomainName() {
        return this._json.bind_domain_name;
    }
    /**
     * Get bind password.
     * @returns {string}
     */
    get bindPassword() {
        return this._json.bind_password;
    }
    /**
     * Get login attribute name.
     * @returns {string}
     */
    get loginAttributeName() {
        return this._json.login_attribute_name;
    }
    /**
     * Get search filter.
     * @returns {string}
     */
    get searchFilter() {
        return this._json.search_filter;
    }
    /**
     * Get certificate sha1 digest.
     * @returns {string}
     */
    get certificateSha1Digest() {
        return this._json.certificate_sha1_digest;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._json.auth_server_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnLdapAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnLdapAuthServer = EdgeGatewaySslVpnLdapAuthServer;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnLocalAuthServer = void 0;
const edge_gateway_ssl_vpn_account_lockout_policy_1 = __webpack_require__(358);
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
const edge_gateway_ssl_vpn_password_policy_1 = __webpack_require__(359);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnLocalAuthServer extends edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._json.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get password policy.
     * @returns {EdgeGatewaySslVpnPasswordPolicy | null}
     */
    get passwordPolicy() {
        return this._json.password_policy ? new edge_gateway_ssl_vpn_password_policy_1.EdgeGatewaySslVpnPasswordPolicy(this._json.password_policy) : null;
    }
    /**
     * Get account lockout policy.
     * @returns {AccountLockoutPolicy | null}
     */
    get accountLockoutPolicy() {
        return this._json.account_lockout_policy
            ? new edge_gateway_ssl_vpn_account_lockout_policy_1.EdgeGatewaySslVpnAccountLockoutPolicy(this._json.account_lockout_policy)
            : null;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._json.auth_server_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnLocalAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnLocalAuthServer = EdgeGatewaySslVpnLocalAuthServer;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAccountLockoutPolicy = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnAccountLockoutPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get retry count.
     * @returns {number}
     */
    get retryCount() {
        return this._json.retry_count;
    }
    /**
     * Get retry duration.
     * @returns {number}
     */
    get retryDuration() {
        return this._json.retry_duration;
    }
    /**
     * Get lockout duration.
     * @returns {number}
     */
    get lockoutDuration() {
        return this._json.lockout_duration;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnAccountLockoutPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnAccountLockoutPolicy = EdgeGatewaySslVpnAccountLockoutPolicy;


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnPasswordPolicy = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnPasswordPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get min length.
     * @returns {number}
     */
    get minLength() {
        return this._json.min_length;
    }
    /**
     * Get max length.
     * @returns {number}
     */
    get maxLength() {
        return this._json.max_length;
    }
    /**
     * Get min alphabets.
     * @returns {number}
     */
    get minAlphabets() {
        return this._json.min_alphabets;
    }
    /**
     * Get min digits.
     * @returns {number}
     */
    get minDigits() {
        return this._json.min_digits;
    }
    /**
     * Get min special char.
     * @returns {number}
     */
    get minSpecialChar() {
        return this._json.min_special_char;
    }
    /**
     * Get allow user id within password.
     * @returns {boolean}
     */
    get allowUserIdWithinPassword() {
        return this._json.allow_user_id_within_password;
    }
    /**
     * Get password life time.
     * @returns {number}
     */
    get passwordLifeTime() {
        return this._json.password_life_time;
    }
    /**
     * Get expiry notification.
     * @returns {number}
     */
    get expiryNotification() {
        return this._json.expiry_notification;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnPasswordPolicyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnPasswordPolicy = EdgeGatewaySslVpnPasswordPolicy;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnRadiusAuthServer = void 0;
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnRadiusAuthServer extends edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._json.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get secret.
     * @returns {string}
     */
    get secret() {
        return this._json.secret;
    }
    /**
     * Get nas ip.
     * @returns {string}
     */
    get nasIp() {
        return this._json.nas_ip;
    }
    /**
     * Get retry count.
     * @returns {number}
     */
    get retryCount() {
        return this._json.retry_count;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._json.auth_server_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnRadiusAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnRadiusAuthServer = EdgeGatewaySslVpnRadiusAuthServer;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnRsaAuthServer = void 0;
const edge_gateway_ssl_vpn_auth_server_1 = __webpack_require__(40);
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnRsaAuthServer extends edge_gateway_ssl_vpn_auth_server_1.EdgeGatewaySslVpnAuthServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get secondary auth server.
     * @returns {boolean}
     */
    get secondaryAuthServer() {
        return this._json.secondary_auth_server;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get config file.
     * @returns {string}
     */
    get configFile() {
        return this._json.config_file;
    }
    /**
     * Get config file data.
     * @returns {string}
     */
    get configFileData() {
        return this._json.config_file_data;
    }
    /**
     * Get config file name.
     * @returns {string}
     */
    get configFileName() {
        return this._json.config_file_name;
    }
    /**
     * Get source ip.
     * @returns {string}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get auth server type.
     * @returns {EdgeGatewaySslVpnAuthServerType}
     */
    get authServerType() {
        return this._json.auth_server_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnRsaAuthServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnRsaAuthServer = EdgeGatewaySslVpnRsaAuthServer;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnFullTunnel = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnFullTunnel {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get exclude local subnets.
     * @returns {boolean}
     */
    get excludeLocalSubnets() {
        return this._json.exclude_local_subnets;
    }
    /**
     * Get gateway ip.
     * @returns {string}
     */
    get gatewayIp() {
        return this._json.gateway_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnFullTunnelJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnFullTunnel = EdgeGatewaySslVpnFullTunnel;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnGateway = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnGateway {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get host name.
     * @returns {string}
     */
    get hostName() {
        return this._json.host_name;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnGatewayJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnGateway = EdgeGatewaySslVpnGateway;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnSendOverTunnel = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySslVpnSendOverTunnel {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ports.
     * @returns {string}
     */
    get ports() {
        return this._json.ports;
    }
    /**
     * Get optimize.
     * @returns {boolean}
     */
    get optimize() {
        return this._json.optimize;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnSendOverTunnelJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnSendOverTunnel = EdgeGatewaySslVpnSendOverTunnel;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayVNIC = void 0;
const vnic_address_group_1 = __webpack_require__(188);
const vnic_mac_address_1 = __webpack_require__(367);
const vnic_shaping_policy_1 = __webpack_require__(368);
const vnic_sub_interface_1 = __webpack_require__(369);
/**
 * Edge Gateway VNIC.
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayVNIC {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get index.
     * @returns {number}
     */
    get index() {
        return this._json.index;
    }
    /**
     * Get label.
     * @returns {string}
     */
    get label() {
        return this._json.label;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get type.
     * @returns {VnicType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get portgroup id.
     * @returns {string}
     */
    get portgroupId() {
        return this._json.portgroup_id;
    }
    /**
     * Get portgroup name.
     * @returns {string}
     */
    get portgroupName() {
        return this._json.portgroup_name;
    }
    /**
     * Get address groups.
     * @returns {Array<AddressGroup>}
     */
    get addressGroups() {
        return this._json.address_groups ? this._json.address_groups.map(it => new vnic_address_group_1.AddressGroup(it)) : [];
    }
    /**
     * Get mac address.
     * @returns {Array<MacAddress>}
     */
    get macAddress() {
        return this._json.mac_address ? this._json.mac_address.map(it => new vnic_mac_address_1.MacAddress(it)) : [];
    }
    /**
     * Get mtu.
     * @returns {number}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Get enable proxy arp.
     * @returns {boolean}
     */
    get enableProxyArp() {
        return this._json.enable_proxy_arp;
    }
    /**
     * Get enable send redirects.
     * @returns {boolean}
     */
    get enableSendRedirects() {
        return this._json.enable_send_redirects;
    }
    /**
     * Get is connected.
     * @returns {boolean}
     */
    get isConnected() {
        return this._json.is_connected;
    }
    /**
     * Get in shaping policy.
     * @returns {ShapingPolicy}
     */
    get inShapingPolicy() {
        return this._json.in_shaping_policy ? new vnic_shaping_policy_1.ShapingPolicy(this._json.in_shaping_policy) : null;
    }
    /**
     * Get out shaping policy.
     * @returns {ShapingPolicy}
     */
    get outShapingPolicy() {
        return this._json.out_shaping_policy ? new vnic_shaping_policy_1.ShapingPolicy(this._json.out_shaping_policy) : null;
    }
    /**
     * Get sub interfaces.
     * @returns {Array<SubInterfaceJson>}
     */
    get subInterfaces() {
        return this._json.sub_interfaces.map(it => new vnic_sub_interface_1.VnicSubInterface(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayVNICJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayVNIC = EdgeGatewayVNIC;


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecondaryAddresses = void 0;
/**
 * Edge Gateway VNIC Secondary Addresses.
 */
/* istanbul ignore next: autogenerated */
class SecondaryAddresses {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ip address.
     * @returns {Array<string>}
     */
    get ipAddress() {
        return this._json.ip_address || [];
    }
    /**
     * Get the json representation of this class.
     * @returns {SecondaryAddresses}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecondaryAddresses = SecondaryAddresses;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MacAddress = void 0;
/**
 * Edge Gateway VNIC MAC Address.
 */
/* istanbul ignore next: autogenerated */
class MacAddress {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge vm ha index.
     * @returns {number}
     */
    get edgeVmHaIndex() {
        return this._json.edge_vm_ha_index;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {MacAddress}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MacAddress = MacAddress;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapingPolicy = void 0;
/**
 * Edge Gateway VNIC Shaping Policy.
 */
/* istanbul ignore next: autogenerated */
class ShapingPolicy {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get average bandwidth.
     * @returns {number}
     */
    get averageBandwidth() {
        return this._json.average_bandwidth;
    }
    /**
     * Get peak bandwidth.
     * @returns {number}
     */
    get peakBandwidth() {
        return this._json.peak_bandwidth;
    }
    /**
     * Get burst size.
     * @returns {number}
     */
    get burstSize() {
        return this._json.burst_size;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get inherited.
     * @returns {boolean}
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Get the json representation of this class.
     * @returns {ShapingPolicy}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ShapingPolicy = ShapingPolicy;


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VnicSubInterface = void 0;
const vnic_address_group_1 = __webpack_require__(188);
/* istanbul ignore next: autogenerated */
class VnicSubInterface {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get is connected.
     * @returns {boolean}
     */
    get isConnected() {
        return this._json.is_connected;
    }
    /**
     * Get label.
     * @returns {string}
     */
    get label() {
        return this._json.label;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get index.
     * @returns {number}
     */
    get index() {
        return this._json.index;
    }
    /**
     * Get tunnel id.
     * @returns {number}
     */
    get tunnelId() {
        return this._json.tunnel_id;
    }
    /**
     * Get vlan id.
     * @returns {number}
     */
    get vlanId() {
        return this._json.vlan_id;
    }
    /**
     * Get enable send redirects.
     * @returns {boolean}
     */
    get enableSendRedirects() {
        return this._json.enable_send_redirects;
    }
    /**
     * Get mtu.
     * @returns {number}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Get address groups.
     * @returns {Array<AddressGroup>}
     */
    get addressGroups() {
        return this._json.address_groups.map(it => new vnic_address_group_1.AddressGroup(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VnicSubInterfaceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VnicSubInterface = VnicSubInterface;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeInterface = void 0;
const subnet_participation_1 = __webpack_require__(371);
/**
 * Edge Gateway Interface.
 */
class EdgeInterface {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the interface name.
     * @returns {string} interface name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the display name.
     * @returns {string | null} display name
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Gets the incoming rate limit setting.
     * @returns {number} incoming rate limit
     */
    get inRateLimit() {
        return this._json.in_rate_limit;
    }
    /**
     * Gets the outgoing rate limit setting.
     * @returns {number} outgoing rate limit
     */
    get outRateLimit() {
        return this._json.out_rate_limit;
    }
    /**
     * Gets the interface type.
     * @returns {EdgeInterfaceType | null} interface type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Indicates whether rate limiting is enabled on this edge.
     * @returns {boolean} value
     */
    get rateLimitEnabled() {
        return this._json.apply_rate_limit;
    }
    /**
     * Indicates whether this edge is used as the default DNS relay route.
     * @returns {boolean | null} value
     */
    get defaultRoute() {
        return this._json.default_route;
    }
    /**
     * Gets the name of the network that is attached to this interface.
     * @returns {string | null} network name
     */
    get networkName() {
        return this._json.network;
    }
    /**
     * Gets the UUID of the network that is attached to this interface.
     * @returns {string | null} network UUID
     */
    get networkUuid() {
        return this._json.network_uuid;
    }
    /**
     * Gets the subnet participation information.
     * @returns {[SubnetParticipation]} subnet participation array
     */
    get subnetParticipation() {
        const subnetParticipation = this._json.subnet_participation || [];
        return subnetParticipation.map(spJson => new subnet_participation_1.SubnetParticipation(spJson));
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {EdgeInterfaceJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.EdgeInterface = EdgeInterface;


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SubnetParticipation = void 0;
const ip_range_1 = __webpack_require__(32);
/**
 * Edge Gateway Subnet Participation.
 */
class SubnetParticipation {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the gateway address on the network.
     * @returns {string | null} gateway address
     */
    get gatewayAddress() {
        return this._json.gateway;
    }
    /**
     * Gets the networks netmask.
     * @returns {string | null} netmask
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Gets the IP address.
     * @returns {string | null} IP address
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Gets the assigned IP ranges.
     * @returns {[IpRange]} IP address ranges
     */
    get ipRanges() {
        const ipRanges = this._json.ip_ranges || [];
        return ipRanges.map(rangeJson => new ip_range_1.IpRange(rangeJson));
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {EdgeSubnetParticipationJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.SubnetParticipation = SubnetParticipation;


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Firewall = void 0;
const firewall_rule_1 = __webpack_require__(189);
/**
 * Firewall class
 */
class Firewall {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid.
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather the Firewall has logging enabled or not.
     * @returns {boolean}
     */
    get log() {
        return this._json.log;
    }
    /**
     * Check weather the Firewall is enabled or not.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default action.
     * @returns {string | null}
     */
    get defaultAction() {
        return this._json.default_action;
    }
    /**
     * Get a list of firewall rules.
     * @returns {Array<FirewallRule>}
     */
    get rules() {
        const rules = this._json.rules || [];
        return rules.map(rule => new firewall_rule_1.FirewallRule(rule));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeFirewallJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Firewall = Firewall;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallConfiguration = void 0;
const firewall_rule_1 = __webpack_require__(189);
/**
 * Firewall Configuration class.
 */
class FirewallConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the version.
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get edge uuid.
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather the Firewall has logging enabled or not.
     * @returns {boolean}
     */
    get log() {
        return this._json.log;
    }
    /**
     * Check weather the Firewall is enabled or not.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default action.
     * @returns {string | null}
     */
    get defaultAction() {
        return this._json.default_action;
    }
    /**
     * Get a list of firewall rules.
     * @returns {Array<FirewallRule>}
     */
    get rules() {
        const rules = this._json.rules || [];
        return rules.map(rule => new firewall_rule_1.FirewallRule(rule));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeFirewallConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallConfiguration = FirewallConfiguration;


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallLog = void 0;
class FirewallLog {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid.
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get time.
     * @returns {Date | null}
     */
    get time() {
        return this._json.time ? new Date(this._json.time) : null;
    }
    /**
     * Get destination port.
     * @returns {number | null}
     */
    get destPort() {
        return this._json.dest_port;
    }
    /**
     * Get count
     * @returns {number}
     */
    get count() {
        return this._json.count;
    }
    /**
     * Get destination IP.
     * @returns {string | null}
     */
    get destIp() {
        return this._json.dest_ip;
    }
    /**
     * Get action
     * @returns {string | null}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get source IP.
     * @returns {string | null}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get protocol
     * @returns {string | null}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeFirewallLogJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallLog = FirewallLog;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpsecVpn = void 0;
const ip_sec_vpn_site_1 = __webpack_require__(376);
/**
 * IpsecVpn class
 */
class IpsecVpn {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather IpsecVpn is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get global settings
     * @returns {GlobalSettingsJson}
     */
    get globalSettings() {
        return this._json.global_settings;
    }
    /**
     * Get logging settings
     * @returns {LoggingSettingsJson}
     */
    get loggingSettings() {
        return this._json.logging_settings;
    }
    /**
     * Get Ip Sec Vpn Sites
     * @returns {Array<IpSecVpnSite>}
     */
    get sites() {
        return this._json.sites.map(site => new ip_sec_vpn_site_1.IpSecVpnSite(site));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpsecVpnServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpsecVpn = IpsecVpn;


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnSite = void 0;
class IpSecVpnSite {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Check weather IpSecVpnTunnel is enabled or not.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get local ID
     * @returns {string | null}
     */
    get localId() {
        return this._json.local_id;
    }
    /**
     * Get local IP address
     * @returns {string | null}
     */
    get localIp() {
        return this._json.local_ip;
    }
    /**
     * Get peer ID
     * @returns {string | null}
     */
    get peerId() {
        return this._json.peer_id;
    }
    /**
     * Get peer IP address
     * @returns {string | null}
     */
    get peerIp() {
        return this._json.peer_ip;
    }
    /**
     * Get vpn's psk
     * @returns {string}
     */
    get psk() {
        return this._json.psk;
    }
    /**
     * Get encryption algorithm
     * @returns {EncryptionAlgorithm}
     */
    get encryptionAlgorithm() {
        return this._json.encryption_algorithm;
    }
    /**
     * Get authentication mode
     * @returns {AuthenticationMode}
     */
    get authenticationMode() {
        return this._json.authentication_mode;
    }
    /**
     * Get enable pfs
     * @returns {boolean}
     */
    get enablePfs() {
        return this._json.enable_pfs;
    }
    /**
     * Get DH Group
     * @returns {DHGroup}
     */
    get dhGroup() {
        return this._json.dh_group;
    }
    /**
     * Get local subnets
     * @returns {Array<string>}
     */
    get localSubnets() {
        return this._json.local_subnets;
    }
    /**
     * Get peer subnets
     * @returns {Array<string>}
     */
    get peerSubnets() {
        return this._json.peer_subnets;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {IpSecVpnSiteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnSite = IpSecVpnSite;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpsecVpnConfiguration = void 0;
const ip_sec_vpn_endpoint_1 = __webpack_require__(378);
const ip_sec_vpn_tunnel_1 = __webpack_require__(379);
/**
 * Ipsec Vpn Configuration class.
 */
class IpsecVpnConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the version.
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather IpsecVpn is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get list of vpn-endpoints
     * @returns {Array<IpSecVpnEndpoint>}
     */
    get endpoints() {
        return this._json.endpoints.map(endpoint => new ip_sec_vpn_endpoint_1.IpSecVpnEndpoint(endpoint));
    }
    /**
     * Get list of tunnels
     * @returns {Array<IpSecVpnTunnel>}
     */
    get tunnels() {
        return this._json.tunnels.map(tunnel => new ip_sec_vpn_tunnel_1.IpSecVpnTunnel(tunnel));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpsecVpnServiceConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpsecVpnConfiguration = IpsecVpnConfiguration;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnEndpoint = void 0;
/**
 * IpSecVpnEndpoint class
 */
class IpSecVpnEndpoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get public IP
     * @returns {string | null}
     */
    get publicIp() {
        return this._json.public_ip;
    }
    /**
     * Get network
     * @returns {string | null}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpSecVpnEndpointJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnEndpoint = IpSecVpnEndpoint;


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnTunnel = void 0;
const ip_sec_vpn_peer_1 = __webpack_require__(380);
const ip_sec_vpn_subnet_1 = __webpack_require__(381);
/**
 * IpSecVpnTunnel class
 */
class IpSecVpnTunnel {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get peer IP address
     * @returns {string | null}
     */
    get peerIpAddress() {
        return this._json.peer_ip_address;
    }
    /**
     * Get peer ID
     * @returns {string | null}
     */
    get peerId() {
        return this._json.peer_id;
    }
    /**
     * Get local ID
     * @returns {string | null}
     */
    get localId() {
        return this._json.local_id;
    }
    /**
     * Get local IP address
     * @returns {string | null}
     */
    get localIpAddress() {
        return this._json.local_ip_address;
    }
    /**
     * Get shared secret
     * @returns {string | null}
     */
    get sharedSecret() {
        return this._json.shared_secret;
    }
    /**
     * Check weather IpSecVpnTunnel shared secret is encrypted or not.
     * @returns {boolean | null}
     */
    get sharedSecretEncrypted() {
        return this._json.shared_secret_encrypted;
    }
    /**
     * Get encryption protocol
     * @returns {string | null}
     */
    get encryptionProtocol() {
        return this._json.encryption_protocol;
    }
    /**
     * Get mtu
     * @returns {number | null}
     */
    get mtu() {
        return this._json.mtu;
    }
    /**
     * Check weather IpSecVpnTunnel is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Check weather IpSecVpnTunnel is operational or not.
     * @returns {boolean | null}
     */
    get operational() {
        return this._json.operational;
    }
    /**
     * Get error details
     * @returns {string | null}
     */
    get errorDetails() {
        return this._json.error_details;
    }
    /**
     * Get list of localSubnet
     * @returns {Array<IpSecVpnSubnet>}
     */
    get localSubnets() {
        return this._json.local_subnets.map(subnet => new ip_sec_vpn_subnet_1.IpSecVpnSubnet(subnet));
    }
    /**
     * Get list of peerSubnet
     * @returns {Array<IpSecVpnSubnet>}
     */
    get peerSubnets() {
        return this._json.peer_subnets.map(subnet => new ip_sec_vpn_subnet_1.IpSecVpnSubnet(subnet));
    }
    /**
     * Get vpn peer
     * @returns {IpSecVpnPeer | null}
     */
    get vpnPeer() {
        return this._json.vpn_peer ? new ip_sec_vpn_peer_1.IpSecVpnPeer(this._json.vpn_peer) : null;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpSecVpnTunnelJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnTunnel = IpSecVpnTunnel;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnPeer = void 0;
/**
 * IpSecVpnPeer class
 */
class IpSecVpnPeer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string | null}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get ID
     * @returns {string | null}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get vdc URL
     * @returns {string | null}
     */
    get vcdUrl() {
        return this._json.vcd_url;
    }
    /**
     * Get vdc Org
     * @returns {string | null}
     */
    get vcdOrg() {
        return this._json.vcd_org;
    }
    /**
     * Get vdc username
     * @returns {string | null}
     */
    get vcdUsername() {
        return this._json.vcd_username;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpSecVpnPeerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnPeer = IpSecVpnPeer;


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnSubnet = void 0;
/**
 * IpSecVpnSubnet class
 */
class IpSecVpnSubnet {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get gateway
     * @returns {string | null}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get netmask
     * @returns {string | null}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {EdgeIpSecVpnSubnetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnSubnet = IpSecVpnSubnet;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancer = void 0;
const load_balancer_pool_1 = __webpack_require__(383);
const load_balancer_virtual_server_1 = __webpack_require__(386);
/**
 * LoadBalancer class
 */
class LoadBalancer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather this LoadBalancer is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get a list of virtual servers
     * @returns {Array<LoadBalancerVirtualServer>}
     */
    get virtualServers() {
        return this._json.virtual_servers.map(vs => new load_balancer_virtual_server_1.LoadBalancerVirtualServer(vs));
    }
    /**
     * Get a list of load balancer pools
     * @returns {Array<LoadBalancerPool>}
     */
    get pools() {
        return this._json.pools.map(lb => new load_balancer_pool_1.LoadBalancerPool(lb));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LoadBalancerServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancer = LoadBalancer;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerPool = void 0;
const lb_pool_member_1 = __webpack_require__(384);
const lb_pool_service_port_1 = __webpack_require__(190);
/**
 * LoadBalancerPool class
 */
class LoadBalancerPool {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id
     * @returns {string | null}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Check weather this LoadBalancerPool is operational or not.
     * @returns {boolean | null}
     */
    get operational() {
        return this._json.operational;
    }
    /**
     * Get error details.
     * @returns {string | null}
     */
    get errorDetails() {
        return this._json.error_details;
    }
    /**
     * Get a list of pool service ports
     * @returns {Array<LbPoolServicePort>}
     */
    get servicePorts() {
        return this._json.service_ports.map(lbPoolServicePort => new lb_pool_service_port_1.LbPoolServicePort(lbPoolServicePort));
    }
    /**
     * Get a list of pool members
     * @returns {Array<LbPoolMember>}
     */
    get members() {
        return this._json.members.map(lbPoolMember => new lb_pool_member_1.LbPoolMember(lbPoolMember));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LoadBalancerPoolJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerPool = LoadBalancerPool;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LbPoolMember = void 0;
const lb_pool_service_port_1 = __webpack_require__(190);
/**
 * LbPoolMember class
 */
class LbPoolMember {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ip address
     * @returns {string | null}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get weight
     * @returns {string | null}
     */
    get weight() {
        return this._json.weight;
    }
    /**
     * Get list of service ports.
     * @returns {Array<LbPoolServicePort>}
     */
    get servicePorts() {
        return this._json.service_ports.map(port => new lb_pool_service_port_1.LbPoolServicePort(port));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LbPoolMemberJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LbPoolMember = LbPoolMember;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LbPoolHealthCheck = void 0;
/**
 * LbPoolHealthCheck class
 */
class LbPoolHealthCheck {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get mode
     * @returns {string | null}
     */
    get mode() {
        return this._json.mode;
    }
    /**
     * Get uri
     * @returns {string | null}
     */
    get uri() {
        return this._json.uri;
    }
    /**
     * Get health threshold
     * @returns {string | null}
     */
    get healthThreshold() {
        return this._json.health_threshold;
    }
    /**
     * Get unhealth threshold
     * @returns {string | null}
     */
    get unhealthThreshold() {
        return this._json.unhealth_threshold;
    }
    /**
     * Get interval
     * @returns {string | null}
     */
    get interval() {
        return this._json.interval;
    }
    /**
     * Get timeout
     * @returns {string | null}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LbPoolHealthCheckJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LbPoolHealthCheck = LbPoolHealthCheck;


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerVirtualServer = void 0;
const lb_virtual_server_service_profile_1 = __webpack_require__(387);
/**
 * LoadBalancerVirtualServer class
 */
class LoadBalancerVirtualServer {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Check weather this LoadBalancerVirtualServer is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description
     * @returns {string | null}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get id address
     * @returns {string | null}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Check weather this LoadBalancerVirtualServer has logging enabled or not.
     * @returns {boolean | null}
     */
    get logging() {
        return this._json.logging;
    }
    /**
     * Get pool
     * @returns {string | null}
     */
    get pool() {
        return this._json.pool;
    }
    /**
     * Get network
     * @returns {string | null}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get a list of virtual server service profiles
     * @returns {Array<LbVirtualServerServiceProfile>}
     */
    get serviceProfiles() {
        return this._json.service_profiles.map(lbVsProfile => new lb_virtual_server_service_profile_1.LbVirtualServerServiceProfile(lbVsProfile));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LoadBalancerVirtualServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerVirtualServer = LoadBalancerVirtualServer;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LbVirtualServerServiceProfile = void 0;
const lb_persistence_1 = __webpack_require__(388);
/**
 * LbVirtualServerServiceProfile class
 */
class LbVirtualServerServiceProfile {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Check weather profile is enabled or not.
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol
     * @returns {string | null}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get port
     * @returns {string | null}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get persistence
     * @returns {LbPersistence | null}
     */
    get persistence() {
        return new lb_persistence_1.LbPersistence(this._json.persistence);
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LbVirtualServerServiceProfileJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LbVirtualServerServiceProfile = LbVirtualServerServiceProfile;


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LbPersistence = void 0;
/**
 * LbPersistence class
 */
class LbPersistence {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get method
     * @returns {string | null}
     */
    get method() {
        return this._json.method;
    }
    /**
     * Get cookie name
     * @returns {string | null}
     */
    get cookieName() {
        return this._json.cookie_name;
    }
    /**
     * Get cookie mode
     * @returns {string | null}
     */
    get cookieMode() {
        return this._json.cookie_mode;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {LbPersistenceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LbPersistence = LbPersistence;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NatService = void 0;
const gateway_nat_rule_1 = __webpack_require__(191);
/**
 * NatService class
 */
/* istanbul ignore next: autogenerated */
class NatService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get external ip.
     * @returns {string | null}
     */
    get externalIp() {
        return this._json.external_ip;
    }
    /**
     * Get nat type.
     * @returns {string | null}
     */
    get natType() {
        return this._json.nat_type;
    }
    /**
     * Get policy.
     * @returns {string | null}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get rules.
     * @returns {Array<GatewayNatRule>}
     */
    get rules() {
        return this._json.rules.map(rule => {
            return new gateway_nat_rule_1.GatewayNatRule(rule);
        });
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {NatServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NatService = NatService;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NatServiceConfiguration = void 0;
const gateway_nat_rule_1 = __webpack_require__(191);
/**
 * Nat Service Configuration class.
 */
class NatServiceConfiguration {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the version.
     * @returns {number}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get external ip
     * @returns {string | null}
     */
    get externalIp() {
        return this._json.external_ip;
    }
    /**
     * Get type
     * @returns {string | null}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get policy
     * @returns {string | null}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Check weather nat service is enabled or not
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get a list of gateway nat rules.
     * @returns {Array<GatewayNatRule>}
     */
    get rules() {
        const rules = this._json.rules || [];
        return rules.map(rule => new gateway_nat_rule_1.GatewayNatRule(rule));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {NatServiceConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NatServiceConfiguration = NatServiceConfiguration;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkPerfSample = void 0;
/**
 * NetworkPerfSample class
 */
class NetworkPerfSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time
     * @returns {Date | null}
     */
    get time() {
        return this._json.time ? new Date(this._json.time) : null;
    }
    /**
     * Get value
     * @returns {number | null}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {NetworkPerfSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NetworkPerfSample = NetworkPerfSample;


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallRestorePoint = void 0;
/**
 * Firewall Restore Point.
 */
/* istanbul ignore next: autogenerated */
class FirewallRestorePoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get the json representation of this class.
     * @returns {FirewallRestorePointJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallRestorePoint = FirewallRestorePoint;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallRestorePointDetails = void 0;
const edge_gateway_firewall_1 = __webpack_require__(152);
/**
 * Firewall Restore Point Details.
 */
/* istanbul ignore next: autogenerated */
class FirewallRestorePointDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get firewall configuration.
     * @returns {EdgeGatewayFirewall}
     */
    get data() {
        return new edge_gateway_firewall_1.EdgeGatewayFirewall(this._json.data);
    }
    /**
     * Get the json representation of this class.
     * @returns {FirewallRestorePointDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallRestorePointDetails = FirewallRestorePointDetails;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NATRestorePoint = void 0;
/**
 * NAT Restore Point.
 */
/* istanbul ignore next: autogenerated */
class NATRestorePoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get the json representation of this class.
     * @returns {NATRestorePointJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NATRestorePoint = NATRestorePoint;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NATRestorePointDetails = void 0;
const edge_gateway_nat_1 = __webpack_require__(163);
/**
 * NAT Restore Point Details.
 */
/* istanbul ignore next: autogenerated */
class NATRestorePointDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get NAT configuration.
     * @returns {EdgeGatewayNat}
     */
    get data() {
        return new edge_gateway_nat_1.EdgeGatewayNat(this._json.data);
    }
    /**
     * Get the json representation of this class.
     * @returns {NATRestorePointDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NATRestorePointDetails = NATRestorePointDetails;


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnAdAuthenticationServer = void 0;
const edge_ssl_vpn_authentication_server_1 = __webpack_require__(50);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnAdAuthenticationServer extends edge_ssl_vpn_authentication_server_1.EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get enable ssl.
     * @returns {boolean}
     */
    get enableSsl() {
        return this._json.enable_ssl;
    }
    /**
     * Get search base.
     * @returns {string}
     */
    get searchBase() {
        return this._json.search_base;
    }
    /**
     * Get bind domain name.
     * @returns {string}
     */
    get bindDomainName() {
        return this._json.bind_domain_name;
    }
    /**
     * Get bind password.
     * @returns {string}
     */
    get bindPassword() {
        return this._json.bind_password;
    }
    /**
     * Get login attribute name.
     * @returns {string}
     */
    get loginAttributeName() {
        return this._json.login_attribute_name;
    }
    /**
     * Get search filter.
     * @returns {string}
     */
    get searchFilter() {
        return this._json.search_filter;
    }
    /**
     * Get terminate session on auth fails.
     * @returns {boolean}
     */
    get terminateSessionOnAuthFails() {
        return this._json.terminate_session_on_auth_fails;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnAdAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnAdAuthenticationServer = EdgeSslVpnAdAuthenticationServer;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnLdapAuthenticationServer = void 0;
const edge_ssl_vpn_authentication_server_1 = __webpack_require__(50);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnLdapAuthenticationServer extends edge_ssl_vpn_authentication_server_1.EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get search filter.
     * @returns {string}
     */
    get searchFilter() {
        return this._json.search_filter;
    }
    /**
     * Get login attribute name.
     * @returns {string}
     */
    get loginAttributeName() {
        return this._json.login_attribute_name;
    }
    /**
     * Get bind password.
     * @returns {string}
     */
    get bindPassword() {
        return this._json.bind_password;
    }
    /**
     * Get bind domain name.
     * @returns {string}
     */
    get bindDomainName() {
        return this._json.bind_domain_name;
    }
    /**
     * Get search base.
     * @returns {string}
     */
    get searchBase() {
        return this._json.search_base;
    }
    /**
     * Get enable ssl.
     * @returns {boolean}
     */
    get enableSsl() {
        return this._json.enable_ssl;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnLdapAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnLdapAuthenticationServer = EdgeSslVpnLdapAuthenticationServer;


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnRadiusAuthenticationServer = void 0;
const edge_ssl_vpn_authentication_server_1 = __webpack_require__(50);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnRadiusAuthenticationServer extends edge_ssl_vpn_authentication_server_1.EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get secret.
     * @returns {string}
     */
    get secret() {
        return this._json.secret;
    }
    /**
     * Get nas ip.
     * @returns {string}
     */
    get nasIp() {
        return this._json.nas_ip;
    }
    /**
     * Get retry count.
     * @returns {number}
     */
    get retryCount() {
        return this._json.retry_count;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnRadiusAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnRadiusAuthenticationServer = EdgeSslVpnRadiusAuthenticationServer;


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnRsaAuthenticationServer = void 0;
const edge_ssl_vpn_authentication_server_1 = __webpack_require__(50);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnRsaAuthenticationServer extends edge_ssl_vpn_authentication_server_1.EdgeSslVpnAuthenticationServer {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get timeout.
     * @returns {number}
     */
    get timeout() {
        return this._json.timeout;
    }
    /**
     * Get source ip.
     * @returns {string}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnRsaAuthenticationServerJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnRsaAuthenticationServer = EdgeSslVpnRsaAuthenticationServer;


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnGateway = void 0;
/**
 * EdgeSslVpnGateway class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnGateway {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get host name.
     * @returns {string}
     */
    get hostName() {
        return this._json.host_name;
    }
    /**
     * Get port.
     * @returns {string}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnGatewayJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnGateway = EdgeSslVpnGateway;


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnService = void 0;
const edge_ssl_vpn_authentication_1 = __webpack_require__(193);
const edge_ssl_vpn_client_install_package_1 = __webpack_require__(195);
const edge_ssl_vpn_ip_pool_1 = __webpack_require__(196);
const edge_ssl_vpn_local_authentication_server_1 = __webpack_require__(194);
const edge_ssl_vpn_private_network_1 = __webpack_require__(197);
const edge_ssl_vpn_user_1 = __webpack_require__(198);
/**
 * EdgeSslVpnService class
 */
/* istanbul ignore next: autogenerated */
class EdgeSslVpnService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get log enabled.
     * @returns {boolean}
     */
    get logEnabled() {
        return this._json.log_enabled;
    }
    /**
     * Get log level.
     * @returns {string}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get cipher list.
     * @returns {Array<string>}
     */
    get cipherList() {
        return this._json.cipher_list;
    }
    /**
     * Get private networks.
     * @returns {Array<EdgeSslVpnPrivateNetwork>}
     */
    get privateNetworks() {
        return this._json.private_networks.map(network => new edge_ssl_vpn_private_network_1.EdgeSslVpnPrivateNetwork(network));
    }
    /**
     * Get users.
     * @returns {Array<EdgeSslVpnUser>}
     */
    get users() {
        return this._json.users.map(user => new edge_ssl_vpn_user_1.EdgeSslVpnUser(user));
    }
    /**
     * Get ip pools.
     * @returns {Array<EdgeSslVpnIpPool>}
     */
    get ipPools() {
        return this._json.ip_pools.map(pool => new edge_ssl_vpn_ip_pool_1.EdgeSslVpnIpPool(pool));
    }
    /**
     * Get client install packages.
     * @returns {Array<EdgeSslVpnClientInstallPackage>}
     */
    get clientInstallPackages() {
        return this._json.client_install_packages.map(data => new edge_ssl_vpn_client_install_package_1.EdgeSslVpnClientInstallPackage(data));
    }
    /**
     * Get authentication config.
     * @returns {EdgeSslVpnLocalAuthenticationServerJson}
     */
    get authenticationConfig() {
        return new edge_ssl_vpn_local_authentication_server_1.EdgeSslVpnLocalAuthenticationServer(this._json.authentication_config);
    }
    /**
     * Get authentication.
     * @returns {EdgeSslVpnAuthentication}
     */
    get authentication() {
        return new edge_ssl_vpn_authentication_1.EdgeSslVpnAuthentication(this._json.authentication);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnService = EdgeSslVpnService;


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticRouting = void 0;
const static_route_1 = __webpack_require__(403);
/**
 * StaticRouting class
 */
class StaticRouting {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Check weather static routing is enabled or not
     * @returns {boolean | null}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get list of static routes.
     * @returns {Array<StaticRoute>}
     */
    get routes() {
        const routes = this._json.routes || [];
        return routes.map(route => new static_route_1.StaticRoute(route));
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {StaticRoutingServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StaticRouting = StaticRouting;


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticRoute = void 0;
/**
 * StaticRoute class
 */
class StaticRoute {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get edge uuid
     * @returns {string | null}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get index
     * @returns {number}
     */
    get idx() {
        return this._json.idx;
    }
    /**
     * Get name
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get network
     * @returns {string | null}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get next hop IP
     * @returns {string | null}
     */
    get nextHopIp() {
        return this._json.next_hop_ip;
    }
    /**
     * Get interface type
     * @returns {string | null}
     */
    get interfaceType() {
        return this._json.interface_type;
    }
    /**
     * Get interface
     * @returns {string | null}
     */
    get interface() {
        return this._json.interface;
    }
    /**
     * Get the __json__ representation of this class.
     * @returns {StaticRouteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StaticRoute = StaticRoute;


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DomainPermissionsMap = void 0;
const permission_map_1 = __webpack_require__(202);
/**
 * DomainPermissionsMap
 */
class DomainPermissionsMap {
    constructor() {
        this._domainPermissions = new Map();
        const permissionMap = permission_map_1.PermissionsMap.getInstance().permissions;
        const self = this;
        let tmp;
        permissionMap.forEach(value => {
            if (!self._domainPermissions.has(value.domain)) {
                self._domainPermissions.set(value.domain, [value]);
            }
            else if (self._domainPermissions.has(value.domain)) {
                tmp = self._domainPermissions.get(value.domain);
                if (tmp) {
                    self._domainPermissions.set(value.domain, tmp.concat([value]));
                }
            }
        });
    }
    /**
     * Get an instance of DomainPermissionsMap. Singleton implementation.
     * @returns {DomainPermissionsMap}
     */
    static getInstance() {
        if (!DomainPermissionsMap.instance) {
            DomainPermissionsMap.instance = new DomainPermissionsMap();
        }
        return DomainPermissionsMap.instance;
    }
    /**
     * Get the domains permissions map.
     * @returns {Map<IamEntityType, Array<Permission>>}
     */
    get domainPermissions() {
        return this._domainPermissions;
    }
}
exports.DomainPermissionsMap = DomainPermissionsMap;


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Permission = void 0;
const entity_domain_1 = __webpack_require__(304);
/**
 * Permission
 */
class Permission {
    constructor(_permissionType, _domain, _accessType, _availableToCustomPolicy, _requiredForCustomPolicy, _impliedPermissions) {
        this._permissionType = _permissionType;
        this._domain = _domain;
        this._accessType = _accessType;
        this._availableToCustomPolicy = _availableToCustomPolicy;
        this._requiredForCustomPolicy = _requiredForCustomPolicy;
        this._impliedPermissions = _impliedPermissions;
        this._entityDomain = new entity_domain_1.EntityDomain(_domain);
    }
    /**
     * Get the IamEntityType for a permission.
     * @returns {IamEntityType}
     */
    get domain() {
        return this._domain;
    }
    /**
     * Get the PermissionType for a permission.
     * @returns {PermissionType}
     */
    get permissionType() {
        return this._permissionType;
    }
    /**
     * Get the AccessType for a permission.
     * @returns {AccessType}
     */
    get accessType() {
        return this._accessType;
    }
    /**
     * Check whether or not this permission is available to custom policy.
     * @returns {boolean}
     */
    get availableToCustomPolicy() {
        return this._availableToCustomPolicy;
    }
    /**
     * Check whether or not a permission is required for custom policy.
     * @returns {boolean}
     */
    get requiredForCustomPolicy() {
        return this._requiredForCustomPolicy;
    }
    /**
     * Get the implied permissions.
     * @returns {Array<PermissionType> | null}
     */
    get impliedPermissions() {
        return this._impliedPermissions;
    }
    /**
     * Get the string representation of a permission. Which is the PermissionType.
     * @returns {string}
     */
    toString() {
        return this._permissionType.toString();
    }
    /**
     * Get the entity domain class for this permission.
     * @returns {EntityDomain}
     */
    getDomain() {
        return this._entityDomain;
    }
}
exports.Permission = Permission;


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyLocationIntegratedBackupStatus = void 0;
const org_integrated_backup_status_1 = __webpack_require__(203);
/**
 * Company Location Integrated Backup Status.
 */
/* istanbul ignore next: autogenerated */
class CompanyLocationIntegratedBackupStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the ID of the company.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get the ID of the datacenter location.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get the statuses of child orgs.
     * @returns {Array<OrgIntegratedBackupStatus>}
     */
    get orgStatuses() {
        return this._json.org_statuses.map(it => new org_integrated_backup_status_1.OrgIntegratedBackupStatus(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {CompanyLocationIntegratedBackupStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CompanyLocationIntegratedBackupStatus = CompanyLocationIntegratedBackupStatus;


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Group = void 0;
/**
 * O365 Group entity
 */
/* istanbul ignore next: autogenerated */
class O365Group {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the O365 Group display name
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get the O365 Group organization's name
     * @returns {string}
     */
    get organizationName() {
        return this._json.organization_name;
    }
    /**
     * Get the O365 VBO Organization iland platform UUID
     * @returns {string}
     */
    get organizationUuid() {
        return this._json.organization_uuid;
    }
    /**
     * Get the O365 Group type
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the O365 Group name
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the O365 Group native id
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get whether the Office 365 Group is backed up
     * @returns {boolean}
     */
    get isBackedUp() {
        return this._json.is_backed_up;
    }
    /**
     * Get whether the Office 365 Group has been deleted from the O365 organization
     * @returns {boolean}
     */
    get isDeletedFromOrg() {
        return this._json.is_deleted_from_org;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365GroupJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365Group = O365Group;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365BackupJobSelectedExcludedItems = void 0;
/**
 * O365 Backup Job selected or excluded items class
 */
/* istanbul ignore next: autogenerated */
class O365BackupJobSelectedExcludedItems {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the O365 Backup Job selected or excluded partial org responses
     * @returns {Array<PartialOrgResponse>}
     */
    get partialOrgResponses() {
        return this._json.partial_org_responses;
    }
    /**
     * Get the O365 Backup Job selected or excluded Group responses
     * @returns {Array<GroupResponse>}
     */
    get groupResponses() {
        return this._json.group_responses;
    }
    /**
     * Get the O365 Backup Job selected or excluded User responses
     * @returns {Array<UserResponse>}
     */
    get userResponses() {
        return this._json.user_responses;
    }
    /**
     * Get the O365 Backup Job selected or excluded SharePoint site responses
     * @returns {Array<SharePointSiteResponse>}
     */
    get sitesResponses() {
        return this._json.share_point_site_responses;
    }
    /**
     * Get the O365 Backup Job selected or excluded Team responses
     * @returns {Array<TeamResponse>}
     */
    get teamResponses() {
        return this._json.team_responses;
    }
    /**
     * Get the O365 Backup Job selected Team chat responses
     * @returns {Array<TeamsChatResponse>}
     */
    get TeamsChatResponses() {
        return this._json.teams_chat_response;
    }
    /**
     * Get the json representation of this class.
     * @returns {SelectedExcludedItems}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365BackupJobSelectedExcludedItems = O365BackupJobSelectedExcludedItems;


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobSession = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const entity_1 = __webpack_require__(9);
const o365_job_session_log_item_1 = __webpack_require__(410);
/**
 * O365 Job Session
 */
class O365JobSession extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get a O365 Job Session by UUID
     * @param uuid
     * @returns {Promise<O365JobSession>} promise that resolves with a O365 Job
     */
    static getO365JobSession(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-job-sessions/${uuid}`)
                .then(response => {
                const json = response.data;
                return new O365JobSession(json);
            });
        });
    }
    /**
     * Get the O365 Job Session entity type
     */
    get entityType() {
        return 'O365_JOB_SESSION';
    }
    /**
     * Gets the location id of O365 Job Session
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Gets the O365 Organization uuid of the O365 Job Session
     */
    get O365OrganizationUuid() {
        return this._json.o365_organization_uuid;
    }
    /**
     * Gets the O365 Job uuid of the O365 Job Session
     */
    get O365JobUuid() {
        return this._json.o365_job_uuid;
    }
    /**
     * Gets the creation timestamp of the O365 Job Session
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Gets the end time timestamp of the O365 Job Session
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Gets the progress of the O365 Job Session
     */
    get progress() {
        return this._json.progress;
    }
    /**
     * Gets the status of the O365 Job Session
     */
    get status() {
        return this._json.status;
    }
    /**
     * Gets the statistics of the O365 Job Session
     */
    get statistics() {
        return this._json.statistics;
    }
    /**
     * Refresh the O365 Job Session data by retrieving it from the API again.
     * @returns {Promise<O365JobSession>}
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-job-sessions/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Get the Job Session Log Items
     * @returns {Promise<Array<O365JobSessionLogItem>>}
     */
    /* istanbul ignore next: autogenerated */
    getLogItems() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/o365-job-sessions/${this.uuid}/log-items`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new o365_job_session_log_item_1.O365JobSessionLogItem(it));
            });
        });
    }
}
exports.O365JobSession = O365JobSession;


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobSessionLogItem = void 0;
/**
 * O365 Job Session Log Item
 */
/* istanbul ignore next: autogenerated */
class O365JobSessionLogItem {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the Job Session uuid
     */
    get jobSessionUuid() {
        return this._json.job_session_uuid;
    }
    /**
     * Get the Log Item's id
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the Log Item's usn
     */
    get usn() {
        return this._json.usn;
    }
    /**
     * Get the Log Item's title
     */
    get title() {
        return this._json.title;
    }
    /**
     * Get the Log Item's creation time
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Get the Log Item's end time
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {StorageProfileJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365JobSessionLogItem = O365JobSessionLogItem;


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Mailbox = void 0;
/**
 * Office 365 Mailbox
 */
/* istanbul ignore next: autogenerated */
class O365Mailbox {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the O365 mailbox
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the O365 mailbox
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the email of the O365 mailbox
     */
    get email() {
        return this._json.email;
    }
    /**
     * Is O365 mailbox archived
     */
    get isArchive() {
        return this._json.archive;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365MailboxJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365Mailbox = O365Mailbox;


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365MailboxFolder = void 0;
/**
 * O365 Exchange Mailbox Folder
 */
/* istanbul ignore next: autogenerated */
class O365MailboxFolder {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the id of the O365 Exchange Mailbox Folder
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the name of the O365 Exchange Mailbox Folder
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the type of the O365 Exchange Mailbox Folder
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the description of the O365 Exchange Mailbox Folder
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365MailboxFolderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365MailboxFolder = O365MailboxFolder;


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365MailboxFolderItem = void 0;
/**
 * O365 Exchange Mailbox Folder Item
 */
/* istanbul ignore next: autogenerated */
class O365MailboxFolderItem {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the O365 Mailbox Folder item
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the from of the O365 Mailbox Folder item
     */
    get from() {
        return this._json.from;
    }
    /**
     * Gets the cc of the O365 Mailbox Folder item
     */
    get cc() {
        return this._json.cc;
    }
    /**
     * Gets the bcc of the O365 Mailbox Folder item
     */
    get bcc() {
        return this._json.bcc;
    }
    /**
     * Gets the to of the O365 Mailbox Folder item
     */
    get to() {
        return this._json.to;
    }
    /**
     * Gets the sent date timestamp of the O365 Mailbox Folder item
     */
    get sentDate() {
        return this._json.sent;
    }
    /**
     * Gets the received date timestamp of the O365 Mailbox Folder item
     */
    get receivedDate() {
        return this._json.received;
    }
    /**
     * Is the O365 Mailbox Folder item a reminder
     */
    get isReminder() {
        return this._json.reminder;
    }
    /**
     * Gets the subject of the O365 Mailbox Folder item
     */
    get subject() {
        return this._json.subject;
    }
    /**
     * Gets the item class of the O365 Mailbox Folder item
     */
    get itemClass() {
        return this._json.item_class;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365MailboxFolderItemJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365MailboxFolderItem = O365MailboxFolderItem;


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OneDrive = void 0;
/**
 * O365 OneDrive Item
 */
/* istanbul ignore next: autogenerated */
class O365OneDrive {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the OneDrive item
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the OneDrive item
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the url of the OneDrive item
     */
    get url() {
        return this._json.url;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OneDriveJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OneDrive = O365OneDrive;


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OneDriveDocument = void 0;
/**
 * O365 OneDrive Document Item
 */
/* istanbul ignore next: autogenerated */
class O365OneDriveDocument {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the OneDrive Document
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the OneDrive Document
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the version of the OneDrive Document
     */
    get version() {
        return this._json.version;
    }
    /**
     * Gets the size in bytes of the OneDrive Document
     */
    get sizeInBytes() {
        return this._json.size_bytes;
    }
    /**
     * Has inherited permissions
     */
    get hasInheritedPermissions() {
        return this._json.inherited_permissions;
    }
    /**
     * Gets the created by of the OneDrive Document
     */
    get createdBy() {
        return this._json.created_by;
    }
    /**
     * Gets the modification timestamp of the OneDrive Document
     */
    get modificationTime() {
        return this._json.modification_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OneDriveDocumentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OneDriveDocument = O365OneDriveDocument;


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OneDriveFolder = void 0;
/**
 * O365 OneDrive Folder Item
 */
/* istanbul ignore next: autogenerated */
class O365OneDriveFolder {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the OneDrive Folder
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the OneDrive Folder
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the created by of the OneDrive Folder
     */
    get createdBy() {
        return this._json.created_by;
    }
    /**
     * Gets the creation timestamp of the OneDrive Folder
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Gets the modified by of the OneDrive Folder
     */
    get modifiedBy() {
        return this._json.modified_by;
    }
    /**
     * Gets the modification timestamp of the OneDrive Folder
     */
    get modificationTime() {
        return this._json.modification_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OneDriveFolderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OneDriveFolder = O365OneDriveFolder;


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365RestoreSessionEvent = void 0;
/**
 * O365 Restore Session Event
 */
/* istanbul ignore next: autogenerated */
class O365RestoreSessionEvent {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the item size in bytes
     */
    get itemSizeBytes() {
        return this._json.item_size_bytes;
    }
    /**
     * Get id for Restore Session Event
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the type for Restore Session Event
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the status for Restore Session Event
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get the start time for Restore Session Event
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get the end time for Restore Session Event
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get the duration for Restore Session Event
     */
    get duration() {
        return this._json.duration;
    }
    /**
     * Get the title for Restore Session Event
     */
    get title() {
        return this._json.title;
    }
    /**
     * Get the order for Restore Session Event
     */
    get order() {
        return this._json.order;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365RestoreSessionEventJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365RestoreSessionEvent = O365RestoreSessionEvent;


/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointAttachment = void 0;
/**
 * O365 SharePoint Attachment
 */
/* istanbul ignore next: autogenerated */
class O365SharePointAttachment {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Attachment
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the SharePoint Attachment
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the size in bytes of the SharePoint Attachment
     */
    get sizeInBytes() {
        return this._json.size_bytes;
    }
    /**
     * Gets the url of the SharePoint Attachment
     */
    get url() {
        return this._json.url;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointAttachmentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointAttachment = O365SharePointAttachment;


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointDocument = void 0;
/**
 * O365 SharePoint Document
 */
/* istanbul ignore next: autogenerated */
class O365SharePointDocument {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Document
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the SharePoint Document
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the created by of the SharePoint Document
     */
    get createdBy() {
        return this._json.created_by;
    }
    /**
     * Gets the size in bytes of the SharePoint Document
     */
    get sizeInBytes() {
        return this._json.size_bytes;
    }
    /**
     * Gets the version of the SharePoint Document
     */
    get version() {
        return this._json.version;
    }
    /**
     * Gets the creation time of the SharePoint Document
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Gets the modified by of the SharePoint Document
     */
    get modifiedBy() {
        return this._json.modified_by;
    }
    /**
     * Gets the modification time of the SharePoint Document
     */
    get modificationTime() {
        return this._json.modification_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointDocumentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointDocument = O365SharePointDocument;


/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointFolder = void 0;
/**
 * O365 SharePoint Folder
 */
/* istanbul ignore next: autogenerated */
class O365SharePointFolder {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Folder
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the SharePoint Folder
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the created by of the SharePoint Folder
     */
    get createdBy() {
        return this._json.created_by;
    }
    /**
     * Gets the creation time of the SharePoint Folder
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Gets the modified by of the SharePoint Folder
     */
    get modifiedBy() {
        return this._json.modified_by;
    }
    /**
     * Gets the modification time of the SharePoint Folder
     */
    get modificationTime() {
        return this._json.modification_time;
    }
    /**
     * Gets the type of SharePoint Folder
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointFolderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointFolder = O365SharePointFolder;


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointItem = void 0;
/**
 * O365 SharePoint Item
 */
/* istanbul ignore next: autogenerated */
class O365SharePointItem {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Item
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the title of the SharePoint Item
     */
    get title() {
        return this._json.title;
    }
    /**
     * Gets the version of the SharePoint Item
     */
    get version() {
        return this._json.version;
    }
    /**
     * Gets the name of the SharePoint Item
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the created by of the SharePoint Item
     */
    get createdBy() {
        return this._json.created_by;
    }
    /**
     * Gets the creation time of the SharePoint Item
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Gets the modified by of the SharePoint Item
     */
    get modifiedBy() {
        return this._json.modified_by;
    }
    /**
     * Gets the modification time of the SharePoint Item
     */
    get modificationTime() {
        return this._json.modification_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointItemJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointItem = O365SharePointItem;


/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointLibrary = void 0;
/**
 * O365 SharePoint Library
 */
/* istanbul ignore next: autogenerated */
class O365SharePointLibrary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint Library
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the SharePoint Library
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the description of the SharePoint Library
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the url of the SharePoint Library
     */
    get url() {
        return this._json.url;
    }
    /**
     * Gets the creation time of the SharePoint Library
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointLibraryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointLibrary = O365SharePointLibrary;


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointList = void 0;
/**
 * O365 SharePoint List
 */
/* istanbul ignore next: autogenerated */
class O365SharePointList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the id of the SharePoint List
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the name of the SharePoint List
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the description of the SharePoint List
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the url of the SharePoint List
     */
    get url() {
        return this._json.url;
    }
    /**
     * Gets the creation time of the SharePoint List
     */
    get creationTime() {
        return this._json.creation_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointList = O365SharePointList;


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamChannel = void 0;
/**
 * O365 Team Channel
 */
/* istanbul ignore next: autogenerated */
class O365TeamChannel {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the native id of the Team channel
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get the display name of the Team channel
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamChannelJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamChannel = O365TeamChannel;


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamFile = void 0;
/**
 * O365 Team File
 */
/* istanbul ignore next: autogenerated */
class O365TeamFile {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the native id of the Team file
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get the name of the Team file
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the name of the user who performed the latest modification of the file
     * @returns {string}
     */
    get modifiedBy() {
        return this._json.modified_by;
    }
    /**
     * Get the Date and time of the last modification of the file
     * @returns {number}
     */
    get modified() {
        return this._json.modified;
    }
    /**
     * Get the parent folder ID of the sub file/folder.
     * @returns {string}
     */
    get parentId() {
        return this._json.parent_id;
    }
    /**
     * Get the file size.
     * @returns {number}
     */
    get sizeBytes() {
        return this._json.size_bytes;
    }
    /**
     * Get the type of the Microsoft Teams item.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the version of the file in the backup.
     * @returns {string}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamFileJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamFile = O365TeamFile;


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamPost = void 0;
/**
 * O365 Team Post
 */
/* istanbul ignore next: autogenerated */
class O365TeamPost {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the user name of the author of the post
     * @returns {string}
     */
    get author() {
        return this._json.author;
    }
    /**
     * Get date and time when the post was created
     * @returns {number}
     */
    get createdTime() {
        return this._json.created_time;
    }
    /**
     * Get whether the post is marked as important
     * @returns {boolean}
     */
    get isImportant() {
        return this._json.is_important;
    }
    /**
     * Get the date and time of the latest modification of the post
     * @returns {number}
     */
    get lastModificationTime() {
        return this._json.last_modification_time;
    }
    /**
     * Get the native VBO id for this post
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get the Subject of the post
     * @returns {string}
     */
    get subject() {
        return this._json.subject;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamPostJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamPost = O365TeamPost;


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamTab = void 0;
/**
 * O365 Team Tab
 */
/* istanbul ignore next: autogenerated */
class O365TeamTab {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the Team Tab display name
     * @returns {string}
     */
    get contentUrl() {
        return this._json.content_url;
    }
    /**
     * Get the Team Tab display name
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get the native VBO id for this Team Tab
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get the Team Tab type
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamTabJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamTab = O365TeamTab;


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365MarkedPurgeMailbox = void 0;
/**
 * O365 marked purge mailbox
 */
/* istanbul ignore next: autogenerated */
class O365MarkedPurgeMailbox {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the mailbox (email) that is marked for purging.
     * @returns {string}
     */
    get mailbox() {
        return this._json.mailbox;
    }
    /**
     * Get the user native uuid for the mailbox that was marked for purging.
     * @returns {string}
     */
    get userNativeUuid() {
        return this._json.user_native_uuid;
    }
    /**
     * Get the org platform uuid associated with this mailbox.
     * @returns {string}
     */
    get organizationUuid() {
        return this._json.organization_uuid;
    }
    /**
     * Get whether this user / mailbox will be purged at all (cancel use case).
     * @returns {string}
     */
    get isActive() {
        return this._json.active;
    }
    /**
     * Get the purge date associated with this mailbox.
     * @returns {number}
     */
    get purgeDate() {
        return this._json.purge_date;
    }
    /**
     * Get the status of this purge user request - Completed, Running, Cancelled or Failed.
     * @returns {string}
     */
    get purgeStatus() {
        return this._json.purge_status;
    }
    /**
     * Get the purge initiated date associated with this mailbox.
     * @returns {number}
     */
    get initiatedDate() {
        return this._json.initiated_date;
    }
    /**
     * Get the error message if any on this purge request (would come from monocle)
     * @returns {string | undefined}
     */
    get errorMsg() {
        return this._json.error_msg;
    }
    /**
     * Get the user who requested the purged mailbox
     * @returns {string | undefined}
     */
    get requestedBy() {
        return this._json.requested_by;
    }
    /**
     * Get the purge completed date time.
     * @returns {number | undefined}
     */
    get completedDate() {
        return this._json.completed_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365MarkedPurgeMailboxJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365MarkedPurgeMailbox = O365MarkedPurgeMailbox;


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365User = void 0;
/**
 * O365 User
 */
/* istanbul ignore next: autogenerated */
class O365User {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the O365 User display name
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get the O365 user organization's name
     * @returns {string}
     */
    get organizationName() {
        return this._json.organization_name;
    }
    /**
     * Get the O365 VBO Organization iland platform UUID
     * @returns {string}
     */
    get organizationUuid() {
        return this._json.organization_uuid;
    }
    /**
     * Get the O365 user type
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get whether the Office 365 user is backed up
     * @returns {boolean}
     */
    get isBackedUp() {
        return this._json.is_backed_up;
    }
    /**
     * Get whether the O365 user is archived
     * @returns {boolean} true for inactive, false for active
     */
    get archived() {
        return this._json.archived;
    }
    /**
     * Get whether this O365 user is a licensed user in the Microsoft 365 organization
     * it belongs. False for unlicensed.
     * @returns {boolean}
     */
    get licensed() {
        return this._json.licensed;
    }
    /**
     * Get whether the Office 365 user has been deleted from the Office 365 organization
     * @deprecated Replaced by O365User.archived
     * @returns {boolean}
     */
    get isDeletedFromOrg() {
        return this._json.is_deleted_from_org;
    }
    /**
     * Get the native id of O365 user
     * @returns {string}
     */
    get nativeId() {
        return this._json.native_id;
    }
    /**
     * Get O365 user's name
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365UserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365User = O365User;


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PerfSample = void 0;
/**
 * Perf Sample class.
 */
class PerfSample {
    constructor(firstParam, value) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                time: firstParam,
                value: value
            };
        }
        else if (firstParam instanceof PerfSample) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns the date of the current sample
     * @returns {Date}
     */
    get date() {
        return new Date(this._json.time);
    }
    /**
     * Returns the timestamp of the current sample
     * @returns {number}
     */
    get timestamp() {
        return this._json.time;
    }
    /**
     * Returns the value of the current sample
     * @returns {number}
     */
    get value() {
        return this._json.value;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {PerfSampleJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.PerfSample = PerfSample;


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkDHCPService = void 0;
const ip_range_1 = __webpack_require__(32);
/* istanbul ignore next: autogenerated */
class VappNetworkDHCPService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get ip range.
     * @returns {IpRange}
     */
    get ipRange() {
        return new ip_range_1.IpRange(this._json.ip_range);
    }
    /**
     * Get default lease time.
     * @returns {number}
     */
    get defaultLeaseTime() {
        return this._json.default_lease_time;
    }
    /**
     * Get max lease time.
     * @returns {number}
     */
    get maxLeaseTime() {
        return this._json.max_lease_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkDHCPServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkDHCPService = VappNetworkDHCPService;


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkFirewall = void 0;
const vapp_network_firewall_rule_1 = __webpack_require__(433);
/* istanbul ignore next: autogenerated */
class VappNetworkFirewall {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default action.
     * @returns {string}
     */
    get defaultAction() {
        return this._json.default_action;
    }
    /**
     * Get rules.
     * @returns {Array<VappNetworkFirewallRule>}
     */
    get rules() {
        return this._json.rules.map(rule => {
            return new vapp_network_firewall_rule_1.VappNetworkFirewallRule(rule);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkFirewallJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkFirewall = VappNetworkFirewall;


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkFirewallRule = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkFirewallRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get destination ip.
     * @returns {string}
     */
    get destinationIp() {
        return this._json.destination_ip;
    }
    /**
     * Get destination port range.
     * @returns {string}
     */
    get destinationPortRange() {
        return this._json.destination_port_range;
    }
    /**
     * Get direction.
     * @returns {string}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get icmp sub type.
     * @returns {string}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get policy.
     * @returns {string}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get protocols.
     * @returns {Array<string>}
     */
    get protocols() {
        return this._json.protocols;
    }
    /**
     * Get source ip.
     * @returns {string}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get source port range.
     * @returns {string}
     */
    get sourcePortRange() {
        return this._json.source_port_range;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get match on translate.
     * @returns {boolean}
     */
    get matchOnTranslate() {
        return this._json.match_on_translate;
    }
    /**
     * Get rule index.
     * @returns {number}
     */
    get ruleIndex() {
        return this._json.rule_index;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkFirewallRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkFirewallRule = VappNetworkFirewallRule;


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkInterface = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkInterface {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get vapp network uuid.
     * @returns {string}
     */
    get vappNetworkUuid() {
        return this._json.vapp_network_uuid;
    }
    /**
     * Get vm uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get vnic id.
     * @returns {number}
     */
    get vnicId() {
        return this._json.vnic_id;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get vm local id.
     * @returns {string}
     */
    get vmLocalId() {
        return this._json.vm_local_id;
    }
    /**
     * Get ip translation mapped.
     * @returns {boolean}
     */
    get ipTranslationMapped() {
        return this._json.ip_translation_mapped;
    }
    /**
     * Get vm name.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkInterfaceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkInterface = VappNetworkInterface;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkNATService = void 0;
const vapp_network_ip_translation_nat_rule_1 = __webpack_require__(436);
const vapp_network_port_forward_nat_rule_1 = __webpack_require__(437);
/* istanbul ignore next: autogenerated */
class VappNetworkNATService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get ip translation rules.
     * @returns {Array<VappNetworkIpTranslationNATRule>}
     */
    get ipTranslationRules() {
        return this._json.ip_translation_rules.map(rule => {
            return new vapp_network_ip_translation_nat_rule_1.VappNetworkIpTranslationNATRule(rule);
        });
    }
    /**
     * Get port forwarding rules.
     * @returns {Array<VappNetworkPortForwardNATRule>}
     */
    get portForwardingRules() {
        return this._json.port_forwarding_rules.map(rule => {
            return new vapp_network_port_forward_nat_rule_1.VappNetworkPortForwardNATRule(rule);
        });
    }
    /**
     * Get enable ip masquerade.
     * @returns {boolean}
     */
    get enableIpMasquerade() {
        return this._json.enable_ip_masquerade;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkNATServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkNATService = VappNetworkNATService;


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkIpTranslationNATRule = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkIpTranslationNATRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get mapping mode.
     * @returns {string}
     */
    get mappingMode() {
        return this._json.mapping_mode;
    }
    /**
     * Get vm interface.
     * @returns {string}
     */
    get vmInterface() {
        return this._json.vm_interface;
    }
    /**
     * Get external ip.
     * @returns {string}
     */
    get externalIp() {
        return this._json.external_ip;
    }
    /**
     * Get vm local id.
     * @returns {string}
     */
    get vmLocalId() {
        return this._json.vm_local_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkIpTranslationNATRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkIpTranslationNATRule = VappNetworkIpTranslationNATRule;


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkPortForwardNATRule = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkPortForwardNATRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get external port.
     * @returns {string}
     */
    get externalPort() {
        return this._json.external_port;
    }
    /**
     * Get forward to port.
     * @returns {string}
     */
    get forwardToPort() {
        return this._json.forward_to_port;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get vm interface.
     * @returns {string}
     */
    get vmInterface() {
        return this._json.vm_interface;
    }
    /**
     * Get vm local id.
     * @returns {string}
     */
    get vmLocalId() {
        return this._json.vm_local_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkPortForwardNATRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkPortForwardNATRule = VappNetworkPortForwardNATRule;


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkStaticRoutingService = void 0;
const vapp_network_static_route_1 = __webpack_require__(439);
/* istanbul ignore next: autogenerated */
class VappNetworkStaticRoutingService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get static routes.
     * @returns {Array<VappNetworkStaticRoute>}
     */
    get staticRoutes() {
        return this._json.static_routes.map(route => {
            return new vapp_network_static_route_1.VappNetworkStaticRoute(route);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkStaticRoutingServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkStaticRoutingService = VappNetworkStaticRoutingService;


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkStaticRoute = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkStaticRoute {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get next hop ip.
     * @returns {string}
     */
    get nextHopIP() {
        return this._json.next_hop_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkStaticRouteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkStaticRoute = VappNetworkStaticRoute;


/***/ }),
/* 440 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappIntegratedBackupStatusDetail = void 0;
const vapp_integrated_backup_status_1 = __webpack_require__(205);
/**
 * vApp Integrated Backup Status Detail.
 */
/* istanbul ignore next: autogenerated */
class VappIntegratedBackupStatusDetail extends vapp_integrated_backup_status_1.VappIntegratedBackupStatus {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get whether the vApp belongs to a vDC that has the integrated backups offering.
     * @returns {boolean}
     */
    get hasIntegratedBackups() {
        return this._json.has_integrated_backups;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappIntegratedBackupStatusDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappIntegratedBackupStatusDetail = VappIntegratedBackupStatusDetail;


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.URLEncoder = void 0;
/**
 * Custom URL Encoder that matches the RFC3986.
 */
class URLEncoder {
    /**
     * Encode URI components adhering to RFC 3986.
     * @param {string} str URI Component.
     * @param {boolean} encodeSpaceWithPlusSign If true, encode space char with a "+" instead of "%20".
     * @returns {string} encoded string.
     */
    static encodeURIComponentRFC5987(str, encodeSpaceWithPlusSign = false) {
        const encoded = encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
            return '%' + c.charCodeAt(0).toString(16).toUpperCase();
        });
        return encodeSpaceWithPlusSign ? encoded.replace(/%20/g, '+') : encoded;
    }
}
exports.URLEncoder = URLEncoder;


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmIntegratedBackupStatusDetail = void 0;
const vm_integrated_backup_status_1 = __webpack_require__(206);
/**
 * VM Integrated Backup Status Detail.
 */
/* istanbul ignore next: autogenerated */
class VmIntegratedBackupStatusDetail extends vm_integrated_backup_status_1.VmIntegratedBackupStatus {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Whether the VM belongs to a vDC that has the integrated backups offering.
     * @returns {boolean}
     */
    get hasIntegratedBackups() {
        return this._json.has_integrated_backups;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmIntegratedBackupStatusDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmIntegratedBackupStatusDetail = VmIntegratedBackupStatusDetail;


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRestorePoint = void 0;
/**
 * VM Backup Restore Point.
 */
class BackupRestorePoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the name of the restore point.
     * @returns {string} the name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the timestamp of the backup restore point.
     * @returns {Date} date of the restore point
     */
    get timestamp() {
        return new Date(this._json.time);
    }
    /**
     * Gets the Type for the restore point.
     * @returns {BackupRestorePointType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the Job Name for the restore point.
     * @returns {string}
     */
    get jobName() {
        return this._json.job_name;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BackupRestorePointJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BackupRestorePoint = BackupRestorePoint;


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BootOptions = void 0;
/**
 * VM Boot Options
 */
class BootOptions {
    constructor(firstParam, isEnterBios) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                boot_delay: firstParam,
                is_enter_bios: isEnterBios
            };
        }
        else if (firstParam instanceof BootOptions) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns boot delay
     * @returns {number}
     */
    get bootDelay() {
        return this._json.boot_delay;
    }
    /**
     * Returns true if "is enter bios" option is set to true
     * @returns {boolean}
     */
    get isEnterBios() {
        return this._json.is_enter_bios;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BootOptionsJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.BootOptions = BootOptions;


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Capabilities = void 0;
/**
 * VM Capabilities
 */
class Capabilities {
    constructor(firstParam, memoryHotAddEnabled) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                cpu_hot_add_enabled: firstParam,
                memory_hot_add_enabled: memoryHotAddEnabled
            };
        }
        else if (firstParam instanceof Capabilities) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns true if CPU hot add is enabled
     * @returns {boolean}
     */
    get cpuHotAddEnabled() {
        return this._json.cpu_hot_add_enabled;
    }
    /**
     * Returns true if Memory hot add is enabled
     * @returns {boolean}
     */
    get memoryHotAddEnabled() {
        return this._json.memory_hot_add_enabled;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BootOptionsJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.Capabilities = Capabilities;


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GuestCustomization = void 0;
/**
 * VM Guest Customization
 */
class GuestCustomization {
    constructor(firstParam) {
        if (firstParam instanceof GuestCustomization) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get change sid.
     * @returns {boolean}
     */
    get changeSid() {
        return this._json.change_sid;
    }
    /**
     * Get virtual machine id.
     * @returns {string}
     */
    get virtualMachineId() {
        return this._json.virtual_machine_id;
    }
    /**
     * Get join domain.
     * @returns {boolean}
     */
    get joinDomain() {
        return this._json.join_domain;
    }
    /**
     * Get use org settings.
     * @returns {boolean}
     */
    get useOrgSettings() {
        return this._json.use_org_settings;
    }
    /**
     * Get domain name.
     * @returns {string}
     */
    get domainName() {
        return this._json.domain_name;
    }
    /**
     * Get domain user name.
     * @returns {string}
     */
    get domainUserName() {
        return this._json.domain_user_name;
    }
    /**
     * Get domain user password.
     * @returns {string}
     */
    get domainUserPassword() {
        return this._json.domain_user_password;
    }
    /**
     * Get machine object ou.
     * @returns {string}
     */
    get machineObjectOu() {
        return this._json.machine_object_ou;
    }
    /**
     * Get admin password enabled.
     * @returns {boolean}
     */
    get adminPasswordEnabled() {
        return this._json.admin_password_enabled;
    }
    /**
     * Get admin password auto.
     * @returns {boolean}
     */
    get adminPasswordAuto() {
        return this._json.admin_password_auto;
    }
    /**
     * Get admin password.
     * @returns {string}
     */
    get adminPassword() {
        return this._json.admin_password;
    }
    /**
     * Get admin auto logon enabled.
     * @returns {boolean}
     */
    get adminAutoLogonEnabled() {
        return this._json.admin_auto_logon_enabled;
    }
    /**
     * Get admin auto logon count.
     * @returns {number}
     */
    get adminAutoLogonCount() {
        return this._json.admin_auto_logon_count;
    }
    /**
     * Get reset password required.
     * @returns {boolean}
     */
    get resetPasswordRequired() {
        return this._json.reset_password_required;
    }
    /**
     * Get computer name.
     * @returns {string}
     */
    get computerName() {
        return this._json.computer_name;
    }
    /**
     * Get required.
     * @returns {boolean}
     */
    get required() {
        return this._json.required;
    }
    /**
     * Get the json representation of this class.
     * @returns {GuestCustomizationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GuestCustomization = GuestCustomization;


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GuestTools = void 0;
/**
 * VM Guest Tools
 */
class GuestTools {
    constructor(firstParam) {
        if (firstParam instanceof GuestTools) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns guest tools status
     * @returns {ToolsVersionStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Returns guest tools running status
     * @returns {ToolsRunningStatus}
     */
    get runningStatus() {
        return this._json.running_status;
    }
    /**
     * Returns guest tools version
     * @returns {string}
     */
    get version() {
        return this._json.version;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {BootOptionsJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.GuestTools = GuestTools;


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MksScreenTicket = void 0;
/**
 * VM MKS Screen Ticket.
 */
class MksScreenTicket {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the VMX attribute.
     * @returns {string} vmx
     */
    get vmx() {
        return this._json.vmx;
    }
    /**
     * Gets the ticket.
     * @returns {string}
     */
    get ticket() {
        return this._json.ticket;
    }
    /**
     * Gets the host.
     * @returns {string}
     */
    get host() {
        return this._json.host;
    }
    /**
     * Gets the port.
     * @returns {string}
     */
    get port() {
        return this._json.port;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {MksScreenTicketJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.MksScreenTicket = MksScreenTicket;


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ScreenTicket = void 0;
/**
 * VM Screen Ticket.
 */
class ScreenTicket {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the VM ID attribute.
     * @returns {string} VM ID
     */
    get vmId() {
        return this._json.vm_id;
    }
    /**
     * Gets the ticket.
     * @returns {string}
     */
    get ticket() {
        return this._json.ticket;
    }
    /**
     * Gets the host.
     * @returns {string}
     */
    get host() {
        return this._json.host;
    }
    /**
     * Gets the SSL thumbprint.
     * @returns {string}
     */
    get sslThumbprint() {
        return this._json.ssl_thumbprint;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {ScreenTicketJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.ScreenTicket = ScreenTicket;


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualDisk = void 0;
/**
 * Virtual Disk.
 */
class VirtualDisk {
    constructor(_apiDisk) {
        this._apiDisk = _apiDisk;
    }
    /**
     * Gets the name of the virtual disk.
     * @returns {string} the name
     */
    get name() {
        return this._apiDisk.name;
    }
    /**
     * Gets the size of the virtual disk in MB.
     * @returns {number} size in MB
     */
    get size() {
        return this._apiDisk.size;
    }
    /**
     * Gets the Virtual Hard Disk type.
     * @returns {DiskType} the type
     */
    get type() {
        return this._apiDisk.type;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._apiDisk, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VirtualDiskJson} the API virtual disk object
     */
    get json() {
        return Object.assign({}, this._apiDisk);
    }
}
exports.VirtualDisk = VirtualDisk;


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmNetwork = void 0;
const ip_range_1 = __webpack_require__(32);
class VmNetwork {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vapp network.
     * @returns {boolean}
     */
    get vappNetwork() {
        return this._json.vapp_network;
    }
    /**
     * Get fence mode.
     * @returns {string}
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRange>}
     */
    get ipRanges() {
        return this._json.ip_ranges.map(range => {
            return new ip_range_1.IpRange(range);
        });
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get dns1.
     * @returns {string}
     */
    get dns1() {
        return this._json.dns1;
    }
    /**
     * Get dns2.
     * @returns {string}
     */
    get dns2() {
        return this._json.dns2;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get inherited.
     * @returns {boolean}
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Get parent network name.
     * @returns {string}
     */
    get parentNetworkName() {
        return this._json.parent_network_name;
    }
    /**
     * Get parent network uuid.
     * @returns {string}
     */
    get parentNetworkUuid() {
        return this._json.parent_network_uuid;
    }
    /**
     * Get parent entity uuid.
     * @returns {string}
     */
    get parentEntityUuid() {
        return this._json.parent_entity_uuid;
    }
    /**
     * Get shared.
     * @returns {boolean}
     */
    get shared() {
        return this._json.shared;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get router external ip.
     * @returns {string}
     */
    get routerExternalIp() {
        return this._json.router_external_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmNetworkJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmNetwork = VmNetwork;


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Vnic = void 0;
/**
 * Virtual Network Interface Card.
 */
class Vnic {
    constructor(_apiVnic) {
        this._apiVnic = _apiVnic;
    }
    /**
     * Gets the type of the adapter.
     * @returns {string} adapter type
     */
    get adapterType() {
        return this._apiVnic.adapter_type;
    }
    /**
     * Gets the address mode of the adapter.
     * @returns {string} address mode
     */
    get addressMode() {
        return this._apiVnic.ip_addressing_mode;
    }
    /**
     * Indicates whether the VNIC is currently connected.
     * @returns {boolean} value
     */
    get isConnected() {
        return this._apiVnic.is_connected;
    }
    /**
     * Indicates whether the VNIC is deleted.
     * @returns {boolean} value
     */
    get deleted() {
        return this._apiVnic.deleted;
    }
    /**
     * Gets the IP address that is assigned to the VNIC.
     * @returns {string} IP Address
     */
    get ipAddress() {
        return this._apiVnic.ip_address;
    }
    /**
     * Gets the MAC address that is assigned to the VNIC.
     * @returns {string} MAC address
     */
    get macAddress() {
        return this._apiVnic.mac_address;
    }
    /**
     * Gets the name of the network that the VNIC is connected to.
     * @returns {string} vApp network name
     */
    get connectedNetworkName() {
        return this._apiVnic.network_name;
    }
    /**
     * Indicates whether this is the VM's primary VNIC.
     * @returns {boolean} value
     */
    get primaryConnection() {
        return this._apiVnic.is_primary;
    }
    /**
     * Gets the ID of the VNIC among other VNICs connected to the VM.
     * @returns {number} VNIC ID
     */
    get vnicId() {
        return this._apiVnic.vnic_id;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._apiVnic, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VnicJson} the API VNIC object
     */
    get json() {
        return Object.assign({}, this._apiVnic);
    }
}
exports.Vnic = Vnic;


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmResourceSummaryMapResponse = void 0;
const vm_summary_1 = __webpack_require__(213);
/**
 * Vm resource summary map response.
 */
/* istanbul ignore next: autogenerated */
class VmResourceSummaryMapResponse {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get summaries.
     * @returns {{ [key: string]: VmSummary }}
     */
    get summaries() {
        const map = {};
        Object.keys(this._json.summaries).forEach(key => {
            map[key] = new vm_summary_1.VmSummary(this._json.summaries[key]);
        });
        return map;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmSummaryMapResponseJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmResourceSummaryMapResponse = VmResourceSummaryMapResponse;


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappDownloadDetails = void 0;
/* istanbul ignore next: autogenerated */
class VappDownloadDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get download name.
     * @returns {string}
     */
    get downloadName() {
        return this._json.download_name;
    }
    /**
     * Get download size bytes.
     * @returns {number}
     */
    get downloadSizeBytes() {
        return this._json.download_size_bytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {DownloadDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappDownloadDetails = VappDownloadDetails;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappStartupSectionItem = void 0;
/* istanbul ignore next: autogenerated */
class VappStartupSectionItem {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm name.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get order.
     * @returns {number}
     */
    get order() {
        return this._json.order;
    }
    /**
     * Get startup action.
     * @returns {string}
     */
    get startupAction() {
        return this._json.startup_action;
    }
    /**
     * Get stop action.
     * @returns {string}
     */
    get stopAction() {
        return this._json.stop_action;
    }
    /**
     * Get start delay.
     * @returns {number}
     */
    get startDelay() {
        return this._json.start_delay;
    }
    /**
     * Get stop delay.
     * @returns {number}
     */
    get stopDelay() {
        return this._json.stop_delay;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappStartupSectionItemJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappStartupSectionItem = VappStartupSectionItem;


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VCCFailoverPlanVm = void 0;
/**
 * VCC Failover Plan VM.
 */
/* istanbul ignore next: autogenerated */
class VCCFailoverPlanVm {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VCCFailoverPlanVmJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VCCFailoverPlanVm = VCCFailoverPlanVm;


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcIntegratedBackupStatusDetail = void 0;
const vdc_integrated_backup_status_1 = __webpack_require__(204);
/**
 * vDC Integrated Backup Status Detail.
 */
/* istanbul ignore next: autogenerated */
class VdcIntegratedBackupStatusDetail extends vdc_integrated_backup_status_1.VdcIntegratedBackupStatus {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get whether the vDC has the integrated backups offering.
     * @returns {boolean}
     */
    get hasIntegratedBackups() {
        return this._json.has_integrated_backups;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcIntegratedBackupStatusDetailJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcIntegratedBackupStatusDetail = VdcIntegratedBackupStatusDetail;


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingSample = void 0;
/* istanbul ignore next: autogenerated */
class BillingSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get value.
     * @returns {number}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get additional fields.
     * @returns {{ [key: BillField]: number }}
     */
    get additionalFields() {
        return this._json.additional_fields;
    }
    /**
     * Get the json representation of this class.
     * @returns {BillingSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BillingSample = BillingSample;


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer2Rule = void 0;
const distributed_firewall_rule_applied_to_1 = __webpack_require__(220);
const distributed_firewall_rule_destination_1 = __webpack_require__(221);
const distributed_firewall_rule_service_object_1 = __webpack_require__(222);
const distributed_firewall_rule_service_protocol_1 = __webpack_require__(223);
const distributed_firewall_rule_source_1 = __webpack_require__(224);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer2Rule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get action.
     * @returns {DistributedFirewallActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get applied to list.
     * @returns {Array<DistributedFirewallRuleAppliedTo>}
     */
    get appliedToList() {
        return (this._json.applied_to_list || []).map(it => new distributed_firewall_rule_applied_to_1.DistributedFirewallRuleAppliedTo(it));
    }
    /**
     * Get section id.
     * @returns {number}
     */
    get sectionId() {
        return this._json.section_id;
    }
    /**
     * Get sources excluded.
     * @returns {boolean}
     */
    get sourcesExcluded() {
        return this._json.sources_excluded;
    }
    /**
     * Get sources.
     * @returns {Array<DistributedFirewallRuleSource>}
     */
    get sources() {
        return (this._json.sources || []).map(it => new distributed_firewall_rule_source_1.DistributedFirewallRuleSource(it));
    }
    /**
     * Get destinations excluded.
     * @returns {boolean}
     */
    get destinationsExcluded() {
        return this._json.destinations_excluded;
    }
    /**
     * Get destinations.
     * @returns {Array<DistributedFirewallRuleDestination>}
     */
    get destinations() {
        return (this._json.destinations || []).map(it => new distributed_firewall_rule_destination_1.DistributedFirewallRuleDestination(it));
    }
    /**
     * Get service objects.
     * @returns {Array<DistributedFirewallRuleServiceObject>}
     */
    get serviceObjects() {
        return (this._json.service_objects || []).map(it => new distributed_firewall_rule_service_object_1.DistributedFirewallRuleServiceObject(it));
    }
    /**
     * Get service protocols.
     * @returns {Array<DistributedFirewallRuleServiceProtocol>}
     */
    get serviceProtocols() {
        return (this._json.service_protocols || []).map(it => new distributed_firewall_rule_service_protocol_1.DistributedFirewallRuleServiceProtocol(it));
    }
    /**
     * Get direction.
     * @returns {DistributedFirewallDirectionType}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get packet type.
     * @returns {DistributedFirewallPacketType}
     */
    get packetType() {
        return this._json.packet_type;
    }
    /**
     * Get tag.
     * @returns {string}
     */
    get tag() {
        return this._json.tag;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get disabled.
     * @returns {boolean}
     */
    get disabled() {
        return this._json.disabled;
    }
    /**
     * Get logged.
     * @returns {boolean}
     */
    get logged() {
        return this._json.logged;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer2RuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer2Rule = DistributedFirewallLayer2Rule;


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer2RestorePointDetails = void 0;
const distributed_firewall_layer2_1 = __webpack_require__(219);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer2RestorePointDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return this._json.restore_point_time;
    }
    /**
     * Get data.
     * @returns {DistributedFirewallLayer2}
     */
    get data() {
        return new distributed_firewall_layer2_1.DistributedFirewallLayer2(this._json.data);
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRestorePointDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer2RestorePointDetails = DistributedFirewallLayer2RestorePointDetails;


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer3Rule = void 0;
const distributed_firewall_rule_applied_to_1 = __webpack_require__(220);
const distributed_firewall_rule_destination_1 = __webpack_require__(221);
const distributed_firewall_rule_service_object_1 = __webpack_require__(222);
const distributed_firewall_rule_service_protocol_1 = __webpack_require__(223);
const distributed_firewall_rule_source_1 = __webpack_require__(224);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer3Rule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get action.
     * @returns {DistributedFirewallActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get applied to list.
     * @returns {Array<DistributedFirewallRuleAppliedTo>}
     */
    get appliedToList() {
        return (this._json.applied_to_list || []).map(it => new distributed_firewall_rule_applied_to_1.DistributedFirewallRuleAppliedTo(it));
    }
    /**
     * Get section id.
     * @returns {number}
     */
    get sectionId() {
        return this._json.section_id;
    }
    /**
     * Get sources excluded.
     * @returns {boolean}
     */
    get sourcesExcluded() {
        return this._json.sources_excluded;
    }
    /**
     * Get sources.
     * @returns {Array<DistributedFirewallRuleSource>}
     */
    get sources() {
        return (this._json.sources || []).map(it => new distributed_firewall_rule_source_1.DistributedFirewallRuleSource(it));
    }
    /**
     * Get destinations excluded.
     * @returns {boolean}
     */
    get destinationsExcluded() {
        return this._json.destinations_excluded;
    }
    /**
     * Get destinations.
     * @returns {Array<DistributedFirewallRuleDestination>}
     */
    get destinations() {
        return (this._json.destinations || []).map(it => new distributed_firewall_rule_destination_1.DistributedFirewallRuleDestination(it));
    }
    /**
     * Get service objects.
     * @returns {Array<DistributedFirewallRuleServiceObject>}
     */
    get serviceObjects() {
        return (this._json.service_objects || []).map(it => new distributed_firewall_rule_service_object_1.DistributedFirewallRuleServiceObject(it));
    }
    /**
     * Get service protocols.
     * @returns {Array<DistributedFirewallRuleServiceProtocol>}
     */
    get serviceProtocols() {
        return (this._json.service_protocols || []).map(it => new distributed_firewall_rule_service_protocol_1.DistributedFirewallRuleServiceProtocol(it));
    }
    /**
     * Get direction.
     * @returns {DistributedFirewallDirectionType}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get packet type.
     * @returns {DistributedFirewallPacketType}
     */
    get packetType() {
        return this._json.packet_type;
    }
    /**
     * Get tag.
     * @returns {string}
     */
    get tag() {
        return this._json.tag;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get disabled.
     * @returns {boolean}
     */
    get disabled() {
        return this._json.disabled;
    }
    /**
     * Get logged.
     * @returns {boolean}
     */
    get logged() {
        return this._json.logged;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer3RuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer3Rule = DistributedFirewallLayer3Rule;


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer3RestorePointDetails = void 0;
const distributed_firewall_layer3_1 = __webpack_require__(225);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer3RestorePointDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return this._json.restore_point_time;
    }
    /**
     * Get data.
     * @returns {DistributedFirewallLayer3}
     */
    get data() {
        return new distributed_firewall_layer3_1.DistributedFirewallLayer3(this._json.data);
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRestorePointDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer3RestorePointDetails = DistributedFirewallLayer3RestorePointDetails;


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallObjectList = void 0;
const distributed_firewall_object_1 = __webpack_require__(465);
const object_paging_params_1 = __webpack_require__(226);
/* istanbul ignore next: autogenerated */
class DistributedFirewallObjectList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {ObjectPagingParams}
     */
    get currentPageParameters() {
        return new object_paging_params_1.ObjectPagingParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {ObjectPagingParams}
     */
    get nextPageParameters() {
        return new object_paging_params_1.ObjectPagingParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<DistributedFirewallObject>}
     */
    get data() {
        return (this._json.data || []).map(it => new distributed_firewall_object_1.DistributedFirewallObject(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallObjectListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallObjectList = DistributedFirewallObjectList;


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallObject = void 0;
const distributed_firewall_object_property_1 = __webpack_require__(466);
/* istanbul ignore next: autogenerated */
class DistributedFirewallObject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get properties.
     * @returns {Array<DistributedFirewallObjectProperty>}
     */
    get properties() {
        return (this._json.properties || []).map(it => new distributed_firewall_object_property_1.DistributedFirewallObjectProperty(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallObjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallObject = DistributedFirewallObject;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallObjectProperty = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallObjectProperty {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallObjectPropertyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallObjectProperty = DistributedFirewallObjectProperty;


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallObjectType = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallObjectType {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallObjectTypeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallObjectType = DistributedFirewallObjectType;


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallRestorePoint = void 0;
/* istanbul ignore next: autogenerated */
class DistributedFirewallRestorePoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return this._json.restore_point_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallRestorePointJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallRestorePoint = DistributedFirewallRestorePoint;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Application = void 0;
/**
 * Application
 */
/* istanbul ignore next: autogenerated */
class Application {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description || undefined;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get element.
     * @returns {ElementJson}
     */
    get element() {
        return this._json.element;
    }
    /**
     * Get the json representation of this class.
     * @returns {ApplicationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Application = Application;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationGroup = void 0;
const application_group_member_1 = __webpack_require__(471);
/**
 * Application Group
 */
/* istanbul ignore next: autogenerated */
class ApplicationGroup {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get members.
     * @returns {Array<ApplicationGroupMember>}
     */
    get members() {
        return this._json.members.map(it => new application_group_member_1.ApplicationGroupMember(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {ApplicationGroupJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ApplicationGroup = ApplicationGroup;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationGroupMember = void 0;
/**
 * Application Group Member
 */
/* istanbul ignore next: autogenerated */
class ApplicationGroupMember {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get the json representation of this class.
     * @returns {ApplicationGroupMemberJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ApplicationGroupMember = ApplicationGroupMember;


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSet = void 0;
/**
 * IP Set
 */
/* istanbul ignore next: autogenerated */
class IpSet {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description || undefined;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get revision.
     * @returns {number}
     */
    get revision() {
        return this._json.revision;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpSetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSet = IpSet;


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MacSet = void 0;
/**
 * MAC Set
 */
/* istanbul ignore next: autogenerated */
class MacSet {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description || undefined;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get revision.
     * @returns {number}
     */
    get revision() {
        return this._json.revision;
    }
    /**
     * Get the json representation of this class.
     * @returns {MacSetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MacSet = MacSet;


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOptionList = void 0;
const security_group_member_option_1 = __webpack_require__(475);
const security_group_member_option_paging_params_1 = __webpack_require__(228);
/**
 * Security Group Member Option List
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOptionList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {SecurityGroupMemberOptionPagingParams}
     */
    get currentPageParameters() {
        return new security_group_member_option_paging_params_1.SecurityGroupMemberOptionPagingParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {SecurityGroupMemberOptionPagingParams | null}
     */
    get nextPageParameters() {
        return this._json.next_page_parameters ? new security_group_member_option_paging_params_1.SecurityGroupMemberOptionPagingParams(this._json.next_page_parameters) : null;
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<SecurityGroupMemberOption>
     */
    get data() {
        return this._json.data.map(it => new security_group_member_option_1.SecurityGroupMemberOption(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOptionList = SecurityGroupMemberOptionList;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOption = void 0;
const security_group_member_option_property_1 = __webpack_require__(476);
/**
 * Security Group Member Option
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOption {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get properties.
     * @returns {Array<SecurityGroupMemberOptionProperty>}
     */
    get properties() {
        return this._json.properties.map(it => new security_group_member_option_property_1.SecurityGroupMemberOptionProperty(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOption = SecurityGroupMemberOption;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOptionProperty = void 0;
/**
 * Security Group Member Option Property.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOptionProperty {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionPropertyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOptionProperty = SecurityGroupMemberOptionProperty;


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObjectList = void 0;
const security_tag_object_1 = __webpack_require__(478);
const security_tag_object_paging_params_1 = __webpack_require__(231);
/**
 * Security Group Tag Object List.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObjectList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {SecurityTagObjectPagingParams}
     */
    get currentPageParameters() {
        return new security_tag_object_paging_params_1.SecurityTagObjectPagingParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {SecurityTagObjectPagingParams | null}
     */
    get nextPageParameters() {
        return this._json.next_page_parameters ? new security_tag_object_paging_params_1.SecurityTagObjectPagingParams(this._json.next_page_parameters) : null;
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<SecurityTagObject>}
     */
    get data() {
        return this._json.data.map(it => new security_tag_object_1.SecurityTagObject(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObjectList = SecurityTagObjectList;


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObject = void 0;
const security_tag_object_property_1 = __webpack_require__(479);
/**
 * Security Tag Object.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObject {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get properties.
     * @returns {Array<SecurityTagObjectProperty>}
     */
    get properties() {
        return this._json.properties.map(it => new security_tag_object_property_1.SecurityTagObjectProperty(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObject = SecurityTagObject;


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObjectProperty = void 0;
/**
 * Security Tag Object Property.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObjectProperty {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectPropertyJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObjectProperty = SecurityTagObjectProperty;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagWithAssignedVMs = void 0;
const security_tag_vm_1 = __webpack_require__(481);
/**
 * Security Tag with Assigned VMs.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagWithAssignedVMs {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get assigned vms.
     * @returns {Array<SecurityTagVm>}
     */
    get assignedVms() {
        return this._json.assigned_vms.map(it => new security_tag_vm_1.SecurityTagVm(it));
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get vm count.
     * @returns {number}
     */
    get vmCount() {
        return this._json.vm_count;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagWithAssignedVMsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagWithAssignedVMs = SecurityTagWithAssignedVMs;


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagVm = void 0;
/**
 * Virtual Machine assigned to the Security Tag.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagVm {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagVmJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagVm = SecurityTagVm;


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappResourceSummaryMap = void 0;
const vapp_resource_summary_1 = __webpack_require__(216);
/**
 * vApp Resource Summary Map.
 */
/* istanbul ignore next: autogenerated */
class VappResourceSummaryMap {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get summaries.
     * @returns {{ [key: string]: VappResourceSummary }}
     */
    get summaries() {
        const result = {};
        for (const key in this._json.summaries) {
            result[key] = new vapp_resource_summary_1.VappResourceSummary(this._json.summaries[key]);
        }
        return result;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappResourceSummaryMapJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappResourceSummaryMap = VappResourceSummaryMap;


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcStorageProfileSummary = void 0;
const vdc_storage_profile_bill_1 = __webpack_require__(484);
/**
 * vDC Storage Profile Summary.
 */
/* istanbul ignore next: autogenerated */
class VdcStorageProfileSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get month.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get storage profile bills.
     * @returns {Array<StorageProfileBill>}
     */
    get storageProfileBills() {
        return this._json.storage_profile_bills.map(it => new vdc_storage_profile_bill_1.StorageProfileBill(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcStorageProfileSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcStorageProfileSummary = VdcStorageProfileSummary;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageProfileBill = void 0;
/**
 * Storage Profile Bill.
 */
/* istanbul ignore next: autogenerated */
class StorageProfileBill {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get total usage.
     * @returns {number}
     */
    get totalUsage() {
        return this._json.total_usage;
    }
    /**
     * Get total cost.
     * @returns {number}
     */
    get totalCost() {
        return this._json.total_cost;
    }
    /**
     * Get res usage.
     * @returns {number}
     */
    get resUsage() {
        return this._json.res_usage;
    }
    /**
     * Get res cost.
     * @returns {number}
     */
    get resCost() {
        return this._json.res_cost;
    }
    /**
     * Get burst usage.
     * @returns {number}
     */
    get burstUsage() {
        return this._json.burst_usage;
    }
    /**
     * Get burst cost.
     * @returns {number}
     */
    get burstCost() {
        return this._json.burst_cost;
    }
    /**
     * Get vm usage.
     * @returns {number}
     */
    get vmUsage() {
        return this._json.vm_usage;
    }
    /**
     * Get catalog usage.
     * @returns {number}
     */
    get catalogUsage() {
        return this._json.catalog_usage;
    }
    /**
     * Get Zerto journal storage usage.
     */
    get zertoJournalStorageUsage() {
        return this._json.zerto_journal_storage_usage;
    }
    /**
     * Get Zerto replicated storage usage.
     * @returns {number} 0 if not a Zerto environ
     */
    get zertoReplicatedStorageUsage() {
        return this._json.zerto_replicated_storage_usage;
    }
    /**
     * Get the json representation of this class.
     * @returns {StorageProfileBillJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StorageProfileBill = StorageProfileBill;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcSummary = void 0;
/**
 * vDC Summary.
 */
class VdcSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the number of vApps for the vDC
     * @returns {number}
     */
    get numberOfVapps() {
        return this._json.number_of_vapps;
    }
    /**
     * Gets the number of VMs for the vDC
     * @returns {number}
     */
    get numberOfVms() {
        return this._json.number_of_vms;
    }
    /**
     * Gets the allocated cpu for the vDC
     * @returns {number}
     */
    get allocationCpu() {
        return this._json.allocation_cpu;
    }
    /**
     * Gets the allocated memory for the vDC
     * @returns {number}
     */
    get allocationMemory() {
        return this._json.allocation_memory;
    }
    /**
     * Gets the configured cpu for the vDC
     * @returns {number}
     */
    get configuredCpu() {
        return this._json.configured_cpu;
    }
    /**
     * Gets the configured memory for the vDC
     * @returns {number}
     */
    get configuredMemory() {
        return this._json.configured_memory;
    }
    /**
     * Gets the configured disk for the vDC
     * @returns {number}
     */
    get configuredDisk() {
        return this._json.configured_disk;
    }
    /**
     * Gets the reserved cpu for the vDC
     * @returns {number}
     */
    get reservedCpu() {
        return this._json.reserved_cpu;
    }
    /**
     * Gets the reserved memory for the vDC
     * @returns {number}
     */
    get reservedMem() {
        return this._json.reserved_mem;
    }
    /**
     * Gets the consumed cpu for the vDC
     * @returns {number}
     */
    get consumedCpu() {
        return this._json.consumed_cpu;
    }
    /**
     * Gets the consumed memory for the vDC
     * @returns {number}
     */
    get consumedMem() {
        return this._json.consumed_mem;
    }
    /**
     * Gets the consumed disk for the vDC
     * @returns {number}
     */
    get consumedDisk() {
        return this._json.consumed_disk;
    }
    /**
     * Gets the provisioned disk for the vDC
     * @returns {number}
     */
    get provisionedDisk() {
        return this._json.provisioned_disk;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VdcSummaryJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VdcSummary = VdcSummary;


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmAffinityRule = void 0;
const tslib_1 = __webpack_require__(5);
const vm_1 = __webpack_require__(41);
/**
 * VM  Affinity Rule.
 */
/* istanbul ignore next: autogenerated */
class VmAffinityRule {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm uuids.
     * @returns {Array<string>}
     */
    get vmUuids() {
        return this._json.vm_uuids;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get type.
     * @returns {AffinityRuleType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get isMandatory.
     * @returns {boolean}
     */
    get isMandatory() {
        return this._json.is_mandatory;
    }
    /**
     * Get Vm list
     * @returns {Promise<Array<Vm>>}
     */
    getVms() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return Promise.all(this._json.vm_uuids.map((it) => tslib_1.__awaiter(this, void 0, void 0, function* () { return vm_1.Vm.getVm(it); })));
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VmAffinityRuleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmAffinityRule = VmAffinityRule;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmResourceSummaryMap = void 0;
const vm_resource_summary_1 = __webpack_require__(215);
/**
 * VM Resource Summary Map.
 */
/* istanbul ignore next: autogenerated */
class VmResourceSummaryMap {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get summaries.
     * @returns {{ [key: string]: VmResourceSummary }}
     */
    get summaries() {
        const result = {};
        for (const key in this._json.summaries) {
            result[key] = new vm_resource_summary_1.VmResourceSummary(this._json.summaries[key]);
        }
        return result;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmResourceSummaryMapJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmResourceSummaryMap = VmResourceSummaryMap;


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AutomationGroupConfig = exports.DeploymentUser = exports.DeploymentDetails = exports.VdiAutomationDeployment = void 0;
/**
 * VDI Automation Deployment.
 */
/* istanbul ignore next: autogenerated */
class VdiAutomationDeployment {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get automation group uuid.
     * @returns {string}
     */
    get automationGroupUuid() {
        return this._json.automation_group_uuid;
    }
    /**
     * Get state.
     * @returns {VdiDeploymentState}
     */
    get state() {
        return this._json.state;
    }
    /**
     * Get deployment user.
     * @returns {DeploymentUser}
     */
    get deploymentUser() {
        return new DeploymentUser(this._json.deployment_user);
    }
    /**
     * Get configuration.
     * @returns {AutomationGroupConfig}
     */
    get configuration() {
        return new AutomationGroupConfig(this._json.configuration);
    }
    /**
     * Get deployment details.
     * @returns {DeploymentDetails}
     */
    get deploymentDetails() {
        return new DeploymentDetails(this._json.deployment_details);
    }
    /**
     * Gets the failure message field.
     * @returns {string | undefined}
     */
    get failureMessage() {
        return this._json.failure_message;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiAutomationDeploymentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiAutomationDeployment = VdiAutomationDeployment;
/**
 * Deployment Details.
 */
/* istanbul ignore next: autogenerated */
class DeploymentDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get internal ip.
     * @returns {string}
     */
    get internalIp() {
        return this._json.internal_ip;
    }
    /**
     * Get public rdp port.
     * @returns {string}
     */
    get publicRdpPort() {
        return this._json.public_rdp_port;
    }
    /**
     * Get vm uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get guest admin password.
     * @returns {string}
     */
    get guestAdminPassword() {
        return this._json.guest_admin_password;
    }
    /**
     * Get computer name.
     * @returns {string}
     */
    get computerName() {
        return this._json.computer_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DeploymentDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DeploymentDetails = DeploymentDetails;
/**
 * Deployment User.
 */
/* istanbul ignore next: autogenerated */
class DeploymentUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user uuid.
     * @returns {string}
     */
    get userUuid() {
        return this._json.user_uuid;
    }
    /**
     * Get user email.
     * @returns {string}
     */
    get userEmail() {
        return this._json.user_email;
    }
    /**
     * Get user full name.
     * @returns {string}
     */
    get userFullName() {
        return this._json.user_full_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DeploymentUser}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DeploymentUser = DeploymentUser;
/**
 * Deployment Automation Group Config.
 */
/* istanbul ignore next: autogenerated */
class AutomationGroupConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm template uuid.
     * @returns {string}
     */
    get vmTemplateUuid() {
        return this._json.vm_template_uuid;
    }
    /**
     * Get deployment vdc uuid.
     * @returns {string}
     */
    get deploymentVdcUuid() {
        return this._json.deployment_vdc_uuid;
    }
    /**
     * Get org vdc network uuid.
     * @returns {string}
     */
    get orgVdcNetworkUuid() {
        return this._json.org_vdc_network_uuid;
    }
    /**
     * Get domain to join.
     * @returns {string}
     */
    get domainToJoin() {
        return this._json.domain_to_join;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get public rdp ip.
     * @returns {string}
     */
    get publicRdpIp() {
        return this._json.public_rdp_ip;
    }
    /**
     * Get network connection type.
     * @returns {NetworkConnectionType}
     */
    get networkConnectionType() {
        return this._json.network_connection_type;
    }
    /**
     * Get join domain enabled.
     * @returns {boolean}
     */
    get joinDomainEnabled() {
        return this._json.join_domain_enabled;
    }
    /**
     * Get guest password reset required.
     * @returns {boolean}
     */
    get guestPasswordResetRequired() {
        return this._json.guest_password_reset_required;
    }
    /**
     * Get the json representation of this class.
     * @returns {AutomationGroupConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AutomationGroupConfig = AutomationGroupConfig;


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiAutomationGroup = void 0;
/**
 * VDI Automation Group.
 */
/* istanbul ignore next: autogenerated */
class VdiAutomationGroup {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get public ip.
     * @returns {string}
     */
    get publicIp() {
        return this._json.public_ip;
    }
    /**
     * Get vapp template uuid.
     * @returns {string}
     */
    get vappTemplateUuid() {
        return this._json.vapp_template_uuid;
    }
    /**
     * Get vm template uuid.
     * @returns {string}
     */
    get vmTemplateUuid() {
        return this._json.vm_template_uuid;
    }
    /**
     * Get deployment vdc uuid.
     * @returns {string}
     */
    get deploymentVdcUuid() {
        return this._json.deployment_vdc_uuid;
    }
    /**
     * Get org vdc network uuid.
     * @returns {string}
     */
    get orgVdcNetworkUuid() {
        return this._json.org_vdc_network_uuid;
    }
    /**
     * Get domain to join.
     * @returns {string}
     */
    get domainToJoin() {
        return this._json.domain_to_join;
    }
    /**
     * Get team uuid.
     * @returns {string}
     */
    get teamUuid() {
        return this._json.team_uuid;
    }
    /**
     * Get network connection type.
     * @returns {NetworkConnectionType}
     */
    get networkConnectionType() {
        return this._json.network_connection_type;
    }
    /**
     * Get join domain enabled.
     * @returns {boolean}
     */
    get joinDomainEnabled() {
        return this._json.join_domain_enabled;
    }
    /**
     * Get guest password reset required.
     * @returns {boolean}
     */
    get guestPasswordResetRequired() {
        return this._json.guest_password_reset_required;
    }
    /**
     * Get the storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiAutomationGroupJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiAutomationGroup = VdiAutomationGroup;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiOrgDeploymentSummary = void 0;
const vdi_automation_group_deployment_summary_1 = __webpack_require__(233);
/**
 * VDI Org Deployment Summary.
 */
/* istanbul ignore next: autogenerated */
class VdiOrgDeploymentSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number of pending deploys in org.
     * @returns {number}
     */
    get numberOfPendingDeploysInOrg() {
        return this._json.number_of_pending_deploys_in_org;
    }
    /**
     * Get number of ready deployments in org.
     * @returns {number}
     */
    get numberOfReadyDeploymentsInOrg() {
        return this._json.number_of_ready_deployments_in_org;
    }
    /**
     * Get number of pending undeploys in org.
     * @returns {number}
     */
    get numberOfPendingUndeploysInOrg() {
        return this._json.number_of_pending_undeploys_in_org;
    }
    /**
     * Get number of failed deploys in org.
     * @returns {number}
     */
    get numberOfFailedDeploysInOrg() {
        return this._json.number_of_failed_deploys_in_org;
    }
    /**
     * Get data.
     * @returns {Array<VdiAutomationGroupDeploymentSummaryJson>}
     */
    get data() {
        return this._json.data.map(it => new vdi_automation_group_deployment_summary_1.VdiAutomationGroupDeploymentSummary(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiOrgDeploymentSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiOrgDeploymentSummary = VdiOrgDeploymentSummary;


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiTeam = void 0;
/**
 * VDI Team.
 */
/* istanbul ignore next: autogenerated */
class VdiTeam {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get members.
     * @returns {Array<string>}
     */
    get members() {
        return this._json.members;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiTeamJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiTeam = VdiTeam;


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiUser = void 0;
/**
 * VDI User.
 */
/* istanbul ignore next: autogenerated */
class VdiUser {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiUserJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiUser = VdiUser;


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BandwidthUsageSummary = void 0;
/**
 * Bandwidth Usage Summary.
 */
/* istanbul ignore next: autogenerated */
class BandwidthUsageSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get reserved amount.
     * @returns {number}
     */
    get reservedAmount() {
        return this._json.reserved_amount;
    }
    /**
     * Get total usage.
     * @returns {number}
     */
    get totalUsage() {
        return this._json.total_usage;
    }
    /**
     * Get burst usage.
     * @returns {number}
     */
    get burstUsage() {
        return this._json.burst_usage;
    }
    /**
     * Get month.
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get year.
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get the Billing model type.
     * @returns {BillingModelType}
     */
    get billingModelType() {
        return this._json.billing_model_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {BandwidthUsageSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BandwidthUsageSummary = BandwidthUsageSummary;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckDnsZone = void 0;
/**
 * Check DNS Zone.
 */
class CheckDnsZone {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get valid.
     * @returns {boolean}
     */
    get valid() {
        return this._json.valid;
    }
    /**
     * Get message.
     * @returns {string}
     */
    get message() {
        return this._json.message;
    }
    /**
     * Get the json representation of this class.
     * @returns {CheckDnsZoneJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CheckDnsZone = CheckDnsZone;


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbook = void 0;
const tslib_1 = __webpack_require__(5);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const task_1 = __webpack_require__(10);
const disaster_recovery_runbook_task_details_1 = __webpack_require__(496);
const recovery_group_descriptor_1 = __webpack_require__(97);
/**
 * Disaster recovery runbook
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbook {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets an DisasterRecoveryRunbook by UUID.
     * @param uuid DisasterRecoveryRunbook UUID
     * @returns {Promise<DisasterRecoveryRunbook>} promise that resolves with the DisasterRecoveryRunbook
     */
    static getDisasterRecoveryRunbook(uuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/disaster-recovery-runbooks/${uuid}`)
                .then(response => {
                const json = response.data;
                return new DisasterRecoveryRunbook(json);
            });
        });
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get created date.
     * @returns {number}
     */
    get createdDate() {
        return this._json.created_date;
    }
    /**
     * Get last test.
     * @returns {number}
     */
    get lastTest() {
        return this._json.last_test;
    }
    /**
     * Get recovery groups.
     * @returns {Array<RecoveryGroupDescriptor>}
     */
    get recoveryGroups() {
        return this._json.recovery_groups.map(group => {
            return new recovery_group_descriptor_1.RecoveryGroupDescriptor(group);
        });
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get updated date.
     * @returns {number}
     */
    get updatedDate() {
        return this._json.updated_date;
    }
    /**
     * Get company id.
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Refreshes the DisasterRecoveryRunbook data by retrieving it from the API again.
     * @returns {Promise<DisasterRecoveryRunbook>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/disaster-recovery-runbooks/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
    /**
     * Deletes a DisasterRecoveryRunbook.
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    delete() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/disaster-recovery-runbooks/${this.uuid}`);
        });
    }
    /**
     * Updates a disaster recovery runbook.
     * @param {DisasterRecoveryRunbookUpdateRequest} request the update request
     * @returns {Promise<DisasterRecoveryRunbook>} a promise that resolves with the updated runbook.
     */
    update(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .put(`/disaster-recovery-runbooks/${this.uuid}`, request.json)
                .then(response => {
                const json = response.data;
                return new DisasterRecoveryRunbook(json);
            });
        });
    }
    /**
     * Abort a disaster recovery runbook.
     * @param {DisasterRecoveryRunbookAbortRequest} abortRequest
     * @returns {Promise<Task>}
     */
    abort(abortRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/disaster-recovery-runbooks/${this.uuid}/actions/abort`, abortRequest.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Execute a runbook.
     * @param {DisasterRecoveryRunbookExecuteRequest} executeRequest
     * @returns {Promise<any>}
     */
    execute(executeRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/disaster-recovery-runbooks/${this.uuid}/actions/execute`, executeRequest.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Finalize runbook execution.
     * @param {DisasterRecoveryRunbookFinalizeExecutionRequest} finalizeExecutionRequest
     * @returns {Promise<Task>}
     */
    finalizeExecution(finalizeExecutionRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/disaster-recovery-runbooks/${this.uuid}/actions/finalize`, finalizeExecutionRequest.json)
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Run a runbook test.
     * @returns {Promise<Task>}
     */
    test() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/disaster-recovery-runbooks/${this.uuid}/actions/test`, {})
                .then(response => {
                const json = response.data;
                return new task_1.Task(json);
            });
        });
    }
    /**
     * Get report href.
     * @param {string} reportUuid
     * @param {string} filename
     * @returns {Observable<string>}
     */
    getReportHref(reportUuid, filename) {
        let href = `${iland_1.Iland.baseUrl}/disaster-recovery-runbooks/${this.uuid}/reports/${reportUuid}/export?accept=` +
            encodeURIComponent(http_1.Http.versionMime('application/pdf'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Get runbook task details
     * @param {string} taskUuid
     * @returns {Promise<DisasterRecoveryRunbookReportDetails>}
     */
    getRunbookTaskDetails(taskUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/disaster-recovery-runbooks/${this.uuid}/runbook-task-details/${taskUuid}`)
                .then(response => {
                const json = response.data;
                return new disaster_recovery_runbook_task_details_1.DisasterRecoveryRunbookReportDetails(json);
            });
        });
    }
}
exports.DisasterRecoveryRunbook = DisasterRecoveryRunbook;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookReportDetails = void 0;
const recovery_group_report_detail_1 = __webpack_require__(497);
/**
 * Disaster recovery runbook report details.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookReportDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get location id.
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get task uuid.
     * @returns {string}
     */
    get taskUuid() {
        return this._json.task_uuid;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get task complete.
     * @returns {number}
     */
    get taskComplete() {
        return this._json.task_complete;
    }
    /**
     * Get status.
     * @returns {StatusJson}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get data.
     * @returns {{ [key: string]: RecoveryGroupReportDetails }}
     */
    get data() {
        const data = {};
        for (const reportDetailsKey in this._json.data) {
            data[reportDetailsKey] = new recovery_group_report_detail_1.RecoveryGroupReportDetails(this._json.data[reportDetailsKey]);
        }
        return data;
    }
    /**
     * Get start time.
     * @returns {string}
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get end time.
     * @returns {string}
     */
    get endTime() {
        return this._json.end_time;
    }
    /**
     * Get protected vm count.
     * @returns {number}
     */
    get protectedVmCount() {
        return this._json.protected_vm_count;
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookReportDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookReportDetails = DisasterRecoveryRunbookReportDetails;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoveryGroupReportDetails = void 0;
const vpg_failover_report_details_1 = __webpack_require__(236);
const vm_bootlog_1 = __webpack_require__(498);
/* istanbul ignore next: autogenerated */
class RecoveryGroupReportDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get recovery group uuid.
     * @returns {string}
     */
    get recoveryGroupUuid() {
        return this._json.recovery_group_uuid;
    }
    /**
     * Get failover status.
     * @returns {string}
     */
    get failoverStatus() {
        return this._json.failover_status;
    }
    /**
     * Get details.
     * @returns {VpgFailoverReportDetails}
     */
    get details() {
        return new vpg_failover_report_details_1.VpgFailoverReportDetails(this._json.details);
    }
    /**
     * Get bootup logs.
     * @returns {Array<VmBootupLog>}
     */
    get bootupLogs() {
        return this._json.bootup_logs.map(log => {
            return new vm_bootlog_1.VmBootupLog(log);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {RecoveryGroupReportDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RecoveryGroupReportDetails = RecoveryGroupReportDetails;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmBootupLog = void 0;
const jpeg_image_1 = __webpack_require__(85);
/**
 * Vm bootup log
 */
/* istanbul ignore next: autogenerated */
class VmBootupLog {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get vm name.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get screenshot.
     * @returns {JpegImage}
     */
    get screenshot() {
        const screenShotBuff = new Buffer(this._json.screenshot);
        return new jpeg_image_1.JpegImage(screenShotBuff);
    }
    /**
     * Get timestamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get error log.
     * @returns {string}
     */
    get errorLog() {
        return this._json.error_log;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmBootupLogJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmBootupLog = VmBootupLog;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(835).Buffer))

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DnsRecord = void 0;
/**
 * DNS Record.
 */
class DnsRecord {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the ID of the DNS record.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Gets the zone ID of the record.
     * @returns {number}
     */
    get zoneId() {
        return this._json.zone_id;
    }
    /**
     * Gets the name of the zone that the record is associated with.
     * @returns {string}
     */
    get zoneName() {
        return this._json.zone_name;
    }
    /**
     * Gets the host string.
     * @returns {string}
     */
    get host() {
        return this._json.host;
    }
    /**
     * Gets the record description.
     * @returns {string | null} null if no description is set.
     */
    get description() {
        return this._json.description || null;
    }
    /**
     * Gets the TTL setting of the record.
     * @returns {number | null} null if no TTL is set.
     */
    get ttl() {
        var _a;
        return (_a = this._json.ttl) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Gets the ordering string.
     * @returns {string}
     */
    get ordering() {
        return this._json.ordering;
    }
    /**
     * Gets the record IP address.
     * @returns {string | null} null if no IP address is set and/or not applicable.
     */
    get ip() {
        return this._json.ip || null;
    }
    /**
     * Gets the last modified date.
     * @returns {Date | null} null if not applicable.
     */
    get lastModified() {
        return this._json.last_modified ? new Date(this._json.last_modified) : null;
    }
    /**
     * Gets the record value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Gets the record type.
     * @returns {DnsRecordType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the record priority. Applicable for MX record type.
     * @returns {number | null} null if not applicable.
     */
    get priority() {
        var _a;
        return (_a = this._json.priority) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {DnsRecordJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.DnsRecord = DnsRecord;


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DnsZone = void 0;
/**
 * DNS Zone.
 */
class DnsZone {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get resource id.
     * @returns {number}
     */
    get resourceId() {
        return this._json.resource_id;
    }
    /**
     * Get serial.
     * @returns {number}
     */
    get serial() {
        return this._json.serial;
    }
    /**
     * Get refresh.
     * @returns {number}
     */
    get refresh() {
        return this._json.refresh;
    }
    /**
     * Get retry.
     * @returns {number}
     */
    get retry() {
        return this._json.retry;
    }
    /**
     * Get expire.
     * @returns {number}
     */
    get expire() {
        return this._json.expire;
    }
    /**
     * Get minimum.
     * @returns {number}
     */
    get minimum() {
        return this._json.minimum;
    }
    /**
     * Get soa.
     * @returns {string}
     */
    get soa() {
        return this._json.soa;
    }
    /**
     * Get tags.
     * @returns {string}
     */
    get tags() {
        return this._json.tags;
    }
    /**
     * Get ttl.
     * @returns {string}
     */
    get ttl() {
        return this._json.ttl;
    }
    /**
     * Get enable dns sec.
     * @returns {boolean}
     */
    get enableDnsSec() {
        return this._json.enable_dns_sec;
    }
    /**
     * Get auto check.
     * @returns {boolean}
     */
    get autoCheck() {
        return this._json.auto_check;
    }
    /**
     * Get record id.
     * @returns {number}
     */
    get recordId() {
        return this._json.record_id;
    }
    /**
     * Get record host.
     * @returns {string}
     */
    get recordHost() {
        return this._json.record_host;
    }
    /**
     * Get record type.
     * @returns {DNSRecordType}
     */
    get recordType() {
        return this._json.record_type;
    }
    /**
     * Get record value.
     * @returns {string}
     */
    get recordValue() {
        return this._json.record_value;
    }
    /**
     * Get record description.
     * @returns {string}
     */
    get recordDescription() {
        return this._json.record_description;
    }
    /**
     * Get record ttl.
     * @returns {string}
     */
    get recordTtl() {
        return this._json.record_ttl;
    }
    /**
     * Get record ordering.
     * @returns {number}
     */
    get recordOrdering() {
        return this._json.record_ordering;
    }
    /**
     * Get record errors.
     * @returns {string}
     */
    get recordErrors() {
        return this._json.record_errors;
    }
    /**
     * Get user can create.
     * @returns {boolean}
     */
    get userCanCreate() {
        return this._json.user_can_create;
    }
    /**
     * Get user can delete.
     * @returns {boolean}
     */
    get userCanDelete() {
        return this._json.user_can_delete;
    }
    /**
     * Get user can update.
     * @returns {boolean}
     */
    get userCanUpdate() {
        return this._json.user_can_update;
    }
    /**
     * Get unpaged rows.
     * @returns {number}
     */
    get unpagedRows() {
        return this._json.unpaged_rows;
    }
    /**
     * Get the json representation of this class.
     * @returns {DnsZoneJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DnsZone = DnsZone;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalNetwork = void 0;
const network_ip_scope_1 = __webpack_require__(140);
/* istanbul ignore next: autogenerated */
class ExternalNetwork {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get graph id1.
     * @returns {string}
     */
    get graphId1() {
        return this._json.graph_id1;
    }
    /**
     * Get graph id2.
     * @returns {string}
     */
    get graphId2() {
        return this._json.graph_id2;
    }
    /**
     * Get ip scope.
     * @returns {NetworkIpScope}
     */
    get ipScope() {
        return new network_ip_scope_1.NetworkIpScope(this._json.ip_scope);
    }
    /**
     * Get ip scopes.
     * @returns {Array<NetworkIpScope>}
     */
    get ipScopes() {
        return this._json.ip_scopes.map(scope => {
            return new network_ip_scope_1.NetworkIpScope(scope);
        });
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get updated date.
     * @returns {number}
     */
    get updatedDate() {
        return this._json.updated_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {ExternalNetworkJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ExternalNetwork = ExternalNetwork;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpAddressSet = void 0;
/**
 * IP Address Set.
 */
class IpAddressSet {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get ips.
     * @returns {Array<string>}
     */
    get ips() {
        return this._json.ips;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpAddressSetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpAddressSet = IpAddressSet;


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IsComplianceOrg = void 0;
/**
 * Is Compliance Org result.
 */
/* istanbul ignore next: autogenerated */
class IsComplianceOrg {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get is compliance org.
     * @returns {boolean}
     */
    get isComplianceOrg() {
        return this._json.is_compliance_org;
    }
    /**
     * Get the json representation of this class.
     * @returns {IsComplianceOrgJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IsComplianceOrg = IsComplianceOrg;


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusLaunch = void 0;
/**
 *  Nessus Launch result.
 */
/* istanbul ignore next: autogenerated */
class NessusLaunch {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get scan uuid.
     * @returns {string}
     */
    get scanUuid() {
        return this._json.scan_uuid;
    }
    /**
     * Get error.
     * @returns {string}
     */
    get error() {
        return this._json.error;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusLaunchJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusLaunch = NessusLaunch;


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScan = void 0;
/**
 * Nessus Scan.
 */
/* istanbul ignore next: autogenerated */
class NessusScan {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get owner.
     * @returns {string}
     */
    get owner() {
        return this._json.owner;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get folder id.
     * @returns {number}
     */
    get folderId() {
        return this._json.folder_id;
    }
    /**
     * Get read.
     * @returns {boolean}
     */
    get read() {
        return this._json.read;
    }
    /**
     * Get status.
     * @returns {string}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get shared.
     * @returns {boolean}
     */
    get shared() {
        return this._json.shared;
    }
    /**
     * Get user permissions.
     * @returns {number}
     */
    get userPermissions() {
        return this._json.user_permissions;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return this._json.creation_date;
    }
    /**
     * Get last modification date.
     * @returns {number}
     */
    get lastModificationDate() {
        return this._json.last_modification_date;
    }
    /**
     * Get control.
     * @returns {boolean}
     */
    get control() {
        return this._json.control;
    }
    /**
     * Get start time.
     * @returns {string}
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get timezone.
     * @returns {string}
     */
    get timezone() {
        return this._json.timezone;
    }
    /**
     * Get rrules.
     * @returns {string}
     */
    get rrules() {
        return this._json.rrules;
    }
    /**
     * Get use dashboard.
     * @returns {boolean}
     */
    get useDashboard() {
        return this._json.use_dashboard;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScan = NessusScan;


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanDetails = void 0;
const nessus_history_1 = __webpack_require__(507);
const nessus_host_1 = __webpack_require__(508);
const nessus_note_1 = __webpack_require__(509);
const nessus_remediations_1 = __webpack_require__(510);
const nessus_scan_info_1 = __webpack_require__(512);
const nessus_vulnerability_1 = __webpack_require__(513);
/**
 * Nessus Scan Details.
 */
/* istanbul ignore next: autogenerated */
class NessusScanDetails {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get info.
     * @returns {NessusScanInfo}
     */
    get info() {
        return new nessus_scan_info_1.NessusScanInfo(this._json.info);
    }
    /**
     * Get remediations.
     * @returns {NessusRemediations}
     */
    get remediations() {
        return new nessus_remediations_1.NessusRemediations(this._json.remediations);
    }
    /**
     * Get vulnerabilities.
     * @returns {Array<NessusVulnerability>}
     */
    get vulnerabilities() {
        return this._json.vulnerabilities.map(it => new nessus_vulnerability_1.NessusVulnerability(it));
    }
    /**
     * Get hosts.
     * @returns {Array<NessusHost>}
     */
    get hosts() {
        return this._json.hosts.map(it => new nessus_host_1.NessusHost(it));
    }
    /**
     * Get comp hosts.
     * @returns {Array<NessusHost>}
     */
    get compHosts() {
        return this._json.comp_hosts.map(it => new nessus_host_1.NessusHost(it));
    }
    /**
     * Get history.
     * @returns {Array<NessusHistory>}
     */
    get history() {
        return this._json.history.map(it => new nessus_history_1.NessusHistory(it));
    }
    /**
     * Get notes.
     * @returns {Array<NessusNote>}
     */
    get notes() {
        return this._json.notes.map(it => new nessus_note_1.NessusNote(it));
    }
    /**
     * Get compliance.
     * @returns {Array<NessusVulnerability>}
     */
    get compliance() {
        return this._json.compliance.map(it => new nessus_vulnerability_1.NessusVulnerability(it));
    }
    /**
     * Get vulnerabilities by host.
     * @returns {{ [key: number]: Array<NessusVulnerability> }}
     */
    get vulnsByHost() {
        const mapped = {};
        for (const key in this._json.vulns_by_host) {
            mapped[key] = this._json.vulns_by_host[key].map(it => new nessus_vulnerability_1.NessusVulnerability(it));
        }
        return mapped;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanDetails = NessusScanDetails;


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusHistory = void 0;
/**
 * Nessus History.
 */
/* istanbul ignore next: autogenerated */
class NessusHistory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get history id.
     * @returns {number}
     */
    get historyId() {
        return this._json.history_id;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get owner id.
     * @returns {number}
     */
    get ownerId() {
        return this._json.owner_id;
    }
    /**
     * Get status.
     * @returns {string}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return this._json.creation_date;
    }
    /**
     * Get last modification date.
     * @returns {number}
     */
    get lastModificationDate() {
        return this._json.last_modification_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusHistoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusHistory = NessusHistory;


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusHost = void 0;
/**
 * Nessus Host.
 */
/* istanbul ignore next: autogenerated */
class NessusHost {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get host id.
     * @returns {number}
     */
    get hostId() {
        return this._json.host_id;
    }
    /**
     * Get host index.
     * @returns {string}
     */
    get hostIndex() {
        return this._json.host_index;
    }
    /**
     * Get host name.
     * @returns {number}
     */
    get hostName() {
        return this._json.host_name;
    }
    /**
     * Get progress.
     * @returns {string}
     */
    get progress() {
        return this._json.progress;
    }
    /**
     * Get critical.
     * @returns {number}
     */
    get critical() {
        return this._json.critical;
    }
    /**
     * Get high.
     * @returns {number}
     */
    get high() {
        return this._json.high;
    }
    /**
     * Get medium.
     * @returns {number}
     */
    get medium() {
        return this._json.medium;
    }
    /**
     * Get low.
     * @returns {number}
     */
    get low() {
        return this._json.low;
    }
    /**
     * Get info.
     * @returns {number}
     */
    get info() {
        return this._json.info;
    }
    /**
     * Get total checks considered.
     * @returns {number}
     */
    get totalChecksConsidered() {
        return this._json.total_checks_considered;
    }
    /**
     * Get num checks considered.
     * @returns {number}
     */
    get numChecksConsidered() {
        return this._json.num_checks_considered;
    }
    /**
     * Get scan progress total.
     * @returns {number}
     */
    get scanProgressTotal() {
        return this._json.scan_progress_total;
    }
    /**
     * Get scan progress current.
     * @returns {number}
     */
    get scanProgressCurrent() {
        return this._json.scan_progress_current;
    }
    /**
     * Get score.
     * @returns {number}
     */
    get score() {
        return this._json.score;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusHostJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusHost = NessusHost;


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusNote = void 0;
/**
 * Nessus Note.
 */
/* istanbul ignore next: autogenerated */
class NessusNote {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get title.
     * @returns {string}
     */
    get title() {
        return this._json.title;
    }
    /**
     * Get message.
     * @returns {string}
     */
    get message() {
        return this._json.message;
    }
    /**
     * Get severity.
     * @returns {number}
     */
    get severity() {
        return this._json.severity;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusNoteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusNote = NessusNote;


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusRemediations = void 0;
const nessus_remediation_1 = __webpack_require__(511);
/**
 * Nessus Remediations.
 */
/* istanbul ignore next: autogenerated */
class NessusRemediations {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get remediations.
     * @returns {Array<NessusRemediationJson>}
     */
    get remediations() {
        return this._json.remediations.map(it => new nessus_remediation_1.NessusRemediation(it));
    }
    /**
     * Get num hosts.
     * @returns {number}
     */
    get numHosts() {
        return this._json.num_hosts;
    }
    /**
     * Get num cves.
     * @returns {number}
     */
    get numCves() {
        return this._json.num_cves;
    }
    /**
     * Get num impacted hosts.
     * @returns {number}
     */
    get numImpactedHosts() {
        return this._json.num_impacted_hosts;
    }
    /**
     * Get num remediated cves.
     * @returns {number}
     */
    get numRemediatedCves() {
        return this._json.num_remediated_cves;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusRemediationsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusRemediations = NessusRemediations;


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusRemediation = void 0;
/**
 * Nessus Remediation.
 */
/* istanbul ignore next: autogenerated */
class NessusRemediation {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get remediation.
     * @returns {string}
     */
    get remediation() {
        return this._json.remediation;
    }
    /**
     * Get hosts.
     * @returns {number}
     */
    get hosts() {
        return this._json.hosts;
    }
    /**
     * Get vulns.
     * @returns {number}
     */
    get vulns() {
        return this._json.vulns;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusRemediationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusRemediation = NessusRemediation;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanInfo = void 0;
/**
 * Nessus Scan Info.
 */
/* istanbul ignore next: autogenerated */
class NessusScanInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get edit allowed.
     * @returns {boolean}
     */
    get editAllowed() {
        return this._json.edit_allowed;
    }
    /**
     * Get status.
     * @returns {string}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get policy.
     * @returns {string}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get pci can upload.
     * @returns {boolean}
     */
    get pciCanUpload() {
        return this._json.pci_can_upload;
    }
    /**
     * Get has audit trail.
     * @returns {boolean}
     */
    get hasAuditTrail() {
        return this._json.has_audit_trail;
    }
    /**
     * Get scan start.
     * @returns {number}
     */
    get scanStart() {
        return this._json.scan_start;
    }
    /**
     * Get folder id.
     * @returns {number}
     */
    get folderId() {
        return this._json.folder_id;
    }
    /**
     * Get targets.
     * @returns {string}
     */
    get targets() {
        return this._json.targets;
    }
    /**
     * Get timestamp.
     * @returns {number}
     */
    get timestamp() {
        return this._json.timestamp;
    }
    /**
     * Get object id.
     * @returns {number}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get scanner name.
     * @returns {string}
     */
    get scannerName() {
        return this._json.scanner_name;
    }
    /**
     * Get haskb.
     * @returns {boolean}
     */
    get haskb() {
        return this._json.haskb;
    }
    /**
     * Get host count.
     * @returns {number}
     */
    get hostCount() {
        return this._json.host_count;
    }
    /**
     * Get scan end.
     * @returns {number}
     */
    get scanEnd() {
        return this._json.scan_end;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get user permissions.
     * @returns {number}
     */
    get userPermissions() {
        return this._json.user_permissions;
    }
    /**
     * Get control.
     * @returns {boolean}
     */
    get control() {
        return this._json.control;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanInfo = NessusScanInfo;


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusVulnerability = void 0;
/**
 * Nessus Vulnerability.
 */
/* istanbul ignore next: autogenerated */
class NessusVulnerability {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get plugin id.
     * @returns {number}
     */
    get pluginId() {
        return this._json.plugin_id;
    }
    /**
     * Get plugin name.
     * @returns {string}
     */
    get pluginName() {
        return this._json.plugin_name;
    }
    /**
     * Get plugin family.
     * @returns {string}
     */
    get pluginFamily() {
        return this._json.plugin_family;
    }
    /**
     * Get count.
     * @returns {number}
     */
    get count() {
        return this._json.count;
    }
    /**
     * Get vuln index.
     * @returns {number}
     */
    get vulnIndex() {
        return this._json.vuln_index;
    }
    /**
     * Get severity index.
     * @returns {number}
     */
    get severityIndex() {
        return this._json.severity_index;
    }
    /**
     * Get hostname.
     * @returns {string}
     */
    get hostname() {
        return this._json.hostname;
    }
    /**
     * Get severity.
     * @returns {number}
     */
    get severity() {
        return this._json.severity;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusVulnerabilityJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusVulnerability = NessusVulnerability;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanOptOut = void 0;
/**
 * Nessus Scan Opt Out.
 */
/* istanbul ignore next: autogenerated */
class NessusScanOptOut {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get opt out.
     * @returns {boolean}
     */
    get optOut() {
        return this._json.opt_out;
    }
    /**
     * Get exclusions.
     * @returns {Array<string>}
     */
    get exclusions() {
        return this._json.exclusions;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanOptOutJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanOptOut = NessusScanOptOut;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanUpdate = void 0;
/**
 * Nessus Scan Update.
 */
/* istanbul ignore next: autogenerated */
class NessusScanUpdate {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return this._json.creation_date;
    }
    /**
     * Get custom targets.
     * @returns {string}
     */
    get customTargets() {
        return this._json.custom_targets;
    }
    /**
     * Get default permissions.
     * @returns {string}
     */
    get defaultPermissions() {
        return this._json.default_permissions;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get emails.
     * @returns {string}
     */
    get emails() {
        return this._json.emails;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get last modification date.
     * @returns {number}
     */
    get lastModificationDate() {
        return this._json.last_modification_date;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get notification filter type.
     * @returns {string}
     */
    get notificationFilterType() {
        return this._json.notification_filter_type;
    }
    /**
     * Get notification filters.
     * @returns {string}
     */
    get notificationFilters() {
        return this._json.notification_filters;
    }
    /**
     * Get owner.
     * @returns {string}
     */
    get owner() {
        return this._json.owner;
    }
    /**
     * Get owner id.
     * @returns {number}
     */
    get ownerId() {
        return this._json.owner_id;
    }
    /**
     * Get policy id.
     * @returns {number}
     */
    get policyId() {
        return this._json.policy_id;
    }
    /**
     * Get rrules.
     * @returns {string}
     */
    get rrules() {
        return this._json.rrules;
    }
    /**
     * Get scanner id.
     * @returns {number}
     */
    get scannerId() {
        return this._json.scanner_id;
    }
    /**
     * Get shared.
     * @returns {number}
     */
    get shared() {
        return this._json.shared;
    }
    /**
     * Get start time.
     * @returns {string}
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get tag id.
     * @returns {number}
     */
    get tagId() {
        return this._json.tag_id;
    }
    /**
     * Get timezone.
     * @returns {string}
     */
    get timezone() {
        return this._json.timezone;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get user permissions.
     * @returns {number}
     */
    get userPermissions() {
        return this._json.user_permissions;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get use dashboard.
     * @returns {boolean}
     */
    get useDashboard() {
        return this._json.use_dashboard;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanUpdateJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanUpdate = NessusScanUpdate;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgCurrencyCode = void 0;
/**
 * Org Currency Code.
 */
/* istanbul ignore next: autogenerated */
class OrgCurrencyCode {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get currency code.
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgCurrencyCodeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgCurrencyCode = OrgCurrencyCode;


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgDnsZone = void 0;
/**
 * Org DNS Zone. Provides link between an Org and a DNS Zone.
 */
class OrgDnsZone {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get the DNS zone ID.
     * @returns {number}
     */
    get zoneId() {
        return this._json.zone_id;
    }
    /**
     * Get whether the DNS zone has been deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get the DNS zone name.
     * @returns {string}
     */
    get zoneName() {
        return this._json.zone_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgDnsZoneJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgDnsZone = OrgDnsZone;


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicIpAssignment = void 0;
/**
 * Public IP Assignment.
 */
/* istanbul ignore next: autogenerated */
class PublicIpAssignment {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get type.
     * @returns {PublicAssignmentType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get entity name.
     * @returns {string}
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * Get external network uuid.
     * @returns {string}
     */
    get externalNetworkUuid() {
        return this._json.external_network_uuid;
    }
    /**
     * Get external network name.
     * @returns {string}
     */
    get externalNetworkName() {
        return this._json.external_network_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {PublicIpAssignmentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.PublicIpAssignment = PublicIpAssignment;


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AntimalwareOverTime = void 0;
const anti_malware_over_time_sample_1 = __webpack_require__(520);
/* istanbul ignore next: autogenerated */
class AntimalwareOverTime {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get type.
     * @returns {SerieType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get samples.
     * @returns {Array<AntimalwareOverTimeSample>}
     */
    get samples() {
        return this._json.samples.map((sample) => { return new anti_malware_over_time_sample_1.AntimalwareOverTimeSample(sample); });
    }
    /**
     * Get the json representation of this class.
     * @returns {AntimalwareOverTimeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AntimalwareOverTime = AntimalwareOverTime;


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AntimalwareOverTimeSample = void 0;
/* istanbul ignore next: autogenerated */
class AntimalwareOverTimeSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get total hosts scanned.
     * @returns {number}
     */
    get totalHostsScanned() {
        return this._json.total_hosts_scanned;
    }
    /**
     * Get hosts with findings.
     * @returns {number}
     */
    get hostsWithFindings() {
        return this._json.hosts_with_findings;
    }
    /**
     * Get the json representation of this class.
     * @returns {AntimalwareOverTimeSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AntimalwareOverTimeSample = AntimalwareOverTimeSample;


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ComplianceOverTime = void 0;
const compliance_over_time_sample_1 = __webpack_require__(522);
/* istanbul ignore next: autogenerated */
class ComplianceOverTime {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get type.
     * @returns {SerieType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get samples.
     * @returns {Array<ComplianceOverTimeSample>}
     */
    get samples() {
        return this._json.samples.map((sample) => { return new compliance_over_time_sample_1.ComplianceOverTimeSample(sample); });
    }
    /**
     * Get the json representation of this class.
     * @returns {ComplianceOverTimeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ComplianceOverTime = ComplianceOverTime;


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ComplianceOverTimeSample = void 0;
/* istanbul ignore next: autogenerated */
class ComplianceOverTimeSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get total risks.
     * @returns {number}
     */
    get totalRisks() {
        return this._json.total_risks;
    }
    /**
     * Get the json representation of this class.
     * @returns {ComplianceOverTimeSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ComplianceOverTimeSample = ComplianceOverTimeSample;


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallOverTime = void 0;
const firewall_over_time_sample_1 = __webpack_require__(524);
/* istanbul ignore next: autogenerated */
class FirewallOverTime {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get type.
     * @returns {SerieType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get samples.
     * @returns {Array<FirewallOverTimeSample>}
     */
    get samples() {
        return this._json.samples.map((sample) => { return new firewall_over_time_sample_1.FirewallOverTimeSample(sample); });
    }
    /**
     * Get the json representation of this class.
     * @returns {FirewallOverTimeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallOverTime = FirewallOverTime;


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallOverTimeSample = void 0;
/* istanbul ignore next: autogenerated */
class FirewallOverTimeSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get total drops.
     * @returns {number}
     */
    get totalDrops() {
        return this._json.total_drops;
    }
    /**
     * Get total allows.
     * @returns {number}
     */
    get totalAllows() {
        return this._json.total_allows;
    }
    /**
     * Get total log only.
     * @returns {number}
     */
    get totalLogOnly() {
        return this._json.total_log_only;
    }
    /**
     * Get the json representation of this class.
     * @returns {FirewallOverTimeSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FirewallOverTimeSample = FirewallOverTimeSample;


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LogInspectionOverTime = void 0;
const log_inspection_over_time_sample_1 = __webpack_require__(526);
/* istanbul ignore next: autogenerated */
class LogInspectionOverTime {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get type.
     * @returns {SerieType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get samples.
     * @returns {Array<LogInspectionOverTimeSample>}
     */
    get samples() {
        return this._json.samples.map((sample) => { return new log_inspection_over_time_sample_1.LogInspectionOverTimeSample(sample); });
    }
    /**
     * Get the json representation of this class.
     * @returns {LogInspectionOverTimeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LogInspectionOverTime = LogInspectionOverTime;


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LogInspectionOverTimeSample = void 0;
/* istanbul ignore next: autogenerated */
class LogInspectionOverTimeSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get num info.
     * @returns {number}
     */
    get numInfo() {
        return this._json.num_info;
    }
    /**
     * Get num low.
     * @returns {number}
     */
    get numLow() {
        return this._json.num_low;
    }
    /**
     * Get num medium.
     * @returns {number}
     */
    get numMedium() {
        return this._json.num_medium;
    }
    /**
     * Get num high.
     * @returns {number}
     */
    get numHigh() {
        return this._json.num_high;
    }
    /**
     * Get num critical.
     * @returns {number}
     */
    get numCritical() {
        return this._json.num_critical;
    }
    /**
     * Get the json representation of this class.
     * @returns {LogInspectionOverTimeSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LogInspectionOverTimeSample = LogInspectionOverTimeSample;


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportWithContent = void 0;
/* istanbul ignore next: autogenerated */
class ReportWithContent {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get report type.
     * @returns {ReportTypeJson}
     */
    get reportType() {
        return this._json.report_type;
    }
    /**
     * Get file type.
     * @returns {ReportFormat}
     */
    get fileType() {
        return this._json.file_type;
    }
    /**
     * Get created.
     * @returns {number}
     */
    get created() {
        return this._json.created;
    }
    /**
     * Get json content.
     * @returns {string}
     */
    get jsonContent() {
        return this._json.json_content;
    }
    /**
     * Get has content.
     * @returns {boolean}
     */
    get hasContent() {
        return this._json.has_content;
    }
    /**
     * Get the json representation of this class.
     * @returns {ReportWithContentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ReportWithContent = ReportWithContent;


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportWithSummary = void 0;
/* istanbul ignore next: autogenerated */
class ReportWithSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get report type.
     * @returns {ReportTypeJson}
     */
    get reportType() {
        return this._json.report_type;
    }
    /**
     * Get file type.
     * @returns {ReportFormat}
     */
    get fileType() {
        return this._json.file_type;
    }
    /**
     * Get created.
     * @returns {number}
     */
    get created() {
        return this._json.created;
    }
    /**
     * Get summary.
     * @returns {string}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Get has summary.
     * @returns {boolean}
     */
    get hasSummary() {
        return this._json.has_summary;
    }
    /**
     * Get the json representation of this class.
     * @returns {ReportWithSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ReportWithSummary = ReportWithSummary;


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VulnerabilityOverTime = void 0;
const vulnerability_over_time_sample_1 = __webpack_require__(530);
/* istanbul ignore next: autogenerated */
class VulnerabilityOverTime {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get org uuid.
     * @returns {string}
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get type.
     * @returns {SerieType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get samples.
     * @returns {Array<VulnerabilityOverTimeSample>}
     */
    get samples() {
        return this._json.samples.map((sample) => { return new vulnerability_over_time_sample_1.VulnerabilityOverTimeSample(sample); });
    }
    /**
     * Get the json representation of this class.
     * @returns {VulnerabilityOverTimeJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VulnerabilityOverTime = VulnerabilityOverTime;


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VulnerabilityOverTimeSample = void 0;
/* istanbul ignore next: autogenerated */
class VulnerabilityOverTimeSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get num info.
     * @returns {number}
     */
    get numInfo() {
        return this._json.num_info;
    }
    /**
     * Get num low.
     * @returns {number}
     */
    get numLow() {
        return this._json.num_low;
    }
    /**
     * Get num medium.
     * @returns {number}
     */
    get numMedium() {
        return this._json.num_medium;
    }
    /**
     * Get num high.
     * @returns {number}
     */
    get numHigh() {
        return this._json.num_high;
    }
    /**
     * Get num critical.
     * @returns {number}
     */
    get numCritical() {
        return this._json.num_critical;
    }
    /**
     * Get the json representation of this class.
     * @returns {VulnerabilityOverTimeSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VulnerabilityOverTimeSample = VulnerabilityOverTimeSample;


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgsProtectionInfo = void 0;
/**
 * Org VPG Protection Info.
 */
/* istanbul ignore next: autogenerated */
class VpgsProtectionInfo {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get total replicated vms.
     * @returns {number}
     */
    get totalReplicatedVms() {
        return this._json.total_replicated_vms;
    }
    /**
     * Get total unreplicated vms.
     * @returns {number}
     */
    get totalUnreplicatedVms() {
        return this._json.total_unreplicated_vms;
    }
    /**
     * Get the json representation of this class.
     * @returns {VpgsProtectionInfoJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VpgsProtectionInfo = VpgsProtectionInfo;


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OIDCIdentityProvider = void 0;
const identity_provider_1 = __webpack_require__(98);
/* istanbul ignore next: autogenerated */
class OIDCIdentityProvider extends identity_provider_1.IdentityProvider {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get enforce sso.
     * @returns {boolean}
     */
    get enforceSso() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get authorization url.
     * @returns {string}
     */
    get authorizationUrl() {
        return this._json.authorization_url;
    }
    /**
     * Get token url.
     * @returns {string}
     */
    get tokenUrl() {
        return this._json.token_url;
    }
    /**
     * Get client auth.
     * @returns {OIDCClientAuthType}
     */
    get clientAuth() {
        return this._json.client_auth;
    }
    /**
     * Get client id.
     * @returns {string}
     */
    get clientId() {
        return this._json.client_id;
    }
    /**
     * Get client secret.
     * @returns {string}
     */
    get clientSecret() {
        return this._json.client_secret;
    }
    /**
     * Get logout URL.
     * @returns {string}
     */
    get logoutUrl() {
        return this._json.logout_url;
    }
    /**
     * Get login hint.
     * @returns {boolean}
     */
    get loginHint() {
        return this._json.login_hint;
    }
    /**
     * Get ui locales.
     * @returns {boolean}
     */
    get uiLocales() {
        return this._json.ui_locales;
    }
    /**
     * Get user info url.
     * @returns {string}
     */
    get userInfoUrl() {
        return this._json.user_info_url;
    }
    /**
     * Get backchannel supported.
     * @returns {boolean}
     */
    get backchannelSupported() {
        return this._json.backchannel_supported;
    }
    /**
     * Get disable user info.
     * @returns {boolean}
     */
    get disableUserInfo() {
        return this._json.disable_user_info;
    }
    /**
     * Get issuer.
     * @returns {string}
     */
    get issuer() {
        return this._json.issuer;
    }
    /**
     * Get default scope.
     * @returns {string}
     */
    get defaultScope() {
        return this._json.default_scope;
    }
    /**
     * Get prompt.
     * @returns {OIDCPromptType}
     */
    get prompt() {
        return this._json.prompt;
    }
    /**
     * Get accepts prompt none forward from client.
     * @returns {boolean}
     */
    get acceptsPromptNoneForwardFromClient() {
        return this._json.accepts_prompt_none_forward_from_client;
    }
    /**
     * Get validate signature.
     * @returns {boolean}
     */
    get validateSignature() {
        return this._json.validate_signature;
    }
    /**
     * Get use jwks url.
     * @returns {boolean}
     */
    get useJwksUrl() {
        return this._json.use_jwks_url;
    }
    /**
     * Get jwks url.
     * @returns {string}
     */
    get jwksUrl() {
        return this._json.jwks_url;
    }
    /**
     * Get public key signature verifier key.
     * @returns {string}
     */
    get publicKeySignatureVerifierKey() {
        return this._json.public_key_signature_verifier_key;
    }
    /**
     * Get public key signature verifier key id.
     * @returns {string}
     */
    get publicKeySignatureVerifierKeyId() {
        return this._json.public_key_signature_verifier_key_id;
    }
    /**
     * Get allowed clock skew.
     * @returns {number}
     */
    get allowedClockSkew() {
        return this._json.allowed_clock_skew;
    }
    /**
     * Get forward parameter.
     * @returns {string}
     */
    get forwardParameter() {
        return this._json.forward_parameter;
    }
    /**
     * Get type.
     * @returns {IdentityProviderType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {OIDCIdentityProviderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OIDCIdentityProvider = OIDCIdentityProvider;


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLIdentityProvider = void 0;
const identity_provider_1 = __webpack_require__(98);
/* istanbul ignore next: autogenerated */
class SAMLIdentityProvider extends identity_provider_1.IdentityProvider {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Get enforce sso.
     * @returns {boolean}
     */
    get enforceSso() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get single sign on service url.
     * @returns {string}
     */
    get singleSignOnServiceUrl() {
        return this._json.single_sign_on_service_url;
    }
    /**
     * Get single logout service URL.
     * @returns {string}
     */
    get singleLogoutServiceUrl() {
        return this._json.single_logout_service_url;
    }
    /**
     * Get name id policy format.
     * @returns {string}
     */
    get nameIdPolicyFormat() {
        return this._json.name_id_policy_format;
    }
    /**
     * Get principal type.
     * @returns {string}
     */
    get principalType() {
        return this._json.principal_type;
    }
    /**
     * Get principal attribute.
     * @returns {string}
     */
    get principalAttribute() {
        return this._json.principal_attribute;
    }
    /**
     * Get signature algorithm.
     * @returns {string}
     */
    get signatureAlgorithm() {
        return this._json.signature_algorithm;
    }
    /**
     * Get saml xml key name tranformer.
     * @returns {string}
     */
    get samlXmlKeyNameTranformer() {
        return this._json.saml_xml_key_name_tranformer;
    }
    /**
     * Get backchannel supported.
     * @returns {boolean}
     */
    get backchannelSupported() {
        return this._json.backchannel_supported;
    }
    /**
     * Get post binding response.
     * @returns {boolean}
     */
    get postBindingResponse() {
        return this._json.post_binding_response;
    }
    /**
     * Get post binding authn request.
     * @returns {boolean}
     */
    get postBindingAuthnRequest() {
        return this._json.post_binding_authn_request;
    }
    /**
     * Get post binding logout.
     * @returns {boolean}
     */
    get postBindingLogout() {
        return this._json.post_binding_logout;
    }
    /**
     * Get want authn requests signed.
     * @returns {boolean}
     */
    get wantAuthnRequestsSigned() {
        return this._json.want_authn_requests_signed;
    }
    /**
     * Get want assertions signed.
     * @returns {boolean}
     */
    get wantAssertionsSigned() {
        return this._json.want_assertions_signed;
    }
    /**
     * Get want assertions encrypted.
     * @returns {boolean}
     */
    get wantAssertionsEncrypted() {
        return this._json.want_assertions_encrypted;
    }
    /**
     * Get signing certificate.
     * @returns {string}
     */
    get signingCertificate() {
        return this._json.signing_certificate;
    }
    /**
     * Get force authn.
     * @returns {boolean}
     */
    get forceAuthn() {
        return this._json.force_authn;
    }
    /**
     * Get validate signature.
     * @returns {boolean}
     */
    get validateSignature() {
        return this._json.validate_signature;
    }
    /**
     * Get allowed clock skew.
     * @returns {string}
     */
    get allowedClockSkew() {
        return this._json.allowed_clock_skew;
    }
    /**
     * Get type.
     * @returns {IdentityProviderType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {SAMLIdentityProviderJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SAMLIdentityProvider = SAMLIdentityProvider;


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SsoLoginError = void 0;
/**
 * SSO Login Error Class
 */
/* istanbul ignore next: autogenerated */
class SsoLoginError {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * The invalid username that was passed from the identity provider when
     * attempting to log in via SSO.
     * @returns {string}
     */
    get invalidUsername() {
        return this._json.invalid_username;
    }
    /**
     * The time the error occurred.
     * @returns {Date}
     */
    get date() {
        return this._json.date;
    }
    /**
     * Get the json representation of this class.
     * @returns {SsoLoginErrorJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SsoLoginError = SsoLoginError;


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupResource = void 0;
const ba_backup_repository_1 = __webpack_require__(536);
const ba_wan_accelerator_1 = __webpack_require__(537);
/* istanbul ignore next: autogenerated */
class BaBackupResource {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get cloud repository name.
     * @returns {string}
     */
    get cloudRepositoryName() {
        return this._json.cloud_repository_name;
    }
    /**
     * Get storage quota.
     * @returns {number}
     */
    get storageQuota() {
        return this._json.storage_quota;
    }
    /**
     * Get vms quota.
     * @returns {number}
     */
    get vmsQuota() {
        return this._json.vms_quota;
    }
    /**
     * Get workstations quota.
     * @returns {number}
     */
    get workstationsQuota() {
        return this._json.workstations_quota;
    }
    /**
     * Get traffic quota.
     * @returns {number}
     */
    get trafficQuota() {
        return this._json.traffic_quota;
    }
    /**
     * Get wan acceleration enabled.
     * @returns {boolean}
     */
    get wanAccelerationEnabled() {
        return this._json.wan_acceleration_enabled;
    }
    /**
     * Get used storage quota.
     * @returns {number}
     */
    get usedStorageQuota() {
        return this._json.used_storage_quota;
    }
    /**
     * Get used traffic quota.
     * @returns {number}
     */
    get usedTrafficQuota() {
        return this._json.used_traffic_quota;
    }
    /**
     * Get interval start time.
     * @returns {Date | null}
     */
    get intervalStartTime() {
        return this._json.interval_start_time ? new Date(this._json.interval_start_time) : null;
    }
    /**
     * Get interval end time.
     * @returns {Date | null}
     */
    get intervalEndTime() {
        return this._json.interval_end_time ? new Date(this._json.interval_end_time) : null;
    }
    /**
     * Get backup repository.
     * @returns {BaBackupRepository | null}
     */
    get backupRepository() {
        return this._json.backup_repository ? new ba_backup_repository_1.BaBackupRepository(this._json.backup_repository) : null;
    }
    /**
     * Get wan accelerator.
     * @returns {BaWanAccelerator | null}
     */
    get wanAccelerator() {
        return this._json.wan_accelerator ? new ba_wan_accelerator_1.BaWanAccelerator(this._json.wan_accelerator) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupResourceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupResource = BaBackupResource;


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupRepository = void 0;
/* istanbul ignore next: autogenerated */
class BaBackupRepository {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get repository uid.
     * @returns {string}
     */
    get repositoryUid() {
        return this._json.repository_uid;
    }
    /**
     * Get server name.
     * @returns {string}
     */
    get serverName() {
        return this._json.server_name;
    }
    /**
     * Get company name.
     * @returns {string}
     */
    get companyName() {
        return this._json.company_name;
    }
    /**
     * Get location name.
     * @returns {string}
     */
    get locationName() {
        return this._json.location_name;
    }
    /**
     * Get capacity.
     * @returns {number}
     */
    get capacity() {
        return this._json.capacity;
    }
    /**
     * Get free space.
     * @returns {number}
     */
    get freeSpace() {
        return this._json.free_space;
    }
    /**
     * Get backup size.
     * @returns {number}
     */
    get backupSize() {
        return this._json.backup_size;
    }
    /**
     * Get health state.
     * @returns {HealthState}
     */
    get healthState() {
        return this._json.health_state;
    }
    /**
     * Get backup server id.
     * @returns {number}
     */
    get backupServerId() {
        return this._json.backup_server_id;
    }
    /**
     * Get is service provider repository.
     * @returns {boolean}
     */
    get isServiceProviderRepository() {
        return this._json.is_service_provider_repository;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupRepositoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupRepository = BaBackupRepository;


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaWanAccelerator = void 0;
/* istanbul ignore next: autogenerated */
class BaWanAccelerator {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get cloud connect agent uid.
     * @returns {string}
     */
    get cloudConnectAgentUid() {
        return this._json.cloud_connect_agent_uid;
    }
    /**
     * Get is clients accelerator.
     * @returns {boolean}
     */
    get isClientsAccelerator() {
        return this._json.is_clients_accelerator;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaWanAcceleratorJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaWanAccelerator = BaWanAccelerator;


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompanyBackupHistory = void 0;
/* istanbul ignore next: autogenerated */
class BaCompanyBackupHistory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get last result.
     * @returns {string}
     */
    get lastResult() {
        return this._json.last_result;
    }
    /**
     * Get last active.
     * @returns {Date | null}
     */
    get lastActive() {
        return this._json.last_active ? new Date(this._json.last_active) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyBackupHistoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaCompanyBackupHistory = BaCompanyBackupHistory;


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupDirectoryList = void 0;
const ba_backup_filter_params_1 = __webpack_require__(240);
const ba_backup_directory_1 = __webpack_require__(540);
/**
 * BaBackupDirectoryList class
 */
/* istanbul ignore next: autogenerated */
class BaBackupDirectoryList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {BaBackupFilterParams}
     */
    get currentPageParameters() {
        return new ba_backup_filter_params_1.BaBackupFilterParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {BaBackupFilterParams}
     */
    get nextPageParameters() {
        return new ba_backup_filter_params_1.BaBackupFilterParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<BaBackupDirectory>}
     */
    get data() {
        return this._json.data.map(data => new ba_backup_directory_1.BaBackupDirectory(data));
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupDirectoryListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupDirectoryList = BaBackupDirectoryList;


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupDirectory = void 0;
/**
 * BaBackupDirectory class
 */
/* istanbul ignore next: autogenerated */
class BaBackupDirectory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get size mb.
     * @returns {number}
     */
    get sizeMb() {
        return this._json.size_mb;
    }
    /**
     * Get modified at.
     * @returns {Date | null}
     */
    get modifiedAt() {
        return this._json.modified_at ? new Date(this._json.modified_at) : null;
    }
    /**
     * Get repository name.
     * @returns {string}
     */
    get repositoryName() {
        return this._json.repository_name;
    }
    /**
     * Get backup server name.
     * @returns {string}
     */
    get backupServerName() {
        return this._json.backup_server_name;
    }
    /**
     * Get recycled.
     * @returns {boolean}
     */
    get recycled() {
        return this._json.recycled;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupDirectoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupDirectory = BaBackupDirectory;


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupFileList = void 0;
const ba_backup_filter_params_1 = __webpack_require__(240);
const ba_backup_file_1 = __webpack_require__(542);
/**
 * BaBackupFileList class
 */
/* istanbul ignore next: autogenerated */
class BaBackupFileList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {BaBackupFilterParams}
     */
    get currentPageParameters() {
        return new ba_backup_filter_params_1.BaBackupFilterParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {BaBackupFilterParams}
     */
    get nextPageParameters() {
        return new ba_backup_filter_params_1.BaBackupFilterParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<BaBackupFile>}
     */
    get data() {
        return this._json.data.map(baFile => new ba_backup_file_1.BaBackupFile(baFile));
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupFileListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupFileList = BaBackupFileList;


/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupFile = void 0;
/**
 * BaBackupFile class
 */
/* istanbul ignore next: autogenerated */
class BaBackupFile {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get size mb.
     * @returns {number}
     */
    get sizeMb() {
        return this._json.size_mb;
    }
    /**
     * Get modified at.
     * @returns {Date | null}
     */
    get modifiedAt() {
        return this._json.modified_at ? new Date(this._json.modified_at) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupFileJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupFile = BaBackupFile;


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VacPerfSample = void 0;
/* istanbul ignore next: autogenerated */
class VacPerfSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get used quota.
     * @returns {number}
     */
    get usedQuota() {
        return this._json.used_quota;
    }
    /**
     * Get quota.
     * @returns {number}
     */
    get quota() {
        return this._json.quota;
    }
    /**
     * Get time.
     * @returns {Date | null}
     */
    get time() {
        return this._json.time ? new Date(this._json.time) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {VacPerfSampleJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VacPerfSample = VacPerfSample;


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTenantBackupHistory = void 0;
/**
 * Cloud Tenant Backup History.
 */
class CloudTenantBackupHistory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get last result
     * @returns {string}
     */
    get lastResult() {
        return this._json.last_result;
    }
    /**
     * Get last active
     * @returns {number}
     */
    get lastActive() {
        return this._json.last_active;
    }
    /**
     * Get the string representation of the class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Get the JSON representation of this class.
     * @returns {CloudTenantBackupHistoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CloudTenantBackupHistory = CloudTenantBackupHistory;


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTenantResource = void 0;
const cloud_repository_1 = __webpack_require__(546);
/**
 * Cloud Tenant Resource.
 */
class CloudTenantResource {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets a CloudRepository object
     * @returns {CloudRepository} cloud repository object
     */
    get repository() {
        return new cloud_repository_1.CloudRepository(this._json.repository);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CloudTenantResourceJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CloudTenantResource = CloudTenantResource;


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudRepository = void 0;
const wan_accelerator_1 = __webpack_require__(547);
/**
 * Cloud Repository.
 */
class CloudRepository {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the display name for the Cloud Repository
     * @returns {string} display name
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Gets the quota for the Cloud Repository
     * @returns {number} quota
     */
    get quota() {
        return this._json.quota;
    }
    /**
     * Gets the used quota for the Cloud Repository
     * @returns {number} used quota
     */
    get usedQuota() {
        return this._json.used_quota;
    }
    /**
     * Gets the Wan Accelerator uuid for the Cloud Repository
     * @returns {string} wan accelerator uuid
     */
    get wanAcceleratorUuid() {
        return this._json.wan_accelerator_uuid;
    }
    /**
     * Gets the Wan Accelerator object for the Cloud Repository
     * @returns {WanAccelerator} wan accelerator
     */
    get wanAccelerator() {
        return this._json.wan_accelerator ? new wan_accelerator_1.WanAccelerator(this._json.wan_accelerator) : null;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CloudRepositoryJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CloudRepository = CloudRepository;


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.WanAccelerator = void 0;
/**
 * Wan Accelerator.
 */
class WanAccelerator {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the name of the Wan Accelerator
     * @returns {string} name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Gets the description of the Wan Accelerator
     * @returns {string} description
     */
    get description() {
        return this._json.description;
    }
    /**
     * Gets the is ouf of date of the Wan Accelerator
     * @returns {boolean} is out of date
     */
    get outOfDate() {
        return this._json.out_of_date;
    }
    /**
     * Gets the version of the Wan Accelerator
     * @returns {string} version
     */
    get version() {
        return this._json.version;
    }
    /**
     * Gets the capacity of the Wan Accelerator
     * @returns {number} capacity
     */
    get capacity() {
        return this._json.capacity;
    }
    /**
     * Gets the traffic port of the Wan Accelerator
     * @returns {number} port
     */
    get trafficPort() {
        return this._json.traffic_port;
    }
    /**
     * Gets the connection count of the Wan Accelerator
     * @returns {number} count
     */
    get connectionCount() {
        return this._json.connection_count;
    }
    /**
     * Gets the cache path of the Wan Accelerator
     * @returns {string} cache path
     */
    get cachePath() {
        return this._json.cache_path;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {WanAcceleratorJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.WanAccelerator = WanAccelerator;


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VccPerfSample = void 0;
/**
 * Vcc Perf Sample.
 */
class VccPerfSample {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the used quota for the Vcc Perf Sample
     * @returns {number}
     */
    get usedQuota() {
        return this._json.used_quota;
    }
    /**
     * Gets the quota for the Vcc Perf Sample
     * @returns {number}
     */
    get quota() {
        return this._json.quota;
    }
    /**
     * Gets the timestamp for the Vcc Perf Sample
     * @returns {number}
     */
    get timeStamp() {
        return this._json.time;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VccPerfSampleJson} the API __json__ object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VccPerfSample = VccPerfSample;


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountEvent = void 0;
/**
 * Account Event.
 */
/* istanbul ignore next: autogenerated */
class AccountEvent {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get time.
     * @returns {number}
     */
    get time() {
        return this._json.time;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get client name.
     * @returns {string}
     */
    get clientName() {
        return this._json.client_name;
    }
    /**
     * Get user id.
     * @returns {string}
     */
    get userId() {
        return this._json.user_id;
    }
    /**
     * Get session id.
     * @returns {string}
     */
    get sessionId() {
        return this._json.session_id;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get error.
     * @returns {string}
     */
    get error() {
        return this._json.error;
    }
    /**
     * Get details.
     * @returns {{ [key: string]: string }}
     */
    get details() {
        return this._json.details;
    }
    /**
     * Get the json representation of this class.
     * @returns {AccountEventJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.AccountEvent = AccountEvent;


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InboxMessageList = void 0;
const inbox_message_1 = __webpack_require__(242);
/**
 * Inbox Message List.
 */
/* istanbul ignore next: autogenerated */
class InboxMessageList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {InboxMessageFilterParams}
     */
    get currentPageParameters() {
        return this._json.current_page_parameters;
    }
    /**
     * Get next page parameters.
     * @returns {InboxMessageFilterParams}
     */
    get nextPageParameters() {
        return this._json.next_page_parameters;
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<InboxMessage>}
     */
    get data() {
        return this._json.data.map(it => new inbox_message_1.InboxMessage(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {InboxMessageListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.InboxMessageList = InboxMessageList;


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyInventoryImpl = exports.InventoryEntityImpl = void 0;
const rxjs_1 = __webpack_require__(37);
/**
 * User inventory entity implementation.
 */
class InventoryEntityImpl {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the UUID of the entity.
     * @returns {string} UUID
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Gets the type of the entity.
     * @returns {IamEntityType} entity type
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the name of the entity.
     * @returns {string} entity name
     */
    get name() {
        return this._json.name;
    }
    /**
     * Sets the name of the entity.
     * @param {string} val the name
     */
    set name(val) {
        this._json.name = val;
    }
    /**
     * Gets the UUID of the parent entity.
     * @returns {string} the parent entity UUID
     */
    get parentUuid() {
        return this._json.parent_uuid;
    }
    /**
     * Gets the type of the parent entity.
     * @returns {IamEntityType} the parent entity type
     */
    get parentType() {
        return this._json.parent_type;
    }
}
exports.InventoryEntityImpl = InventoryEntityImpl;
class CompanyInventoryImpl {
    constructor(_inventory) {
        this._inventory = _inventory;
        this._uuidMap = {};
        this._childrenMap = {};
        this.subject = new rxjs_1.Subject();
        this._companyId = _inventory.company_id;
        for (const type in this._inventory.entities) {
            for (const entity of this._inventory.entities[type]) {
                this.addEntity(entity, true);
            }
        }
    }
    get companyId() {
        return this._companyId;
    }
    /**
     * Get an inventory entity by UUID.
     * @param uuid {string} UUID of the entity
     * @returns {InventoryEntity|undefined}
     */
    getEntityByUuid(uuid) {
        return this._uuidMap[uuid];
    }
    /**
     * Get all entities mapped by their types.
     * @returns {{[p: string]: Array<InventoryEntity>}}
     */
    getAllEntitiesByType() {
        const entities = {};
        for (const type in this._inventory.entities) {
            entities[type] = [];
            for (const entity of this._inventory.entities[type]) {
                entities[type].push(new InventoryEntityImpl(entity));
            }
        }
        return entities;
    }
    /**
     * Get an array of inventory entities of the specified type.
     * @param {IamEntityType} type
     * @returns {Array<InventoryEntity>}
     */
    getEntitiesByType(type) {
        const result = this._inventory.entities[type];
        return result ? result.map(it => new InventoryEntityImpl(it)) : [];
    }
    /**
     * Gets the map of children belonging to an entity.
     * @param {string} uuid
     * @returns {{[p: string]: Array<InventoryEntity>} | undefined}
     */
    getChildrenForEntity(uuid) {
        return this._childrenMap[uuid];
    }
    addEntity(entity, original = false) {
        const inventoryEntity = new InventoryEntityImpl(entity);
        if (!original) {
            if (!this._inventory.entities[entity.type]) {
                this._inventory.entities[entity.type] = [];
            }
            this._inventory.entities[entity.type].push(entity);
        }
        this._uuidMap[entity.uuid] = inventoryEntity;
        let parentUuid = 'root';
        if (entity.parent_uuid !== null) {
            parentUuid = entity.parent_uuid;
        }
        if (!this._childrenMap[parentUuid]) {
            this._childrenMap[parentUuid] = {};
        }
        if (!this._childrenMap[parentUuid][entity.type]) {
            this._childrenMap[parentUuid][entity.type] = [];
        }
        this._childrenMap[parentUuid][entity.type].push(inventoryEntity);
        if (!original) {
            this.subject.next({
                type: 'CREATE',
                entity: inventoryEntity
            });
        }
    }
    removeEntity(entityUuid) {
        const entity = this._uuidMap[entityUuid];
        if (entity) {
            delete this._uuidMap[entityUuid];
            const invIdx = this._inventory.entities[entity.type].findIndex(it => it.uuid === entityUuid);
            if (invIdx >= 0) {
                this._inventory.entities[entity.type].splice(invIdx, 1);
            }
            if (entity.parentUuid) {
                const parentChildArray = this._childrenMap[entity.parentUuid][entity.type];
                const parentIdx = parentChildArray.findIndex(it => it.uuid === entityUuid);
                if (parentIdx >= 0) {
                    parentChildArray.splice(parentIdx, 1);
                }
            }
            this.subject.next({
                type: 'DELETE',
                entity: entity
            });
        }
    }
    renameEntity(entityUuid, newName) {
        const entity = this.getEntityByUuid(entityUuid);
        if (entity) {
            if (entity.name !== newName) {
                entity.name = newName;
                this.subject.next({
                    type: 'UPDATE',
                    entity: entity
                });
            }
        }
    }
    getObservable() {
        return this.subject;
    }
}
exports.CompanyInventoryImpl = CompanyInventoryImpl;


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageCount = void 0;
/**
 * Message Count.
 */
/* istanbul ignore next: autogenerated */
class MessageCount {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get count.
     * @returns {number}
     */
    get count() {
        return this._json.count;
    }
    /**
     * Get the json representation of this class.
     * @returns {MessageCountJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MessageCount = MessageCount;


/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserEntityHistorySubscription = void 0;
/**
 * User Entity History Subscription
 */
/* istanbul ignore next: autogenerated */
class UserEntityHistorySubscription {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get entity type from user subscription
     * @returns {EntityType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Get entity uuid from user subscription
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get username from user subscription
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get email from user subscription
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get frequency from user subscription
     * @returns {FrequencyEnum}
     */
    get frequency() {
        return this._json.frequency;
    }
    /**
     * Get is enabled from user subscription
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserEntityHistorySubscriptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserEntityHistorySubscription = UserEntityHistorySubscription;


/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserSession = void 0;
/**
 * User Session.
 */
/* istanbul ignore next: autogenerated */
class UserSession {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get session id.
     * @returns {string}
     */
    get sessionId() {
        return this._json.session_id;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get start.
     * @returns {number}
     */
    get start() {
        return this._json.start;
    }
    /**
     * Get last access.
     * @returns {number}
     */
    get lastAccess() {
        return this._json.last_access;
    }
    /**
     * Get clients.
     * @returns {{ [key: string]: string }}
     */
    get clients() {
        return this._json.clients;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserSessionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserSession = UserSession;


/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EnforceTwoFactorAuthRequest = void 0;
/**
 * Enforce Two Factor Auth Request.
 * - To apply 2FA to all users, set 'allUsers' to true and set 'roles' to null or empty.
 * - To apply 2FA to specific roles, set 'allUsers' to false and fill 'roles' with role uuids.
 */
/* istanbul ignore next: autogenerated */
class EnforceTwoFactorAuthRequest {
    constructor(firstParam, roles) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                all_users: firstParam,
                roles: roles
            };
        }
        else if (firstParam instanceof EnforceTwoFactorAuthRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get all users.
     * @returns {boolean}
     */
    get allUsers() {
        return this._json.all_users;
    }
    /**
     * Get roles.
     * @returns {Array<String>}
     */
    get roles() {
        return this._json.roles || [];
    }
    /**
     * Get the json representation of this class.
     * @returns {EnforceTwoFactorAuthRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EnforceTwoFactorAuthRequest = EnforceTwoFactorAuthRequest;


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365AuditLog = void 0;
/**
 * O365 Audit Log
 */
/* istanbul ignore next: autogenerated */
class O365AuditLog {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get username of the audit log
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get location id of the audit log
     * @returns {string}
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get O365 Org's uuid of the audit log
     * @returns {string}
     */
    get o365OrgUuid() {
        return this._json.o365_org_uuid;
    }
    /**
     * Get event type of the audit log
     * @returns {string}
     */
    get eventType() {
        return this._json.event_type;
    }
    /**
     * Get console entity of the audit log
     * @returns {string}
     */
    get consoleEntity() {
        return this._json.console_entity;
    }
    /**
     * Get entity name of audit log
     * @returns {string}
     */
    get entityName() {
        return this._json.entity_name;
    }
    /**
     * Get timestamp of audit log
     * @returns {number}
     */
    get timestamp() {
        return this._json.time;
    }
    /**
     * Get IP Address of audit log
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get the json representation of this class
     * @return {O365AuditLogJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365AuditLog = O365AuditLog;


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365Bill = void 0;
/**
 * O365 Bill
 */
/* istanbul ignore next: autogenerated */
class O365Bill {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the number of licenses exceeding the reserved licenses count
     * @returns {number}
     */
    get burstCountLicenses() {
        return this._json.burst_count_licenses;
    }
    /**
     * Get cost per license of O365 bill
     * @returns {number}
     */
    get costPerLicense() {
        return this._json.cost_per_license;
    }
    /**
     * Get currency code of O365 bill
     * @returns {CurrencyCode}
     */
    get currencyCode() {
        return this._json.currency_code.currency_code;
    }
    /**
     * Get full month contract cost of O365 bill
     * @returns {number}
     */
    get fullMonthContractCost() {
        return this._json.full_month_contract_cost;
    }
    /**
     * Get month of O365 bill
     * @returns {number}
     */
    get month() {
        return this._json.month;
    }
    /**
     * Get number of licenses of O365 bill
     * @returns {number}
     */
    get numberOfLicenses() {
        return this._json.number_of_licenses;
    }
    /**
     * Get total of O365 bill
     * @returns {number}
     */
    get total() {
        return this._json.total;
    }
    /**
     * Get the used total including burst usage if any
     * @returns {number}
     */
    get totalCostForUsedLicenses() {
        return this._json.total_cost_for_used_licenses;
    }
    /**
     * Get year of O365 bill
     * @returns {number}
     */
    get year() {
        return this._json.year;
    }
    /**
     * Get the licensed user count from licensed user api
     * @returns {number}
     */
    get licensedUserCount() {
        return this._json.licensed_user_count;
    }
    /**
     * Get the used total including burst usage if any for licensed user count
     * @returns {number}
     */
    get totalCostForLicensedUserCount() {
        return this._json.total_cost_for_licensed_user_count;
    }
    /**
     * Get the number of licensed users exceeded the reserved license count.
     * @returns {number}
     */
    get burstCountForLicensedUserCount() {
        return this._json.burst_count_for_licensed_user_count;
    }
    /**
     * Get the json representation of this class
     * @returns {O365BillJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365Bill = O365Bill;


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OrganizationSet = void 0;
const o365_organization_1 = __webpack_require__(88);
/**
 * O365 Organization Set.
 */
/* istanbul ignore next: autogenerated */
class O365OrganizationSet {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get O365 Organizations.
     * @returns {Array<O365Organization>}
     */
    get o365Organizations() {
        return this._json.data.map(it => new o365_organization_1.O365Organization(it));
    }
    /**
     * Get the total unique reserved O365 licenses for the O365 Organizations scoped to a location.
     * @returns {number}
     */
    get totalReservedLicenses() {
        return this._json.total_reserved_licenses;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OrganizationSetJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OrganizationSet = O365OrganizationSet;


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchResult = void 0;
/**
 * Company search result class.
 */
/* istanbul ignore next: autogenerated */
class SearchResult {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get query.
     * @returns {string}
     */
    get query() {
        return this._json.query;
    }
    /**
     * Get page offset.
     * @returns {number}
     */
    get pageOffset() {
        return this._json.page_offset;
    }
    /**
     * Get page size.
     * @returns {number}
     */
    get pageSize() {
        return this._json.page_size;
    }
    /**
     * Get returned hits.
     * @returns {number}
     */
    get returnedHits() {
        return this._json.returned_hits;
    }
    /**
     * Get total hits.
     * @returns {number}
     */
    get totalHits() {
        return this._json.total_hits;
    }
    /**
     * Get results.
     * @returns {Array<{ [key: string]: string }>}
     */
    get results() {
        return this._json.results;
    }
    /**
     * Get the json representation of this class.
     * @returns {SearchResultJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SearchResult = SearchResult;


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportRegardingOption = void 0;
const support_service_option_1 = __webpack_require__(561);
/**
 * Support Regarding Option.
 */
/* istanbul ignore next: autogenerated */
class SupportRegardingOption {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get service options.
     * @returns {Array<SupportServiceOption>}
     */
    get serviceOptions() {
        return this._json.service_options.map(it => new support_service_option_1.SupportServiceOption(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportRegardingOptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportRegardingOption = SupportRegardingOption;


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportServiceOption = void 0;
const support_category_1 = __webpack_require__(562);
/**
 * Support Service Option.
 */
/* istanbul ignore next: autogenerated */
class SupportServiceOption {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get regarding option id.
     * @returns {number}
     */
    get regardingOptionId() {
        return this._json.regarding_option_id;
    }
    /**
     * Get support categories.
     * @returns {Array<SupportCategory>}
     */
    get supportCategories() {
        return this._json.support_categories.map(it => new support_category_1.SupportCategory(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportServiceOptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportServiceOption = SupportServiceOption;


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportCategory = void 0;
/**
 * Support Category.
 */
/* istanbul ignore next: autogenerated */
class SupportCategory {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get type id.
     * @returns {number}
     */
    get typeId() {
        return this._json.type_id;
    }
    /**
     * Get service id.
     * @returns {number}
     */
    get serviceId() {
        return this._json.service_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportCategoryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportCategory = SupportCategory;


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicket = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const support_ticket_attachment_1 = __webpack_require__(564);
const support_ticket_comment_1 = __webpack_require__(565);
/**
 * SupportTicket.
 */
class SupportTicket {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get support ticket ID.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get support ticket summary
     * @returns {string}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Get support ticket status
     * @returns {SupportTicketStatus}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get support ticket crm
     * @returns {string}
     */
    get companyId() {
        return this._json.company_id;
    }
    /**
     * Get support ticket creator full name
     * @returns {string}
     */
    get creatorFullName() {
        return this._json.creator_full_name;
    }
    /**
     * Get support ticket creator username
     * @returns {string}
     */
    get creatorUserName() {
        return this._json.creator_user_name;
    }
    /**
     * Get support ticket creation date
     * @returns {Date}
     */
    get creationDate() {
        return new Date(this._json.creation_date);
    }
    /**
     * Get support ticket cc email addresses
     * @returns {Array<string>}
     */
    get ccEmailAddresses() {
        return this._json.cc_email_addresses;
    }
    /**
     * Whether or not support ticket has CC emails field enabled.
     * @returns {boolean}
     */
    get ccEmailsEnabled() {
        return this._json.cc_emails_enabled;
    }
    /**
     * Get support ticket regarding ID
     * @returns {number}
     */
    get regardingId() {
        return this._json.regarding_id;
    }
    /**
     * Get support ticket service ID
     * @returns {number}
     */
    get serviceId() {
        return this._json.service_id;
    }
    /**
     * Get support ticket category ID
     * @returns {number}
     */
    get categoryId() {
        return this._json.category_id;
    }
    /**
     * Get support ticket severity
     * @returns {SupportTicketSeverity}
     */
    get severity() {
        return this._json.severity;
    }
    /**
     * Get support ticket regarding name
     * @returns {string}
     */
    get regardingName() {
        return this._json.regarding_name;
    }
    /**
     * Get support ticket service name
     * @returns {string}
     */
    get serviceName() {
        return this._json.service_name;
    }
    /**
     * Get support ticket category name
     * @returns {string}
     */
    get categoryName() {
        return this._json.category_name;
    }
    /**
     * Get support ticket JSON string
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Get support ticket JSON object
     * @returns {SupportTicketJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get all ticket attachments.
     * @returns {Promise<Array<SupportTicketAttachment>>}
     */
    getAttachments() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.companyId}/support-tickets/${this.id}/attachments`)
                .then(response => {
                return response.data;
            });
        });
    }
    /**
     * Get ticket attachment.
     * @param {number} attachmentId
     * @returns {Promise<SupportTicketAttachment>}
     */
    getAttachment(attachmentId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.companyId}/support-tickets/${this.id}/attachments/${attachmentId}`)
                .then(response => {
                return response.data;
            });
        });
    }
    /**
     * Whether or not the attachment is downloadable
     * @param {number} attachmentId
     * @returns {Promise<boolean>}
     */
    isAttachmentDownloadable(attachmentId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.companyId}/support-tickets/${this.id}/attachments/${attachmentId}/is-downloadable`)
                .then(response => {
                return response.data.downloadable;
            });
        });
    }
    /**
     * Get ticket comments.
     * @returns {Promise<Array<SupportTicketComment>>}
     */
    getComments() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/companies/${this.companyId}/support-tickets/${this.id}/comments`)
                .then(response => {
                return response.data.data;
            });
        });
    }
    /**
     * Add ticket comment.
     * @param {string} companyId
     * @param {SupportTicketCommentCreateRequest} newComment
     * @returns {Promise<SupportTicketComment>}
     */
    /* istanbul ignore next: autogenerated */
    addTicketComment(companyId, newComment) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/companies/${companyId}/support-tickets/${this.id}/comments`, newComment.json)
                .then(response => {
                const json = response.data;
                return new support_ticket_comment_1.SupportTicketComment(json);
            });
        });
    }
    /**
     * Add ticket attachment.
     * @param {string} companyId
     * @param {SupportTicketAttachmentCreateRequest} attachment
     * @returns {Promise<SupportTicketAttachment>}
     */
    /* istanbul ignore next: autogenerated */
    addTicketAttachment(companyId, attachment) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const formData = new FormData();
            formData.append('file', attachment.getContents, attachment.getFilename);
            formData.append('filename', attachment.getFilename);
            return iland_1.Iland.getHttp()
                .post(`/companies/${companyId}/support-tickets/${this.id}/attachments`, formData)
                .then(response => {
                const json = response.data;
                return new support_ticket_attachment_1.SupportTicketAttachment(json);
            });
        });
    }
}
exports.SupportTicket = SupportTicket;


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketAttachment = void 0;
/**
 * Support Ticket Attachment.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketAttachment {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get title.
     * @returns {string}
     */
    get title() {
        return this._json.title;
    }
    /**
     * Get filename.
     * @returns {string}
     */
    get filename() {
        return this._json.filename;
    }
    /**
     * Get server filename.
     * @returns {string}
     */
    get serverFilename() {
        return this._json.server_filename;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return this._json.creation_date;
    }
    /**
     * Get creator username.
     * @returns {string}
     */
    get creatorUsername() {
        return this._json.creator_user_name;
    }
    /**
     * Get creator fullname.
     * @returns {string}
     */
    get creatorFullname() {
        return this._json.creator_full_name;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportTicketAttachmentDetailsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportTicketAttachment = SupportTicketAttachment;


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketComment = void 0;
/**
 * Support Ticket Comment.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketComment {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get ticket id.
     * @returns {number}
     */
    get ticketId() {
        return this._json.ticket_id;
    }
    /**
     * Get text.
     * @returns {string}
     */
    get text() {
        return this._json.text;
    }
    /**
     * Get creator username.
     * @returns {string}
     */
    get creatorUsername() {
        return this._json.creator_username;
    }
    /**
     * Get creator fullname.
     * @returns {string}
     */
    get creatorFullname() {
        return this._json.creator_full_name;
    }
    /**
     * Get comment type.
     * @returns {SupportTicketCommentType}
     */
    get commentType() {
        return this._json.comment_type;
    }
    /**
     * Get creation date.
     * @returns {number}
     */
    get creationDate() {
        return this._json.creation_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportTicketCommentJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportTicketComment = SupportTicketComment;


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserCreation = void 0;
/* istanbul ignore next: autogenerated */
class UserCreation {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get created.
     * @returns {boolean}
     */
    get created() {
        return this._json.created;
    }
    /**
     * Get error.
     * @returns {string}
     */
    get error() {
        return this._json.error;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserCreationJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserCreation = UserCreation;


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserTwoFactorAuthRecord = void 0;
/**
 * User two-factor auth record.
 */
class UserTwoFactorAuthRecord {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get full name.
     * @returns {string}
     */
    get fullName() {
        return this._json.full_name;
    }
    /**
     * Get configured.
     * @returns {boolean}
     */
    get configured() {
        return this._json.configured;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserTwoFactorAuthRecordJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserTwoFactorAuthRecord = UserTwoFactorAuthRecord;


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VacCompanyQuotaStatus = void 0;
class VacCompanyQuotaStatus {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get total storage quota.
     * @returns {number}
     */
    get totalStorageQuota() {
        return this._json.total_storage_quota;
    }
    /**
     * Get used storage quota.
     * @returns {number}
     */
    get usedStorageQuota() {
        return this._json.used_storage_quota;
    }
    /**
     * Get total contracted quota.
     * @returns {number}
     */
    get totalContractedQuota() {
        return this._json.total_contracted_quota;
    }
    /**
     * Get number of contracts.
     * @returns {number}
     */
    get numberOfContracts() {
        return this._json.number_of_contracts;
    }
    /**
     * Get the json representation of this class.
     * @returns {VacCompanyQuotaStatusJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VacCompanyQuotaStatus = VacCompanyQuotaStatus;


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VacContract = void 0;
const sales_force_subscription_1 = __webpack_require__(570);
/**
 * VacContract class
 */
/* istanbul ignore next: autogenerated */
class VacContract {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get status.
     * @returns {string}
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get start.
     * @returns {Date | null}
     */
    get start() {
        return this._json.start ? new Date(this._json.start) : null;
    }
    /**
     * Get end.
     * @returns {Date | null}
     */
    get end() {
        return this._json.end ? new Date(this._json.end) : null;
    }
    /**
     * Get term.
     * @returns {number}
     */
    get term() {
        return this._json.term;
    }
    /**
     * Get last mod.
     * @returns {Date | null}
     */
    get lastMod() {
        return this._json.last_mod ? new Date(this._json.last_mod) : null;
    }
    /**
     * Get created.
     * @returns {Date | null}
     */
    get created() {
        return this._json.created ? new Date(this._json.created) : null;
    }
    /**
     * Get activated.
     * @returns {number}
     */
    get activated() {
        return this._json.activated;
    }
    /**
     * Get cancellation date.
     * @returns {Date | null}
     */
    get cancellationDate() {
        return this._json.cancellation_date ? new Date(this._json.cancellation_date) : null;
    }
    /**
     * Get status code.
     * @returns {string}
     */
    get statusCode() {
        return this._json.status_code;
    }
    /**
     * Get group.
     * @returns {string}
     */
    get group() {
        return this._json.group;
    }
    /**
     * Get test drive.
     * @returns {boolean}
     */
    get testDrive() {
        return this._json.test_drive;
    }
    /**
     * Get discount.
     * @returns {number}
     */
    get discount() {
        return this._json.discount;
    }
    /**
     * Get subscriptions.
     * @returns {Array<SalesforceSubscription>}
     */
    get subscriptions() {
        return this._json.subscriptions.map(sub => new sales_force_subscription_1.SalesforceSubscription(sub));
    }
    /**
     * Get the json representation of this class.
     * @returns {VacContractJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VacContract = VacContract;


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesforceSubscription = void 0;
/**
 * SalesforceSubscription class
 */
/* istanbul ignore next: autogenerated */
class SalesforceSubscription {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get contract.
     * @returns {string}
     */
    get contract() {
        return this._json.contract;
    }
    /**
     * Get currency code.
     * @returns {string}
     */
    get currencyCode() {
        return this._json.currency_code;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get contract number.
     * @returns {string}
     */
    get contractNumber() {
        return this._json.contract_number;
    }
    /**
     * Get console total monthly cost.
     * @returns {number}
     */
    get consoleTotalMonthlyCost() {
        return this._json.console_total_monthly_cost;
    }
    /**
     * Get product id.
     * @returns {string}
     */
    get productId() {
        return this._json.product_id;
    }
    /**
     * Get console cost per unit.
     * @returns {number}
     */
    get consoleCostPerUnit() {
        return this._json.console_cost_per_unit;
    }
    /**
     * Get quantity.
     * @returns {number}
     */
    get quantity() {
        return this._json.quantity;
    }
    /**
     * Get account id.
     * @returns {string}
     */
    get accountId() {
        return this._json.account_id;
    }
    /**
     * Get product name.
     * @returns {string}
     */
    get productName() {
        return this._json.product_name;
    }
    /**
     * Get deployment date.
     * @returns {Date | null}
     */
    get deploymentDate() {
        return this._json.deployment_date ? new Date(this._json.deployment_date) : null;
    }
    /**
     * Get product.
     * @returns {string}
     */
    get product() {
        return this._json.product;
    }
    /**
     * Get product code.
     * @returns {string}
     */
    get productCode() {
        return this._json.product_code;
    }
    /**
     * Get cancellation date.
     * @returns {Date | null}
     */
    get cancellationDate() {
        return this._json.cancellation_date ? new Date(this._json.cancellation_date) : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {SalesforceSubscriptionJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SalesforceSubscription = SalesforceSubscription;


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmProtectionSummary = void 0;
/**
 * VM Protection Status Summary Response
 */
/* istanbul ignore next: autogenerated */
class VmProtectionSummary {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the number of protected VMs.
     * @returns {number}
     */
    get vmsProtected() {
        return this._json.vms_protected;
    }
    /**
     * Get the number of unprotected VMs.
     * @returns {number}
     */
    get vmsUnprotected() {
        return this._json.vms_un_protected;
    }
    /**
     * Get the total number of VMs.
     * @returns {number}
     */
    get totalVms() {
        return this._json.total_vms;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmProtectionSummaryJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmProtectionSummary = VmProtectionSummary;


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustObjectRequest = void 0;
/* istanbul ignore next: autogenerated */
class TrustObjectRequest {
    constructor(firstParam, privateKey, passphrase, description) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                pem_encoding: firstParam,
                private_key: privateKey,
                passphrase: passphrase,
                description: description
            };
        }
        else if (firstParam instanceof TrustObjectRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get pem encoding.
     * @returns {string}
     */
    get pemEncoding() {
        return this._json.pem_encoding;
    }
    /**
     * Get private key.
     * @returns {string}
     */
    get privateKey() {
        return this._json.private_key;
    }
    /**
     * Get passphrase.
     * @returns {string}
     */
    get passphrase() {
        return this._json.passphrase;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {TrustObjectRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TrustObjectRequest = TrustObjectRequest;


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DHCPPoolUpdateRequest = void 0;
/**
 * DHCP Pool Update Request.
 */
/* istanbul ignore next: autogenerated */
class DHCPPoolUpdateRequest {
    constructor(firstParam, enabled, network, maxLeaseTime, defaultLeaseTime, lowIP, highIP) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                network: network,
                max_lease_time: maxLeaseTime,
                default_lease_time: defaultLeaseTime,
                low_ip: lowIP,
                high_ip: highIP
            };
        }
        else if (firstParam instanceof DHCPPoolUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get max lease time.
     * @returns {number}
     */
    get maxLeaseTime() {
        return this._json.max_lease_time;
    }
    /**
     * Get default lease time.
     * @returns {number}
     */
    get defaultLeaseTime() {
        return this._json.default_lease_time;
    }
    /**
     * Get low i p.
     * @returns {string}
     */
    get lowIP() {
        return this._json.low_ip;
    }
    /**
     * Get high i p.
     * @returns {string}
     */
    get highIP() {
        return this._json.high_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {DHCPPoolUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DHCPPoolUpdateRequest = DHCPPoolUpdateRequest;


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingBGPConfigUpdateRequest = void 0;
const bgp_neighbour_1 = __webpack_require__(167);
const redistribution_update_request_1 = __webpack_require__(243);
/**
 * Routing BGP Configuration Update Request
 */
/* istanbul ignore next: autogenerated */
class RoutingBGPConfigUpdateRequest {
    constructor(firstParam, localAsNumber, bgpNeighbours, redistribution, gracefulRestart, defaultOriginate) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                local_as_number: localAsNumber,
                bgp_neighbours: bgpNeighbours,
                redistribution: redistribution,
                graceful_restart: gracefulRestart,
                default_originate: defaultOriginate
            };
        }
        else if (firstParam instanceof RoutingBGPConfigUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get local as number.
     * @returns {string}
     */
    get localAsNumber() {
        return this._json.local_as_number;
    }
    /**
     * Get bgp neighbours.
     * @returns {Array<BGPNeighbour>}
     */
    get bgpNeighbours() {
        return this._json.bgp_neighbours.map(it => new bgp_neighbour_1.BGPNeighbour(it));
    }
    /**
     * Get redistribution.
     * @returns {RedistributionUpdateRequest}
     */
    get redistribution() {
        return new redistribution_update_request_1.RedistributionUpdateRequest(this._json.redistribution);
    }
    /**
     * Get graceful restart.
     * @returns {boolean}
     */
    get gracefulRestart() {
        return this._json.graceful_restart;
    }
    /**
     * Get default originate.
     * @returns {boolean}
     */
    get defaultOriginate() {
        return this._json.default_originate;
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingBGPConfigUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingBGPConfigUpdateRequest = RoutingBGPConfigUpdateRequest;


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingGlobalConfigUpdateRequest = void 0;
const ip_prefix_1 = __webpack_require__(171);
const logging_1 = __webpack_require__(172);
/**
 * Routing Global Configuration Update Request
 */
/* istanbul ignore next: autogenerated */
class RoutingGlobalConfigUpdateRequest {
    constructor(firstParam, ecmp, logging, ipPrefixes) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                router_id: firstParam,
                ecmp: ecmp,
                logging: logging,
                ip_prefixes: ipPrefixes
            };
        }
        else if (firstParam instanceof RoutingGlobalConfigUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get router id.
     * @returns {string}
     */
    get routerId() {
        return this._json.router_id;
    }
    /**
     * Get ecmp.
     * @returns {boolean}
     */
    get ecmp() {
        return this._json.ecmp;
    }
    /**
     * Get logging.
     * @returns {Logging}
     */
    get logging() {
        return new logging_1.Logging(this._json.logging);
    }
    /**
     * Get ip prefixes.
     * @returns {Array<IpPrefix>}
     */
    get ipPrefixes() {
        return this._json.ip_prefixes.map(it => new ip_prefix_1.IpPrefix(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingGlobalConfigUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingGlobalConfigUpdateRequest = RoutingGlobalConfigUpdateRequest;


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingOSPFConfigUpdateRequest = void 0;
const ospf_interface_1 = __webpack_require__(174);
const redistribution_update_request_1 = __webpack_require__(243);
/**
 * Routing OSPF Configuration Update Request
 */
/* istanbul ignore next: autogenerated */
class RoutingOSPFConfigUpdateRequest {
    constructor(firstParam, gracefulRestart, defaultOriginate, ospfAreas, ospfInterfaces, redistribution) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                graceful_restart: gracefulRestart,
                default_originate: defaultOriginate,
                ospf_areas: ospfAreas,
                ospf_interfaces: ospfInterfaces,
                redistribution: redistribution
            };
        }
        else if (firstParam instanceof RoutingOSPFConfigUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get graceful restart.
     * @returns {boolean}
     */
    get gracefulRestart() {
        return this._json.graceful_restart;
    }
    /**
     * Get default originate.
     * @returns {boolean}
     */
    get defaultOriginate() {
        return this._json.default_originate;
    }
    /**
     * Get ospf areas.
     * @returns {Array<OSPFArea>}
     */
    get ospfAreas() {
        return this._json.ospf_areas;
    }
    /**
     * Get ospf interfaces.
     * @returns {Array<OSPFInterface>}
     */
    get ospfInterfaces() {
        return this._json.ospf_interfaces.map(it => new ospf_interface_1.OSPFInterface(it));
    }
    /**
     * Get redistribution.
     * @returns {RedistributionUpdateRequest}
     */
    get redistribution() {
        return new redistribution_update_request_1.RedistributionUpdateRequest(this._json.redistribution);
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingOSPFConfigUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingOSPFConfigUpdateRequest = RoutingOSPFConfigUpdateRequest;


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingStaticConfigUpdateRequest = void 0;
const default_route_1 = __webpack_require__(176);
const route_1 = __webpack_require__(177);
/**
 * Routing Static Configuration Update Request
 */
/* istanbul ignore next: autogenerated */
class RoutingStaticConfigUpdateRequest {
    constructor(firstParam, staticRoutes) {
        if (firstParam instanceof RoutingStaticConfigUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    /**
     * Get default route.
     * @returns {DefaultRoute | undefined}
     */
    get defaultRoute() {
        return this._json.default_route ? new default_route_1.DefaultRoute(this._json.default_route) : undefined;
    }
    /**
     * Get static routes.
     * @returns {Array<Route>}
     */
    get staticRoutes() {
        return this._json.static_routes.map(it => new route_1.Route(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RoutingStaticConfigUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RoutingStaticConfigUpdateRequest = RoutingStaticConfigUpdateRequest;


/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SubnetParticipationUpdateRequest = void 0;
/**
 * Subnet Participation Update Request.
 */
/* istanbul ignore next: autogenerated */
class SubnetParticipationUpdateRequest {
    constructor(firstParam, netmask, ipAddress) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                gateway: firstParam,
                netmask: netmask,
                ip_address: ipAddress
            };
        }
        else if (firstParam instanceof SubnetParticipationUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get the json representation of this class.
     * @returns {SubnetParticipationUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SubnetParticipationUpdateRequest = SubnetParticipationUpdateRequest;


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalSettingsRequest = void 0;
/**
 * Global Settings Request.
 */
/* istanbul ignore next: autogenerated */
class GlobalSettingsRequest {
    constructor(firstParam, serviceCertificate, caCertificates, crlCertificates) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                psk: firstParam,
                service_certificate: serviceCertificate,
                ca_certificates: caCertificates,
                crl_certificates: crlCertificates
            };
        }
        else if (firstParam instanceof GlobalSettingsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get psk.
     * @returns {string}
     */
    get psk() {
        return this._json.psk;
    }
    /**
     * Get service certificate.
     * @returns {string}
     */
    get serviceCertificate() {
        return this._json.service_certificate;
    }
    /**
     * Get ca certificates.
     * @returns {Array<string>}
     */
    get caCertificates() {
        return this._json.ca_certificates;
    }
    /**
     * Get crl certificates.
     * @returns {Array<string>}
     */
    get crlCertificates() {
        return this._json.crl_certificates;
    }
    /**
     * Get the json representation of this class.
     * @returns {GlobalSettingsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GlobalSettingsRequest = GlobalSettingsRequest;


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSecVpnSiteRequest = void 0;
/**
 * Ip Sec Vpn Site Request.
 */
/* istanbul ignore next: autogenerated */
class IpSecVpnSiteRequest {
    constructor(firstParam, name, description, localId, localIp, peerId, peerIp, psk, encryptionAlgorithm, authenticationMode, enablePfs, dhGroup, localSubnets, peerSubnets) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                name: name,
                description: description,
                local_id: localId,
                local_ip: localIp,
                peer_id: peerId,
                peer_ip: peerIp,
                psk: psk,
                encryption_algorithm: encryptionAlgorithm,
                authentication_mode: authenticationMode,
                enable_pfs: enablePfs,
                dh_group: dhGroup,
                local_subnets: localSubnets,
                peer_subnets: peerSubnets
            };
        }
        else if (firstParam instanceof IpSecVpnSiteRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get local id.
     * @returns {string}
     */
    get localId() {
        return this._json.local_id;
    }
    /**
     * Get local ip.
     * @returns {string}
     */
    get localIp() {
        return this._json.local_ip;
    }
    /**
     * Get peer id.
     * @returns {string}
     */
    get peerId() {
        return this._json.peer_id;
    }
    /**
     * Get peer ip.
     * @returns {string}
     */
    get peerIp() {
        return this._json.peer_ip;
    }
    /**
     * Get psk.
     * @returns {string}
     */
    get psk() {
        return this._json.psk;
    }
    /**
     * Get encryption algorithm.
     * @returns {EncryptionAlgorithm}
     */
    get encryptionAlgorithm() {
        return this._json.encryption_algorithm;
    }
    /**
     * Get authentication mode.
     * @returns {AuthenticationMode}
     */
    get authenticationMode() {
        return this._json.authentication_mode;
    }
    /**
     * Get enable pfs.
     * @returns {boolean}
     */
    get enablePfs() {
        return this._json.enable_pfs;
    }
    /**
     * Get dh group.
     * @returns {DHGroup}
     */
    get dhGroup() {
        return this._json.dh_group;
    }
    /**
     * Get local subnets.
     * @returns {Array<string>}
     */
    get localSubnets() {
        return this._json.local_subnets;
    }
    /**
     * Get peer subnets.
     * @returns {Array<string>}
     */
    get peerSubnets() {
        return this._json.peer_subnets;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpSecVpnSiteRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSecVpnSiteRequest = IpSecVpnSiteRequest;


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingSettingsRequest = void 0;
/**
 * Logging Settings Request
 */
/* istanbul ignore next: autogenerated */
class LoggingSettingsRequest {
    constructor(firstParam, enabled) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                log_level: firstParam,
                enabled: enabled
            };
        }
        else if (firstParam instanceof LoggingSettingsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get log level.
     * @returns {string}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoggingSettingsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoggingSettingsRequest = LoggingSettingsRequest;


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerPersistenceUpdateRequest = void 0;
/**
 * Load Balancer Persistence Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerPersistenceUpdateRequest {
    constructor(firstParam, cookieName, cookieMode) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                method: firstParam,
                cookie_name: cookieName,
                cookie_mode: cookieMode
            };
        }
        else if (firstParam instanceof LoadBalancerPersistenceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get method.
     * @returns {string}
     */
    get method() {
        return this._json.method;
    }
    /**
     * Get cookie name.
     * @returns {string}
     */
    get cookieName() {
        return this._json.cookie_name;
    }
    /**
     * Get cookie mode.
     * @returns {string}
     */
    get cookieMode() {
        return this._json.cookie_mode;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerPersistenceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerPersistenceUpdateRequest = LoadBalancerPersistenceUpdateRequest;


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerPoolMemberUpdateRequest = void 0;
/**
 * Load Balancer Pool Member Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerPoolMemberUpdateRequest {
    constructor(firstParam, weight) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                ip_address: firstParam,
                weight: weight
            };
        }
        else if (firstParam instanceof LoadBalancerPoolMemberUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get weight.
     * @returns {string}
     */
    get weight() {
        return this._json.weight;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerPoolMemberUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerPoolMemberUpdateRequest = LoadBalancerPoolMemberUpdateRequest;


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerPoolServicePortUpdateRequest = void 0;
/**
 * Load Balancer Pool Service Port Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerPoolServicePortUpdateRequest {
    constructor(firstParam, protocol, algorithm, port, healthCheckPort) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                protocol: protocol,
                algorithm: algorithm,
                port: port,
                health_check_port: healthCheckPort
            };
        }
        else if (firstParam instanceof LoadBalancerPoolServicePortUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get algorithm.
     * @returns {string}
     */
    get algorithm() {
        return this._json.algorithm;
    }
    /**
     * Get port.
     * @returns {string}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get health check port.
     * @returns {string}
     */
    get healthCheckPort() {
        return this._json.health_check_port;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerPoolServicePortUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerPoolServicePortUpdateRequest = LoadBalancerPoolServicePortUpdateRequest;


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerPoolUpdateRequest = void 0;
const load_balancer_pool_member_update_request_1 = __webpack_require__(583);
const load_balancer_pool_service_update_request_1 = __webpack_require__(584);
/**
 * Load Balancer Pool Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerPoolUpdateRequest {
    constructor(firstParam, name, description, servicePorts, members, operational, errorDetails) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                id: firstParam,
                name: name,
                description: description,
                service_ports: servicePorts,
                members: members,
                operational: operational,
                error_details: errorDetails
            };
        }
        else if (firstParam instanceof LoadBalancerPoolUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get service ports.
     * @returns {Array<LoadBalancerPoolServicePortUpdateRequest>}
     */
    get servicePorts() {
        return this._json.service_ports.map(it => new load_balancer_pool_service_update_request_1.LoadBalancerPoolServicePortUpdateRequest(it));
    }
    /**
     * Get members.
     * @returns {Array<LoadBalancerPoolMemberUpdateRequest>}
     */
    get members() {
        return this._json.members.map(it => new load_balancer_pool_member_update_request_1.LoadBalancerPoolMemberUpdateRequest(it));
    }
    /**
     * Get operational.
     * @returns {boolean}
     */
    get operational() {
        return this._json.operational;
    }
    /**
     * Get error details.
     * @returns {string}
     */
    get errorDetails() {
        return this._json.error_details;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerPoolUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerPoolUpdateRequest = LoadBalancerPoolUpdateRequest;


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerVirtualServerUpdateRequest = void 0;
const load_balancer_virtual_server_service_profile_update_request_1 = __webpack_require__(587);
/**
 * Load Balancer Virtual Server Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerVirtualServerUpdateRequest {
    constructor(firstParam, enabled, description, ipAddress, serviceProfiles, logging, pool, network) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                enabled: enabled,
                description: description,
                ip_address: ipAddress,
                service_profiles: serviceProfiles,
                logging: logging,
                pool: pool,
                network: network
            };
        }
        else if (firstParam instanceof LoadBalancerVirtualServerUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get service profiles.
     * @returns {Array<LoadBalancerVirtualServerServiceProfileUpdateRequest>}
     */
    get serviceProfiles() {
        return this._json.service_profiles.map(it => new load_balancer_virtual_server_service_profile_update_request_1.LoadBalancerVirtualServerServiceProfileUpdateRequest(it));
    }
    /**
     * Get logging.
     * @returns {boolean}
     */
    get logging() {
        return this._json.logging;
    }
    /**
     * Get pool.
     * @returns {string}
     */
    get pool() {
        return this._json.pool;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerVirtualServerUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerVirtualServerUpdateRequest = LoadBalancerVirtualServerUpdateRequest;


/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerVirtualServerServiceProfileUpdateRequest = void 0;
const load_balancer_persistence_update_request_1 = __webpack_require__(582);
/**
 * Load Balancer Virtual Server Service Profile Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerVirtualServerServiceProfileUpdateRequest {
    constructor(firstParam, protocol, port, persistence) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                protocol: protocol,
                port: port,
                persistence: persistence
            };
        }
        else if (firstParam instanceof LoadBalancerVirtualServerServiceProfileUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get port.
     * @returns {string}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get persistence.
     * @returns {LoadBalancerPersistenceUpdateRequest}
     */
    get persistence() {
        return new load_balancer_persistence_update_request_1.LoadBalancerPersistenceUpdateRequest(this._json.persistence);
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerVirtualServerServiceProfileUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerVirtualServerServiceProfileUpdateRequest = LoadBalancerVirtualServerServiceProfileUpdateRequest;


/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnAuthenticationServerUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnAuthenticationServerUpdateRequest {
    constructor(firstParam) {
        if (firstParam instanceof EdgeSslVpnAuthenticationServerUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnAuthenticationServerUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnAuthenticationServerUpdateRequest = EdgeSslVpnAuthenticationServerUpdateRequest;


/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnAuthenticationUpdateRequest = void 0;
const edge_ssl_vpn_authentication_server_update_request_1 = __webpack_require__(588);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnAuthenticationUpdateRequest {
    constructor(firstParam, secondaryAuthenticationServer) {
        if (firstParam instanceof EdgeSslVpnAuthenticationUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get authentication servers.
     * @returns {Array<EdgeSslVpnAuthenticationServerUpdateRequest>}
     */
    get authenticationServers() {
        return this._json.authentication_servers.map(req => new edge_ssl_vpn_authentication_server_update_request_1.EdgeSslVpnAuthenticationServerUpdateRequest(req));
    }
    /**
     * Get secondary authentication server.
     * @returns {EdgeSslVpnAuthenticationServerUpdateRequest}
     */
    get secondaryAuthenticationServer() {
        return new edge_ssl_vpn_authentication_server_update_request_1.EdgeSslVpnAuthenticationServerUpdateRequest(this._json.secondary_authentication_server);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnAuthenticationUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnAuthenticationUpdateRequest = EdgeSslVpnAuthenticationUpdateRequest;


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnClientInstallPackageUpdateRequest = void 0;
const edge_ssl_vpn_gateway_update_request_1 = __webpack_require__(591);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnClientInstallPackageUpdateRequest {
    constructor(firstParam, gatewayList, startClientOnLogin, hideSystrayIcon, rememberPassword, silentModeOperation, silentModeInstallation, hideNetworkAdaptor, createDesktopIcon, enforceServerSecurityCertValidation, createLinuxClient, createMacClient, description, enabled) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                profile_name: firstParam,
                gateway_list: gatewayList,
                start_client_on_login: startClientOnLogin,
                hide_systray_icon: hideSystrayIcon,
                remember_password: rememberPassword,
                silent_mode_operation: silentModeOperation,
                silent_mode_installation: silentModeInstallation,
                hide_network_adaptor: hideNetworkAdaptor,
                create_desktop_icon: createDesktopIcon,
                enforce_server_security_cert_validation: enforceServerSecurityCertValidation,
                create_linux_client: createLinuxClient,
                create_mac_client: createMacClient,
                description: description,
                enabled: enabled
            };
        }
        else if (firstParam instanceof EdgeSslVpnClientInstallPackageUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get profile name.
     * @returns {string}
     */
    get profileName() {
        return this._json.profile_name;
    }
    /**
     * Get gateway list.
     * @returns {Array<EdgeSslVpnGatewayUpdateRequest>}
     */
    get gatewayList() {
        return this._json.gateway_list.map(gateway => new edge_ssl_vpn_gateway_update_request_1.EdgeSslVpnGatewayUpdateRequest(gateway));
    }
    /**
     * Get start client on login.
     * @returns {boolean}
     */
    get startClientOnLogin() {
        return this._json.start_client_on_login;
    }
    /**
     * Get hide systray icon.
     * @returns {boolean}
     */
    get hideSystrayIcon() {
        return this._json.hide_systray_icon;
    }
    /**
     * Get remember password.
     * @returns {boolean}
     */
    get rememberPassword() {
        return this._json.remember_password;
    }
    /**
     * Get silent mode operation.
     * @returns {boolean}
     */
    get silentModeOperation() {
        return this._json.silent_mode_operation;
    }
    /**
     * Get silent mode installation.
     * @returns {boolean}
     */
    get silentModeInstallation() {
        return this._json.silent_mode_installation;
    }
    /**
     * Get hide network adaptor.
     * @returns {boolean}
     */
    get hideNetworkAdaptor() {
        return this._json.hide_network_adaptor;
    }
    /**
     * Get create desktop icon.
     * @returns {boolean}
     */
    get createDesktopIcon() {
        return this._json.create_desktop_icon;
    }
    /**
     * Get enforce server security cert validation.
     * @returns {boolean}
     */
    get enforceServerSecurityCertValidation() {
        return this._json.enforce_server_security_cert_validation;
    }
    /**
     * Get create linux client.
     * @returns {boolean}
     */
    get createLinuxClient() {
        return this._json.create_linux_client;
    }
    /**
     * Get create mac client.
     * @returns {boolean}
     */
    get createMacClient() {
        return this._json.create_mac_client;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnClientInstallPackageUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnClientInstallPackageUpdateRequest = EdgeSslVpnClientInstallPackageUpdateRequest;


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnGatewayUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnGatewayUpdateRequest {
    constructor(firstParam, port) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                host_name: firstParam,
                port: port
            };
        }
        else if (firstParam instanceof EdgeSslVpnGatewayUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get host name.
     * @returns {string}
     */
    get hostName() {
        return this._json.host_name;
    }
    /**
     * Get port.
     * @returns {string}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnGatewayUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnGatewayUpdateRequest = EdgeSslVpnGatewayUpdateRequest;


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnIpPoolUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnIpPoolUpdateRequest {
    constructor(firstParam, ipRange, netmask, gateway, primaryDns, secondaryDns, dnsSuffix, winsServer, enabled) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                ip_range: ipRange,
                netmask: netmask,
                gateway: gateway,
                primary_dns: primaryDns,
                secondary_dns: secondaryDns,
                dns_suffix: dnsSuffix,
                wins_server: winsServer,
                enabled: enabled
            };
        }
        else if (firstParam instanceof EdgeSslVpnIpPoolUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get ip range.
     * @returns {string}
     */
    get ipRange() {
        return this._json.ip_range;
    }
    /**
     * Get netmask.
     * @returns {string}
     */
    get netmask() {
        return this._json.netmask;
    }
    /**
     * Get gateway.
     * @returns {string}
     */
    get gateway() {
        return this._json.gateway;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get wins server.
     * @returns {string}
     */
    get winsServer() {
        return this._json.wins_server;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnIpPoolUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnIpPoolUpdateRequest = EdgeSslVpnIpPoolUpdateRequest;


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnLocalAuthenticationServerUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnLocalAuthenticationServerUpdateRequest {
    constructor(firstParam, pwdMinLength, pwdMaxLength, pwdMinAlphabets, pwdMinDigits, pwdMinSpecialCharacters, allowUserIdWithinPwd, pwdLifetime, pwdExpiryNotification, retryCount, retryDuration, lockoutDuration, type) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                pwd_min_length: pwdMinLength,
                pwd_max_length: pwdMaxLength,
                pwd_min_alphabets: pwdMinAlphabets,
                pwd_min_digits: pwdMinDigits,
                pwd_min_special_characters: pwdMinSpecialCharacters,
                allow_user_id_within_pwd: allowUserIdWithinPwd,
                pwd_lifetime: pwdLifetime,
                pwd_expiry_notification: pwdExpiryNotification,
                retry_count: retryCount,
                retry_duration: retryDuration,
                lockout_duration: lockoutDuration,
                type: type
            };
        }
        else if (firstParam instanceof EdgeSslVpnLocalAuthenticationServerUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get pwd min length.
     * @returns {number}
     */
    get pwdMinLength() {
        return this._json.pwd_min_length;
    }
    /**
     * Get pwd max length.
     * @returns {number}
     */
    get pwdMaxLength() {
        return this._json.pwd_max_length;
    }
    /**
     * Get pwd min alphabets.
     * @returns {number}
     */
    get pwdMinAlphabets() {
        return this._json.pwd_min_alphabets;
    }
    /**
     * Get pwd min digits.
     * @returns {number}
     */
    get pwdMinDigits() {
        return this._json.pwd_min_digits;
    }
    /**
     * Get pwd min special characters.
     * @returns {number}
     */
    get pwdMinSpecialCharacters() {
        return this._json.pwd_min_special_characters;
    }
    /**
     * Get allow user id within pwd.
     * @returns {boolean}
     */
    get allowUserIdWithinPwd() {
        return this._json.allow_user_id_within_pwd;
    }
    /**
     * Get pwd lifetime.
     * @returns {number}
     */
    get pwdLifetime() {
        return this._json.pwd_lifetime;
    }
    /**
     * Get pwd expiry notification.
     * @returns {number}
     */
    get pwdExpiryNotification() {
        return this._json.pwd_expiry_notification;
    }
    /**
     * Get retry count.
     * @returns {number}
     */
    get retryCount() {
        return this._json.retry_count;
    }
    /**
     * Get retry duration.
     * @returns {number}
     */
    get retryDuration() {
        return this._json.retry_duration;
    }
    /**
     * Get lockout duration.
     * @returns {number}
     */
    get lockoutDuration() {
        return this._json.lockout_duration;
    }
    /**
     * Get type.
     * @returns {EdgeSslVpnAuthServerType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnLocalAuthenticationServerUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnLocalAuthenticationServerUpdateRequest = EdgeSslVpnLocalAuthenticationServerUpdateRequest;


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnPrivateNetworkUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnPrivateNetworkUpdateRequest {
    constructor(firstParam, description, network, ports, optimize) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                description: description,
                network: network,
                ports: ports,
                optimize: optimize
            };
        }
        else if (firstParam instanceof EdgeSslVpnPrivateNetworkUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get ports.
     * @returns {string}
     */
    get ports() {
        return this._json.ports;
    }
    /**
     * Get optimize.
     * @returns {boolean}
     */
    get optimize() {
        return this._json.optimize;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnPrivateNetworkUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnPrivateNetworkUpdateRequest = EdgeSslVpnPrivateNetworkUpdateRequest;


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnUserUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnUserUpdateRequest {
    constructor(firstParam, objectId, firstName, lastName, description, disableAccount, password, passwordNeverExpires, changePwdOnNextLogin) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                user_id: firstParam,
                object_id: objectId,
                first_name: firstName,
                last_name: lastName,
                description: description,
                disable_account: disableAccount,
                password: password,
                password_never_expires: passwordNeverExpires,
                change_pwd_on_next_login: changePwdOnNextLogin
            };
        }
        else if (firstParam instanceof EdgeSslVpnUserUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get user id.
     * @returns {string}
     */
    get userId() {
        return this._json.user_id;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get first name.
     * @returns {string}
     */
    get firstName() {
        return this._json.first_name;
    }
    /**
     * Get last name.
     * @returns {string}
     */
    get lastName() {
        return this._json.last_name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get disable account.
     * @returns {boolean}
     */
    get disableAccount() {
        return this._json.disable_account;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get password never expires.
     * @returns {boolean}
     */
    get passwordNeverExpires() {
        return this._json.password_never_expires;
    }
    /**
     * Get change pwd on next login.
     * @returns {boolean}
     */
    get changePwdOnNextLogin() {
        return this._json.change_pwd_on_next_login;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnUserUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnUserUpdateRequest = EdgeSslVpnUserUpdateRequest;


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticRouteUpdateRequest = void 0;
/**
 * Static Route Update Request.
 */
/* istanbul ignore next: autogenerated */
class StaticRouteUpdateRequest {
    constructor(firstParam, idx, name, network, nextHopIP, interfaceType, _interface) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                idx: idx,
                name: name,
                network: network,
                next_hop_ip: nextHopIP,
                interface_type: interfaceType,
                interface: _interface
            };
        }
        else if (firstParam instanceof StaticRouteUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get idx.
     * @returns {number}
     */
    get idx() {
        return this._json.idx;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get next hop ip.
     * @returns {string}
     */
    get nextHopIP() {
        return this._json.next_hop_ip;
    }
    /**
     * Get interface type.
     * @returns {string}
     */
    get interfaceType() {
        return this._json.interface_type;
    }
    /**
     * Get interface.
     * @returns {string}
     */
    get interface() {
        return this._json.interface;
    }
    /**
     * Get the json representation of this class.
     * @returns {StaticRouteUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StaticRouteUpdateRequest = StaticRouteUpdateRequest;


/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventFilterParams = void 0;
/**
 * Class EventFilterParams
 */
/* istanbul ignore next: autogenerated */
class EventFilterParams {
    constructor(firstParam, entityType, includeDescendantEvents, type, taskUuid, initiatedBy, timestampAfter, timestampBefore, queryTimestamp, offset, limit, order) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                entity_uuid: firstParam,
                entity_type: entityType,
                include_descendant_events: includeDescendantEvents,
                type: type,
                task_uuid: taskUuid,
                initiated_by: initiatedBy,
                timestamp_after: timestampAfter,
                timestamp_before: timestampBefore,
                query_timestamp: queryTimestamp,
                offset: offset,
                limit: limit,
                order: order
            };
        }
        else if (firstParam instanceof EventFilterParams) {
            // Copy constructor
            this._json = Object.assign({}, firstParam.json);
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get entity uuid.
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Set entity uuid
     * @param entityUuid
     * @returns {EventFilterParams}
     */
    setEntityUuid(entityUuid) {
        this._json.entity_uuid = entityUuid;
        return this;
    }
    /**
     * Get entity type.
     * @returns {EntityType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Set entity type
     * @param entityType
     * @returns {EventFilterParams}
     */
    setEntityType(entityType) {
        this._json.entity_type = entityType;
        return this;
    }
    /**
     * Get include descendant events.
     * @returns {boolean | undefined}
     */
    get includeDescendantEvents() {
        return this._json.include_descendant_events;
    }
    /**
     * Set include descendant events.
     * @param includeDescendantEvents
     * @returns {EventFilterParams}
     */
    setIncludeDescendantEvents(includeDescendantEvents) {
        this._json.include_descendant_events = includeDescendantEvents;
        return this;
    }
    /**
     * Get type.
     * @returns {EventType | undefined}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Set event type.
     * @param type
     * @returns {EventFilterParams}
     */
    setType(type) {
        this._json.type = type;
        return this;
    }
    /**
     * Get task uuid.
     * @returns {string | undefined}
     */
    get taskUuid() {
        return this._json.task_uuid;
    }
    /**
     * Set task uuid.
     * @param taskUuid
     * @returns {EventFilterParams}
     */
    setTaskUuid(taskUuid) {
        this._json.task_uuid = taskUuid;
        return this;
    }
    /**
     * Get initiated by.
     * @returns {string | undefined}
     */
    get initiatedBy() {
        return this._json.initiated_by;
    }
    /**
     * Set initiated by.
     * @param initiatedBy
     * @returns {EventFilterParams}
     */
    setInitiatedBy(initiatedBy) {
        this._json.initiated_by = initiatedBy;
        return this;
    }
    /**
     * Get timestamp after.
     * @returns {number | undefined}
     */
    get timestampAfter() {
        return this._json.timestamp_after;
    }
    /**
     * Set timestamp after.
     * @param timestampAfter
     * @returns {EventFilterParams}
     */
    setTimestampAfter(timestampAfter) {
        this._json.timestamp_after = timestampAfter;
        return this;
    }
    /**
     * Get timestamp before.
     * @returns {number | undefined}
     */
    get timestampBefore() {
        return this._json.timestamp_before;
    }
    /**
     * Set timestamp before.
     * @param timestampBefore
     * @returns {EventFilterParams}
     */
    setTimestampBefore(timestampBefore) {
        this._json.timestamp_before = timestampBefore;
        return this;
    }
    /**
     * Get query timestamp.
     * @returns {number | undefined}
     */
    get queryTimestamp() {
        return this._json.query_timestamp;
    }
    /**
     * Set query timestamp.
     * @returns {EventFilterParams}
     */
    setQueryTimestamp(queryTimestamp) {
        this._json.query_timestamp = queryTimestamp;
        return this;
    }
    /**
     * Get offset.
     * @returns {number | undefined}
     */
    get offset() {
        return this._json.offset;
    }
    /**
     * Set offset.
     * @param offset
     * @returns {EventFilterParams}
     */
    setOffset(offset) {
        this._json.offset = offset;
        return this;
    }
    /**
     * Get limit.
     * @returns {number | undefined}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * Set limit.
     * @param limit
     * @returns {EventFilterParams}
     */
    setLimit(limit) {
        this._json.limit = limit;
        return this;
    }
    /**
     * Get order.
     * @returns {PagingOrder | undefined}
     */
    get order() {
        return this._json.order;
    }
    /**
     * Set order.
     * @param order
     * @returns {EventFilterParams}
     */
    setOrder(order) {
        this._json.order = order;
        return this;
    }
    /**
     * Get the json representation of this class.
     * @returns {EventFilterParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get query params.
     */
    getQueryParams() {
        return {
            entityUuid: this.entityUuid,
            entityType: this.entityType,
            includeDescendantEvents: this.includeDescendantEvents,
            type: this.type,
            taskUuid: this.taskUuid,
            initiatedBy: this.initiatedBy,
            timestampAfter: this.timestampAfter,
            timestampBefore: this.timestampBefore,
            queryTimestamp: this.queryTimestamp,
            offset: this.offset,
            limit: this.limit,
            order: this.order
        };
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EventFilterParams = EventFilterParams;


/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventList = void 0;
const event_1 = __webpack_require__(244);
const event_filter_params_1 = __webpack_require__(597);
/**
 * Class EventList
 */
/* istanbul ignore next: autogenerated */
class EventList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get current page parameters.
     * @returns {EventFilterParams}
     */
    get currentPageParameters() {
        return new event_filter_params_1.EventFilterParams(this._json.current_page_parameters);
    }
    /**
     * Get next page parameters.
     * @returns {EventFilterParams}
     */
    get nextPageParameters() {
        return new event_filter_params_1.EventFilterParams(this._json.next_page_parameters);
    }
    /**
     * Get total records.
     * @returns {number}
     */
    get totalRecords() {
        return this._json.total_records;
    }
    /**
     * Get last page.
     * @returns {boolean}
     */
    get lastPage() {
        return this._json.last_page;
    }
    /**
     * Get data.
     * @returns {Array<Event>}
     */
    get data() {
        return this._json.data.map(event => {
            return new event_1.Event(event);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {EventListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EventList = EventList;


/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmConfigurationLimits = void 0;
/* istanbul ignore next: autogenerated */
class VmConfigurationLimits {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get max memory mebibytes.
     * @returns {number}
     */
    get maxMemoryMebibytes() {
        return this._json.max_memory_mebibytes;
    }
    /**
     * Get min memory mebibytes.
     * @returns {number}
     */
    get minMemoryMebibytes() {
        return this._json.min_memory_mebibytes;
    }
    /**
     * Get max cpu core count.
     * @returns {number}
     */
    get maxCpuCoreCount() {
        return this._json.max_cpu_core_count;
    }
    /**
     * Get max disk size mebibytes.
     * @returns {number}
     */
    get maxDiskSizeMebibytes() {
        return this._json.max_disk_size_mebibytes;
    }
    /**
     * Get min disk size mebibytes.
     * @returns {number}
     */
    get minDiskSizeMebibytes() {
        return this._json.min_disk_size_mebibytes;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmConfigurationLimitsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmConfigurationLimits = VmConfigurationLimits;


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobSchedulePolicyRequest = void 0;
/**
 * O365 Job Schedule Policy Request
 */
/* istanbul ignore next: autogenerated */
class O365JobSchedulePolicyRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the specified the job schedule type. e.g Daily or Periodically
     * @returns {O365JobSchedulePolicyType}
     */
    get policyType() {
        return this._json.policy_type;
    }
    /**
     * Gets the daily type specifying the days when the backup job will run. Required if policyType is Daily.
     * @returns {O365JobSchedulePolicyDailyType | null}
     */
    get dailyType() {
        return this._json.daily_type || null;
    }
    /**
     * Gets the daily time specifying the time when the job will start. Required if policyType is Daily.
     * @returns {string | null}
     */
    get dailyTime() {
        return this._json.daily_time || null;
    }
    /**
     * Gets the periodically every time specifying the time interval between the job runs.
     * Required if policyType is Periodically.
     * @returns {O365JobSchedulePolicyPeriodicallyEvery | null}
     */
    get periodicallyEvery() {
        return this._json.periodically_every || null;
    }
    /**
     * Gets the retry enabled of O365 Job, if set to True, indicates that Veeam Backup for Microsoft Office 365 will
     * attempt to restart a backup job if it fails for some reason.
     * @returns {boolean}
     */
    get isRetryEnabled() {
        return this._json.is_retry_enabled;
    }
    /**
     * Get the retry number that specifies the number of attempts to run the backup job if retry is enabled.
     * @returns {number}
     */
    get retryNumber() {
        return this._json.retry_number;
    }
    /**
     * Gets the retry wait interval specifying the time intervals between the job retry attempts (minutes).
     * @returns {number}
     */
    get retryWaitInterval() {
        return this._json.retry_wait_interval;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365JobSchedulePolicyRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365JobSchedulePolicyRequest = O365JobSchedulePolicyRequest;


/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CephTenantKeyPair = void 0;
class CephTenantKeyPair {
    constructor(_json) {
        this._json = _json;
    }
    get accessKey() {
        return this._json.access_key;
    }
    get secretKey() {
        return this._json.secret_key;
    }
    get username() {
        return this._json.username;
    }
    /**
     * Created date timestamp comes back in seconds from API so we convert it to milliseconds to properly
     * get js Date
     */
    get createdDate() {
        return this._json.created_date ? new Date(this._json.created_date * 1000) : undefined;
    }
    get description() {
        return this._json.description;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CephTenantKeyPairJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CephTenantKeyPair = CephTenantKeyPair;


/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CephUserSession = void 0;
class CephUserSession {
    constructor(_json) {
        this._json = _json;
    }
    get tenantId() {
        return this._json.tenant_id;
    }
    get accessKey() {
        return this._json.access_key;
    }
    get secretKey() {
        return this._json.secret_key;
    }
    get sessionToken() {
        return this._json.session_token;
    }
    get expirationTime() {
        return this._json.expiration_time;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CephUserSessionJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CephUserSession = CephUserSession;


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.S3Bucket = void 0;
class S3Bucket {
    constructor(_json) {
        this._json = _json;
    }
    get name() {
        return this._json.name;
    }
    get usageKib() {
        return this._json.usage_kib;
    }
    get numOfObjects() {
        return this._json.num_objects;
    }
    get creationTime() {
        return new Date(this._json.creation_time);
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {S3BucketJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.S3Bucket = S3Bucket;


/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanSettingsUpdateRequest = void 0;
/**
 * Nessus Scan Settings Update Request.
 */
/* istanbul ignore next: autogenerated */
class NessusScanSettingsUpdateRequest {
    constructor(firstParam, description, emails, enabled, launch, folderId, policyId, scannerId, startTime, textTargets, fileTargets, rRules, useDashboard, acls, timezone) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                emails: emails,
                enabled: enabled,
                launch: launch,
                folder_id: folderId,
                policy_id: policyId,
                scanner_id: scannerId,
                start_time: startTime,
                text_targets: textTargets,
                file_targets: fileTargets,
                r_rules: rRules,
                use_dashboard: useDashboard,
                acls: acls,
                timezone: timezone
            };
        }
        else if (firstParam instanceof NessusScanSettingsUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get emails.
     * @returns {string}
     */
    get emails() {
        return this._json.emails;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get launch.
     * @returns {string}
     */
    get launch() {
        return this._json.launch;
    }
    /**
     * Get folder id.
     * @returns {string}
     */
    get folderId() {
        return this._json.folder_id;
    }
    /**
     * Get policy id.
     * @returns {string}
     */
    get policyId() {
        return this._json.policy_id;
    }
    /**
     * Get scanner id.
     * @returns {string}
     */
    get scannerId() {
        return this._json.scanner_id;
    }
    /**
     * Get start time.
     * @returns {string}
     */
    get startTime() {
        return this._json.start_time;
    }
    /**
     * Get text targets.
     * @returns {string}
     */
    get textTargets() {
        return this._json.text_targets;
    }
    /**
     * Get file targets.
     * @returns {string}
     */
    get fileTargets() {
        return this._json.file_targets;
    }
    /**
     * Get r rules.
     * @returns {string}
     */
    get rRules() {
        return this._json.r_rules;
    }
    /**
     * Get use dashboard.
     * @returns {boolean}
     */
    get useDashboard() {
        return this._json.use_dashboard;
    }
    /**
     * Get acls.
     * @returns {Array<string>}
     */
    get acls() {
        return this._json.acls;
    }
    /**
     * Get timezone.
     * @returns {string}
     */
    get timezone() {
        return this._json.timezone;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanSettingsUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanSettingsUpdateRequest = NessusScanSettingsUpdateRequest;


/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IamService = void 0;
const policy_1 = __webpack_require__(200);
const permission_service_1 = __webpack_require__(201);
/**
 * IamService
 */
class IamService {
    /**
     * Check whether or not a user is allowed to perform an action or not.
     * @param {UserWithSecurity} user
     * @param {string} entityUuid
     * @param {PermissionType} permissionType
     * @returns {boolean}
     */
    static isUserPermitted(user, entityUuid, permissionType) {
        const permission = permission_service_1.PermissionService.getInstance().permissions.get(permissionType);
        if (permission !== undefined) {
            if (user.userType === 'SYSTEM_ADMIN' ||
                (user.userType === 'READ_ONLY_SYSTEM_ADMIN' && permission.accessType === 'READ') ||
                IamService.isPubliclyAccessible(entityUuid, permissionType)) {
                return true;
            }
            if (user.inventory) {
                let entity;
                for (const companyInventory of user.inventory) {
                    entity = companyInventory.getEntityByUuid(entityUuid);
                    if (entity) {
                        const role = user.rolesCompanyMap.get(companyInventory.companyId);
                        if (role === undefined) {
                            return false;
                        }
                        const policy = IamService.getEffectivePolicy(companyInventory, entity, role);
                        if (policy !== null) {
                            return (policy.permissions.indexOf(permissionType) >= 0 ||
                                policy.type === 'ADMIN' ||
                                (policy.type === 'READ_ONLY' && permission.accessType === 'READ'));
                        }
                    }
                }
            }
        }
        return false;
    }
    /**
     * Derive effective policy from an ancestor.
     * @param {CompanyInventory} companyInventory
     * @param {Policy} ancestorPolicy
     * @param {InventoryEntity | undefined} target
     * @returns {Policy | null}
     */
    static deriveEffectivePolicyFromAncestor(companyInventory, ancestorPolicy, target) {
        if (target === undefined) {
            return null;
        }
        else if (ancestorPolicy.entityDomain === target.type) {
            return ancestorPolicy;
        }
        const parentUuid = target.parentUuid;
        if (parentUuid === null) {
            return null;
        }
        const targetParent = companyInventory.getEntityByUuid(parentUuid);
        const directParentPolicy = IamService.deriveEffectivePolicyFromAncestor(companyInventory, ancestorPolicy, targetParent);
        if (directParentPolicy === null) {
            return null;
        }
        switch (directParentPolicy.type) {
            case 'ADMIN':
                return new policy_1.PolicyBuilder(target.uuid, target.type, 'ADMIN').build();
            case 'READ_ONLY':
                return new policy_1.PolicyBuilder(target.uuid, target.type, 'READ_ONLY').build();
            case 'CUSTOM':
            default:
                const builder = new policy_1.PolicyBuilder(target.uuid, target.type, 'CUSTOM');
                const permissions = permission_service_1.PermissionService.getInstance().getImpliedPermissions(directParentPolicy.permissions);
                for (const p of permissions) {
                    if (p.domain === target.type) {
                        builder.addPermission(p.permissionType);
                    }
                }
                return builder.build();
        }
    }
    /**
     * Check whether or not an entity is accessible publicly.
     * @param {string} entityUuid
     * @param {PermissionType} permission
     * @returns {boolean}
     */
    static isPubliclyAccessible(entityUuid, permission) {
        const permissionObject = permission_service_1.PermissionService.getInstance().permissions.get(permission);
        if (permissionObject) {
            // handle public catalogs, media, and templates
            switch (permissionObject.domain) {
                case 'IAAS_CATALOG':
                    return entityUuid.includes(':public') && permissionObject.accessType === 'READ';
                case 'IAAS_MEDIA':
                    return entityUuid.includes(':public') && permissionObject.accessType === 'READ';
                case 'IAAS_VAPP_TEMPLATE':
                    return entityUuid.includes(':public') && permissionObject.accessType === 'READ';
            }
        }
        return false;
    }
    /**
     * Validate a role creation request.
     * @param {RoleCreationRequest} roleCreationRequest
     * @param {CompanyInventory} companyInventory
     * @returns {Array<Error>}
     */
    static validateRole(roleCreationRequest, companyInventory) {
        const errors = [];
        if (roleCreationRequest.policies.length === 0) {
            errors.push(new Error('A role must have at least one policy.'));
        }
        for (const policy of roleCreationRequest.policies) {
            const entityOptional = companyInventory.getEntityByUuid(policy.entityUuid);
            if (entityOptional === undefined) {
                errors.push(new Error('Entity ' + policy.entityUuid + ' not found in this company.'));
            }
            else {
                if (policy.entityDomain !== entityOptional.type) {
                    errors.push(new Error('Policy for entity ' +
                        entityOptional.name +
                        ' has domain type ' +
                        policy.entityDomain +
                        ' but entity is actually of type ' +
                        entityOptional.type));
                }
                if (policy.type === 'CUSTOM') {
                    if (policy.permissions.length === 0) {
                        errors.push(new Error('Custom policies must contain at least one permission.'));
                    }
                    const availablePermissions = permission_service_1.PermissionService.getInstance().getAvailablePermissionsForDomain(policy.entityDomain);
                    if (availablePermissions) {
                        // if this is a custom policy, verify that it has all permissions that
                        // are required for a custom policy and that it doesn't have any
                        // permissions that are not available to a custom policy
                        for (const domainPermission of availablePermissions) {
                            if (domainPermission.requiredForCustomPolicy && !policy.hasPermission(domainPermission.permissionType)) {
                                errors.push(new Error("Custom policy doesn't have the required permission."));
                            }
                            else if (!domainPermission.availableToCustomPolicy && policy.hasPermission(domainPermission.permissionType)) {
                                errors.push(new Error('Custom policy is not allowed to have the specified permission.'));
                            }
                        }
                    }
                }
                if (entityOptional.parentUuid !== null) {
                    const parentEntity = companyInventory.getEntityByUuid(entityOptional.parentUuid);
                    if (parentEntity) {
                        const effectiveParentPolicy = this.getEffectivePolicy(companyInventory, parentEntity, roleCreationRequest);
                        if (effectiveParentPolicy) {
                            let perm;
                            let impliedPerm;
                            for (const parentPermission of effectiveParentPolicy.permissions) {
                                perm = permission_service_1.PermissionService.getPermission(parentPermission);
                                if (perm && perm.impliedPermissions) {
                                    for (const impliedPermission of perm.impliedPermissions) {
                                        impliedPerm = permission_service_1.PermissionService.getPermission(impliedPermission);
                                        if (impliedPerm && impliedPerm.domain === policy.entityDomain && !policy.hasPermission(impliedPermission)) {
                                            // the policy must have this permission, otherwise it violates an
                                            // implication of higher-level policies
                                            errors.push(new Error('Policy must contain permission=' +
                                                impliedPermission +
                                                ' since it is implied by a higher level permission.'));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                // verify that the policies has all permissions that are implied by its
                // own permissions on the same domain
                for (const permission of policy.permissions) {
                    const perm = permission_service_1.PermissionService.getPermission(permission);
                    if (perm && perm.impliedPermissions) {
                        for (const impliedPermission of perm.impliedPermissions) {
                            const implPerm = permission_service_1.PermissionService.getPermission(impliedPermission);
                            if (implPerm && implPerm.domain === policy.entityDomain && !policy.hasPermission(impliedPermission)) {
                                // the policy must have this permission, otherwise it violates an implication of higher-level policies
                                errors.push(new Error('Policy must contain permission=' + impliedPermission + ' since it has permission=' + permission + '.'));
                            }
                        }
                    }
                }
            }
        }
        return errors;
    }
    /**
     * Get the effective policy.
     * @param {CompanyInventory} companyInventory
     * @param {InventoryEntity} entity
     * @param {Role} role
     * @returns {Policy | null}
     */
    static getEffectivePolicy(companyInventory, entity, role) {
        const policyOptional = IamService.findFirstRelevantPolicy(companyInventory, entity, role);
        let derivePolicy = null;
        if (policyOptional) {
            derivePolicy = IamService.deriveEffectivePolicyFromAncestor(companyInventory, policyOptional, entity);
            if (!derivePolicy) {
                derivePolicy = new policy_1.PolicyBuilder(entity.uuid, entity.type, 'CUSTOM').build();
            }
        }
        return derivePolicy;
    }
    /**
     * Find the relevant policy depending on company inventory and an entity.
     * @param {CompanyInventory} companyInventory
     * @param {InventoryEntity | undefined} entity
     * @param {Role} role
     * @returns {Policy | null}
     */
    static findFirstRelevantPolicy(companyInventory, entity, role) {
        if (entity === undefined) {
            return null;
        }
        const policyOptional = role.getPolicy(entity.uuid);
        if (policyOptional !== null) {
            return policyOptional;
        }
        else if (entity.parentUuid !== null) {
            return IamService.findFirstRelevantPolicy(companyInventory, companyInventory.getEntityByUuid(entity.parentUuid), role);
        }
        else {
            return null;
        }
    }
}
exports.IamService = IamService;


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkFirewallRuleRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkFirewallRuleRequest {
    constructor(firstParam, destinationIp, destinationPortRange, direction, icmpSubType, policy, port, protocols, sourceIp, sourcePort, sourcePortRange, loggingEnabled, enabled, matchOnTranslate) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                destination_ip: destinationIp,
                destination_port_range: destinationPortRange,
                direction: direction,
                icmp_sub_type: icmpSubType,
                policy: policy,
                port: port,
                protocols: protocols,
                source_ip: sourceIp,
                source_port: sourcePort,
                source_port_range: sourcePortRange,
                logging_enabled: loggingEnabled,
                enabled: enabled,
                match_on_translate: matchOnTranslate
            };
        }
        else if (firstParam instanceof VappNetworkFirewallRuleRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get destination ip.
     * @returns {string}
     */
    get destinationIp() {
        return this._json.destination_ip;
    }
    /**
     * Get destination port range.
     * @returns {string}
     */
    get destinationPortRange() {
        return this._json.destination_port_range;
    }
    /**
     * Get direction.
     * @returns {string}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get icmp sub type.
     * @returns {string}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get policy.
     * @returns {string}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get protocols.
     * @returns {Array<string>}
     */
    get protocols() {
        return this._json.protocols;
    }
    /**
     * Get source ip.
     * @returns {string}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get source port range.
     * @returns {string}
     */
    get sourcePortRange() {
        return this._json.source_port_range;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get match on translate.
     * @returns {boolean}
     */
    get matchOnTranslate() {
        return this._json.match_on_translate;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkFirewallRuleRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkFirewallRuleRequest = VappNetworkFirewallRuleRequest;


/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkIpTranslationNATRuleRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkIpTranslationNATRuleRequest {
    constructor(firstParam, vmInterface, externalIp, vmLocalId) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                mapping_mode: firstParam,
                vm_interface: vmInterface,
                external_ip: externalIp,
                vm_local_id: vmLocalId
            };
        }
        else if (firstParam instanceof VappNetworkIpTranslationNATRuleRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get mapping mode.
     * @returns {string}
     */
    get mappingMode() {
        return this._json.mapping_mode;
    }
    /**
     * Get vm interface.
     * @returns {string}
     */
    get vmInterface() {
        return this._json.vm_interface;
    }
    /**
     * Get external ip.
     * @returns {string}
     */
    get externalIp() {
        return this._json.external_ip;
    }
    /**
     * Get vm local id.
     * @returns {string}
     */
    get vmLocalId() {
        return this._json.vm_local_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkIpTranslationNATRuleRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkIpTranslationNATRuleRequest = VappNetworkIpTranslationNATRuleRequest;


/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkPortForwardNATRuleRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkPortForwardNATRuleRequest {
    constructor(firstParam, forwardToPort, protocol, vmInterface, vmLocalId) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                external_port: firstParam,
                forward_to_port: forwardToPort,
                protocol: protocol,
                vm_interface: vmInterface,
                vm_local_id: vmLocalId
            };
        }
        else if (firstParam instanceof VappNetworkPortForwardNATRuleRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get external port.
     * @returns {string}
     */
    get externalPort() {
        return this._json.external_port;
    }
    /**
     * Get forward to port.
     * @returns {string}
     */
    get forwardToPort() {
        return this._json.forward_to_port;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get vm interface.
     * @returns {string}
     */
    get vmInterface() {
        return this._json.vm_interface;
    }
    /**
     * Get vm local id.
     * @returns {string}
     */
    get vmLocalId() {
        return this._json.vm_local_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkPortForwardNATRuleRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkPortForwardNATRuleRequest = VappNetworkPortForwardNATRuleRequest;


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkStaticRouteRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappNetworkStaticRouteRequest {
    constructor(firstParam, network, nextHopIp) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                network: network,
                next_hop_ip: nextHopIp
            };
        }
        else if (firstParam instanceof VappNetworkStaticRouteRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get next hop ip.
     * @returns {string}
     */
    get nextHopIP() {
        return this._json.next_hop_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkStaticRouteRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkStaticRouteRequest = VappNetworkStaticRouteRequest;


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappChildVmCopyMoveRequest = void 0;
/**
 * vApp child VM copy move request.
 */
/* istanbul ignore next: autogenerated */
class VappChildVmCopyMoveRequest {
    constructor(firstParam, storageProfile) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vm_uuid: firstParam,
                storage_profile: storageProfile
            };
        }
        else if (firstParam instanceof VappChildVmCopyMoveRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vm uuid.
     * @returns {string}
     */
    get vmUuid() {
        return this._json.vm_uuid;
    }
    /**
     * Get storage profile.
     * @returns {string}
     */
    get storageProfile() {
        return this._json.storage_profile;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappChildVmCopyMoveRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappChildVmCopyMoveRequest = VappChildVmCopyMoveRequest;


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer2RuleUpdateRequest = void 0;
const distributed_firewall_rule_service_protocol_request_1 = __webpack_require__(246);
const distributed_firewall_value_type_request_1 = __webpack_require__(247);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer2RuleUpdateRequest {
    constructor(firstParam) {
        if (firstParam instanceof DistributedFirewallLayer2RuleUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get disabled.
     * @returns {boolean}
     */
    get disabled() {
        return this._json.disabled;
    }
    /**
     * Get logged.
     * @returns {boolean}
     */
    get logged() {
        return this._json.logged;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get action.
     * @returns {DistributedFirewallActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get applied to list.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get appliedToList() {
        return (this._json.applied_to_list || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get sources excluded.
     * @returns {boolean}
     */
    get sourcesExcluded() {
        return this._json.sources_excluded;
    }
    /**
     * Get sources.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get sources() {
        return (this._json.sources || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get destinations excluded.
     * @returns {boolean}
     */
    get destinationsExcluded() {
        return this._json.destinations_excluded;
    }
    /**
     * Get destinations.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get destinations() {
        return (this._json.destinations || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get service objects.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get serviceObjects() {
        return (this._json.service_objects || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get service protocols.
     * @returns {Array<DistributedFirewallRuleServiceProtocolRequest>}
     */
    get serviceProtocols() {
        return (this._json.service_protocols || []).map(it => new distributed_firewall_rule_service_protocol_request_1.DistributedFirewallRuleServiceProtocolRequest(it));
    }
    /**
     * Get direction.
     * @returns {DistributedFirewallDirectionType}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get packet type.
     * @returns {DistributedFirewallPacketType}
     */
    get packetType() {
        return this._json.packet_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer2RuleUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer2RuleUpdateRequest = DistributedFirewallLayer2RuleUpdateRequest;


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer3RuleUpdateRequest = void 0;
const distributed_firewall_rule_service_protocol_request_1 = __webpack_require__(246);
const distributed_firewall_value_type_request_1 = __webpack_require__(247);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer3RuleUpdateRequest {
    constructor(firstParam) {
        if (firstParam instanceof DistributedFirewallLayer3RuleUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get disabled.
     * @returns {boolean}
     */
    get disabled() {
        return this._json.disabled;
    }
    /**
     * Get logged.
     * @returns {boolean}
     */
    get logged() {
        return this._json.logged;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get action.
     * @returns {DistributedFirewallActionType}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get applied to list.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get appliedToList() {
        return (this._json.applied_to_list || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get sources excluded.
     * @returns {boolean}
     */
    get sourcesExcluded() {
        return this._json.sources_excluded;
    }
    /**
     * Get sources.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get sources() {
        return (this._json.sources || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get destinations excluded.
     * @returns {boolean}
     */
    get destinationsExcluded() {
        return this._json.destinations_excluded;
    }
    /**
     * Get destinations.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get destinations() {
        return (this._json.destinations || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get service objects.
     * @returns {Array<DistributedFirewallValueTypeRequest>}
     */
    get serviceObjects() {
        return (this._json.service_objects || []).map(it => new distributed_firewall_value_type_request_1.DistributedFirewallValueTypeRequest(it));
    }
    /**
     * Get service protocols.
     * @returns {Array<DistributedFirewallRuleServiceProtocolRequest>}
     */
    get serviceProtocols() {
        return (this._json.service_protocols || []).map(it => new distributed_firewall_rule_service_protocol_request_1.DistributedFirewallRuleServiceProtocolRequest(it));
    }
    /**
     * Get direction.
     * @returns {DistributedFirewallDirectionType}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get packet type.
     * @returns {DistributedFirewallPacketType}
     */
    get packetType() {
        return this._json.packet_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer3RuleUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DistributedFirewallLayer3RuleUpdateRequest = DistributedFirewallLayer3RuleUpdateRequest;


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateVmConfig = void 0;
class TemplateVmConfig {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get vm template uuid.
     * @returns {string}
     */
    get vmTemplateUuid() {
        return this._json.vm_template_uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get computer name.
     * @returns {string}
     */
    get computerName() {
        return this._json.computer_name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get vnics.
     * @returns {Array<VmVnicRequestJson>}
     */
    get vnics() {
        return this._json.vnics;
    }
    /**
     * Get the json representation of this class.
     * @returns {TemplateVmConfigJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.TemplateVmConfig = TemplateVmConfig;


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GuestCustomizationUpdateRequest = void 0;
class GuestCustomizationUpdateRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Set enabled
     * @returns {boolean}
     */
    set enabled(enabled) {
        this._json.enabled = enabled;
    }
    /**
     * Get change sid.
     * @returns {boolean}
     */
    get changeSid() {
        return this._json.change_sid;
    }
    /**
     * Set change sid.
     * @param {boolean} chgangeSid
     */
    set changeSid(chgangeSid) {
        this._json.change_sid = chgangeSid;
    }
    /**
     * Get virtual machine id.
     * @returns {string}
     */
    get virtualMachineId() {
        return this._json.virtual_machine_id;
    }
    /**
     * Set virtual machine id.
     * @param {string} vmId
     */
    set virtualMachineId(vmId) {
        this._json.virtual_machine_id = vmId;
    }
    /**
     * Get join domain.
     * @returns {boolean}
     */
    get joinDomain() {
        return this._json.join_domain;
    }
    /**
     * Set join domain.
     * @param {boolean} joinDomain
     */
    set joinDomain(joinDomain) {
        this._json.join_domain = joinDomain;
    }
    /**
     * Get use org settings.
     * @returns {boolean}
     */
    get useOrgSettings() {
        return this._json.use_org_settings;
    }
    /**
     * Set use org settings.
     * @param {boolean} useOrgSettings
     */
    set useOrgSettings(useOrgSettings) {
        this._json.use_org_settings = useOrgSettings;
    }
    /**
     * Get domain name.
     * @returns {string}
     */
    get domainName() {
        return this._json.domain_name;
    }
    /**
     * Set domain name.
     * @param {string} name
     */
    set domainName(name) {
        this._json.domain_name = name;
    }
    /**
     * Get domain user name.
     * @returns {string}
     */
    get domainUserName() {
        return this._json.domain_user_name;
    }
    /**
     * Set domain user name.
     * @param {string} name
     */
    set domainUserName(name) {
        this._json.domain_user_name = name;
    }
    /**
     * Get domain user password.
     * @returns {string}
     */
    get domainUserPassword() {
        return this._json.domain_user_password;
    }
    /**
     * Set domain user password.
     * @param {string} pwd
     */
    set domainUserPassword(pwd) {
        this._json.domain_user_password = pwd;
    }
    /**
     * Get machine object ou.
     * @returns {string}
     */
    get machineObjectOu() {
        return this._json.machine_object_ou;
    }
    /**
     * Set machine object ou.
     * @param {string} machineObjectOu
     */
    set machineObjectOu(machineObjectOu) {
        this._json.machine_object_ou = machineObjectOu;
    }
    /**
     * Get admin password enabled.
     * @returns {boolean}
     */
    get adminPasswordEnabled() {
        return this._json.admin_password_enabled;
    }
    /**
     * Set admin password enabled.
     * @param {boolean} enabled
     */
    set adminPasswordEnabled(enabled) {
        this._json.admin_password_enabled = enabled;
    }
    /**
     * Get admin password auto.
     * @returns {boolean}
     */
    get adminPasswordAuto() {
        return this._json.admin_password_auto;
    }
    /**
     * Set admin password auto.
     * @param {boolean} auto
     */
    set adminPasswordAuto(auto) {
        this._json.admin_password_auto = auto;
    }
    /**
     * Get admin password.
     * @returns {string}
     */
    get adminPassword() {
        return this._json.admin_password;
    }
    /**
     * Set admin password.
     * @param {string} pwd
     */
    set adminPassword(pwd) {
        this._json.admin_password = pwd;
    }
    /**
     * Get admin auto logon enabled.
     * @returns {boolean}
     */
    get adminAutoLogonEnabled() {
        return this._json.admin_auto_logon_enabled;
    }
    /**
     * Set admin auto logon enabled.
     * @param {boolean} enabled
     */
    set adminAutoLogonEnabled(enabled) {
        this._json.admin_auto_logon_enabled = enabled;
    }
    /**
     * Get admin auto logon count.
     * @returns {number}
     */
    get adminAutoLogonCount() {
        return this._json.admin_auto_logon_count;
    }
    /**
     * Set admin auto logon count.
     * @param {number} count
     */
    set adminAutoLogonCount(count) {
        this._json.admin_auto_logon_count = count;
    }
    /**
     * Get reset password required.
     * @returns {boolean}
     */
    get resetPasswordRequired() {
        return this._json.reset_password_required;
    }
    /**
     * Set reset password required.
     * @param {boolean} required
     */
    set resetPasswordRequired(required) {
        this._json.reset_password_required = required;
    }
    /**
     * Get computer name.
     * @returns {string}
     */
    get computerName() {
        return this._json.computer_name;
    }
    /**
     * Set computer name.
     * @param {string} name
     */
    set computerName(name) {
        this._json.computer_name = name;
    }
    /**
     * Get required.
     * @returns {boolean}
     */
    get required() {
        return this._json.required;
    }
    /**
     * Set required.
     * @param {boolean} required
     */
    set required(required) {
        this._json.required = required;
    }
    /**
     * Get the json representation of this class.
     * @returns {GuestCustomizationUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GuestCustomizationUpdateRequest = GuestCustomizationUpdateRequest;


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmCopyMoveVmVnicRequest = void 0;
/* istanbul ignore next: autogenerated */
class VmCopyMoveVmVnicRequest {
    constructor(firstParam, networkName, isPrimary, ipAddress, ipAddressingMode) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                index: firstParam,
                network_name: networkName,
                is_primary: isPrimary,
                ip_address: ipAddress,
                ip_addressing_mode: ipAddressingMode
            };
        }
        else if (firstParam instanceof VmCopyMoveVmVnicRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get index.
     * @returns {number}
     */
    get index() {
        return this._json.index;
    }
    /**
     * Get network name.
     * @returns {string}
     */
    get networkName() {
        return this._json.network_name;
    }
    /**
     * Get is primary.
     * @returns {boolean}
     */
    get isPrimary() {
        return this._json.is_primary;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get ip addressing mode.
     * @returns {IpAddressingModeType}
     */
    get ipAddressingMode() {
        return this._json.ip_addressing_mode;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmCopyMoveVmVnicRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmCopyMoveVmVnicRequest = VmCopyMoveVmVnicRequest;


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmCpuCountUpdateRequest = void 0;
/**
 * VM Cpu Update Request.
 */
class VmCpuCountUpdateRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get number of cpus.
     * @returns {number}
     */
    get numberOfCpus() {
        return this._json.cpus_number;
    }
    /**
     * Set number of cpus.
     * @param {number} count
     */
    set numberOfCpus(count) {
        this._json.cpus_number = count;
    }
    /**
     * Get cores per socket.
     * @returns {number}
     */
    get coresPerSocket() {
        return this._json.cores_per_socket;
    }
    /**
     * Set cores per socket.
     * @param {number} count
     */
    set coresPerSocket(count) {
        this._json.cores_per_socket = count;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmCpuCountUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmCpuCountUpdateRequest = VmCpuCountUpdateRequest;


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgCheckpoint = void 0;
/**
 * Vpg Checkpoint
 */
class VpgCheckpoint {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get checkpoint identifier for Vpg Checkpoint
     * @returns {string} identifier
     */
    get checkpointIdentifier() {
        return this._json.checkpoint_identifier;
    }
    /**
     * Get tag for Vpg Checkpoint
     * @returns {string} tag
     */
    get tag() {
        return this._json.tag;
    }
    /**
     * Get timestamp for Vpg Checkpoint
     * @returns {number} timestamp
     */
    get timestamp() {
        return this._json.time_stamp;
    }
    /**
     * JSON format
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgCheckpointJson} the API Vpg object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgCheckpoint = VpgCheckpoint;


/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgFailoverTestAlert = void 0;
/**
 * Vpg Failover Test Alert
 */
class VpgFailoverTestAlert {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get Vpg uuid for Failover Test Alert
     * @returns {string} vpg uuid
     */
    get vpgUuid() {
        return this._json.vpg_uuid;
    }
    /**
     * Get username for Vpg Failover Test Alert
     * @returns {string} username
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get email for Vpg Failover Test Alert
     * @returns {string} email
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get weeks before alert for Vpg Failover Test Alert
     * @returns {number} weeks before alert
     */
    get weeksBeforeAlert() {
        return this._json.weeks_before_alert;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgFailoverTestAlertJson} the API Vpg object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.VpgFailoverTestAlert = VpgFailoverTestAlert;


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadError = void 0;
class UploadError extends Error {
    constructor(_json) {
        super(_json.message);
        this._json = _json;
    }
    get message() {
        return this._json.message || 'no error message available';
    }
    get code() {
        return this._json.code;
    }
}
exports.UploadError = UploadError;


/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = __webpack_require__(5);
tslib_1.__exportStar(__webpack_require__(112), exports);
tslib_1.__exportStar(__webpack_require__(113), exports);
tslib_1.__exportStar(__webpack_require__(249), exports);
tslib_1.__exportStar(__webpack_require__(623), exports);
tslib_1.__exportStar(__webpack_require__(627), exports);
tslib_1.__exportStar(__webpack_require__(250), exports);
tslib_1.__exportStar(__webpack_require__(114), exports);
tslib_1.__exportStar(__webpack_require__(7), exports);
tslib_1.__exportStar(__webpack_require__(629), exports);
tslib_1.__exportStar(__webpack_require__(630), exports);
tslib_1.__exportStar(__webpack_require__(631), exports);
tslib_1.__exportStar(__webpack_require__(632), exports);
tslib_1.__exportStar(__webpack_require__(633), exports);
tslib_1.__exportStar(__webpack_require__(634), exports);
tslib_1.__exportStar(__webpack_require__(635), exports);
tslib_1.__exportStar(__webpack_require__(636), exports);
tslib_1.__exportStar(__webpack_require__(637), exports);
tslib_1.__exportStar(__webpack_require__(638), exports);
tslib_1.__exportStar(__webpack_require__(639), exports);
tslib_1.__exportStar(__webpack_require__(640), exports);
tslib_1.__exportStar(__webpack_require__(641), exports);
tslib_1.__exportStar(__webpack_require__(642), exports);
tslib_1.__exportStar(__webpack_require__(643), exports);
tslib_1.__exportStar(__webpack_require__(644), exports);
tslib_1.__exportStar(__webpack_require__(645), exports);
tslib_1.__exportStar(__webpack_require__(646), exports);
tslib_1.__exportStar(__webpack_require__(647), exports);
tslib_1.__exportStar(__webpack_require__(648), exports);
tslib_1.__exportStar(__webpack_require__(649), exports);
tslib_1.__exportStar(__webpack_require__(650), exports);
tslib_1.__exportStar(__webpack_require__(116), exports);
tslib_1.__exportStar(__webpack_require__(117), exports);
tslib_1.__exportStar(__webpack_require__(651), exports);
tslib_1.__exportStar(__webpack_require__(262), exports);
tslib_1.__exportStar(__webpack_require__(652), exports);
tslib_1.__exportStar(__webpack_require__(261), exports);
tslib_1.__exportStar(__webpack_require__(653), exports);
tslib_1.__exportStar(__webpack_require__(46), exports);
tslib_1.__exportStar(__webpack_require__(263), exports);
tslib_1.__exportStar(__webpack_require__(264), exports);
tslib_1.__exportStar(__webpack_require__(47), exports);
tslib_1.__exportStar(__webpack_require__(127), exports);
tslib_1.__exportStar(__webpack_require__(79), exports);
tslib_1.__exportStar(__webpack_require__(265), exports);
tslib_1.__exportStar(__webpack_require__(654), exports);
tslib_1.__exportStar(__webpack_require__(655), exports);
tslib_1.__exportStar(__webpack_require__(656), exports);
tslib_1.__exportStar(__webpack_require__(657), exports);
tslib_1.__exportStar(__webpack_require__(658), exports);
tslib_1.__exportStar(__webpack_require__(659), exports);
tslib_1.__exportStar(__webpack_require__(660), exports);
tslib_1.__exportStar(__webpack_require__(661), exports);
tslib_1.__exportStar(__webpack_require__(662), exports);
tslib_1.__exportStar(__webpack_require__(663), exports);
tslib_1.__exportStar(__webpack_require__(664), exports);
tslib_1.__exportStar(__webpack_require__(665), exports);
tslib_1.__exportStar(__webpack_require__(666), exports);
tslib_1.__exportStar(__webpack_require__(667), exports);
tslib_1.__exportStar(__webpack_require__(668), exports);
tslib_1.__exportStar(__webpack_require__(669), exports);
tslib_1.__exportStar(__webpack_require__(670), exports);
tslib_1.__exportStar(__webpack_require__(671), exports);
tslib_1.__exportStar(__webpack_require__(672), exports);
tslib_1.__exportStar(__webpack_require__(673), exports);
tslib_1.__exportStar(__webpack_require__(674), exports);
tslib_1.__exportStar(__webpack_require__(675), exports);
tslib_1.__exportStar(__webpack_require__(676), exports);
tslib_1.__exportStar(__webpack_require__(677), exports);
tslib_1.__exportStar(__webpack_require__(122), exports);
tslib_1.__exportStar(__webpack_require__(678), exports);
tslib_1.__exportStar(__webpack_require__(679), exports);
tslib_1.__exportStar(__webpack_require__(66), exports);
tslib_1.__exportStar(__webpack_require__(118), exports);
tslib_1.__exportStar(__webpack_require__(251), exports);
tslib_1.__exportStar(__webpack_require__(252), exports);
tslib_1.__exportStar(__webpack_require__(119), exports);
tslib_1.__exportStar(__webpack_require__(266), exports);
tslib_1.__exportStar(__webpack_require__(253), exports);
tslib_1.__exportStar(__webpack_require__(267), exports);
tslib_1.__exportStar(__webpack_require__(124), exports);
tslib_1.__exportStar(__webpack_require__(120), exports);
tslib_1.__exportStar(__webpack_require__(121), exports);
tslib_1.__exportStar(__webpack_require__(123), exports);
tslib_1.__exportStar(__webpack_require__(268), exports);
tslib_1.__exportStar(__webpack_require__(680), exports);
tslib_1.__exportStar(__webpack_require__(681), exports);
tslib_1.__exportStar(__webpack_require__(682), exports);
tslib_1.__exportStar(__webpack_require__(683), exports);
tslib_1.__exportStar(__webpack_require__(684), exports);
tslib_1.__exportStar(__webpack_require__(685), exports);
tslib_1.__exportStar(__webpack_require__(686), exports);
tslib_1.__exportStar(__webpack_require__(687), exports);
tslib_1.__exportStar(__webpack_require__(688), exports);
tslib_1.__exportStar(__webpack_require__(689), exports);
tslib_1.__exportStar(__webpack_require__(690), exports);
tslib_1.__exportStar(__webpack_require__(691), exports);
tslib_1.__exportStar(__webpack_require__(692), exports);
tslib_1.__exportStar(__webpack_require__(693), exports);
tslib_1.__exportStar(__webpack_require__(694), exports);
tslib_1.__exportStar(__webpack_require__(695), exports);
tslib_1.__exportStar(__webpack_require__(696), exports);
tslib_1.__exportStar(__webpack_require__(697), exports);
tslib_1.__exportStar(__webpack_require__(698), exports);
tslib_1.__exportStar(__webpack_require__(699), exports);
tslib_1.__exportStar(__webpack_require__(67), exports);
tslib_1.__exportStar(__webpack_require__(126), exports);
tslib_1.__exportStar(__webpack_require__(255), exports);
tslib_1.__exportStar(__webpack_require__(254), exports);
tslib_1.__exportStar(__webpack_require__(257), exports);
tslib_1.__exportStar(__webpack_require__(68), exports);
tslib_1.__exportStar(__webpack_require__(125), exports);
tslib_1.__exportStar(__webpack_require__(258), exports);
tslib_1.__exportStar(__webpack_require__(259), exports);
tslib_1.__exportStar(__webpack_require__(269), exports);
tslib_1.__exportStar(__webpack_require__(260), exports);
tslib_1.__exportStar(__webpack_require__(256), exports);
tslib_1.__exportStar(__webpack_require__(128), exports);
tslib_1.__exportStar(__webpack_require__(700), exports);
tslib_1.__exportStar(__webpack_require__(701), exports);
tslib_1.__exportStar(__webpack_require__(702), exports);
tslib_1.__exportStar(__webpack_require__(703), exports);
tslib_1.__exportStar(__webpack_require__(704), exports);
tslib_1.__exportStar(__webpack_require__(705), exports);
tslib_1.__exportStar(__webpack_require__(706), exports);
tslib_1.__exportStar(__webpack_require__(707), exports);
tslib_1.__exportStar(__webpack_require__(708), exports);
tslib_1.__exportStar(__webpack_require__(80), exports);
tslib_1.__exportStar(__webpack_require__(270), exports);
tslib_1.__exportStar(__webpack_require__(129), exports);
tslib_1.__exportStar(__webpack_require__(271), exports);
tslib_1.__exportStar(__webpack_require__(131), exports);
tslib_1.__exportStar(__webpack_require__(130), exports);
tslib_1.__exportStar(__webpack_require__(272), exports);
tslib_1.__exportStar(__webpack_require__(132), exports);
tslib_1.__exportStar(__webpack_require__(709), exports);
tslib_1.__exportStar(__webpack_require__(710), exports);
tslib_1.__exportStar(__webpack_require__(711), exports);
tslib_1.__exportStar(__webpack_require__(712), exports);
tslib_1.__exportStar(__webpack_require__(713), exports);
tslib_1.__exportStar(__webpack_require__(714), exports);
tslib_1.__exportStar(__webpack_require__(715), exports);
tslib_1.__exportStar(__webpack_require__(716), exports);
tslib_1.__exportStar(__webpack_require__(717), exports);
tslib_1.__exportStar(__webpack_require__(273), exports);
tslib_1.__exportStar(__webpack_require__(718), exports);
tslib_1.__exportStar(__webpack_require__(81), exports);
tslib_1.__exportStar(__webpack_require__(275), exports);
tslib_1.__exportStar(__webpack_require__(274), exports);
tslib_1.__exportStar(__webpack_require__(276), exports);
tslib_1.__exportStar(__webpack_require__(719), exports);
tslib_1.__exportStar(__webpack_require__(720), exports);
tslib_1.__exportStar(__webpack_require__(721), exports);
tslib_1.__exportStar(__webpack_require__(722), exports);
tslib_1.__exportStar(__webpack_require__(723), exports);
tslib_1.__exportStar(__webpack_require__(724), exports);
tslib_1.__exportStar(__webpack_require__(725), exports);
tslib_1.__exportStar(__webpack_require__(726), exports);
tslib_1.__exportStar(__webpack_require__(727), exports);
tslib_1.__exportStar(__webpack_require__(728), exports);
tslib_1.__exportStar(__webpack_require__(729), exports);
tslib_1.__exportStar(__webpack_require__(730), exports);
tslib_1.__exportStar(__webpack_require__(731), exports);
tslib_1.__exportStar(__webpack_require__(732), exports);
tslib_1.__exportStar(__webpack_require__(733), exports);
tslib_1.__exportStar(__webpack_require__(734), exports);
tslib_1.__exportStar(__webpack_require__(735), exports);
tslib_1.__exportStar(__webpack_require__(736), exports);
tslib_1.__exportStar(__webpack_require__(737), exports);
tslib_1.__exportStar(__webpack_require__(738), exports);
tslib_1.__exportStar(__webpack_require__(739), exports);
tslib_1.__exportStar(__webpack_require__(740), exports);
tslib_1.__exportStar(__webpack_require__(741), exports);
tslib_1.__exportStar(__webpack_require__(742), exports);
tslib_1.__exportStar(__webpack_require__(743), exports);
tslib_1.__exportStar(__webpack_require__(744), exports);
tslib_1.__exportStar(__webpack_require__(745), exports);
tslib_1.__exportStar(__webpack_require__(746), exports);
tslib_1.__exportStar(__webpack_require__(747), exports);
tslib_1.__exportStar(__webpack_require__(748), exports);
tslib_1.__exportStar(__webpack_require__(749), exports);
tslib_1.__exportStar(__webpack_require__(750), exports);
tslib_1.__exportStar(__webpack_require__(751), exports);
tslib_1.__exportStar(__webpack_require__(752), exports);
tslib_1.__exportStar(__webpack_require__(753), exports);
tslib_1.__exportStar(__webpack_require__(754), exports);
tslib_1.__exportStar(__webpack_require__(133), exports);
tslib_1.__exportStar(__webpack_require__(277), exports);
tslib_1.__exportStar(__webpack_require__(134), exports);
tslib_1.__exportStar(__webpack_require__(279), exports);
tslib_1.__exportStar(__webpack_require__(281), exports);
tslib_1.__exportStar(__webpack_require__(282), exports);
tslib_1.__exportStar(__webpack_require__(283), exports);
tslib_1.__exportStar(__webpack_require__(284), exports);
tslib_1.__exportStar(__webpack_require__(280), exports);
tslib_1.__exportStar(__webpack_require__(278), exports);
tslib_1.__exportStar(__webpack_require__(755), exports);
tslib_1.__exportStar(__webpack_require__(135), exports);
tslib_1.__exportStar(__webpack_require__(286), exports);
tslib_1.__exportStar(__webpack_require__(756), exports);
tslib_1.__exportStar(__webpack_require__(136), exports);
tslib_1.__exportStar(__webpack_require__(757), exports);
tslib_1.__exportStar(__webpack_require__(758), exports);
tslib_1.__exportStar(__webpack_require__(287), exports);
tslib_1.__exportStar(__webpack_require__(82), exports);
tslib_1.__exportStar(__webpack_require__(759), exports);
tslib_1.__exportStar(__webpack_require__(760), exports);
tslib_1.__exportStar(__webpack_require__(761), exports);
tslib_1.__exportStar(__webpack_require__(762), exports);
tslib_1.__exportStar(__webpack_require__(763), exports);
tslib_1.__exportStar(__webpack_require__(285), exports);
tslib_1.__exportStar(__webpack_require__(289), exports);
tslib_1.__exportStar(__webpack_require__(137), exports);
tslib_1.__exportStar(__webpack_require__(764), exports);
tslib_1.__exportStar(__webpack_require__(288), exports);
tslib_1.__exportStar(__webpack_require__(765), exports);
tslib_1.__exportStar(__webpack_require__(766), exports);
tslib_1.__exportStar(__webpack_require__(767), exports);
tslib_1.__exportStar(__webpack_require__(768), exports);
tslib_1.__exportStar(__webpack_require__(769), exports);
tslib_1.__exportStar(__webpack_require__(770), exports);
tslib_1.__exportStar(__webpack_require__(771), exports);
tslib_1.__exportStar(__webpack_require__(69), exports);
tslib_1.__exportStar(__webpack_require__(772), exports);
tslib_1.__exportStar(__webpack_require__(773), exports);
tslib_1.__exportStar(__webpack_require__(774), exports);
tslib_1.__exportStar(__webpack_require__(775), exports);
tslib_1.__exportStar(__webpack_require__(776), exports);
tslib_1.__exportStar(__webpack_require__(777), exports);
tslib_1.__exportStar(__webpack_require__(778), exports);
tslib_1.__exportStar(__webpack_require__(779), exports);
tslib_1.__exportStar(__webpack_require__(780), exports);
tslib_1.__exportStar(__webpack_require__(781), exports);
tslib_1.__exportStar(__webpack_require__(782), exports);
tslib_1.__exportStar(__webpack_require__(783), exports);
tslib_1.__exportStar(__webpack_require__(784), exports);
tslib_1.__exportStar(__webpack_require__(785), exports);
tslib_1.__exportStar(__webpack_require__(786), exports);
tslib_1.__exportStar(__webpack_require__(787), exports);
tslib_1.__exportStar(__webpack_require__(788), exports);
tslib_1.__exportStar(__webpack_require__(789), exports);
tslib_1.__exportStar(__webpack_require__(790), exports);
tslib_1.__exportStar(__webpack_require__(791), exports);
tslib_1.__exportStar(__webpack_require__(792), exports);
tslib_1.__exportStar(__webpack_require__(793), exports);
tslib_1.__exportStar(__webpack_require__(794), exports);
tslib_1.__exportStar(__webpack_require__(795), exports);
tslib_1.__exportStar(__webpack_require__(796), exports);
tslib_1.__exportStar(__webpack_require__(797), exports);
tslib_1.__exportStar(__webpack_require__(798), exports);
tslib_1.__exportStar(__webpack_require__(799), exports);
tslib_1.__exportStar(__webpack_require__(800), exports);
tslib_1.__exportStar(__webpack_require__(298), exports);
tslib_1.__exportStar(__webpack_require__(39), exports);
tslib_1.__exportStar(__webpack_require__(301), exports);
tslib_1.__exportStar(__webpack_require__(302), exports);
tslib_1.__exportStar(__webpack_require__(70), exports);
tslib_1.__exportStar(__webpack_require__(300), exports);
tslib_1.__exportStar(__webpack_require__(299), exports);
tslib_1.__exportStar(__webpack_require__(303), exports);
tslib_1.__exportStar(__webpack_require__(142), exports);
tslib_1.__exportStar(__webpack_require__(304), exports);
tslib_1.__exportStar(__webpack_require__(9), exports);
tslib_1.__exportStar(__webpack_require__(801), exports);
tslib_1.__exportStar(__webpack_require__(32), exports);
tslib_1.__exportStar(__webpack_require__(85), exports);
tslib_1.__exportStar(__webpack_require__(802), exports);
tslib_1.__exportStar(__webpack_require__(803), exports);
tslib_1.__exportStar(__webpack_require__(804), exports);
tslib_1.__exportStar(__webpack_require__(805), exports);
tslib_1.__exportStar(__webpack_require__(38), exports);
tslib_1.__exportStar(__webpack_require__(305), exports);
tslib_1.__exportStar(__webpack_require__(140), exports);
tslib_1.__exportStar(__webpack_require__(141), exports);
tslib_1.__exportStar(__webpack_require__(143), exports);
tslib_1.__exportStar(__webpack_require__(144), exports);
tslib_1.__exportStar(__webpack_require__(806), exports);
tslib_1.__exportStar(__webpack_require__(807), exports);
tslib_1.__exportStar(__webpack_require__(808), exports);
tslib_1.__exportStar(__webpack_require__(306), exports);
tslib_1.__exportStar(__webpack_require__(809), exports);
tslib_1.__exportStar(__webpack_require__(145), exports);
tslib_1.__exportStar(__webpack_require__(86), exports);
tslib_1.__exportStar(__webpack_require__(810), exports);
tslib_1.__exportStar(__webpack_require__(811), exports);
tslib_1.__exportStar(__webpack_require__(812), exports);
tslib_1.__exportStar(__webpack_require__(813), exports);
tslib_1.__exportStar(__webpack_require__(814), exports);
tslib_1.__exportStar(__webpack_require__(815), exports);
tslib_1.__exportStar(__webpack_require__(816), exports);
tslib_1.__exportStar(__webpack_require__(817), exports);
tslib_1.__exportStar(__webpack_require__(818), exports);
tslib_1.__exportStar(__webpack_require__(819), exports);
tslib_1.__exportStar(__webpack_require__(820), exports);
tslib_1.__exportStar(__webpack_require__(821), exports);
tslib_1.__exportStar(__webpack_require__(822), exports);
tslib_1.__exportStar(__webpack_require__(823), exports);
tslib_1.__exportStar(__webpack_require__(824), exports);
tslib_1.__exportStar(__webpack_require__(825), exports);
tslib_1.__exportStar(__webpack_require__(826), exports);
tslib_1.__exportStar(__webpack_require__(827), exports);
tslib_1.__exportStar(__webpack_require__(828), exports);
tslib_1.__exportStar(__webpack_require__(829), exports);
tslib_1.__exportStar(__webpack_require__(830), exports);
tslib_1.__exportStar(__webpack_require__(831), exports);
tslib_1.__exportStar(__webpack_require__(832), exports);
tslib_1.__exportStar(__webpack_require__(833), exports);
tslib_1.__exportStar(__webpack_require__(307), exports);
tslib_1.__exportStar(__webpack_require__(308), exports);
tslib_1.__exportStar(__webpack_require__(834), exports);
tslib_1.__exportStar(__webpack_require__(309), exports);
tslib_1.__exportStar(__webpack_require__(310), exports);
tslib_1.__exportStar(__webpack_require__(311), exports);
tslib_1.__exportStar(__webpack_require__(555), exports);
tslib_1.__exportStar(__webpack_require__(556), exports);
tslib_1.__exportStar(__webpack_require__(208), exports);
tslib_1.__exportStar(__webpack_require__(557), exports);
tslib_1.__exportStar(__webpack_require__(89), exports);
tslib_1.__exportStar(__webpack_require__(558), exports);
tslib_1.__exportStar(__webpack_require__(570), exports);
tslib_1.__exportStar(__webpack_require__(559), exports);
tslib_1.__exportStar(__webpack_require__(839), exports);
tslib_1.__exportStar(__webpack_require__(840), exports);
tslib_1.__exportStar(__webpack_require__(841), exports);
tslib_1.__exportStar(__webpack_require__(842), exports);
tslib_1.__exportStar(__webpack_require__(843), exports);
tslib_1.__exportStar(__webpack_require__(844), exports);
tslib_1.__exportStar(__webpack_require__(845), exports);
tslib_1.__exportStar(__webpack_require__(846), exports);
tslib_1.__exportStar(__webpack_require__(847), exports);
tslib_1.__exportStar(__webpack_require__(848), exports);
tslib_1.__exportStar(__webpack_require__(849), exports);
tslib_1.__exportStar(__webpack_require__(850), exports);
tslib_1.__exportStar(__webpack_require__(851), exports);
tslib_1.__exportStar(__webpack_require__(852), exports);
tslib_1.__exportStar(__webpack_require__(562), exports);
tslib_1.__exportStar(__webpack_require__(560), exports);
tslib_1.__exportStar(__webpack_require__(561), exports);
tslib_1.__exportStar(__webpack_require__(853), exports);
tslib_1.__exportStar(__webpack_require__(564), exports);
tslib_1.__exportStar(__webpack_require__(854), exports);
tslib_1.__exportStar(__webpack_require__(565), exports);
tslib_1.__exportStar(__webpack_require__(855), exports);
tslib_1.__exportStar(__webpack_require__(856), exports);
tslib_1.__exportStar(__webpack_require__(563), exports);
tslib_1.__exportStar(__webpack_require__(857), exports);
tslib_1.__exportStar(__webpack_require__(566), exports);
tslib_1.__exportStar(__webpack_require__(567), exports);
tslib_1.__exportStar(__webpack_require__(568), exports);
tslib_1.__exportStar(__webpack_require__(569), exports);
tslib_1.__exportStar(__webpack_require__(571), exports);
tslib_1.__exportStar(__webpack_require__(858), exports);
tslib_1.__exportStar(__webpack_require__(859), exports);
tslib_1.__exportStar(__webpack_require__(860), exports);
tslib_1.__exportStar(__webpack_require__(861), exports);
tslib_1.__exportStar(__webpack_require__(862), exports);
tslib_1.__exportStar(__webpack_require__(863), exports);
tslib_1.__exportStar(__webpack_require__(864), exports);
tslib_1.__exportStar(__webpack_require__(865), exports);
tslib_1.__exportStar(__webpack_require__(866), exports);
tslib_1.__exportStar(__webpack_require__(867), exports);
tslib_1.__exportStar(__webpack_require__(868), exports);
tslib_1.__exportStar(__webpack_require__(869), exports);
tslib_1.__exportStar(__webpack_require__(870), exports);
tslib_1.__exportStar(__webpack_require__(87), exports);
tslib_1.__exportStar(__webpack_require__(871), exports);
tslib_1.__exportStar(__webpack_require__(312), exports);
tslib_1.__exportStar(__webpack_require__(314), exports);
tslib_1.__exportStar(__webpack_require__(872), exports);
tslib_1.__exportStar(__webpack_require__(317), exports);
tslib_1.__exportStar(__webpack_require__(316), exports);
tslib_1.__exportStar(__webpack_require__(873), exports);
tslib_1.__exportStar(__webpack_require__(572), exports);
tslib_1.__exportStar(__webpack_require__(313), exports);
tslib_1.__exportStar(__webpack_require__(315), exports);
tslib_1.__exportStar(__webpack_require__(874), exports);
tslib_1.__exportStar(__webpack_require__(318), exports);
tslib_1.__exportStar(__webpack_require__(875), exports);
tslib_1.__exportStar(__webpack_require__(876), exports);
tslib_1.__exportStar(__webpack_require__(877), exports);
tslib_1.__exportStar(__webpack_require__(878), exports);
tslib_1.__exportStar(__webpack_require__(573), exports);
tslib_1.__exportStar(__webpack_require__(320), exports);
tslib_1.__exportStar(__webpack_require__(879), exports);
tslib_1.__exportStar(__webpack_require__(319), exports);
tslib_1.__exportStar(__webpack_require__(880), exports);
tslib_1.__exportStar(__webpack_require__(881), exports);
tslib_1.__exportStar(__webpack_require__(882), exports);
tslib_1.__exportStar(__webpack_require__(883), exports);
tslib_1.__exportStar(__webpack_require__(884), exports);
tslib_1.__exportStar(__webpack_require__(885), exports);
tslib_1.__exportStar(__webpack_require__(886), exports);
tslib_1.__exportStar(__webpack_require__(887), exports);
tslib_1.__exportStar(__webpack_require__(888), exports);
tslib_1.__exportStar(__webpack_require__(889), exports);
tslib_1.__exportStar(__webpack_require__(890), exports);
tslib_1.__exportStar(__webpack_require__(891), exports);
tslib_1.__exportStar(__webpack_require__(892), exports);
tslib_1.__exportStar(__webpack_require__(893), exports);
tslib_1.__exportStar(__webpack_require__(894), exports);
tslib_1.__exportStar(__webpack_require__(146), exports);
tslib_1.__exportStar(__webpack_require__(148), exports);
tslib_1.__exportStar(__webpack_require__(147), exports);
tslib_1.__exportStar(__webpack_require__(323), exports);
tslib_1.__exportStar(__webpack_require__(324), exports);
tslib_1.__exportStar(__webpack_require__(326), exports);
tslib_1.__exportStar(__webpack_require__(151), exports);
tslib_1.__exportStar(__webpack_require__(328), exports);
tslib_1.__exportStar(__webpack_require__(327), exports);
tslib_1.__exportStar(__webpack_require__(325), exports);
tslib_1.__exportStar(__webpack_require__(149), exports);
tslib_1.__exportStar(__webpack_require__(150), exports);
tslib_1.__exportStar(__webpack_require__(322), exports);
tslib_1.__exportStar(__webpack_require__(895), exports);
tslib_1.__exportStar(__webpack_require__(321), exports);
tslib_1.__exportStar(__webpack_require__(896), exports);
tslib_1.__exportStar(__webpack_require__(897), exports);
tslib_1.__exportStar(__webpack_require__(898), exports);
tslib_1.__exportStar(__webpack_require__(899), exports);
tslib_1.__exportStar(__webpack_require__(900), exports);
tslib_1.__exportStar(__webpack_require__(901), exports);
tslib_1.__exportStar(__webpack_require__(902), exports);
tslib_1.__exportStar(__webpack_require__(903), exports);
tslib_1.__exportStar(__webpack_require__(904), exports);
tslib_1.__exportStar(__webpack_require__(905), exports);
tslib_1.__exportStar(__webpack_require__(906), exports);
tslib_1.__exportStar(__webpack_require__(907), exports);
tslib_1.__exportStar(__webpack_require__(908), exports);
tslib_1.__exportStar(__webpack_require__(909), exports);
tslib_1.__exportStar(__webpack_require__(153), exports);
tslib_1.__exportStar(__webpack_require__(154), exports);
tslib_1.__exportStar(__webpack_require__(331), exports);
tslib_1.__exportStar(__webpack_require__(156), exports);
tslib_1.__exportStar(__webpack_require__(333), exports);
tslib_1.__exportStar(__webpack_require__(334), exports);
tslib_1.__exportStar(__webpack_require__(332), exports);
tslib_1.__exportStar(__webpack_require__(329), exports);
tslib_1.__exportStar(__webpack_require__(910), exports);
tslib_1.__exportStar(__webpack_require__(330), exports);
tslib_1.__exportStar(__webpack_require__(155), exports);
tslib_1.__exportStar(__webpack_require__(911), exports);
tslib_1.__exportStar(__webpack_require__(152), exports);
tslib_1.__exportStar(__webpack_require__(912), exports);
tslib_1.__exportStar(__webpack_require__(913), exports);
tslib_1.__exportStar(__webpack_require__(914), exports);
tslib_1.__exportStar(__webpack_require__(915), exports);
tslib_1.__exportStar(__webpack_require__(916), exports);
tslib_1.__exportStar(__webpack_require__(917), exports);
tslib_1.__exportStar(__webpack_require__(918), exports);
tslib_1.__exportStar(__webpack_require__(919), exports);
tslib_1.__exportStar(__webpack_require__(920), exports);
tslib_1.__exportStar(__webpack_require__(157), exports);
tslib_1.__exportStar(__webpack_require__(921), exports);
tslib_1.__exportStar(__webpack_require__(158), exports);
tslib_1.__exportStar(__webpack_require__(922), exports);
tslib_1.__exportStar(__webpack_require__(159), exports);
tslib_1.__exportStar(__webpack_require__(336), exports);
tslib_1.__exportStar(__webpack_require__(923), exports);
tslib_1.__exportStar(__webpack_require__(335), exports);
tslib_1.__exportStar(__webpack_require__(924), exports);
tslib_1.__exportStar(__webpack_require__(925), exports);
tslib_1.__exportStar(__webpack_require__(926), exports);
tslib_1.__exportStar(__webpack_require__(927), exports);
tslib_1.__exportStar(__webpack_require__(928), exports);
tslib_1.__exportStar(__webpack_require__(929), exports);
tslib_1.__exportStar(__webpack_require__(930), exports);
tslib_1.__exportStar(__webpack_require__(931), exports);
tslib_1.__exportStar(__webpack_require__(932), exports);
tslib_1.__exportStar(__webpack_require__(933), exports);
tslib_1.__exportStar(__webpack_require__(934), exports);
tslib_1.__exportStar(__webpack_require__(935), exports);
tslib_1.__exportStar(__webpack_require__(936), exports);
tslib_1.__exportStar(__webpack_require__(339), exports);
tslib_1.__exportStar(__webpack_require__(338), exports);
tslib_1.__exportStar(__webpack_require__(937), exports);
tslib_1.__exportStar(__webpack_require__(160), exports);
tslib_1.__exportStar(__webpack_require__(343), exports);
tslib_1.__exportStar(__webpack_require__(340), exports);
tslib_1.__exportStar(__webpack_require__(342), exports);
tslib_1.__exportStar(__webpack_require__(341), exports);
tslib_1.__exportStar(__webpack_require__(938), exports);
tslib_1.__exportStar(__webpack_require__(161), exports);
tslib_1.__exportStar(__webpack_require__(345), exports);
tslib_1.__exportStar(__webpack_require__(939), exports);
tslib_1.__exportStar(__webpack_require__(344), exports);
tslib_1.__exportStar(__webpack_require__(940), exports);
tslib_1.__exportStar(__webpack_require__(162), exports);
tslib_1.__exportStar(__webpack_require__(337), exports);
tslib_1.__exportStar(__webpack_require__(941), exports);
tslib_1.__exportStar(__webpack_require__(942), exports);
tslib_1.__exportStar(__webpack_require__(943), exports);
tslib_1.__exportStar(__webpack_require__(944), exports);
tslib_1.__exportStar(__webpack_require__(945), exports);
tslib_1.__exportStar(__webpack_require__(165), exports);
tslib_1.__exportStar(__webpack_require__(946), exports);
tslib_1.__exportStar(__webpack_require__(163), exports);
tslib_1.__exportStar(__webpack_require__(164), exports);
tslib_1.__exportStar(__webpack_require__(947), exports);
tslib_1.__exportStar(__webpack_require__(948), exports);
tslib_1.__exportStar(__webpack_require__(949), exports);
tslib_1.__exportStar(__webpack_require__(950), exports);
tslib_1.__exportStar(__webpack_require__(951), exports);
tslib_1.__exportStar(__webpack_require__(952), exports);
tslib_1.__exportStar(__webpack_require__(953), exports);
tslib_1.__exportStar(__webpack_require__(954), exports);
tslib_1.__exportStar(__webpack_require__(955), exports);
tslib_1.__exportStar(__webpack_require__(956), exports);
tslib_1.__exportStar(__webpack_require__(957), exports);
tslib_1.__exportStar(__webpack_require__(958), exports);
tslib_1.__exportStar(__webpack_require__(959), exports);
tslib_1.__exportStar(__webpack_require__(960), exports);
tslib_1.__exportStar(__webpack_require__(961), exports);
tslib_1.__exportStar(__webpack_require__(962), exports);
tslib_1.__exportStar(__webpack_require__(963), exports);
tslib_1.__exportStar(__webpack_require__(964), exports);
tslib_1.__exportStar(__webpack_require__(965), exports);
tslib_1.__exportStar(__webpack_require__(966), exports);
tslib_1.__exportStar(__webpack_require__(967), exports);
tslib_1.__exportStar(__webpack_require__(968), exports);
tslib_1.__exportStar(__webpack_require__(969), exports);
tslib_1.__exportStar(__webpack_require__(970), exports);
tslib_1.__exportStar(__webpack_require__(971), exports);
tslib_1.__exportStar(__webpack_require__(972), exports);
tslib_1.__exportStar(__webpack_require__(973), exports);
tslib_1.__exportStar(__webpack_require__(974), exports);
tslib_1.__exportStar(__webpack_require__(350), exports);
tslib_1.__exportStar(__webpack_require__(347), exports);
tslib_1.__exportStar(__webpack_require__(167), exports);
tslib_1.__exportStar(__webpack_require__(176), exports);
tslib_1.__exportStar(__webpack_require__(975), exports);
tslib_1.__exportStar(__webpack_require__(346), exports);
tslib_1.__exportStar(__webpack_require__(348), exports);
tslib_1.__exportStar(__webpack_require__(171), exports);
tslib_1.__exportStar(__webpack_require__(172), exports);
tslib_1.__exportStar(__webpack_require__(349), exports);
tslib_1.__exportStar(__webpack_require__(174), exports);
tslib_1.__exportStar(__webpack_require__(243), exports);
tslib_1.__exportStar(__webpack_require__(168), exports);
tslib_1.__exportStar(__webpack_require__(177), exports);
tslib_1.__exportStar(__webpack_require__(574), exports);
tslib_1.__exportStar(__webpack_require__(166), exports);
tslib_1.__exportStar(__webpack_require__(575), exports);
tslib_1.__exportStar(__webpack_require__(170), exports);
tslib_1.__exportStar(__webpack_require__(576), exports);
tslib_1.__exportStar(__webpack_require__(173), exports);
tslib_1.__exportStar(__webpack_require__(577), exports);
tslib_1.__exportStar(__webpack_require__(175), exports);
tslib_1.__exportStar(__webpack_require__(169), exports);
tslib_1.__exportStar(__webpack_require__(976), exports);
tslib_1.__exportStar(__webpack_require__(977), exports);
tslib_1.__exportStar(__webpack_require__(978), exports);
tslib_1.__exportStar(__webpack_require__(979), exports);
tslib_1.__exportStar(__webpack_require__(351), exports);
tslib_1.__exportStar(__webpack_require__(980), exports);
tslib_1.__exportStar(__webpack_require__(352), exports);
tslib_1.__exportStar(__webpack_require__(981), exports);
tslib_1.__exportStar(__webpack_require__(982), exports);
tslib_1.__exportStar(__webpack_require__(983), exports);
tslib_1.__exportStar(__webpack_require__(984), exports);
tslib_1.__exportStar(__webpack_require__(985), exports);
tslib_1.__exportStar(__webpack_require__(986), exports);
tslib_1.__exportStar(__webpack_require__(987), exports);
tslib_1.__exportStar(__webpack_require__(988), exports);
tslib_1.__exportStar(__webpack_require__(989), exports);
tslib_1.__exportStar(__webpack_require__(990), exports);
tslib_1.__exportStar(__webpack_require__(991), exports);
tslib_1.__exportStar(__webpack_require__(992), exports);
tslib_1.__exportStar(__webpack_require__(993), exports);
tslib_1.__exportStar(__webpack_require__(994), exports);
tslib_1.__exportStar(__webpack_require__(995), exports);
tslib_1.__exportStar(__webpack_require__(996), exports);
tslib_1.__exportStar(__webpack_require__(997), exports);
tslib_1.__exportStar(__webpack_require__(998), exports);
tslib_1.__exportStar(__webpack_require__(999), exports);
tslib_1.__exportStar(__webpack_require__(1000), exports);
tslib_1.__exportStar(__webpack_require__(1001), exports);
tslib_1.__exportStar(__webpack_require__(1002), exports);
tslib_1.__exportStar(__webpack_require__(1003), exports);
tslib_1.__exportStar(__webpack_require__(358), exports);
tslib_1.__exportStar(__webpack_require__(355), exports);
tslib_1.__exportStar(__webpack_require__(179), exports);
tslib_1.__exportStar(__webpack_require__(1004), exports);
tslib_1.__exportStar(__webpack_require__(40), exports);
tslib_1.__exportStar(__webpack_require__(180), exports);
tslib_1.__exportStar(__webpack_require__(1005), exports);
tslib_1.__exportStar(__webpack_require__(181), exports);
tslib_1.__exportStar(__webpack_require__(182), exports);
tslib_1.__exportStar(__webpack_require__(362), exports);
tslib_1.__exportStar(__webpack_require__(363), exports);
tslib_1.__exportStar(__webpack_require__(183), exports);
tslib_1.__exportStar(__webpack_require__(356), exports);
tslib_1.__exportStar(__webpack_require__(357), exports);
tslib_1.__exportStar(__webpack_require__(184), exports);
tslib_1.__exportStar(__webpack_require__(354), exports);
tslib_1.__exportStar(__webpack_require__(359), exports);
tslib_1.__exportStar(__webpack_require__(185), exports);
tslib_1.__exportStar(__webpack_require__(360), exports);
tslib_1.__exportStar(__webpack_require__(361), exports);
tslib_1.__exportStar(__webpack_require__(364), exports);
tslib_1.__exportStar(__webpack_require__(186), exports);
tslib_1.__exportStar(__webpack_require__(353), exports);
tslib_1.__exportStar(__webpack_require__(1006), exports);
tslib_1.__exportStar(__webpack_require__(187), exports);
tslib_1.__exportStar(__webpack_require__(178), exports);
tslib_1.__exportStar(__webpack_require__(1007), exports);
tslib_1.__exportStar(__webpack_require__(1008), exports);
tslib_1.__exportStar(__webpack_require__(1009), exports);
tslib_1.__exportStar(__webpack_require__(1010), exports);
tslib_1.__exportStar(__webpack_require__(1011), exports);
tslib_1.__exportStar(__webpack_require__(1012), exports);
tslib_1.__exportStar(__webpack_require__(188), exports);
tslib_1.__exportStar(__webpack_require__(367), exports);
tslib_1.__exportStar(__webpack_require__(366), exports);
tslib_1.__exportStar(__webpack_require__(368), exports);
tslib_1.__exportStar(__webpack_require__(369), exports);
tslib_1.__exportStar(__webpack_require__(365), exports);
tslib_1.__exportStar(__webpack_require__(1013), exports);
tslib_1.__exportStar(__webpack_require__(1014), exports);
tslib_1.__exportStar(__webpack_require__(1015), exports);
tslib_1.__exportStar(__webpack_require__(1016), exports);
tslib_1.__exportStar(__webpack_require__(1017), exports);
tslib_1.__exportStar(__webpack_require__(370), exports);
tslib_1.__exportStar(__webpack_require__(578), exports);
tslib_1.__exportStar(__webpack_require__(71), exports);
tslib_1.__exportStar(__webpack_require__(1018), exports);
tslib_1.__exportStar(__webpack_require__(1019), exports);
tslib_1.__exportStar(__webpack_require__(1020), exports);
tslib_1.__exportStar(__webpack_require__(1021), exports);
tslib_1.__exportStar(__webpack_require__(1022), exports);
tslib_1.__exportStar(__webpack_require__(1023), exports);
tslib_1.__exportStar(__webpack_require__(1024), exports);
tslib_1.__exportStar(__webpack_require__(1025), exports);
tslib_1.__exportStar(__webpack_require__(1026), exports);
tslib_1.__exportStar(__webpack_require__(373), exports);
tslib_1.__exportStar(__webpack_require__(374), exports);
tslib_1.__exportStar(__webpack_require__(189), exports);
tslib_1.__exportStar(__webpack_require__(372), exports);
tslib_1.__exportStar(__webpack_require__(1027), exports);
tslib_1.__exportStar(__webpack_require__(191), exports);
tslib_1.__exportStar(__webpack_require__(1028), exports);
tslib_1.__exportStar(__webpack_require__(1029), exports);
tslib_1.__exportStar(__webpack_require__(1030), exports);
tslib_1.__exportStar(__webpack_require__(1031), exports);
tslib_1.__exportStar(__webpack_require__(1032), exports);
tslib_1.__exportStar(__webpack_require__(1033), exports);
tslib_1.__exportStar(__webpack_require__(1034), exports);
tslib_1.__exportStar(__webpack_require__(1035), exports);
tslib_1.__exportStar(__webpack_require__(1036), exports);
tslib_1.__exportStar(__webpack_require__(1037), exports);
tslib_1.__exportStar(__webpack_require__(1038), exports);
tslib_1.__exportStar(__webpack_require__(1039), exports);
tslib_1.__exportStar(__webpack_require__(1040), exports);
tslib_1.__exportStar(__webpack_require__(1041), exports);
tslib_1.__exportStar(__webpack_require__(1042), exports);
tslib_1.__exportStar(__webpack_require__(1043), exports);
tslib_1.__exportStar(__webpack_require__(1044), exports);
tslib_1.__exportStar(__webpack_require__(579), exports);
tslib_1.__exportStar(__webpack_require__(378), exports);
tslib_1.__exportStar(__webpack_require__(380), exports);
tslib_1.__exportStar(__webpack_require__(580), exports);
tslib_1.__exportStar(__webpack_require__(376), exports);
tslib_1.__exportStar(__webpack_require__(381), exports);
tslib_1.__exportStar(__webpack_require__(379), exports);
tslib_1.__exportStar(__webpack_require__(377), exports);
tslib_1.__exportStar(__webpack_require__(375), exports);
tslib_1.__exportStar(__webpack_require__(581), exports);
tslib_1.__exportStar(__webpack_require__(1045), exports);
tslib_1.__exportStar(__webpack_require__(1046), exports);
tslib_1.__exportStar(__webpack_require__(1047), exports);
tslib_1.__exportStar(__webpack_require__(1048), exports);
tslib_1.__exportStar(__webpack_require__(1049), exports);
tslib_1.__exportStar(__webpack_require__(1050), exports);
tslib_1.__exportStar(__webpack_require__(1051), exports);
tslib_1.__exportStar(__webpack_require__(1052), exports);
tslib_1.__exportStar(__webpack_require__(388), exports);
tslib_1.__exportStar(__webpack_require__(385), exports);
tslib_1.__exportStar(__webpack_require__(384), exports);
tslib_1.__exportStar(__webpack_require__(190), exports);
tslib_1.__exportStar(__webpack_require__(387), exports);
tslib_1.__exportStar(__webpack_require__(582), exports);
tslib_1.__exportStar(__webpack_require__(583), exports);
tslib_1.__exportStar(__webpack_require__(584), exports);
tslib_1.__exportStar(__webpack_require__(585), exports);
tslib_1.__exportStar(__webpack_require__(383), exports);
tslib_1.__exportStar(__webpack_require__(1053), exports);
tslib_1.__exportStar(__webpack_require__(587), exports);
tslib_1.__exportStar(__webpack_require__(586), exports);
tslib_1.__exportStar(__webpack_require__(386), exports);
tslib_1.__exportStar(__webpack_require__(382), exports);
tslib_1.__exportStar(__webpack_require__(1054), exports);
tslib_1.__exportStar(__webpack_require__(1055), exports);
tslib_1.__exportStar(__webpack_require__(1056), exports);
tslib_1.__exportStar(__webpack_require__(1057), exports);
tslib_1.__exportStar(__webpack_require__(1058), exports);
tslib_1.__exportStar(__webpack_require__(390), exports);
tslib_1.__exportStar(__webpack_require__(1059), exports);
tslib_1.__exportStar(__webpack_require__(389), exports);
tslib_1.__exportStar(__webpack_require__(1060), exports);
tslib_1.__exportStar(__webpack_require__(1061), exports);
tslib_1.__exportStar(__webpack_require__(1062), exports);
tslib_1.__exportStar(__webpack_require__(192), exports);
tslib_1.__exportStar(__webpack_require__(391), exports);
tslib_1.__exportStar(__webpack_require__(1063), exports);
tslib_1.__exportStar(__webpack_require__(1064), exports);
tslib_1.__exportStar(__webpack_require__(1065), exports);
tslib_1.__exportStar(__webpack_require__(1066), exports);
tslib_1.__exportStar(__webpack_require__(1067), exports);
tslib_1.__exportStar(__webpack_require__(1068), exports);
tslib_1.__exportStar(__webpack_require__(393), exports);
tslib_1.__exportStar(__webpack_require__(392), exports);
tslib_1.__exportStar(__webpack_require__(395), exports);
tslib_1.__exportStar(__webpack_require__(394), exports);
tslib_1.__exportStar(__webpack_require__(1069), exports);
tslib_1.__exportStar(__webpack_require__(1070), exports);
tslib_1.__exportStar(__webpack_require__(1071), exports);
tslib_1.__exportStar(__webpack_require__(1072), exports);
tslib_1.__exportStar(__webpack_require__(1073), exports);
tslib_1.__exportStar(__webpack_require__(1074), exports);
tslib_1.__exportStar(__webpack_require__(1075), exports);
tslib_1.__exportStar(__webpack_require__(1076), exports);
tslib_1.__exportStar(__webpack_require__(1077), exports);
tslib_1.__exportStar(__webpack_require__(1078), exports);
tslib_1.__exportStar(__webpack_require__(1079), exports);
tslib_1.__exportStar(__webpack_require__(1080), exports);
tslib_1.__exportStar(__webpack_require__(1081), exports);
tslib_1.__exportStar(__webpack_require__(1082), exports);
tslib_1.__exportStar(__webpack_require__(396), exports);
tslib_1.__exportStar(__webpack_require__(588), exports);
tslib_1.__exportStar(__webpack_require__(50), exports);
tslib_1.__exportStar(__webpack_require__(589), exports);
tslib_1.__exportStar(__webpack_require__(193), exports);
tslib_1.__exportStar(__webpack_require__(590), exports);
tslib_1.__exportStar(__webpack_require__(195), exports);
tslib_1.__exportStar(__webpack_require__(591), exports);
tslib_1.__exportStar(__webpack_require__(400), exports);
tslib_1.__exportStar(__webpack_require__(592), exports);
tslib_1.__exportStar(__webpack_require__(196), exports);
tslib_1.__exportStar(__webpack_require__(397), exports);
tslib_1.__exportStar(__webpack_require__(593), exports);
tslib_1.__exportStar(__webpack_require__(194), exports);
tslib_1.__exportStar(__webpack_require__(594), exports);
tslib_1.__exportStar(__webpack_require__(197), exports);
tslib_1.__exportStar(__webpack_require__(398), exports);
tslib_1.__exportStar(__webpack_require__(399), exports);
tslib_1.__exportStar(__webpack_require__(1083), exports);
tslib_1.__exportStar(__webpack_require__(1084), exports);
tslib_1.__exportStar(__webpack_require__(401), exports);
tslib_1.__exportStar(__webpack_require__(595), exports);
tslib_1.__exportStar(__webpack_require__(198), exports);
tslib_1.__exportStar(__webpack_require__(1085), exports);
tslib_1.__exportStar(__webpack_require__(1086), exports);
tslib_1.__exportStar(__webpack_require__(1087), exports);
tslib_1.__exportStar(__webpack_require__(1088), exports);
tslib_1.__exportStar(__webpack_require__(596), exports);
tslib_1.__exportStar(__webpack_require__(403), exports);
tslib_1.__exportStar(__webpack_require__(1089), exports);
tslib_1.__exportStar(__webpack_require__(402), exports);
tslib_1.__exportStar(__webpack_require__(1090), exports);
tslib_1.__exportStar(__webpack_require__(371), exports);
tslib_1.__exportStar(__webpack_require__(1091), exports);
tslib_1.__exportStar(__webpack_require__(1092), exports);
tslib_1.__exportStar(__webpack_require__(1093), exports);
tslib_1.__exportStar(__webpack_require__(1094), exports);
tslib_1.__exportStar(__webpack_require__(1095), exports);
tslib_1.__exportStar(__webpack_require__(1096), exports);
tslib_1.__exportStar(__webpack_require__(597), exports);
tslib_1.__exportStar(__webpack_require__(598), exports);
tslib_1.__exportStar(__webpack_require__(244), exports);
tslib_1.__exportStar(__webpack_require__(1097), exports);
tslib_1.__exportStar(__webpack_require__(1098), exports);
tslib_1.__exportStar(__webpack_require__(404), exports);
tslib_1.__exportStar(__webpack_require__(202), exports);
tslib_1.__exportStar(__webpack_require__(405), exports);
tslib_1.__exportStar(__webpack_require__(1099), exports);
tslib_1.__exportStar(__webpack_require__(1100), exports);
tslib_1.__exportStar(__webpack_require__(200), exports);
tslib_1.__exportStar(__webpack_require__(1101), exports);
tslib_1.__exportStar(__webpack_require__(1102), exports);
tslib_1.__exportStar(__webpack_require__(1103), exports);
tslib_1.__exportStar(__webpack_require__(1104), exports);
tslib_1.__exportStar(__webpack_require__(199), exports);
tslib_1.__exportStar(__webpack_require__(1105), exports);
tslib_1.__exportStar(__webpack_require__(1106), exports);
tslib_1.__exportStar(__webpack_require__(1107), exports);
tslib_1.__exportStar(__webpack_require__(1108), exports);
tslib_1.__exportStar(__webpack_require__(1109), exports);
tslib_1.__exportStar(__webpack_require__(1110), exports);
tslib_1.__exportStar(__webpack_require__(1111), exports);
tslib_1.__exportStar(__webpack_require__(1112), exports);
tslib_1.__exportStar(__webpack_require__(1113), exports);
tslib_1.__exportStar(__webpack_require__(406), exports);
tslib_1.__exportStar(__webpack_require__(203), exports);
tslib_1.__exportStar(__webpack_require__(441), exports);
tslib_1.__exportStar(__webpack_require__(205), exports);
tslib_1.__exportStar(__webpack_require__(458), exports);
tslib_1.__exportStar(__webpack_require__(204), exports);
tslib_1.__exportStar(__webpack_require__(443), exports);
tslib_1.__exportStar(__webpack_require__(206), exports);
tslib_1.__exportStar(__webpack_require__(1114), exports);
tslib_1.__exportStar(__webpack_require__(1115), exports);
tslib_1.__exportStar(__webpack_require__(1116), exports);
tslib_1.__exportStar(__webpack_require__(1117), exports);
tslib_1.__exportStar(__webpack_require__(1118), exports);
tslib_1.__exportStar(__webpack_require__(207), exports);
tslib_1.__exportStar(__webpack_require__(72), exports);
tslib_1.__exportStar(__webpack_require__(245), exports);
tslib_1.__exportStar(__webpack_require__(1119), exports);
tslib_1.__exportStar(__webpack_require__(1120), exports);
tslib_1.__exportStar(__webpack_require__(1121), exports);
tslib_1.__exportStar(__webpack_require__(1122), exports);
tslib_1.__exportStar(__webpack_require__(1123), exports);
tslib_1.__exportStar(__webpack_require__(599), exports);
tslib_1.__exportStar(__webpack_require__(1124), exports);
tslib_1.__exportStar(__webpack_require__(1125), exports);
tslib_1.__exportStar(__webpack_require__(1126), exports);
tslib_1.__exportStar(__webpack_require__(1127), exports);
tslib_1.__exportStar(__webpack_require__(1128), exports);
tslib_1.__exportStar(__webpack_require__(48), exports);
tslib_1.__exportStar(__webpack_require__(1129), exports);
tslib_1.__exportStar(__webpack_require__(1130), exports);
tslib_1.__exportStar(__webpack_require__(91), exports);
tslib_1.__exportStar(__webpack_require__(73), exports);
tslib_1.__exportStar(__webpack_require__(430), exports);
tslib_1.__exportStar(__webpack_require__(1131), exports);
tslib_1.__exportStar(__webpack_require__(74), exports);
tslib_1.__exportStar(__webpack_require__(1132), exports);
tslib_1.__exportStar(__webpack_require__(1133), exports);
tslib_1.__exportStar(__webpack_require__(1134), exports);
tslib_1.__exportStar(__webpack_require__(1135), exports);
tslib_1.__exportStar(__webpack_require__(408), exports);
tslib_1.__exportStar(__webpack_require__(1136), exports);
tslib_1.__exportStar(__webpack_require__(1137), exports);
tslib_1.__exportStar(__webpack_require__(1138), exports);
tslib_1.__exportStar(__webpack_require__(1139), exports);
tslib_1.__exportStar(__webpack_require__(1140), exports);
tslib_1.__exportStar(__webpack_require__(1141), exports);
tslib_1.__exportStar(__webpack_require__(1142), exports);
tslib_1.__exportStar(__webpack_require__(1143), exports);
tslib_1.__exportStar(__webpack_require__(1144), exports);
tslib_1.__exportStar(__webpack_require__(1145), exports);
tslib_1.__exportStar(__webpack_require__(1146), exports);
tslib_1.__exportStar(__webpack_require__(1147), exports);
tslib_1.__exportStar(__webpack_require__(1148), exports);
tslib_1.__exportStar(__webpack_require__(1149), exports);
tslib_1.__exportStar(__webpack_require__(1150), exports);
tslib_1.__exportStar(__webpack_require__(1151), exports);
tslib_1.__exportStar(__webpack_require__(1152), exports);
tslib_1.__exportStar(__webpack_require__(1153), exports);
tslib_1.__exportStar(__webpack_require__(1154), exports);
tslib_1.__exportStar(__webpack_require__(1155), exports);
tslib_1.__exportStar(__webpack_require__(1156), exports);
tslib_1.__exportStar(__webpack_require__(1157), exports);
tslib_1.__exportStar(__webpack_require__(1158), exports);
tslib_1.__exportStar(__webpack_require__(1159), exports);
tslib_1.__exportStar(__webpack_require__(1160), exports);
tslib_1.__exportStar(__webpack_require__(1161), exports);
tslib_1.__exportStar(__webpack_require__(1162), exports);
tslib_1.__exportStar(__webpack_require__(1163), exports);
tslib_1.__exportStar(__webpack_require__(1164), exports);
tslib_1.__exportStar(__webpack_require__(1165), exports);
tslib_1.__exportStar(__webpack_require__(1166), exports);
tslib_1.__exportStar(__webpack_require__(1167), exports);
tslib_1.__exportStar(__webpack_require__(1168), exports);
tslib_1.__exportStar(__webpack_require__(1169), exports);
tslib_1.__exportStar(__webpack_require__(407), exports);
tslib_1.__exportStar(__webpack_require__(1170), exports);
tslib_1.__exportStar(__webpack_require__(600), exports);
tslib_1.__exportStar(__webpack_require__(410), exports);
tslib_1.__exportStar(__webpack_require__(409), exports);
tslib_1.__exportStar(__webpack_require__(209), exports);
tslib_1.__exportStar(__webpack_require__(413), exports);
tslib_1.__exportStar(__webpack_require__(412), exports);
tslib_1.__exportStar(__webpack_require__(1171), exports);
tslib_1.__exportStar(__webpack_require__(411), exports);
tslib_1.__exportStar(__webpack_require__(428), exports);
tslib_1.__exportStar(__webpack_require__(415), exports);
tslib_1.__exportStar(__webpack_require__(416), exports);
tslib_1.__exportStar(__webpack_require__(1172), exports);
tslib_1.__exportStar(__webpack_require__(414), exports);
tslib_1.__exportStar(__webpack_require__(1173), exports);
tslib_1.__exportStar(__webpack_require__(88), exports);
tslib_1.__exportStar(__webpack_require__(1174), exports);
tslib_1.__exportStar(__webpack_require__(417), exports);
tslib_1.__exportStar(__webpack_require__(1175), exports);
tslib_1.__exportStar(__webpack_require__(90), exports);
tslib_1.__exportStar(__webpack_require__(418), exports);
tslib_1.__exportStar(__webpack_require__(419), exports);
tslib_1.__exportStar(__webpack_require__(420), exports);
tslib_1.__exportStar(__webpack_require__(421), exports);
tslib_1.__exportStar(__webpack_require__(422), exports);
tslib_1.__exportStar(__webpack_require__(423), exports);
tslib_1.__exportStar(__webpack_require__(1176), exports);
tslib_1.__exportStar(__webpack_require__(210), exports);
tslib_1.__exportStar(__webpack_require__(424), exports);
tslib_1.__exportStar(__webpack_require__(425), exports);
tslib_1.__exportStar(__webpack_require__(1177), exports);
tslib_1.__exportStar(__webpack_require__(426), exports);
tslib_1.__exportStar(__webpack_require__(427), exports);
tslib_1.__exportStar(__webpack_require__(211), exports);
tslib_1.__exportStar(__webpack_require__(1178), exports);
tslib_1.__exportStar(__webpack_require__(1179), exports);
tslib_1.__exportStar(__webpack_require__(1180), exports);
tslib_1.__exportStar(__webpack_require__(429), exports);
tslib_1.__exportStar(__webpack_require__(1181), exports);
tslib_1.__exportStar(__webpack_require__(1182), exports);
tslib_1.__exportStar(__webpack_require__(1183), exports);
tslib_1.__exportStar(__webpack_require__(1184), exports);
tslib_1.__exportStar(__webpack_require__(1185), exports);
tslib_1.__exportStar(__webpack_require__(1186), exports);
tslib_1.__exportStar(__webpack_require__(1187), exports);
tslib_1.__exportStar(__webpack_require__(1188), exports);
tslib_1.__exportStar(__webpack_require__(601), exports);
tslib_1.__exportStar(__webpack_require__(1189), exports);
tslib_1.__exportStar(__webpack_require__(602), exports);
tslib_1.__exportStar(__webpack_require__(603), exports);
tslib_1.__exportStar(__webpack_require__(1190), exports);
tslib_1.__exportStar(__webpack_require__(1191), exports);
tslib_1.__exportStar(__webpack_require__(1192), exports);
tslib_1.__exportStar(__webpack_require__(1193), exports);
tslib_1.__exportStar(__webpack_require__(1194), exports);
tslib_1.__exportStar(__webpack_require__(1195), exports);
tslib_1.__exportStar(__webpack_require__(1196), exports);
tslib_1.__exportStar(__webpack_require__(1197), exports);
tslib_1.__exportStar(__webpack_require__(1198), exports);
tslib_1.__exportStar(__webpack_require__(1199), exports);
tslib_1.__exportStar(__webpack_require__(1200), exports);
tslib_1.__exportStar(__webpack_require__(1201), exports);
tslib_1.__exportStar(__webpack_require__(1202), exports);
tslib_1.__exportStar(__webpack_require__(1203), exports);
tslib_1.__exportStar(__webpack_require__(1204), exports);
tslib_1.__exportStar(__webpack_require__(1205), exports);
tslib_1.__exportStar(__webpack_require__(1206), exports);
tslib_1.__exportStar(__webpack_require__(1207), exports);
tslib_1.__exportStar(__webpack_require__(1208), exports);
tslib_1.__exportStar(__webpack_require__(1209), exports);
tslib_1.__exportStar(__webpack_require__(1210), exports);
tslib_1.__exportStar(__webpack_require__(1211), exports);
tslib_1.__exportStar(__webpack_require__(1212), exports);
tslib_1.__exportStar(__webpack_require__(1213), exports);
tslib_1.__exportStar(__webpack_require__(1214), exports);
tslib_1.__exportStar(__webpack_require__(1215), exports);
tslib_1.__exportStar(__webpack_require__(1216), exports);
tslib_1.__exportStar(__webpack_require__(1217), exports);
tslib_1.__exportStar(__webpack_require__(1218), exports);
tslib_1.__exportStar(__webpack_require__(1219), exports);
tslib_1.__exportStar(__webpack_require__(1220), exports);
tslib_1.__exportStar(__webpack_require__(1221), exports);
tslib_1.__exportStar(__webpack_require__(1222), exports);
tslib_1.__exportStar(__webpack_require__(1223), exports);
tslib_1.__exportStar(__webpack_require__(1224), exports);
tslib_1.__exportStar(__webpack_require__(1225), exports);
tslib_1.__exportStar(__webpack_require__(1226), exports);
tslib_1.__exportStar(__webpack_require__(1227), exports);
tslib_1.__exportStar(__webpack_require__(1228), exports);
tslib_1.__exportStar(__webpack_require__(1229), exports);
tslib_1.__exportStar(__webpack_require__(1230), exports);
tslib_1.__exportStar(__webpack_require__(1231), exports);
tslib_1.__exportStar(__webpack_require__(1232), exports);
tslib_1.__exportStar(__webpack_require__(493), exports);
tslib_1.__exportStar(__webpack_require__(1233), exports);
tslib_1.__exportStar(__webpack_require__(1234), exports);
tslib_1.__exportStar(__webpack_require__(218), exports);
tslib_1.__exportStar(__webpack_require__(459), exports);
tslib_1.__exportStar(__webpack_require__(1235), exports);
tslib_1.__exportStar(__webpack_require__(494), exports);
tslib_1.__exportStar(__webpack_require__(1236), exports);
tslib_1.__exportStar(__webpack_require__(1237), exports);
tslib_1.__exportStar(__webpack_require__(1238), exports);
tslib_1.__exportStar(__webpack_require__(1239), exports);
tslib_1.__exportStar(__webpack_require__(1240), exports);
tslib_1.__exportStar(__webpack_require__(1241), exports);
tslib_1.__exportStar(__webpack_require__(1242), exports);
tslib_1.__exportStar(__webpack_require__(1243), exports);
tslib_1.__exportStar(__webpack_require__(1244), exports);
tslib_1.__exportStar(__webpack_require__(1245), exports);
tslib_1.__exportStar(__webpack_require__(1246), exports);
tslib_1.__exportStar(__webpack_require__(1247), exports);
tslib_1.__exportStar(__webpack_require__(1248), exports);
tslib_1.__exportStar(__webpack_require__(1249), exports);
tslib_1.__exportStar(__webpack_require__(1250), exports);
tslib_1.__exportStar(__webpack_require__(1251), exports);
tslib_1.__exportStar(__webpack_require__(496), exports);
tslib_1.__exportStar(__webpack_require__(1252), exports);
tslib_1.__exportStar(__webpack_require__(495), exports);
tslib_1.__exportStar(__webpack_require__(97), exports);
tslib_1.__exportStar(__webpack_require__(497), exports);
tslib_1.__exportStar(__webpack_require__(498), exports);
tslib_1.__exportStar(__webpack_require__(1253), exports);
tslib_1.__exportStar(__webpack_require__(1254), exports);
tslib_1.__exportStar(__webpack_require__(499), exports);
tslib_1.__exportStar(__webpack_require__(1255), exports);
tslib_1.__exportStar(__webpack_require__(500), exports);
tslib_1.__exportStar(__webpack_require__(501), exports);
tslib_1.__exportStar(__webpack_require__(1256), exports);
tslib_1.__exportStar(__webpack_require__(1257), exports);
tslib_1.__exportStar(__webpack_require__(502), exports);
tslib_1.__exportStar(__webpack_require__(503), exports);
tslib_1.__exportStar(__webpack_require__(507), exports);
tslib_1.__exportStar(__webpack_require__(508), exports);
tslib_1.__exportStar(__webpack_require__(504), exports);
tslib_1.__exportStar(__webpack_require__(509), exports);
tslib_1.__exportStar(__webpack_require__(511), exports);
tslib_1.__exportStar(__webpack_require__(510), exports);
tslib_1.__exportStar(__webpack_require__(506), exports);
tslib_1.__exportStar(__webpack_require__(512), exports);
tslib_1.__exportStar(__webpack_require__(1258), exports);
tslib_1.__exportStar(__webpack_require__(514), exports);
tslib_1.__exportStar(__webpack_require__(604), exports);
tslib_1.__exportStar(__webpack_require__(1259), exports);
tslib_1.__exportStar(__webpack_require__(515), exports);
tslib_1.__exportStar(__webpack_require__(505), exports);
tslib_1.__exportStar(__webpack_require__(513), exports);
tslib_1.__exportStar(__webpack_require__(516), exports);
tslib_1.__exportStar(__webpack_require__(517), exports);
tslib_1.__exportStar(__webpack_require__(1260), exports);
tslib_1.__exportStar(__webpack_require__(1261), exports);
tslib_1.__exportStar(__webpack_require__(212), exports);
tslib_1.__exportStar(__webpack_require__(518), exports);
tslib_1.__exportStar(__webpack_require__(1262), exports);
tslib_1.__exportStar(__webpack_require__(1263), exports);
tslib_1.__exportStar(__webpack_require__(1264), exports);
tslib_1.__exportStar(__webpack_require__(1265), exports);
tslib_1.__exportStar(__webpack_require__(1266), exports);
tslib_1.__exportStar(__webpack_require__(1267), exports);
tslib_1.__exportStar(__webpack_require__(1268), exports);
tslib_1.__exportStar(__webpack_require__(1269), exports);
tslib_1.__exportStar(__webpack_require__(1270), exports);
tslib_1.__exportStar(__webpack_require__(520), exports);
tslib_1.__exportStar(__webpack_require__(519), exports);
tslib_1.__exportStar(__webpack_require__(1271), exports);
tslib_1.__exportStar(__webpack_require__(522), exports);
tslib_1.__exportStar(__webpack_require__(521), exports);
tslib_1.__exportStar(__webpack_require__(524), exports);
tslib_1.__exportStar(__webpack_require__(523), exports);
tslib_1.__exportStar(__webpack_require__(526), exports);
tslib_1.__exportStar(__webpack_require__(525), exports);
tslib_1.__exportStar(__webpack_require__(527), exports);
tslib_1.__exportStar(__webpack_require__(528), exports);
tslib_1.__exportStar(__webpack_require__(530), exports);
tslib_1.__exportStar(__webpack_require__(529), exports);
tslib_1.__exportStar(__webpack_require__(531), exports);
tslib_1.__exportStar(__webpack_require__(1272), exports);
tslib_1.__exportStar(__webpack_require__(1273), exports);
tslib_1.__exportStar(__webpack_require__(1274), exports);
tslib_1.__exportStar(__webpack_require__(1275), exports);
tslib_1.__exportStar(__webpack_require__(1276), exports);
tslib_1.__exportStar(__webpack_require__(1277), exports);
tslib_1.__exportStar(__webpack_require__(1278), exports);
tslib_1.__exportStar(__webpack_require__(1279), exports);
tslib_1.__exportStar(__webpack_require__(1280), exports);
tslib_1.__exportStar(__webpack_require__(1281), exports);
tslib_1.__exportStar(__webpack_require__(1282), exports);
tslib_1.__exportStar(__webpack_require__(1283), exports);
tslib_1.__exportStar(__webpack_require__(1284), exports);
tslib_1.__exportStar(__webpack_require__(1285), exports);
tslib_1.__exportStar(__webpack_require__(1286), exports);
tslib_1.__exportStar(__webpack_require__(1287), exports);
tslib_1.__exportStar(__webpack_require__(1288), exports);
tslib_1.__exportStar(__webpack_require__(1289), exports);
tslib_1.__exportStar(__webpack_require__(98), exports);
tslib_1.__exportStar(__webpack_require__(1290), exports);
tslib_1.__exportStar(__webpack_require__(532), exports);
tslib_1.__exportStar(__webpack_require__(1291), exports);
tslib_1.__exportStar(__webpack_require__(1292), exports);
tslib_1.__exportStar(__webpack_require__(533), exports);
tslib_1.__exportStar(__webpack_require__(534), exports);
tslib_1.__exportStar(__webpack_require__(1293), exports);
tslib_1.__exportStar(__webpack_require__(1294), exports);
tslib_1.__exportStar(__webpack_require__(1295), exports);
tslib_1.__exportStar(__webpack_require__(1296), exports);
tslib_1.__exportStar(__webpack_require__(1297), exports);
tslib_1.__exportStar(__webpack_require__(1298), exports);
tslib_1.__exportStar(__webpack_require__(1299), exports);
tslib_1.__exportStar(__webpack_require__(1300), exports);
tslib_1.__exportStar(__webpack_require__(138), exports);
tslib_1.__exportStar(__webpack_require__(290), exports);
tslib_1.__exportStar(__webpack_require__(10), exports);
tslib_1.__exportStar(__webpack_require__(1301), exports);
tslib_1.__exportStar(__webpack_require__(1302), exports);
tslib_1.__exportStar(__webpack_require__(1303), exports);
tslib_1.__exportStar(__webpack_require__(1304), exports);
tslib_1.__exportStar(__webpack_require__(1305), exports);
tslib_1.__exportStar(__webpack_require__(1306), exports);
tslib_1.__exportStar(__webpack_require__(1307), exports);
tslib_1.__exportStar(__webpack_require__(1308), exports);
tslib_1.__exportStar(__webpack_require__(1309), exports);
tslib_1.__exportStar(__webpack_require__(1310), exports);
tslib_1.__exportStar(__webpack_require__(1311), exports);
tslib_1.__exportStar(__webpack_require__(1312), exports);
tslib_1.__exportStar(__webpack_require__(1313), exports);
tslib_1.__exportStar(__webpack_require__(1314), exports);
tslib_1.__exportStar(__webpack_require__(1315), exports);
tslib_1.__exportStar(__webpack_require__(1316), exports);
tslib_1.__exportStar(__webpack_require__(1317), exports);
tslib_1.__exportStar(__webpack_require__(1318), exports);
tslib_1.__exportStar(__webpack_require__(1319), exports);
tslib_1.__exportStar(__webpack_require__(1320), exports);
tslib_1.__exportStar(__webpack_require__(1321), exports);
tslib_1.__exportStar(__webpack_require__(549), exports);
tslib_1.__exportStar(__webpack_require__(1322), exports);
tslib_1.__exportStar(__webpack_require__(1323), exports);
tslib_1.__exportStar(__webpack_require__(1324), exports);
tslib_1.__exportStar(__webpack_require__(550), exports);
tslib_1.__exportStar(__webpack_require__(242), exports);
tslib_1.__exportStar(__webpack_require__(1325), exports);
tslib_1.__exportStar(__webpack_require__(551), exports);
tslib_1.__exportStar(__webpack_require__(552), exports);
tslib_1.__exportStar(__webpack_require__(1326), exports);
tslib_1.__exportStar(__webpack_require__(1327), exports);
tslib_1.__exportStar(__webpack_require__(1328), exports);
tslib_1.__exportStar(__webpack_require__(553), exports);
tslib_1.__exportStar(__webpack_require__(554), exports);
tslib_1.__exportStar(__webpack_require__(1329), exports);
tslib_1.__exportStar(__webpack_require__(1330), exports);
tslib_1.__exportStar(__webpack_require__(237), exports);
tslib_1.__exportStar(__webpack_require__(1331), exports);
tslib_1.__exportStar(__webpack_require__(1332), exports);
tslib_1.__exportStar(__webpack_require__(1333), exports);
tslib_1.__exportStar(__webpack_require__(1334), exports);
tslib_1.__exportStar(__webpack_require__(1335), exports);
tslib_1.__exportStar(__webpack_require__(1336), exports);
tslib_1.__exportStar(__webpack_require__(1337), exports);
tslib_1.__exportStar(__webpack_require__(1338), exports);
tslib_1.__exportStar(__webpack_require__(1339), exports);
tslib_1.__exportStar(__webpack_require__(1340), exports);
tslib_1.__exportStar(__webpack_require__(1341), exports);
tslib_1.__exportStar(__webpack_require__(1342), exports);
tslib_1.__exportStar(__webpack_require__(1343), exports);
tslib_1.__exportStar(__webpack_require__(1344), exports);
tslib_1.__exportStar(__webpack_require__(1345), exports);
tslib_1.__exportStar(__webpack_require__(1346), exports);
tslib_1.__exportStar(__webpack_require__(240), exports);
tslib_1.__exportStar(__webpack_require__(536), exports);
tslib_1.__exportStar(__webpack_require__(535), exports);
tslib_1.__exportStar(__webpack_require__(1347), exports);
tslib_1.__exportStar(__webpack_require__(538), exports);
tslib_1.__exportStar(__webpack_require__(1348), exports);
tslib_1.__exportStar(__webpack_require__(238), exports);
tslib_1.__exportStar(__webpack_require__(239), exports);
tslib_1.__exportStar(__webpack_require__(1349), exports);
tslib_1.__exportStar(__webpack_require__(537), exports);
tslib_1.__exportStar(__webpack_require__(1350), exports);
tslib_1.__exportStar(__webpack_require__(1351), exports);
tslib_1.__exportStar(__webpack_require__(539), exports);
tslib_1.__exportStar(__webpack_require__(540), exports);
tslib_1.__exportStar(__webpack_require__(1352), exports);
tslib_1.__exportStar(__webpack_require__(1353), exports);
tslib_1.__exportStar(__webpack_require__(541), exports);
tslib_1.__exportStar(__webpack_require__(542), exports);
tslib_1.__exportStar(__webpack_require__(1354), exports);
tslib_1.__exportStar(__webpack_require__(543), exports);
tslib_1.__exportStar(__webpack_require__(1355), exports);
tslib_1.__exportStar(__webpack_require__(1356), exports);
tslib_1.__exportStar(__webpack_require__(1357), exports);
tslib_1.__exportStar(__webpack_require__(1358), exports);
tslib_1.__exportStar(__webpack_require__(1359), exports);
tslib_1.__exportStar(__webpack_require__(1360), exports);
tslib_1.__exportStar(__webpack_require__(1361), exports);
tslib_1.__exportStar(__webpack_require__(1362), exports);
tslib_1.__exportStar(__webpack_require__(1363), exports);
tslib_1.__exportStar(__webpack_require__(1364), exports);
tslib_1.__exportStar(__webpack_require__(1365), exports);
tslib_1.__exportStar(__webpack_require__(1366), exports);
tslib_1.__exportStar(__webpack_require__(1367), exports);
tslib_1.__exportStar(__webpack_require__(1368), exports);
tslib_1.__exportStar(__webpack_require__(1369), exports);
tslib_1.__exportStar(__webpack_require__(1370), exports);
tslib_1.__exportStar(__webpack_require__(1371), exports);
tslib_1.__exportStar(__webpack_require__(1372), exports);
tslib_1.__exportStar(__webpack_require__(1373), exports);
tslib_1.__exportStar(__webpack_require__(1374), exports);
tslib_1.__exportStar(__webpack_require__(431), exports);
tslib_1.__exportStar(__webpack_require__(606), exports);
tslib_1.__exportStar(__webpack_require__(433), exports);
tslib_1.__exportStar(__webpack_require__(1375), exports);
tslib_1.__exportStar(__webpack_require__(432), exports);
tslib_1.__exportStar(__webpack_require__(434), exports);
tslib_1.__exportStar(__webpack_require__(607), exports);
tslib_1.__exportStar(__webpack_require__(436), exports);
tslib_1.__exportStar(__webpack_require__(1376), exports);
tslib_1.__exportStar(__webpack_require__(435), exports);
tslib_1.__exportStar(__webpack_require__(608), exports);
tslib_1.__exportStar(__webpack_require__(437), exports);
tslib_1.__exportStar(__webpack_require__(609), exports);
tslib_1.__exportStar(__webpack_require__(439), exports);
tslib_1.__exportStar(__webpack_require__(1377), exports);
tslib_1.__exportStar(__webpack_require__(438), exports);
tslib_1.__exportStar(__webpack_require__(1378), exports);
tslib_1.__exportStar(__webpack_require__(75), exports);
tslib_1.__exportStar(__webpack_require__(1379), exports);
tslib_1.__exportStar(__webpack_require__(1380), exports);
tslib_1.__exportStar(__webpack_require__(1381), exports);
tslib_1.__exportStar(__webpack_require__(1382), exports);
tslib_1.__exportStar(__webpack_require__(1383), exports);
tslib_1.__exportStar(__webpack_require__(1384), exports);
tslib_1.__exportStar(__webpack_require__(1385), exports);
tslib_1.__exportStar(__webpack_require__(1386), exports);
tslib_1.__exportStar(__webpack_require__(1387), exports);
tslib_1.__exportStar(__webpack_require__(1388), exports);
tslib_1.__exportStar(__webpack_require__(139), exports);
tslib_1.__exportStar(__webpack_require__(294), exports);
tslib_1.__exportStar(__webpack_require__(295), exports);
tslib_1.__exportStar(__webpack_require__(291), exports);
tslib_1.__exportStar(__webpack_require__(296), exports);
tslib_1.__exportStar(__webpack_require__(292), exports);
tslib_1.__exportStar(__webpack_require__(1389), exports);
tslib_1.__exportStar(__webpack_require__(297), exports);
tslib_1.__exportStar(__webpack_require__(49), exports);
tslib_1.__exportStar(__webpack_require__(293), exports);
tslib_1.__exportStar(__webpack_require__(1390), exports);
tslib_1.__exportStar(__webpack_require__(1391), exports);
tslib_1.__exportStar(__webpack_require__(1392), exports);
tslib_1.__exportStar(__webpack_require__(1393), exports);
tslib_1.__exportStar(__webpack_require__(1394), exports);
tslib_1.__exportStar(__webpack_require__(1395), exports);
tslib_1.__exportStar(__webpack_require__(1396), exports);
tslib_1.__exportStar(__webpack_require__(1397), exports);
tslib_1.__exportStar(__webpack_require__(1398), exports);
tslib_1.__exportStar(__webpack_require__(1399), exports);
tslib_1.__exportStar(__webpack_require__(1400), exports);
tslib_1.__exportStar(__webpack_require__(1401), exports);
tslib_1.__exportStar(__webpack_require__(1402), exports);
tslib_1.__exportStar(__webpack_require__(1403), exports);
tslib_1.__exportStar(__webpack_require__(216), exports);
tslib_1.__exportStar(__webpack_require__(454), exports);
tslib_1.__exportStar(__webpack_require__(610), exports);
tslib_1.__exportStar(__webpack_require__(1404), exports);
tslib_1.__exportStar(__webpack_require__(455), exports);
tslib_1.__exportStar(__webpack_require__(1405), exports);
tslib_1.__exportStar(__webpack_require__(1406), exports);
tslib_1.__exportStar(__webpack_require__(1407), exports);
tslib_1.__exportStar(__webpack_require__(1408), exports);
tslib_1.__exportStar(__webpack_require__(456), exports);
tslib_1.__exportStar(__webpack_require__(1409), exports);
tslib_1.__exportStar(__webpack_require__(1410), exports);
tslib_1.__exportStar(__webpack_require__(76), exports);
tslib_1.__exportStar(__webpack_require__(1411), exports);
tslib_1.__exportStar(__webpack_require__(1412), exports);
tslib_1.__exportStar(__webpack_require__(1413), exports);
tslib_1.__exportStar(__webpack_require__(1414), exports);
tslib_1.__exportStar(__webpack_require__(1415), exports);
tslib_1.__exportStar(__webpack_require__(546), exports);
tslib_1.__exportStar(__webpack_require__(1416), exports);
tslib_1.__exportStar(__webpack_require__(544), exports);
tslib_1.__exportStar(__webpack_require__(1417), exports);
tslib_1.__exportStar(__webpack_require__(545), exports);
tslib_1.__exportStar(__webpack_require__(241), exports);
tslib_1.__exportStar(__webpack_require__(1418), exports);
tslib_1.__exportStar(__webpack_require__(457), exports);
tslib_1.__exportStar(__webpack_require__(217), exports);
tslib_1.__exportStar(__webpack_require__(1419), exports);
tslib_1.__exportStar(__webpack_require__(1420), exports);
tslib_1.__exportStar(__webpack_require__(1421), exports);
tslib_1.__exportStar(__webpack_require__(1422), exports);
tslib_1.__exportStar(__webpack_require__(548), exports);
tslib_1.__exportStar(__webpack_require__(1423), exports);
tslib_1.__exportStar(__webpack_require__(547), exports);
tslib_1.__exportStar(__webpack_require__(1424), exports);
tslib_1.__exportStar(__webpack_require__(1425), exports);
tslib_1.__exportStar(__webpack_require__(1426), exports);
tslib_1.__exportStar(__webpack_require__(1427), exports);
tslib_1.__exportStar(__webpack_require__(1428), exports);
tslib_1.__exportStar(__webpack_require__(1429), exports);
tslib_1.__exportStar(__webpack_require__(1430), exports);
tslib_1.__exportStar(__webpack_require__(1431), exports);
tslib_1.__exportStar(__webpack_require__(1432), exports);
tslib_1.__exportStar(__webpack_require__(1433), exports);
tslib_1.__exportStar(__webpack_require__(1434), exports);
tslib_1.__exportStar(__webpack_require__(1435), exports);
tslib_1.__exportStar(__webpack_require__(1436), exports);
tslib_1.__exportStar(__webpack_require__(1437), exports);
tslib_1.__exportStar(__webpack_require__(1438), exports);
tslib_1.__exportStar(__webpack_require__(1439), exports);
tslib_1.__exportStar(__webpack_require__(1440), exports);
tslib_1.__exportStar(__webpack_require__(1441), exports);
tslib_1.__exportStar(__webpack_require__(1442), exports);
tslib_1.__exportStar(__webpack_require__(1443), exports);
tslib_1.__exportStar(__webpack_require__(1444), exports);
tslib_1.__exportStar(__webpack_require__(1445), exports);
tslib_1.__exportStar(__webpack_require__(1446), exports);
tslib_1.__exportStar(__webpack_require__(1447), exports);
tslib_1.__exportStar(__webpack_require__(1448), exports);
tslib_1.__exportStar(__webpack_require__(1449), exports);
tslib_1.__exportStar(__webpack_require__(1450), exports);
tslib_1.__exportStar(__webpack_require__(1451), exports);
tslib_1.__exportStar(__webpack_require__(1452), exports);
tslib_1.__exportStar(__webpack_require__(1453), exports);
tslib_1.__exportStar(__webpack_require__(1454), exports);
tslib_1.__exportStar(__webpack_require__(1455), exports);
tslib_1.__exportStar(__webpack_require__(1456), exports);
tslib_1.__exportStar(__webpack_require__(1457), exports);
tslib_1.__exportStar(__webpack_require__(1458), exports);
tslib_1.__exportStar(__webpack_require__(1459), exports);
tslib_1.__exportStar(__webpack_require__(1460), exports);
tslib_1.__exportStar(__webpack_require__(1461), exports);
tslib_1.__exportStar(__webpack_require__(1462), exports);
tslib_1.__exportStar(__webpack_require__(1463), exports);
tslib_1.__exportStar(__webpack_require__(461), exports);
tslib_1.__exportStar(__webpack_require__(611), exports);
tslib_1.__exportStar(__webpack_require__(460), exports);
tslib_1.__exportStar(__webpack_require__(1464), exports);
tslib_1.__exportStar(__webpack_require__(219), exports);
tslib_1.__exportStar(__webpack_require__(463), exports);
tslib_1.__exportStar(__webpack_require__(612), exports);
tslib_1.__exportStar(__webpack_require__(462), exports);
tslib_1.__exportStar(__webpack_require__(1465), exports);
tslib_1.__exportStar(__webpack_require__(225), exports);
tslib_1.__exportStar(__webpack_require__(464), exports);
tslib_1.__exportStar(__webpack_require__(466), exports);
tslib_1.__exportStar(__webpack_require__(467), exports);
tslib_1.__exportStar(__webpack_require__(465), exports);
tslib_1.__exportStar(__webpack_require__(1466), exports);
tslib_1.__exportStar(__webpack_require__(1467), exports);
tslib_1.__exportStar(__webpack_require__(468), exports);
tslib_1.__exportStar(__webpack_require__(220), exports);
tslib_1.__exportStar(__webpack_require__(221), exports);
tslib_1.__exportStar(__webpack_require__(222), exports);
tslib_1.__exportStar(__webpack_require__(246), exports);
tslib_1.__exportStar(__webpack_require__(223), exports);
tslib_1.__exportStar(__webpack_require__(224), exports);
tslib_1.__exportStar(__webpack_require__(247), exports);
tslib_1.__exportStar(__webpack_require__(226), exports);
tslib_1.__exportStar(__webpack_require__(1468), exports);
tslib_1.__exportStar(__webpack_require__(1469), exports);
tslib_1.__exportStar(__webpack_require__(1470), exports);
tslib_1.__exportStar(__webpack_require__(1471), exports);
tslib_1.__exportStar(__webpack_require__(1472), exports);
tslib_1.__exportStar(__webpack_require__(1473), exports);
tslib_1.__exportStar(__webpack_require__(1474), exports);
tslib_1.__exportStar(__webpack_require__(1475), exports);
tslib_1.__exportStar(__webpack_require__(1476), exports);
tslib_1.__exportStar(__webpack_require__(1477), exports);
tslib_1.__exportStar(__webpack_require__(1478), exports);
tslib_1.__exportStar(__webpack_require__(1479), exports);
tslib_1.__exportStar(__webpack_require__(1480), exports);
tslib_1.__exportStar(__webpack_require__(1481), exports);
tslib_1.__exportStar(__webpack_require__(1482), exports);
tslib_1.__exportStar(__webpack_require__(1483), exports);
tslib_1.__exportStar(__webpack_require__(1484), exports);
tslib_1.__exportStar(__webpack_require__(1485), exports);
tslib_1.__exportStar(__webpack_require__(1486), exports);
tslib_1.__exportStar(__webpack_require__(1487), exports);
tslib_1.__exportStar(__webpack_require__(1488), exports);
tslib_1.__exportStar(__webpack_require__(1489), exports);
tslib_1.__exportStar(__webpack_require__(1490), exports);
tslib_1.__exportStar(__webpack_require__(1491), exports);
tslib_1.__exportStar(__webpack_require__(1492), exports);
tslib_1.__exportStar(__webpack_require__(1493), exports);
tslib_1.__exportStar(__webpack_require__(1494), exports);
tslib_1.__exportStar(__webpack_require__(1495), exports);
tslib_1.__exportStar(__webpack_require__(1496), exports);
tslib_1.__exportStar(__webpack_require__(1497), exports);
tslib_1.__exportStar(__webpack_require__(1498), exports);
tslib_1.__exportStar(__webpack_require__(471), exports);
tslib_1.__exportStar(__webpack_require__(470), exports);
tslib_1.__exportStar(__webpack_require__(1499), exports);
tslib_1.__exportStar(__webpack_require__(469), exports);
tslib_1.__exportStar(__webpack_require__(1500), exports);
tslib_1.__exportStar(__webpack_require__(93), exports);
tslib_1.__exportStar(__webpack_require__(1501), exports);
tslib_1.__exportStar(__webpack_require__(1502), exports);
tslib_1.__exportStar(__webpack_require__(1503), exports);
tslib_1.__exportStar(__webpack_require__(1504), exports);
tslib_1.__exportStar(__webpack_require__(472), exports);
tslib_1.__exportStar(__webpack_require__(1505), exports);
tslib_1.__exportStar(__webpack_require__(1506), exports);
tslib_1.__exportStar(__webpack_require__(1507), exports);
tslib_1.__exportStar(__webpack_require__(473), exports);
tslib_1.__exportStar(__webpack_require__(1508), exports);
tslib_1.__exportStar(__webpack_require__(474), exports);
tslib_1.__exportStar(__webpack_require__(228), exports);
tslib_1.__exportStar(__webpack_require__(476), exports);
tslib_1.__exportStar(__webpack_require__(1509), exports);
tslib_1.__exportStar(__webpack_require__(229), exports);
tslib_1.__exportStar(__webpack_require__(475), exports);
tslib_1.__exportStar(__webpack_require__(1510), exports);
tslib_1.__exportStar(__webpack_require__(227), exports);
tslib_1.__exportStar(__webpack_require__(1511), exports);
tslib_1.__exportStar(__webpack_require__(94), exports);
tslib_1.__exportStar(__webpack_require__(1512), exports);
tslib_1.__exportStar(__webpack_require__(1513), exports);
tslib_1.__exportStar(__webpack_require__(1514), exports);
tslib_1.__exportStar(__webpack_require__(1515), exports);
tslib_1.__exportStar(__webpack_require__(1516), exports);
tslib_1.__exportStar(__webpack_require__(1517), exports);
tslib_1.__exportStar(__webpack_require__(1518), exports);
tslib_1.__exportStar(__webpack_require__(1519), exports);
tslib_1.__exportStar(__webpack_require__(1520), exports);
tslib_1.__exportStar(__webpack_require__(1521), exports);
tslib_1.__exportStar(__webpack_require__(1522), exports);
tslib_1.__exportStar(__webpack_require__(1523), exports);
tslib_1.__exportStar(__webpack_require__(1524), exports);
tslib_1.__exportStar(__webpack_require__(477), exports);
tslib_1.__exportStar(__webpack_require__(231), exports);
tslib_1.__exportStar(__webpack_require__(479), exports);
tslib_1.__exportStar(__webpack_require__(1525), exports);
tslib_1.__exportStar(__webpack_require__(232), exports);
tslib_1.__exportStar(__webpack_require__(478), exports);
tslib_1.__exportStar(__webpack_require__(1526), exports);
tslib_1.__exportStar(__webpack_require__(481), exports);
tslib_1.__exportStar(__webpack_require__(480), exports);
tslib_1.__exportStar(__webpack_require__(230), exports);
tslib_1.__exportStar(__webpack_require__(1527), exports);
tslib_1.__exportStar(__webpack_require__(613), exports);
tslib_1.__exportStar(__webpack_require__(482), exports);
tslib_1.__exportStar(__webpack_require__(1528), exports);
tslib_1.__exportStar(__webpack_require__(484), exports);
tslib_1.__exportStar(__webpack_require__(483), exports);
tslib_1.__exportStar(__webpack_require__(485), exports);
tslib_1.__exportStar(__webpack_require__(92), exports);
tslib_1.__exportStar(__webpack_require__(1529), exports);
tslib_1.__exportStar(__webpack_require__(1530), exports);
tslib_1.__exportStar(__webpack_require__(486), exports);
tslib_1.__exportStar(__webpack_require__(487), exports);
tslib_1.__exportStar(__webpack_require__(1531), exports);
tslib_1.__exportStar(__webpack_require__(1532), exports);
tslib_1.__exportStar(__webpack_require__(1533), exports);
tslib_1.__exportStar(__webpack_require__(1534), exports);
tslib_1.__exportStar(__webpack_require__(1535), exports);
tslib_1.__exportStar(__webpack_require__(1536), exports);
tslib_1.__exportStar(__webpack_require__(1537), exports);
tslib_1.__exportStar(__webpack_require__(1538), exports);
tslib_1.__exportStar(__webpack_require__(1539), exports);
tslib_1.__exportStar(__webpack_require__(1540), exports);
tslib_1.__exportStar(__webpack_require__(1541), exports);
tslib_1.__exportStar(__webpack_require__(1542), exports);
tslib_1.__exportStar(__webpack_require__(488), exports);
tslib_1.__exportStar(__webpack_require__(233), exports);
tslib_1.__exportStar(__webpack_require__(1543), exports);
tslib_1.__exportStar(__webpack_require__(489), exports);
tslib_1.__exportStar(__webpack_require__(1544), exports);
tslib_1.__exportStar(__webpack_require__(490), exports);
tslib_1.__exportStar(__webpack_require__(1545), exports);
tslib_1.__exportStar(__webpack_require__(491), exports);
tslib_1.__exportStar(__webpack_require__(1546), exports);
tslib_1.__exportStar(__webpack_require__(492), exports);
tslib_1.__exportStar(__webpack_require__(1547), exports);
tslib_1.__exportStar(__webpack_require__(1548), exports);
tslib_1.__exportStar(__webpack_require__(1549), exports);
tslib_1.__exportStar(__webpack_require__(1550), exports);
tslib_1.__exportStar(__webpack_require__(1551), exports);
tslib_1.__exportStar(__webpack_require__(1552), exports);
tslib_1.__exportStar(__webpack_require__(1553), exports);
tslib_1.__exportStar(__webpack_require__(1554), exports);
tslib_1.__exportStar(__webpack_require__(444), exports);
tslib_1.__exportStar(__webpack_require__(1555), exports);
tslib_1.__exportStar(__webpack_require__(445), exports);
tslib_1.__exportStar(__webpack_require__(1556), exports);
tslib_1.__exportStar(__webpack_require__(1557), exports);
tslib_1.__exportStar(__webpack_require__(1558), exports);
tslib_1.__exportStar(__webpack_require__(446), exports);
tslib_1.__exportStar(__webpack_require__(1559), exports);
tslib_1.__exportStar(__webpack_require__(1560), exports);
tslib_1.__exportStar(__webpack_require__(614), exports);
tslib_1.__exportStar(__webpack_require__(447), exports);
tslib_1.__exportStar(__webpack_require__(1561), exports);
tslib_1.__exportStar(__webpack_require__(448), exports);
tslib_1.__exportStar(__webpack_require__(1562), exports);
tslib_1.__exportStar(__webpack_require__(1563), exports);
tslib_1.__exportStar(__webpack_require__(449), exports);
tslib_1.__exportStar(__webpack_require__(450), exports);
tslib_1.__exportStar(__webpack_require__(1564), exports);
tslib_1.__exportStar(__webpack_require__(213), exports);
tslib_1.__exportStar(__webpack_require__(1565), exports);
tslib_1.__exportStar(__webpack_require__(451), exports);
tslib_1.__exportStar(__webpack_require__(1566), exports);
tslib_1.__exportStar(__webpack_require__(615), exports);
tslib_1.__exportStar(__webpack_require__(616), exports);
tslib_1.__exportStar(__webpack_require__(1567), exports);
tslib_1.__exportStar(__webpack_require__(214), exports);
tslib_1.__exportStar(__webpack_require__(1568), exports);
tslib_1.__exportStar(__webpack_require__(452), exports);
tslib_1.__exportStar(__webpack_require__(1569), exports);
tslib_1.__exportStar(__webpack_require__(215), exports);
tslib_1.__exportStar(__webpack_require__(41), exports);
tslib_1.__exportStar(__webpack_require__(1570), exports);
tslib_1.__exportStar(__webpack_require__(453), exports);
tslib_1.__exportStar(__webpack_require__(1571), exports);
tslib_1.__exportStar(__webpack_require__(1572), exports);
tslib_1.__exportStar(__webpack_require__(1573), exports);
tslib_1.__exportStar(__webpack_require__(1574), exports);
tslib_1.__exportStar(__webpack_require__(1575), exports);
tslib_1.__exportStar(__webpack_require__(1576), exports);
tslib_1.__exportStar(__webpack_require__(1577), exports);
tslib_1.__exportStar(__webpack_require__(1578), exports);
tslib_1.__exportStar(__webpack_require__(95), exports);
tslib_1.__exportStar(__webpack_require__(234), exports);
tslib_1.__exportStar(__webpack_require__(1579), exports);
tslib_1.__exportStar(__webpack_require__(617), exports);
tslib_1.__exportStar(__webpack_require__(96), exports);
tslib_1.__exportStar(__webpack_require__(1580), exports);
tslib_1.__exportStar(__webpack_require__(1581), exports);
tslib_1.__exportStar(__webpack_require__(1582), exports);
tslib_1.__exportStar(__webpack_require__(1583), exports);
tslib_1.__exportStar(__webpack_require__(1584), exports);
tslib_1.__exportStar(__webpack_require__(1585), exports);
tslib_1.__exportStar(__webpack_require__(1586), exports);
tslib_1.__exportStar(__webpack_require__(1587), exports);
tslib_1.__exportStar(__webpack_require__(236), exports);
tslib_1.__exportStar(__webpack_require__(1588), exports);
tslib_1.__exportStar(__webpack_require__(618), exports);
tslib_1.__exportStar(__webpack_require__(235), exports);
tslib_1.__exportStar(__webpack_require__(1589), exports);
tslib_1.__exportStar(__webpack_require__(1590), exports);
tslib_1.__exportStar(__webpack_require__(27), exports);
tslib_1.__exportStar(__webpack_require__(605), exports);
tslib_1.__exportStar(__webpack_require__(1591), exports);
tslib_1.__exportStar(__webpack_require__(201), exports);
tslib_1.__exportStar(__webpack_require__(619), exports);
tslib_1.__exportStar(__webpack_require__(1592), exports);
tslib_1.__exportStar(__webpack_require__(442), exports);


/***/ }),
/* 621 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 622 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__622__;

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IlandDirectGrantAuthProvider = void 0;
const tslib_1 = __webpack_require__(5);
const rxjs_1 = __webpack_require__(37);
const axios_1 = __webpack_require__(115);
const abstract_auth_provider_1 = __webpack_require__(112);
const auth_provider_interfaces_1 = __webpack_require__(113);
const querystring = __webpack_require__(624);
const TOKEN_REFRESH_THRESHOLD = 10;
class IlandDirectGrantAuthProvider extends abstract_auth_provider_1.IlandAbstractAuthProvider {
    constructor(_config) {
        super();
        this._config = _config;
        this._onTokenRefresh = () => { };
        this._tokenObservable = new rxjs_1.Observable((observable) => {
            this.getToken()
                .then(token => {
                observable.next(token);
            })
                .catch(e => {
                observable.error(e);
            });
            this._onTokenRefresh = () => {
                if (this._token !== undefined) {
                    observable.next(this._token.access_token);
                }
            };
        });
    }
    static _epochSeconds() {
        return new Date().getTime() / 1000;
    }
    getToken() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const token = this._token;
            if (token === undefined) {
                // login required
                return this._login().then(token => {
                    return token.access_token;
                });
            }
            else {
                if (IlandDirectGrantAuthProvider._epochSeconds() >= token.expires_at - TOKEN_REFRESH_THRESHOLD) {
                    // refresh required
                    return this._refreshToken()
                        .catch(() => tslib_1.__awaiter(this, void 0, void 0, function* () {
                        return this._login();
                    }))
                        .then((token) => {
                        return token.access_token;
                    });
                }
                else {
                    // no refresh necessary
                    return new Promise(resolve => {
                        resolve(token.access_token);
                    });
                }
            }
        });
    }
    /**
     * Return the currently used access token synchronously.
     * @return {string | undefined}
     */
    getTokenSync() {
        return this._token && this._token.access_token ? this._token.access_token : undefined;
    }
    logout() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const url = this._config.url || auth_provider_interfaces_1.DEFAULT_AUTH_URL;
            const promise = axios_1.default.post(`${url}/realms/${auth_provider_interfaces_1.DEFAULT_REALM}/protocol/openid-connect/logout`, querystring.stringify({
                client_id: this._config.clientId,
                client_secret: this._config.clientSecret,
                refresh_token: this._token.refresh_token
            }));
            return promise.then(() => {
                this._token.expires_in = 0;
                this._token.expires_at = IlandDirectGrantAuthProvider._epochSeconds();
            }, (reason) => {
                if (reason.response) {
                    throw new Error(`${reason.response.status}: ${JSON.stringify(reason.response.data)}`);
                }
                else {
                    throw new Error(reason.code);
                }
            });
        });
    }
    getAuthenticatedUsername() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.getToken().then(() => {
                return this._config.username;
            });
        });
    }
    _refreshToken() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const url = this._config.url || auth_provider_interfaces_1.DEFAULT_AUTH_URL;
            const promise = axios_1.default.post(`${url}/realms/${auth_provider_interfaces_1.DEFAULT_REALM}/protocol/openid-connect/token`, querystring.stringify({
                client_id: this._config.clientId,
                client_secret: this._config.clientSecret,
                refresh_token: this._token.refresh_token,
                grant_type: 'refresh_token'
            }));
            return promise.then(response => {
                this._token = response.data;
                this._token.expires_at = this._token.expires_in + IlandDirectGrantAuthProvider._epochSeconds();
                if (this._onTokenRefresh) {
                    this._onTokenRefresh();
                }
                return this._token;
            });
        });
    }
    _login() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const url = this._config.url || auth_provider_interfaces_1.DEFAULT_AUTH_URL;
            const promise = axios_1.default.post(`${url}/realms/${auth_provider_interfaces_1.DEFAULT_REALM}/protocol/openid-connect/token`, querystring.stringify({
                client_id: this._config.clientId,
                client_secret: this._config.clientSecret,
                username: this._config.username,
                password: this._config.password,
                grant_type: 'password'
            }));
            return promise
                .then(response => {
                this._token = response.data;
                this._token.expires_at = this._token.expires_in + IlandDirectGrantAuthProvider._epochSeconds();
                return this._token;
            })
                .catch((reason) => {
                if (reason.response) {
                    throw new Error(`${reason.response.status}: ${JSON.stringify(reason.response.data)}`);
                }
                else {
                    throw new Error(reason.code);
                }
            });
        });
    }
}
exports.IlandDirectGrantAuthProvider = IlandDirectGrantAuthProvider;


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(625);
exports.encode = exports.stringify = __webpack_require__(626);


/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IlandSessionAuthProvider = void 0;
const tslib_1 = __webpack_require__(5);
const browser_auth_provider_1 = __webpack_require__(249);
/**
 * Session Authorization provider
 */
class IlandSessionAuthProvider extends browser_auth_provider_1.IlandBrowserAuthProvider {
    constructor(config) {
        super(config);
        this._lastUserInteraction = new Date();
        this._eventListeners = []; // An array of logged EventListeners.
        this._sessionTimeout = 600; // 10min by default. in seconds.
        // Whether or not we want to enable the click listener. Default to true.
        this._enableClickListener = true;
        // If the dev want to use a specific target to bind the event listeners to. Default to document.body
        this._listenerDefaultTarget = document.body;
        if (config.sessionTimeout !== undefined) {
            this._sessionTimeout = config.sessionTimeout;
        }
        if (config.enableClickListener !== undefined) {
            this._enableClickListener = config.enableClickListener;
        }
        if (config.listenerDefaultTarget !== undefined) {
            this._listenerDefaultTarget = config.listenerDefaultTarget;
        }
        if (this._enableClickListener) {
            this.addEventListener('click', () => {
                this.logUserInteraction();
            }, true);
        }
    }
    /**
     * Get the token. We're checking if the user have log interactions and we will just return an automatic refreshed
     * token if he do interact. Otherwise, we just logout the user.
     * @returns {Promise<string | undefined>}
     */
    getToken() {
        const _super = Object.create(null, {
            getToken: { get: () => super.getToken }
        });
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const now = new Date().getTime();
            // Date.getTime() is in milliseconds, so we need to convert _sessionTimeout into milliseconds as well.
            if (this._lastUserInteraction.getTime() + this._sessionTimeout * 1000 < now) {
                return this.logout();
            }
            else {
                return _super.getToken.call(this);
            }
        });
    }
    /**
     * Log user interaction in order to update the token if needed.
     */
    logUserInteraction() {
        this._lastUserInteraction = new Date();
    }
    /**
     * Add an event listener.
     * @param type
     * @param listener
     * @param options
     * @param target
     */
    addEventListener(type, listener, options, target) {
        const element = target || this._listenerDefaultTarget;
        if (this.getListenerIndex(type, element) === -1) {
            this._eventListeners.push({
                type: type,
                listener: listener,
                options: options,
                target: element
            });
            element.addEventListener(type, listener, options);
        }
    }
    /**
     * Remove a specific event listener.
     * @param type
     * @param target
     */
    removeEventListener(type, target) {
        const element = target || this._listenerDefaultTarget;
        const listenerIndex = this.getListenerIndex(type, element);
        if (listenerIndex >= 0) {
            element.removeEventListener(type, this._eventListeners[listenerIndex].listener, this._eventListeners[listenerIndex].options);
            this._eventListeners.splice(listenerIndex, 1);
        }
    }
    /**
     * We remove all event listeners that we may have logged when we destroy the class.
     */
    destroy() {
        this._eventListeners.forEach(listener => {
            this.removeEventListener(listener.type, listener.target);
        });
    }
    /**
     * Get the event listener index. Return -1 if not found.
     * @param type
     * @param target
     * @private
     * @returns {number}
     */
    getListenerIndex(type, target) {
        return this._eventListeners.findIndex(listener => {
            return listener.type === type && target === listener.target;
        });
    }
}
exports.IlandSessionAuthProvider = IlandSessionAuthProvider;


/***/ }),
/* 628 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__628__;

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupPriority = void 0;
/**
 * Backup Group Priority Enum.
 */
var BackupGroupPriority;
(function (BackupGroupPriority) {
    BackupGroupPriority["LOW"] = "LOW";
    BackupGroupPriority["MEDIUM"] = "MEDIUM";
    BackupGroupPriority["HIGH"] = "HIGH";
})(BackupGroupPriority = exports.BackupGroupPriority || (exports.BackupGroupPriority = {}));


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupQosType = void 0;
/**
 * Backup Group Qos Type Enum.
 */
var BackupGroupQosType;
(function (BackupGroupQosType) {
    BackupGroupQosType["HDD"] = "HDD";
    BackupGroupQosType["SSD"] = "SSD";
})(BackupGroupQosType = exports.BackupGroupQosType || (exports.BackupGroupQosType = {}));


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupStorageMetric = void 0;
/**
 * Backup group storage metric enum.
 */
var BackupGroupStorageMetric;
(function (BackupGroupStorageMetric) {
    BackupGroupStorageMetric["TOTAL_DATA_IN"] = "TOTAL_DATA_IN";
    BackupGroupStorageMetric["TOTAL_LOGICAL_USAGE"] = "TOTAL_LOGICAL_USAGE";
})(BackupGroupStorageMetric = exports.BackupGroupStorageMetric || (exports.BackupGroupStorageMetric = {}));


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VCloudProtectionSourceType = void 0;
/**
 * VCloud Protection Source Type Enum.
 */
var VCloudProtectionSourceType;
(function (VCloudProtectionSourceType) {
    VCloudProtectionSourceType["VM"] = "VM";
    VCloudProtectionSourceType["VAPP"] = "VAPP";
    VCloudProtectionSourceType["VDC"] = "VDC";
})(VCloudProtectionSourceType = exports.VCloudProtectionSourceType || (exports.VCloudProtectionSourceType = {}));


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcBackupStorageMetric = void 0;
/**
 * vDC backup storage metric enum.
 */
var VdcBackupStorageMetric;
(function (VdcBackupStorageMetric) {
    VdcBackupStorageMetric["TOTAL_DATA_IN"] = "TOTAL_DATA_IN";
    VdcBackupStorageMetric["TOTAL_LOGICAL_USAGE"] = "TOTAL_LOGICAL_USAGE";
})(VdcBackupStorageMetric = exports.VdcBackupStorageMetric || (exports.VdcBackupStorageMetric = {}));


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupDeleteRequest = void 0;
/**
 * Backup Group Delete Request.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupDeleteRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                delete_snapshots: firstParam
            };
        }
        else if (firstParam instanceof BackupGroupDeleteRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get delete snapshots.
     * @returns {boolean | null}
     */
    get deleteSnapshots() {
        var _a;
        return (_a = this._json.delete_snapshots) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupDeleteRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupDeleteRequest = BackupGroupDeleteRequest;


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupList = void 0;
const backup_group_1 = __webpack_require__(46);
/**
 * Backup Group List.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<BackupGroup>}
     */
    get data() {
        var _a;
        return (_a = this._json.data) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_1.BackupGroup(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupList = BackupGroupList;


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupStorageMetricList = void 0;
/**
 * Backup group storage metric list.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupStorageMetricList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<BackupGroupStorageMetric>}
     */
    get data() {
        return this._json.data;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupStorageMetricListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupStorageMetricList = BackupGroupStorageMetricList;


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupUpdateRequest = void 0;
const backup_group_disk_unit_1 = __webpack_require__(116);
const backup_group_indexing_policy_1 = __webpack_require__(117);
const backup_group_source_ref_1 = __webpack_require__(262);
const time_of_day_1 = __webpack_require__(79);
/**
 * Backup Group Update Request.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupUpdateRequest {
    constructor(firstParam, description, endTime, excludedDisks, fallbackToCrashConsistent, skipPhysicalRdmDisks, fullProtectionSlaTimeMins, incrementalProtectionSlaTimeMins, indexingPolicy, policyId, priority, qosType, excludedSources, protectedSources, startTime, timezone, abortInBlackoutPeriod, continueOnQuiesceFailure, quiesce) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                end_time: endTime,
                excluded_disks: excludedDisks,
                fallback_to_crash_consistent: fallbackToCrashConsistent,
                skip_physical_rdm_disks: skipPhysicalRdmDisks,
                full_protection_sla_time_mins: fullProtectionSlaTimeMins,
                incremental_protection_sla_time_mins: incrementalProtectionSlaTimeMins,
                indexing_policy: indexingPolicy,
                policy_id: policyId,
                priority: priority,
                qos_type: qosType,
                excluded_sources: excludedSources,
                protected_sources: protectedSources,
                start_time: startTime,
                timezone: timezone,
                abort_in_blackout_period: abortInBlackoutPeriod,
                continue_on_quiesce_failure: continueOnQuiesceFailure,
                quiesce: quiesce
            };
        }
        else if (firstParam instanceof BackupGroupUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string | null}
     */
    get description() {
        return this._json.description || null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        var _a;
        return (_a = this._json.end_time) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get excluded disks.
     * @returns {Array<BackupGroupDiskUnit> | null}
     */
    get excludedDisks() {
        var _a;
        return ((_a = this._json.excluded_disks) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_disk_unit_1.BackupGroupDiskUnit(it))) || null;
    }
    /**
     * Get fallback to crash consistent.
     * @returns {boolean | null}
     */
    get fallbackToCrashConsistent() {
        var _a;
        return (_a = this._json.fallback_to_crash_consistent) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get skip physical rdm disks.
     * @returns {boolean | null}
     */
    get skipPhysicalRdmDisks() {
        var _a;
        return (_a = this._json.skip_physical_rdm_disks) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get full protection sla time mins.
     * @returns {number}
     */
    get fullProtectionSlaTimeMins() {
        return this._json.full_protection_sla_time_mins;
    }
    /**
     * Get incremental protection sla time mins.
     * @returns {number}
     */
    get incrementalProtectionSlaTimeMins() {
        return this._json.incremental_protection_sla_time_mins;
    }
    /**
     * Get indexing policy.
     * @returns {BackupGroupIndexingPolicy | null}
     */
    get indexingPolicy() {
        return this._json.indexing_policy ? new backup_group_indexing_policy_1.BackupGroupIndexingPolicy(this._json.indexing_policy) : null;
    }
    /**
     * Get policy id.
     * @returns {string}
     */
    get policyId() {
        return this._json.policy_id;
    }
    /**
     * Get priority.
     * @returns {BackupGroupPriority}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get qos type.
     * @returns {BackupGroupQosType}
     */
    get qosType() {
        return this._json.qos_type;
    }
    /**
     * Get excluded sources.
     * @returns {Array<BackupGroupSourceRef>}
     */
    get excludedSources() {
        var _a;
        return (_a = this._json.excluded_sources) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_source_ref_1.BackupGroupSourceRef(it));
    }
    /**
     * Get protected sources.
     * @returns {Array<BackupGroupSourceRef>}
     */
    get protectedSources() {
        var _a;
        return (_a = this._json.protected_sources) === null || _a === void 0 ? void 0 : _a.map(it => new backup_group_source_ref_1.BackupGroupSourceRef(it));
    }
    /**
     * Specifies the time of day to start the Protection Schedule.
     * This is optional and only applicable if the Protection Policy defines
     * a monthly or a daily Protection Schedule.
     */
    /**
     * Get start time.
     * @returns {TimeOfDay}
     */
    get startTime() {
        return new time_of_day_1.TimeOfDay(this._json.start_time);
    }
    /**
     * Get timezone.
     * @returns {string}
     */
    get timezone() {
        return this._json.timezone;
    }
    /**
     * Get abort in blackout period.
     * @returns {boolean}
     */
    get abortInBlackoutPeriod() {
        return this._json.abort_in_blackout_period;
    }
    /**
     * Get continue on quiesce failure.
     * @returns {boolean}
     */
    get continueOnQuiesceFailure() {
        return this._json.continue_on_quiesce_failure;
    }
    /**
     * Get quiesce.
     * @returns {boolean}
     */
    get quiesce() {
        return this._json.quiesce;
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupUpdateRequest = BackupGroupUpdateRequest;


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupPolicyScopeType = void 0;
/**
 * Backup Policy Scope Type Enum.
 */
var BackupPolicyScopeType;
(function (BackupPolicyScopeType) {
    BackupPolicyScopeType["ORG"] = "ORG";
    BackupPolicyScopeType["VDC"] = "VDC";
})(BackupPolicyScopeType = exports.BackupPolicyScopeType || (exports.BackupPolicyScopeType = {}));


/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DayCount = void 0;
/**
 * Day Count Enum.
 */
var DayCount;
(function (DayCount) {
    DayCount["FIRST"] = "FIRST";
    DayCount["SECOND"] = "SECOND";
    DayCount["THIRD"] = "THIRD";
    DayCount["FOURTH"] = "FOURTH";
    DayCount["LAST"] = "LAST";
})(DayCount = exports.DayCount || (exports.DayCount = {}));


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Day = void 0;
/**
 * Day Enum.
 */
var Day;
(function (Day) {
    Day["SUNDAY"] = "SUNDAY";
    Day["MONDAY"] = "MONDAY";
    Day["TUESDAY"] = "TUESDAY";
    Day["WEDNESDAY"] = "WEDNESDAY";
    Day["THURSDAY"] = "THURSDAY";
    Day["FRIDAY"] = "FRIDAY";
    Day["SATURDAY"] = "SATURDAY";
})(Day = exports.Day || (exports.Day = {}));


/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Periodicity = void 0;
/**
 * Periodicity Enum.
 */
var Periodicity;
(function (Periodicity) {
    Periodicity["CONTINUOUS"] = "CONTINUOUS";
    Periodicity["DAILY"] = "DAILY";
    Periodicity["MONTHLY"] = "MONTHLY";
})(Periodicity = exports.Periodicity || (exports.Periodicity = {}));


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteBackupClusterStatus = void 0;
/**
 * Remote Backup Cluster Status Enum.
 */
var RemoteBackupClusterStatus;
(function (RemoteBackupClusterStatus) {
    RemoteBackupClusterStatus["PAIRED"] = "PAIRED";
    RemoteBackupClusterStatus["UNPAIRED"] = "UNPAIRED";
})(RemoteBackupClusterStatus = exports.RemoteBackupClusterStatus || (exports.RemoteBackupClusterStatus = {}));


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationPeriodicity = void 0;
/**
 * Replication Periodicity Enum.
 */
var ReplicationPeriodicity;
(function (ReplicationPeriodicity) {
    ReplicationPeriodicity["EVERY"] = "EVERY";
    ReplicationPeriodicity["HOUR"] = "HOUR";
    ReplicationPeriodicity["DAY"] = "DAY";
    ReplicationPeriodicity["WEEK"] = "WEEK";
    ReplicationPeriodicity["MONTH"] = "MONTH";
    ReplicationPeriodicity["YEAR"] = "YEAR";
})(ReplicationPeriodicity = exports.ReplicationPeriodicity || (exports.ReplicationPeriodicity = {}));


/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RunType = void 0;
/**
 * Run Type Enum.
 */
var RunType;
(function (RunType) {
    RunType["REGULAR"] = "REGULAR";
    RunType["FULL"] = "FULL";
    RunType["LOG"] = "LOG";
    RunType["SYSTEM"] = "SYSTEM";
})(RunType = exports.RunType || (exports.RunType = {}));


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultType = void 0;
/**
 * Vault Type Enum.
 */
var VaultType;
(function (VaultType) {
    VaultType["CLOUD"] = "CLOUD";
    VaultType["TAPE"] = "TAPE";
    VaultType["NAS"] = "NAS";
})(VaultType = exports.VaultType || (exports.VaultType = {}));


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupPolicyList = void 0;
const backup_policy_1 = __webpack_require__(66);
/**
 * Backup Policy List.
 */
/* istanbul ignore next: autogenerated */
class BackupPolicyList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<BackupPolicy>}
     */
    get data() {
        var _a;
        return (_a = this._json.data) === null || _a === void 0 ? void 0 : _a.map(it => new backup_policy_1.BackupPolicy(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupPolicyListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupPolicyList = BackupPolicyList;


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupPolicyUpdateRequest = void 0;
const blackout_period_1 = __webpack_require__(118);
const extended_retention_policy_1 = __webpack_require__(119);
const scheduling_policy_1 = __webpack_require__(120);
const snapshot_archival_copy_policy_1 = __webpack_require__(121);
const snapshot_replication_copy_policy_1 = __webpack_require__(123);
/**
 * Backup Policy Update Request.
 */
/* istanbul ignore next: autogenerated */
class BackupPolicyUpdateRequest {
    constructor(firstParam, daysToKeep, daysToKeepLog, description, extendedRetentionPolicies, fullSchedulingPolicy, incrementalSchedulingPolicy, logSchedulingPolicy, name, retries, retryIntervalMins, skipIntervalMins, snapshotArchivalCopyPolicies, snapshotReplicationCopyPolicies) {
        if (Array.isArray(firstParam)) {
            // Parameters constructor
            this._json = {
                blackout_periods: firstParam,
                days_to_keep: daysToKeep,
                days_to_keep_log: daysToKeepLog,
                description: description,
                extended_retention_policies: extendedRetentionPolicies,
                full_scheduling_policy: fullSchedulingPolicy,
                incremental_scheduling_policy: incrementalSchedulingPolicy,
                log_scheduling_policy: logSchedulingPolicy,
                name: name,
                retries: retries,
                retry_interval_mins: retryIntervalMins,
                skip_interval_mins: skipIntervalMins,
                snapshot_archival_copy_policies: snapshotArchivalCopyPolicies,
                snapshot_replication_copy_policies: snapshotReplicationCopyPolicies
            };
        }
        else if (firstParam instanceof BackupPolicyUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get blackout periods.
     * @returns {Array<BlackoutPeriod>}
     */
    get blackoutPeriods() {
        var _a;
        return (_a = this._json.blackout_periods) === null || _a === void 0 ? void 0 : _a.map(it => new blackout_period_1.BlackoutPeriod(it));
    }
    /**
     * Get days to keep.
     * @returns {number}
     */
    get daysToKeep() {
        return this._json.days_to_keep;
    }
    /**
     * Get days to keep log.
     * @returns {number | null}
     */
    get daysToKeepLog() {
        var _a;
        return (_a = this._json.days_to_keep_log) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get description.
     * @returns {string | null}
     */
    get description() {
        return this._json.description || null;
    }
    /**
     * Get extended retention policies.
     * @returns {Array<ExtendedRetentionPolicy>}
     */
    get extendedRetentionPolicies() {
        var _a;
        return (_a = this._json.extended_retention_policies) === null || _a === void 0 ? void 0 : _a.map(it => new extended_retention_policy_1.ExtendedRetentionPolicy(it));
    }
    /**
     * Get full scheduling policy.
     * @returns {SchedulingPolicy | null}
     */
    get fullSchedulingPolicy() {
        return this._json.full_scheduling_policy ? new scheduling_policy_1.SchedulingPolicy(this._json.full_scheduling_policy) : null;
    }
    /**
     * Get incremental scheduling policy.
     * @returns {SchedulingPolicy}
     */
    get incrementalSchedulingPolicy() {
        return new scheduling_policy_1.SchedulingPolicy(this._json.incremental_scheduling_policy);
    }
    /**
     * Get log scheduling policy.
     * @returns {SchedulingPolicy | null}
     */
    get logSchedulingPolicy() {
        return this._json.log_scheduling_policy ? new scheduling_policy_1.SchedulingPolicy(this._json.log_scheduling_policy) : null;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get retries.
     * @returns {number}
     */
    get retries() {
        return this._json.retries;
    }
    /**
     * Get retry interval mins.
     * @returns {number}
     */
    get retryIntervalMins() {
        return this._json.retry_interval_mins;
    }
    /**
     * Get skip interval mins.
     * @returns {number | null}
     */
    get skipIntervalMins() {
        var _a;
        return (_a = this._json.skip_interval_mins) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Get snapshot archival copy policies.
     * @returns {Array<SnapshotArchivalCopyPolicy>}
     */
    get snapshotArchivalCopyPolicies() {
        var _a;
        return (_a = this._json.snapshot_archival_copy_policies) === null || _a === void 0 ? void 0 : _a.map(it => new snapshot_archival_copy_policy_1.SnapshotArchivalCopyPolicy(it));
    }
    /**
     * Get snapshot replication copy policies.
     * @returns {Array<SnapshotReplicationCopyPolicy>}
     */
    get snapshotReplicationCopyPolicies() {
        var _a;
        return (_a = this._json.snapshot_replication_copy_policies) === null || _a === void 0 ? void 0 : _a.map(it => new snapshot_replication_copy_policy_1.SnapshotReplicationCopyPolicy(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupPolicyUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupPolicyUpdateRequest = BackupPolicyUpdateRequest;


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotTargetType = void 0;
/**
 * Snapshot Target Type Enum.
 */
var SnapshotTargetType;
(function (SnapshotTargetType) {
    SnapshotTargetType["LOCAL"] = "LOCAL";
    SnapshotTargetType["REMOTE"] = "REMOTE";
    SnapshotTargetType["ARCHIVAL"] = "ARCHIVAL";
    SnapshotTargetType["CLOUD_DEPLOY"] = "CLOUD_DEPLOY";
})(SnapshotTargetType = exports.SnapshotTargetType || (exports.SnapshotTargetType = {}));


/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusBackupRun = void 0;
/**
 * Status Backup Run Enum.
 */
var StatusBackupRun;
(function (StatusBackupRun) {
    StatusBackupRun["ACCEPTED"] = "ACCEPTED";
    StatusBackupRun["RUNNING"] = "RUNNING";
    StatusBackupRun["CANCELING"] = "CANCELING";
    StatusBackupRun["CANCELED"] = "CANCELED";
    StatusBackupRun["SUCCESS"] = "SUCCESS";
    StatusBackupRun["FAILURE"] = "FAILURE";
    StatusBackupRun["UNKNOWN"] = "UNKNOWN";
    StatusBackupRun["WARNING"] = "WARNING";
})(StatusBackupRun = exports.StatusBackupRun || (exports.StatusBackupRun = {}));


/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusCopyRun = void 0;
/**
 * Status Copy Run Enum.
 */
var StatusCopyRun;
(function (StatusCopyRun) {
    StatusCopyRun["ACCEPTED"] = "ACCEPTED";
    StatusCopyRun["RUNNING"] = "RUNNING";
    StatusCopyRun["CANCELING"] = "CANCELING";
    StatusCopyRun["CANCELED"] = "CANCELED";
    StatusCopyRun["SUCCESS"] = "SUCCESS";
    StatusCopyRun["FAILURE"] = "FAILURE";
})(StatusCopyRun = exports.StatusCopyRun || (exports.StatusCopyRun = {}));


/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusCopySnapshotTaskStatus = void 0;
/**
 * Status Copy Snapshot Task Status Enum.
 */
var StatusCopySnapshotTaskStatus;
(function (StatusCopySnapshotTaskStatus) {
    StatusCopySnapshotTaskStatus["ACCEPTED"] = "ACCEPTED";
    StatusCopySnapshotTaskStatus["RUNNING"] = "RUNNING";
    StatusCopySnapshotTaskStatus["CANCELING"] = "CANCELING";
    StatusCopySnapshotTaskStatus["CANCELED"] = "CANCELED";
    StatusCopySnapshotTaskStatus["SUCCESS"] = "SUCCESS";
    StatusCopySnapshotTaskStatus["FAILURE"] = "FAILURE";
})(StatusCopySnapshotTaskStatus = exports.StatusCopySnapshotTaskStatus || (exports.StatusCopySnapshotTaskStatus = {}));


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusSourceBackupStatus = void 0;
/**
 * Status Source Backup Status Enum.
 */
var StatusSourceBackupStatus;
(function (StatusSourceBackupStatus) {
    StatusSourceBackupStatus["ACCEPTED"] = "ACCEPTED";
    StatusSourceBackupStatus["RUNNING"] = "RUNNING";
    StatusSourceBackupStatus["CANCELING"] = "CANCELING";
    StatusSourceBackupStatus["CANCELED"] = "CANCELED";
    StatusSourceBackupStatus["SUCCESS"] = "SUCCESS";
    StatusSourceBackupStatus["FAILURE"] = "FAILURE";
})(StatusSourceBackupStatus = exports.StatusSourceBackupStatus || (exports.StatusSourceBackupStatus = {}));


/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupGroupRunList = void 0;
const backup_group_run_1 = __webpack_require__(67);
/**
 * Backup Group Run List.
 */
/* istanbul ignore next: autogenerated */
class BackupGroupRunList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<BackupGroupRun>}
     */
    get data() {
        return this._json.data.map(it => new backup_group_run_1.BackupGroupRun(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupGroupRunListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupGroupRunList = BackupGroupRunList;


/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupConfigStatus = void 0;
/**
 * Backup Config Status Enum.
 */
var BackupConfigStatus;
(function (BackupConfigStatus) {
    BackupConfigStatus["FULL"] = "FULL";
    BackupConfigStatus["PARTIAL"] = "PARTIAL";
    BackupConfigStatus["FULL_AUTO"] = "FULL_AUTO";
    BackupConfigStatus["PARTIAL_AUTO"] = "PARTIAL_AUTO";
})(BackupConfigStatus = exports.BackupConfigStatus || (exports.BackupConfigStatus = {}));


/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTaskObjectStatus = void 0;
/**
 * Restore task object status Enum.
 */
var RestoreTaskObjectStatus;
(function (RestoreTaskObjectStatus) {
    RestoreTaskObjectStatus["FILES_CLONED"] = "FILES_CLONED";
    RestoreTaskObjectStatus["FETCHED_ENTITY_INFO"] = "FETCHED_ENTITY_INFO";
    RestoreTaskObjectStatus["VM_CREATED"] = "VM_CREATED";
    RestoreTaskObjectStatus["RELOCATION_STARTED"] = "RELOCATION_STARTED";
    RestoreTaskObjectStatus["FINISHED"] = "FINISHED";
    RestoreTaskObjectStatus["ABORTED"] = "ABORTED";
    RestoreTaskObjectStatus["DATA_COPY_STARTED"] = "DATA_COPY_STARTED";
    RestoreTaskObjectStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(RestoreTaskObjectStatus = exports.RestoreTaskObjectStatus || (exports.RestoreTaskObjectStatus = {}));


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTaskStatus = void 0;
/**
 * Restore task status Enum.
 */
var RestoreTaskStatus;
(function (RestoreTaskStatus) {
    RestoreTaskStatus["CANCELLED"] = "CANCELLED";
    RestoreTaskStatus["FINISHED"] = "FINISHED";
    RestoreTaskStatus["IN_PROGRESS"] = "IN_PROGRESS";
    RestoreTaskStatus["READY_TO_SCHEDULE"] = "READY_TO_SCHEDULE";
})(RestoreTaskStatus = exports.RestoreTaskStatus || (exports.RestoreTaskStatus = {}));


/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreTaskType = void 0;
/**
 * Restore task type Enum.
 */
var RestoreTaskType;
(function (RestoreTaskType) {
    RestoreTaskType["DOWNLOAD_FILES"] = "DOWNLOAD_FILES";
    RestoreTaskType["RESTORE_VMS"] = "RESTORE_VMS";
})(RestoreTaskType = exports.RestoreTaskType || (exports.RestoreTaskType = {}));


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackupRestoreTaskList = void 0;
const backup_restore_task_1 = __webpack_require__(81);
/**
 * Backup restore task list.
 */
/* istanbul ignore next: autogenerated */
class BackupRestoreTaskList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<BackupRestoreTask>}
     */
    get data() {
        return this._json.data.map(it => new backup_restore_task_1.BackupRestoreTask(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {BackupRestoreTaskListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BackupRestoreTaskList = BackupRestoreTaskList;


/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CombineMethod = void 0;
/**
 * Combine method enum.
 */
var CombineMethod;
(function (CombineMethod) {
    CombineMethod["LINEAR"] = "LINEAR";
    CombineMethod["STRIPE"] = "STRIPE";
    CombineMethod["MIRROR"] = "MIRROR";
    CombineMethod["RAID5"] = "RAID5";
    CombineMethod["RAID6"] = "RAID6";
    CombineMethod["ZERO"] = "ZERO";
    CombineMethod["THIN"] = "THIN";
    CombineMethod["THINPOOL"] = "THINPOOL";
    CombineMethod["SNAPSHOT"] = "SNAPSHOT";
    CombineMethod["CACHE"] = "CACHE";
    CombineMethod["CACHEPOOL"] = "CACHEPOOL";
})(CombineMethod = exports.CombineMethod || (exports.CombineMethod = {}));


/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DirEntryType = void 0;
/**
 * Dir entry type enum.
 */
var DirEntryType;
(function (DirEntryType) {
    DirEntryType["FILE"] = "FILE";
    DirEntryType["DIRECTORY"] = "DIRECTORY";
    DirEntryType["SYMLINK"] = "SYMLINK";
})(DirEntryType = exports.DirEntryType || (exports.DirEntryType = {}));


/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskFormat = void 0;
/**
 * Disk format enum.
 */
var DiskFormat;
(function (DiskFormat) {
    DiskFormat["VMDK"] = "VMDK";
    DiskFormat["VHD"] = "VHD";
    DiskFormat["VHD_X"] = "VHD_X";
    DiskFormat["RAW"] = "RAW";
    DiskFormat["UNKNOWN"] = "UNKNOWN";
})(DiskFormat = exports.DiskFormat || (exports.DiskFormat = {}));


/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSearchResultType = void 0;
/**
 * File search result type enum.
 */
var FileSearchResultType;
(function (FileSearchResultType) {
    FileSearchResultType["DIRECTORY"] = "DIRECTORY";
    FileSearchResultType["FILE"] = "FILE";
    FileSearchResultType["EMAIL"] = "EMAIL";
    FileSearchResultType["SYMLINK"] = "SYMLINK";
})(FileSearchResultType = exports.FileSearchResultType || (exports.FileSearchResultType = {}));


/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FileType = void 0;
/**
 * File Type Enum.
 */
var FileType;
(function (FileType) {
    FileType["ANY"] = "ANY";
    FileType["FILE"] = "FILE";
    FileType["FOLDER"] = "FOLDER";
})(FileType = exports.FileType || (exports.FileType = {}));


/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LogicalVolumeType = void 0;
/**
 * Logical volume type enum.
 */
var LogicalVolumeType;
(function (LogicalVolumeType) {
    LogicalVolumeType["SIMPLE_VOLUME"] = "SIMPLE_VOLUME";
    LogicalVolumeType["LVM"] = "LVM";
    LogicalVolumeType["LDM"] = "LDM";
})(LogicalVolumeType = exports.LogicalVolumeType || (exports.LogicalVolumeType = {}));


/***/ }),
/* 743 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PartitionTableFormat = void 0;
/**
 * Partition table format enum.
 */
var PartitionTableFormat;
(function (PartitionTableFormat) {
    PartitionTableFormat["NO_PARTITION"] = "NO_PARTITION";
    PartitionTableFormat["MBR_PARTITION"] = "MBR_PARTITION";
    PartitionTableFormat["GPT_PARTITION"] = "GPT_PARTITION";
    PartitionTableFormat["SGI_PARTITION"] = "SGI_PARTITION";
    PartitionTableFormat["SUN_PARTITION"] = "SUN_PARTITION";
})(PartitionTableFormat = exports.PartitionTableFormat || (exports.PartitionTableFormat = {}));


/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSnapshotInfoList = void 0;
const file_snapshot_info_1 = __webpack_require__(135);
/**
 * File snapshot info list.
 */
/* istanbul ignore next: autogenerated */
class FileSnapshotInfoList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<FileSnapshotInfo>}
     */
    get data() {
        return this._json.data.map(it => new file_snapshot_info_1.FileSnapshotInfo(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {FileSnapshotInfoListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FileSnapshotInfoList = FileSnapshotInfoList;


/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FilesystemVolumeList = void 0;
const filesystem_volume_1 = __webpack_require__(136);
/**
 * Filesystem volume list.
 */
/* istanbul ignore next: autogenerated */
class FilesystemVolumeList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<FilesystemVolume>}
     */
    get data() {
        return this._json.data.map(it => new filesystem_volume_1.FilesystemVolume(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {FilesystemVolumeListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FilesystemVolumeList = FilesystemVolumeList;


/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateBackupFileDownloadBundleParams = void 0;
const files_and_folders_info_1 = __webpack_require__(286);
/**
 * Generate backup file download bundle params.
 */
/* istanbul ignore next: autogenerated */
class GenerateBackupFileDownloadBundleParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get task name.
     * The name that should be associated with the task.
     * @returns {string}
     */
    get taskName() {
        return this._json.task_name;
    }
    /**
     * Get backup run uid.
     * The UID of the backup run that is associated with files to be downloaded.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get files and folders.
     * The set of files/folders to be included.
     * Items should be unique in list.
     * @returns {Array<FilesAndFoldersInfo>}
     */
    get filesAndFolders() {
        return this._json.files_and_folders.map(it => new files_and_folders_info_1.FilesAndFoldersInfo(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {GenerateBackupFileDownloadBundleParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GenerateBackupFileDownloadBundleParams = GenerateBackupFileDownloadBundleParams;


/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ListBackupSnapshotFilesAndFoldersFilters = void 0;
/**
 * List backup snapshot files and folders filters.
 */
/* istanbul ignore next: autogenerated */
class ListBackupSnapshotFilesAndFoldersFilters {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get attempt number.
     * @returns {number | null}
     */
    get attemptNumber() {
        return this._json.attempt_number || null;
    }
    /**
     * Get pagination cookie.
     * @returns {string | null}
     */
    get paginationCookie() {
        return this._json.pagination_cookie || null;
    }
    /**
     * Get max entries.
     * @returns {number | null}
     */
    get maxEntries() {
        return this._json.max_entries || null;
    }
    /**
     * Get stat file entries.
     * @returns {boolean | null}
     */
    get statFileEntries() {
        return this._json.stat_file_entries || null;
    }
    /**
     * Get browser index data.
     * @returns {boolean | null}
     */
    get browserIndexData() {
        return this._json.browser_index_data || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {ListBackupSnapshotFilesAndFoldersFiltersJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ListBackupSnapshotFilesAndFoldersFilters = ListBackupSnapshotFilesAndFoldersFilters;


/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoverableFilesSearchResultList = void 0;
const recoverable_file_search_result_1 = __webpack_require__(82);
/**
 * Recoverable files search results list.
 */
/* istanbul ignore next: autogenerated */
class RecoverableFilesSearchResultList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<RecoverableFileSearchResult>}
     */
    get data() {
        return this._json.data.map(it => new recoverable_file_search_result_1.RecoverableFileSearchResult(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {RecoverableFilesSearchResultListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RecoverableFilesSearchResultList = RecoverableFilesSearchResultList;


/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreVmBackupParams = void 0;
const alternate_vapp_params_1 = __webpack_require__(133);
/**
 * Restore VM Backup params.
 */
/* istanbul ignore next: autogenerated */
class RestoreVmBackupParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get backup run uid.
     * @returns {string}
     */
    get backupRunUid() {
        return this._json.backup_run_uid;
    }
    /**
     * Get task name.
     * The user-specified name that should be associated with the task.
     * @returns {string}
     */
    get taskName() {
        return this._json.task_name;
    }
    /**
     * Get alternate vApp.
     * Optionally specifies an alternate vApp to recover the VM snapshot to.
     * @returns {AlternateVappParams | null}
     */
    get alternateVapp() {
        return this._json.alternate_vapp ? new alternate_vapp_params_1.AlternateVappParams(this._json.alternate_vapp) : null;
    }
    /**
     * Get powered on.
     * Specifies the power state of the cloned or recovered objects.
     * By default, the cloned or recovered objects are powered off.
     * @returns {boolean}
     */
    get poweredOn() {
        return this._json.powered_on;
    }
    /**
     * Get prefix.
     * Specifies a prefix to prepended to the source object name to derive a new
     * name for the recovered or cloned object. By default, cloned or recovered
     * objects retain their original name. Length of this field is limited to 8
     * characters.
     * @returns {string}
     */
    get prefix() {
        return this._json.prefix;
    }
    /**
     * Get suffix.
     * Specifies a suffix to appended to the original source object name to derive
     * a new name for the recovered or cloned object. By default, cloned or
     * recovered objects retain their original name. Length of this field is
     * limited to 8 characters.
     * @returns {string}
     */
    get suffix() {
        return this._json.suffix;
    }
    /**
     * Get continue on error.
     * Whether the restoration should continue when an error occurs.
     * @returns {boolean}
     */
    get continueOnError() {
        return this._json.continue_on_error;
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreVmBackupParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreVmBackupParams = RestoreVmBackupParams;


/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreVmBackupsInVdcParams = void 0;
const alternate_vapp_params_1 = __webpack_require__(133);
const vm_snapshot_ref_1 = __webpack_require__(288);
/**
 * Restore VM Backups in vDC params.
 */
/* istanbul ignore next: autogenerated */
class RestoreVmBackupsInVdcParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get snapshot refs.
     * Set of VM snapshots to restore.
     * @returns {Array<VmSnapshotRef>}
     */
    get snapshotRefs() {
        return this._json.snapshot_refs.map(it => new vm_snapshot_ref_1.VmSnapshotRef(it));
    }
    /**
     * Get task name.
     * The user-specified name that should be associated with the task.
     * @returns {string}
     */
    get taskName() {
        return this._json.task_name;
    }
    /**
     * Get alternate vapp.
     * Optionally specifies an alternate vApp to recover the VM snapshot to.
     * @returns {AlternateVappParams | null}
     */
    get alternateVapp() {
        return this._json.alternate_vapp ? new alternate_vapp_params_1.AlternateVappParams(this._json.alternate_vapp) : null;
    }
    /**
     * Get powered on.
     * Specifies the power state of the cloned or recovered objects.
     * By default, the cloned or recovered objects are powered off.
     * @returns {boolean}
     */
    get poweredOn() {
        return this._json.powered_on;
    }
    /**
     * Get prefix.
     * Specifies a prefix to prepended to the source object name to derive a new
     * name for the recovered or cloned object. By default, cloned or recovered
     * objects retain their original name. Length of this field is limited to 8
     * characters.
     * @returns {string}
     */
    get prefix() {
        return this._json.prefix;
    }
    /**
     * Get suffix.
     * Specifies a suffix to appended to the original source object name to derive
     * a new name for the recovered or cloned object. By default, cloned or
     * recovered objects retain their original name. Length of this field is
     * limited to 8 characters.
     * @returns {string}
     */
    get suffix() {
        return this._json.suffix;
    }
    /**
     * Get continue on error.
     * Whether the restoration should continue when an error occurs.
     * @returns {boolean}
     */
    get continueOnError() {
        return this._json.continue_on_error;
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreVmBackupsInVdcParamsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreVmBackupsInVdcParams = RestoreVmBackupsInVdcParams;


/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchVdcRecoverableFilesAndFoldersFilters = void 0;
/**
 * Search vDC recoverable files and folders.
 */
/* istanbul ignore next: autogenerated */
class SearchVdcRecoverableFilesAndFoldersFilters {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get start time.
     * @returns {number | null}
     */
    get startTime() {
        return this._json.startTime || null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        return this._json.endTime || null;
    }
    /**
     * Get search.
     * @returns {string | null}
     */
    get search() {
        return this._json.search || null;
    }
    /**
     * Get backup group uids.
     * @returns {Array<string> | null}
     */
    get backupGroupUids() {
        return this._json.backupGroupUids || null;
    }
    /**
     * Get backup run uids.
     * @returns {Array<string> | null}
     */
    get backupRunUids() {
        return this._json.backupRunUids || null;
    }
    /**
     * Get vm uuids.
     * @returns {Array<string> | null}
     */
    get vmUuids() {
        return this._json.vmUuids || null;
    }
    /**
     * Get file type.
     * @returns {FileType}
     */
    get fileType() {
        return this._json.fileType;
    }
    /**
     * Get the json representation of this class.
     * @returns {SearchVdcRecoverableFilesAndFoldersFiltersJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SearchVdcRecoverableFilesAndFoldersFilters = SearchVdcRecoverableFilesAndFoldersFilters;


/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchVmRecoverableFilesAndFoldersFilters = void 0;
/**
 * Search VM recoverable files and folders.
 */
/* istanbul ignore next: autogenerated */
class SearchVmRecoverableFilesAndFoldersFilters {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get start time.
     * @returns {number | null}
     */
    get startTime() {
        return this._json.startTime || null;
    }
    /**
     * Get end time.
     * @returns {number | null}
     */
    get endTime() {
        return this._json.endTime || null;
    }
    /**
     * Get search.
     * @returns {string | null}
     */
    get search() {
        return this._json.search || null;
    }
    /**
     * Get backup group uids.
     * @returns {Array<string> | null}
     */
    get backupGroupUids() {
        return this._json.backupGroupUids || null;
    }
    /**
     * Get backup run uids.
     * @returns {Array<string> | null}
     */
    get backupRunUids() {
        return this._json.backupRunUids || null;
    }
    /**
     * Get file type.
     * @returns {FileType | null}
     */
    get fileType() {
        return this._json.fileType || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {SearchVmRecoverableFilesAndFoldersFiltersJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SearchVmRecoverableFilesAndFoldersFilters = SearchVmRecoverableFilesAndFoldersFilters;


/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmBackupSnapshotsList = void 0;
const vm_backup_snapshot_1 = __webpack_require__(137);
/**
 * VM Backup Snapshots List.
 */
/* istanbul ignore next: autogenerated */
class VmBackupSnapshotsList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<VmBackupSnapshot>}
     */
    get data() {
        return this._json.data.map(it => new vm_backup_snapshot_1.VmBackupSnapshot(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {VmBackupSnapshotsListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmBackupSnapshotsList = VmBackupSnapshotsList;


/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogUpdateRequest = void 0;
/**
 * Request to update a catalog
 */
/* istanbul ignore next: autogenerated */
class CatalogUpdateRequest {
    constructor(firstParam, uuid, name, deleted, deletedDate, updatedDate) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                uuid: uuid,
                name: name,
                deleted: deleted,
                deleted_date: deletedDate,
                updated_date: updatedDate
            };
        }
        else if (firstParam instanceof CatalogUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get deleted.
     * @returns {boolean}
     */
    get deleted() {
        return this._json.deleted;
    }
    /**
     * Get deleted date.
     * @returns {number}
     */
    get deletedDate() {
        return this._json.deleted_date;
    }
    /**
     * Get updated date.
     * @returns {number}
     */
    get updatedDate() {
        return this._json.updated_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {CatalogUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CatalogUpdateRequest = CatalogUpdateRequest;


/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InitiateOVFUploadRequest = void 0;
/**
 * Request to initiate an OVF upload.
 */
/* istanbul ignore next: autogenerated */
class InitiateOVFUploadRequest {
    constructor(firstParam, description, descriptor, uploadType) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                descriptor: descriptor,
                upload_type: uploadType
            };
        }
        else if (firstParam instanceof InitiateOVFUploadRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get descriptor.
     * @returns {string}
     */
    get descriptor() {
        return this._json.descriptor;
    }
    /**
     * Get the upload type.
     * @returns {TemplateUploadType}
     */
    get uploadType() {
        return this._json.upload_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {InitiateOVFUploadRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.InitiateOVFUploadRequest = InitiateOVFUploadRequest;


/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateFromVappCreateRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappTemplateFromVappCreateRequest {
    constructor(firstParam, name, description) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vapp_uuid: firstParam,
                name: name,
                description: description
            };
        }
        else if (firstParam instanceof VappTemplateFromVappCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateFromVappCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateFromVappCreateRequest = VappTemplateFromVappCreateRequest;


/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 777 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 779 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LogLevel = void 0;
var LogLevel;
(function (LogLevel) {
    LogLevel["EMERGENCY"] = "EMERGENCY";
    LogLevel["ALERT"] = "ALERT";
    LogLevel["CRITICAL"] = "CRITICAL";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["WARNING"] = "WARNING";
    LogLevel["NOTICE"] = "NOTICE";
    LogLevel["INFO"] = "INFO";
    LogLevel["DEBUG"] = "DEBUG";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));


/***/ }),
/* 782 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 784 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 785 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductSectionPropertyTypeEnum = void 0;
/**
 * Product Section Property Type enum
 * The property variable type
 */
var ProductSectionPropertyTypeEnum;
(function (ProductSectionPropertyTypeEnum) {
    ProductSectionPropertyTypeEnum["UINT8"] = "UINT8";
    ProductSectionPropertyTypeEnum["SINT8"] = "SINT8";
    ProductSectionPropertyTypeEnum["UINT16"] = "UINT16";
    ProductSectionPropertyTypeEnum["SINT16"] = "SINT16";
    ProductSectionPropertyTypeEnum["UINT32"] = "UINT32";
    ProductSectionPropertyTypeEnum["SINT32"] = "SINT32";
    ProductSectionPropertyTypeEnum["UINT64"] = "UINT64";
    ProductSectionPropertyTypeEnum["SINT64"] = "SINT64";
    ProductSectionPropertyTypeEnum["STRING"] = "STRING";
    ProductSectionPropertyTypeEnum["BOOLEAN"] = "BOOLEAN";
    ProductSectionPropertyTypeEnum["REAL32"] = "REAL32";
    ProductSectionPropertyTypeEnum["REAL64"] = "REAL64";
})(ProductSectionPropertyTypeEnum = exports.ProductSectionPropertyTypeEnum || (exports.ProductSectionPropertyTypeEnum = {}));


/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 787 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 802 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotCreateRequest = void 0;
/**
 * Request to create a snapshot.
 */
/* istanbul ignore next: autogenerated */
class SnapshotCreateRequest {
    constructor(firstParam, quiesce, name, description) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                memory: firstParam,
                quiesce: quiesce,
                name: name,
                description: description
            };
        }
        else if (firstParam instanceof SnapshotCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get memory.
     * @returns {boolean}
     */
    get memory() {
        return this._json.memory;
    }
    /**
     * Get quiesce.
     * @returns {boolean}
     */
    get quiesce() {
        return this._json.quiesce;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {SnapshotCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SnapshotCreateRequest = SnapshotCreateRequest;


/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateProductSectionRequest = void 0;
/**
 * Update Product Section properties request
 */
/* istanbul ignore next: autogenerated */
class UpdateProductSectionRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the params of the Update product section request
     * @returns {{ [ key: string]: string }} map of params to update
     */
    get params() {
        return this._json.params;
    }
    /**
     * Get the json representation of this class.
     * @returns {UpdateProductSectionRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UpdateProductSectionRequest = UpdateProductSectionRequest;


/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 814 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 815 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 816 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserInvitationStatusEnum = void 0;
var UserInvitationStatusEnum;
(function (UserInvitationStatusEnum) {
    UserInvitationStatusEnum["SENT"] = "SENT";
    UserInvitationStatusEnum["NOT_SENT"] = "NOT_SENT";
    UserInvitationStatusEnum["ACTIVE"] = "ACTIVE";
})(UserInvitationStatusEnum = exports.UserInvitationStatusEnum || (exports.UserInvitationStatusEnum = {}));


/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserLoginTypeEnum = void 0;
var UserLoginTypeEnum;
(function (UserLoginTypeEnum) {
    UserLoginTypeEnum["LOCAL"] = "LOCAL";
    UserLoginTypeEnum["SSO"] = "SSO";
})(UserLoginTypeEnum = exports.UserLoginTypeEnum || (exports.UserLoginTypeEnum = {}));


/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 833 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompanyCreateRequest = void 0;
/**
 * BaCompany creation request.
 */
/* istanbul ignore next: autogenerated */
class BaCompanyCreateRequest {
    constructor(firstParam, name, notes, storageGb) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                password: firstParam,
                name: name,
                notes: notes,
                storage_gb: storageGb
            };
        }
        else if (firstParam instanceof BaCompanyCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get notes.
     * @returns {string}
     */
    get notes() {
        return this._json.notes;
    }
    /**
     * Get storage gb.
     * @returns {number}
     */
    get storageGb() {
        return this._json.storage_gb;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaCompanyCreateRequest = BaCompanyCreateRequest;


/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(836)
var ieee754 = __webpack_require__(837)
var isArray = __webpack_require__(838)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(440)))

/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 837 */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 838 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 840 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 841 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 842 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 844 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 845 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 846 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 847 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 848 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 849 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 850 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 851 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 852 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 853 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketAttachmentCreateRequest = void 0;
/**
 * Support Ticket Attachment Create Request.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketAttachmentCreateRequest {
    constructor(filename, contents) {
        this.filename = filename;
        this.contents = contents;
    }
    get getFilename() {
        return this.filename;
    }
    get getContents() {
        return this.contents;
    }
}
exports.SupportTicketAttachmentCreateRequest = SupportTicketAttachmentCreateRequest;


/***/ }),
/* 854 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketCommentCreateRequest = void 0;
/**
 * Support Ticket Comment Create Request.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketCommentCreateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                text: firstParam
            };
        }
        else if (firstParam instanceof SupportTicketCommentCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get text.
     * @returns {string}
     */
    get text() {
        return this._json.text;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportTicketCommentCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportTicketCommentCreateRequest = SupportTicketCommentCreateRequest;


/***/ }),
/* 855 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketCreateRequest = void 0;
/**
 * Request to create a support ticket.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketCreateRequest {
    constructor(firstParam, description, ccEmailAddresses, ccEmailsEnabled, regardingId, serviceId, categoryId, severity, contactType, phoneNumber, phoneNumberExt) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                summary: firstParam,
                description: description,
                cc_email_addresses: ccEmailAddresses,
                cc_emails_enabled: ccEmailsEnabled,
                regarding_id: regardingId,
                service_id: serviceId,
                category_id: categoryId,
                severity: severity,
                contact_type: contactType,
                phone_number: phoneNumber,
                phone_number_ext: phoneNumberExt
            };
        }
        else if (firstParam instanceof SupportTicketCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get summary.
     * @returns {string}
     */
    get summary() {
        return this._json.summary;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get cc email addresses.
     * @returns {Array<string>}
     */
    get ccEmailAddresses() {
        return this._json.cc_email_addresses;
    }
    /**
     * Get cc emails enabled.
     * @returns {boolean}
     */
    get ccEmailsEnabled() {
        return this._json.cc_emails_enabled;
    }
    /**
     * Get regarding id.
     * @returns {number}
     */
    get regardingId() {
        return this._json.regarding_id;
    }
    /**
     * Get service id.
     * @returns {number}
     */
    get serviceId() {
        return this._json.service_id;
    }
    /**
     * Get category id.
     * @returns {number}
     */
    get categoryId() {
        return this._json.category_id;
    }
    /**
     * Get severity.
     * @returns {SeverityType}
     */
    get severity() {
        return this._json.severity;
    }
    /**
     * Get contact type.
     * @returns {ContactType}
     */
    get contactType() {
        return this._json.contact_type;
    }
    /**
     * Get phone number.
     * @returns {string}
     */
    get phoneNumber() {
        return this._json.phone_number;
    }
    /**
     * Get phone number ext.
     * @returns {string}
     */
    get phoneNumberExt() {
        return this._json.phone_number_ext;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportTicketCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportTicketCreateRequest = SupportTicketCreateRequest;


/***/ }),
/* 856 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketUpdateRequest = void 0;
/**
 * Request to update a support ticket.
 */
/* istanbul ignore next: autogenerated */
class SupportTicketUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                cc_emails_enabled: firstParam
            };
        }
        else if (firstParam instanceof SupportTicketUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get cc emails enabled.
     * @returns {boolean}
     */
    get ccEmailsEnabled() {
        return this._json.cc_emails_enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {SupportTicketUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SupportTicketUpdateRequest = SupportTicketUpdateRequest;


/***/ }),
/* 857 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserCreateRequest = void 0;
/**
 * User Creation Request.
 */
/* istanbul ignore next: autogenerated */
class UserCreateRequest {
    constructor(firstParam, domain, fullname, email, username, roleUuid, sendInvitation) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                password: firstParam,
                domain: domain,
                fullname: fullname,
                email: email,
                username: username,
                role_uuid: roleUuid,
                send_invitation: sendInvitation
            };
        }
        else if (firstParam instanceof UserCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get password.
     * @returns {string | undefined}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get domain.
     * @returns {string}
     */
    get domain() {
        return this._json.domain;
    }
    /**
     * Get fullname.
     * @returns {string}
     */
    get fullname() {
        return this._json.fullname;
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get username.
     * @returns {string}
     */
    get username() {
        return this._json.username;
    }
    /**
     * Get role uuid.
     * @returns {string | undefined}
     */
    get roleUuid() {
        return this._json.role_uuid;
    }
    /**
     * Get send invitation.
     * @returns {boolean | undefined}
     */
    get sendInvitation() {
        return this._json.send_invitation;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserCreateRequest = UserCreateRequest;


/***/ }),
/* 858 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 860 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 861 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 862 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 863 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 864 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 865 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 866 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 867 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 868 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 869 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 870 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 871 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateCreateRequest = void 0;
const trust_object_request_1 = __webpack_require__(572);
/* istanbul ignore next: autogenerated */
class CertificateCreateRequest {
    constructor(firstParam) {
        if (firstParam instanceof trust_object_request_1.TrustObjectRequest) {
            // Parameters constructor
            this._json = {
                trust_object: firstParam.json
            };
        }
        else if (firstParam instanceof CertificateCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get trust object.
     * @returns {TrustObjectRequest}
     */
    get trustObject() {
        return new trust_object_request_1.TrustObjectRequest(this._json.trust_object);
    }
    /**
     * Get the json representation of this class.
     * @returns {CertificateCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CertificateCreateRequest = CertificateCreateRequest;


/***/ }),
/* 872 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CSRCreateRequest = void 0;
const attribute_1 = __webpack_require__(87);
/* istanbul ignore next: autogenerated */
class CSRCreateRequest {
    constructor(firstParam, isTemporal, subject, algorithm, keySize) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                is_temporal: isTemporal,
                subject: subject,
                algorithm: algorithm,
                key_size: keySize
            };
        }
        else if (firstParam instanceof CSRCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get subject.
     * @returns {Array<Attribute>}
     */
    get subject() {
        return this._json.subject.map(it => new attribute_1.Attribute(it));
    }
    /**
     * Get algorithm.
     * @returns {string}
     */
    get algorithm() {
        return this._json.algorithm;
    }
    /**
     * Get key size.
     * @returns {number}
     */
    get keySize() {
        return this._json.key_size;
    }
    /**
     * Get the json representation of this class.
     * @returns {CSRCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CSRCreateRequest = CSRCreateRequest;


/***/ }),
/* 873 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SelfSignCertificateRequest = void 0;
/* istanbul ignore next: autogenerated */
class SelfSignCertificateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                no_of_days: firstParam
            };
        }
        else if (firstParam instanceof SelfSignCertificateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get no of days.
     * @returns {number}
     */
    get noOfDays() {
        return this._json.no_of_days;
    }
    /**
     * Get the json representation of this class.
     * @returns {SelfSignCertificateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SelfSignCertificateRequest = SelfSignCertificateRequest;


/***/ }),
/* 874 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 875 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 876 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 877 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 878 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 879 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DhcpServiceUpdateRequest = void 0;
const dhcp_pool_update_request_1 = __webpack_require__(573);
/**
 * Dhcp Service Update Request.
 */
/* istanbul ignore next: autogenerated */
class DhcpServiceUpdateRequest {
    constructor(firstParam, enabled, dhcpPools) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                dhcp_pools: dhcpPools
            };
        }
        else if (firstParam instanceof DhcpServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get dhcp pools.
     * @returns {Array<DHCPPoolUpdateRequest>}
     */
    get dhcpPools() {
        return this._json.dhcp_pools.map(it => new dhcp_pool_update_request_1.DHCPPoolUpdateRequest(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {DhcpServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DhcpServiceUpdateRequest = DhcpServiceUpdateRequest;


/***/ }),
/* 880 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 881 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 882 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 883 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 884 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 885 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 886 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 887 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 888 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 889 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 890 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 891 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 892 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 893 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 894 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 895 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayDhcpUpdateRequest = void 0;
const edge_gateway_dhcp_ip_pool_1 = __webpack_require__(146);
const edge_gateway_dhcp_logging_1 = __webpack_require__(148);
const edge_gateway_dhcp_relay_1 = __webpack_require__(149);
const edge_gateway_dhcp_static_binding_1 = __webpack_require__(150);
/* istanbul ignore next: autogenerated */
class EdgeGatewayDhcpUpdateRequest {
    constructor(firstParam, staticBindings, ipPools, logging, relay) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                static_bindings: staticBindings,
                ip_pools: ipPools,
                logging: logging,
                relay: relay
            };
        }
        else if (firstParam instanceof EdgeGatewayDhcpUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get static bindings.
     * @returns {Array<EdgeGatewayDhcpStaticBinding>}
     */
    get staticBindings() {
        return this._json.static_bindings.map(it => new edge_gateway_dhcp_static_binding_1.EdgeGatewayDhcpStaticBinding(it));
    }
    /**
     * Get ip pools.
     * @returns {Array<EdgeGatewayDhcpIpPool>}
     */
    get ipPools() {
        return this._json.ip_pools.map(it => new edge_gateway_dhcp_ip_pool_1.EdgeGatewayDhcpIpPool(it));
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayDhcpLogging}
     */
    get logging() {
        return new edge_gateway_dhcp_logging_1.EdgeGatewayDhcpLogging(this._json.logging);
    }
    /**
     * Get relay.
     * @returns {EdgeGatewayDhcpRelay}
     */
    get relay() {
        return new edge_gateway_dhcp_relay_1.EdgeGatewayDhcpRelay(this._json.relay);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayDhcpUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayDhcpUpdateRequest = EdgeGatewayDhcpUpdateRequest;


/***/ }),
/* 896 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Firewall action Enum and Type
 * This file export both and Enum and a Type
 *
 * It can be used in different ways:
 * - FirewallAction['DENY']
 * - FirewallAction.DENY
 *
 * Always use type for function parameters !
 *
 * Example:
 * ------------------------------------------------------
 * function print(firewallAction: FirewallActionType) {
 *   const action = FirewallAction[firewallAction];
 *   if (action === FirewallAction.DENY) {
 *      ...
 *   }
 * }
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallAction = void 0;
/**
 * Firewall Action Enum
 */
var FirewallAction;
(function (FirewallAction) {
    FirewallAction[FirewallAction["ACCEPT"] = 0] = "ACCEPT";
    FirewallAction[FirewallAction["DENY"] = 1] = "DENY";
})(FirewallAction = exports.FirewallAction || (exports.FirewallAction = {}));


/***/ }),
/* 897 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 898 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 899 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 900 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 901 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 902 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 903 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 904 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 905 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 906 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 907 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 908 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 909 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 910 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallRuleService = void 0;
/**
 * Firewall Rule Service
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallRuleService {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get port.
     * @returns {Array<string>}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get source port.
     * @returns {Array<string>}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get icmp type.
     * @returns {string}
     */
    get icmpType() {
        return this._json.icmp_type;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallRuleServiceJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallRuleService = EdgeGatewayFirewallRuleService;


/***/ }),
/* 911 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayFirewallUpdateRequest = void 0;
const edge_gateway_firewall_default_policy_1 = __webpack_require__(153);
const edge_gateway_firewall_global_config_1 = __webpack_require__(154);
const edge_gateway_firewall_rule_1 = __webpack_require__(155);
/**
 * Edge Gateway Firewall Update Request
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayFirewallUpdateRequest {
    constructor(firstParam, firewallGlobalConfig, firewallDefaultPolicy, firewallRules) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                firewall_global_config: firewallGlobalConfig,
                firewall_default_policy: firewallDefaultPolicy,
                firewall_rules: firewallRules
            };
        }
        else if (firstParam instanceof EdgeGatewayFirewallUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get firewall global config.
     * @returns {EdgeGatewayFirewallGlobalConfig}
     */
    get firewallGlobalConfig() {
        return new edge_gateway_firewall_global_config_1.EdgeGatewayFirewallGlobalConfig(this._json.firewall_global_config);
    }
    /**
     * Get firewall default policy.
     * @returns {EdgeGatewayFirewallDefaultPolicy}
     */
    get firewallDefaultPolicy() {
        return new edge_gateway_firewall_default_policy_1.EdgeGatewayFirewallDefaultPolicy(this._json.firewall_default_policy);
    }
    /**
     * Get firewall rules.
     * @returns {Array<EdgeGatewayFirewallRule>}
     */
    get firewallRules() {
        return this._json.firewall_rules.map(r => new edge_gateway_firewall_rule_1.EdgeGatewayFirewallRule(r));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayFirewallUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayFirewallUpdateRequest = EdgeGatewayFirewallUpdateRequest;


/***/ }),
/* 912 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 913 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 914 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 915 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 916 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 917 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 918 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecComplianceSuiteTypeEnum = void 0;
var EdgeGatewayIpsecComplianceSuiteTypeEnum;
(function (EdgeGatewayIpsecComplianceSuiteTypeEnum) {
    EdgeGatewayIpsecComplianceSuiteTypeEnum["NONE"] = "NONE";
    EdgeGatewayIpsecComplianceSuiteTypeEnum["CNSA"] = "CNSA";
    EdgeGatewayIpsecComplianceSuiteTypeEnum["PRIME"] = "PRIME";
    EdgeGatewayIpsecComplianceSuiteTypeEnum["SUITE_B_GCM_128"] = "SUITE_B_GCM_128";
    EdgeGatewayIpsecComplianceSuiteTypeEnum["SUITE_B_GCM_256"] = "SUITE_B_GCM_256";
    EdgeGatewayIpsecComplianceSuiteTypeEnum["FOUNDATION"] = "FOUNDATION";
})(EdgeGatewayIpsecComplianceSuiteTypeEnum = exports.EdgeGatewayIpsecComplianceSuiteTypeEnum || (exports.EdgeGatewayIpsecComplianceSuiteTypeEnum = {}));


/***/ }),
/* 919 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecDigestAlgorithmTypeEnum = void 0;
var EdgeGatewayIpsecDigestAlgorithmTypeEnum;
(function (EdgeGatewayIpsecDigestAlgorithmTypeEnum) {
    EdgeGatewayIpsecDigestAlgorithmTypeEnum["SHA_1"] = "SHA_1";
    EdgeGatewayIpsecDigestAlgorithmTypeEnum["SHA_256"] = "SHA_256";
})(EdgeGatewayIpsecDigestAlgorithmTypeEnum = exports.EdgeGatewayIpsecDigestAlgorithmTypeEnum || (exports.EdgeGatewayIpsecDigestAlgorithmTypeEnum = {}));


/***/ }),
/* 920 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecEncryptionAlgorithmTypeEnum = void 0;
var EdgeGatewayIpsecEncryptionAlgorithmTypeEnum;
(function (EdgeGatewayIpsecEncryptionAlgorithmTypeEnum) {
    EdgeGatewayIpsecEncryptionAlgorithmTypeEnum["AES"] = "AES";
    EdgeGatewayIpsecEncryptionAlgorithmTypeEnum["AES_256"] = "AES_256";
    EdgeGatewayIpsecEncryptionAlgorithmTypeEnum["TRIPLE_DES"] = "TRIPLE_DES";
    EdgeGatewayIpsecEncryptionAlgorithmTypeEnum["AES_GCM"] = "AES_GCM";
})(EdgeGatewayIpsecEncryptionAlgorithmTypeEnum = exports.EdgeGatewayIpsecEncryptionAlgorithmTypeEnum || (exports.EdgeGatewayIpsecEncryptionAlgorithmTypeEnum = {}));


/***/ }),
/* 921 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIpsecIkeOptionTypeEnum = void 0;
var EdgeGatewayIpsecIkeOptionTypeEnum;
(function (EdgeGatewayIpsecIkeOptionTypeEnum) {
    EdgeGatewayIpsecIkeOptionTypeEnum["IKEV_1"] = "IKEV_1";
    EdgeGatewayIpsecIkeOptionTypeEnum["IKEV_2"] = "IKEV_2";
    EdgeGatewayIpsecIkeOptionTypeEnum["IKE_FLEX"] = "IKE_FLEX";
})(EdgeGatewayIpsecIkeOptionTypeEnum = exports.EdgeGatewayIpsecIkeOptionTypeEnum || (exports.EdgeGatewayIpsecIkeOptionTypeEnum = {}));


/***/ }),
/* 922 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIPsecSessionTypeEnum = void 0;
var EdgeGatewayIPsecSessionTypeEnum;
(function (EdgeGatewayIPsecSessionTypeEnum) {
    EdgeGatewayIPsecSessionTypeEnum["POLICY_BASED_SESSION"] = "POLICY_BASED_SESSION";
    EdgeGatewayIPsecSessionTypeEnum["ROUTE_BASED_SESSION"] = "ROUTE_BASED_SESSION";
})(EdgeGatewayIPsecSessionTypeEnum = exports.EdgeGatewayIPsecSessionTypeEnum || (exports.EdgeGatewayIPsecSessionTypeEnum = {}));


/***/ }),
/* 923 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayIPsecUpdateRequest = void 0;
const edge_gateway_ipsec_global_1 = __webpack_require__(157);
const edge_gateway_ipsec_logging_1 = __webpack_require__(158);
const edge_gateway_ipsec_site_1 = __webpack_require__(159);
/* istanbul ignore next: autogenerated */
class EdgeGatewayIPsecUpdateRequest {
    constructor(firstParam, logging, sites, global) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                logging: logging,
                sites: sites,
                global: global
            };
        }
        else if (firstParam instanceof EdgeGatewayIPsecUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayIpsecLogging}
     */
    get logging() {
        return new edge_gateway_ipsec_logging_1.EdgeGatewayIpsecLogging(this._json.logging);
    }
    /**
     * Get sites.
     * @returns {Array<EdgeGatewayIpsecSite>}
     */
    get sites() {
        return this._json.sites.map(it => new edge_gateway_ipsec_site_1.EdgeGatewayIpsecSite(it));
    }
    /**
     * Get global.
     * @returns {EdgeGatewayIpsecGlobal}
     */
    get global() {
        return new edge_gateway_ipsec_global_1.EdgeGatewayIpsecGlobal(this._json.global);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayIPsecUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayIPsecUpdateRequest = EdgeGatewayIPsecUpdateRequest;


/***/ }),
/* 924 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 925 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 926 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 927 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 928 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 929 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 930 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 931 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 932 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 933 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 934 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 935 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 936 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 937 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2vpnEncryptionAlgorithm = void 0;
var EdgeGatewayL2vpnEncryptionAlgorithm;
(function (EdgeGatewayL2vpnEncryptionAlgorithm) {
    EdgeGatewayL2vpnEncryptionAlgorithm["ECDHE_RSA_AES128_GCM_SHA256"] = "ECDHE_RSA_AES128_GCM_SHA256";
    EdgeGatewayL2vpnEncryptionAlgorithm["ECDHE_RSA_AES256_GCM_SHA384"] = "ECDHE_RSA_AES256_GCM_SHA384";
    EdgeGatewayL2vpnEncryptionAlgorithm["AES128_GCM_SHA256"] = "AES128_GCM_SHA256";
    EdgeGatewayL2vpnEncryptionAlgorithm["NULL_SHA256"] = "NULL_SHA256";
    EdgeGatewayL2vpnEncryptionAlgorithm["NULL_MD5"] = "NULL_MD5";
})(EdgeGatewayL2vpnEncryptionAlgorithm = exports.EdgeGatewayL2vpnEncryptionAlgorithm || (exports.EdgeGatewayL2vpnEncryptionAlgorithm = {}));


/***/ }),
/* 938 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnSiteTypeEnum = void 0;
/**
 * Edge Gateway L2 VPN Site Type Enum
 */
var EdgeGatewayL2VpnSiteTypeEnum;
(function (EdgeGatewayL2VpnSiteTypeEnum) {
    EdgeGatewayL2VpnSiteTypeEnum["CLIENT"] = "CLIENT";
    EdgeGatewayL2VpnSiteTypeEnum["SERVER"] = "SERVER";
})(EdgeGatewayL2VpnSiteTypeEnum = exports.EdgeGatewayL2VpnSiteTypeEnum || (exports.EdgeGatewayL2VpnSiteTypeEnum = {}));


/***/ }),
/* 939 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2vpnTunnelStatusEnum = void 0;
/**
 * Edge Gateway L2VPN Tunnel Status Enum
 */
var EdgeGatewayL2vpnTunnelStatusEnum;
(function (EdgeGatewayL2vpnTunnelStatusEnum) {
    EdgeGatewayL2vpnTunnelStatusEnum["UP"] = "UP";
    EdgeGatewayL2vpnTunnelStatusEnum["DOWN"] = "DOWN";
})(EdgeGatewayL2vpnTunnelStatusEnum = exports.EdgeGatewayL2vpnTunnelStatusEnum || (exports.EdgeGatewayL2vpnTunnelStatusEnum = {}));


/***/ }),
/* 940 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayL2VpnUpdateRequest = void 0;
const edge_gateway_l2vpn_logging_1 = __webpack_require__(160);
const edge_gateway_l2vpn_site_1 = __webpack_require__(161);
/* istanbul ignore next: autogenerated */
class EdgeGatewayL2VpnUpdateRequest {
    constructor(firstParam, logging, l2VpnSiteType, l2VpnSite) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                logging: logging,
                l2_vpn_site_type: l2VpnSiteType,
                l2_vpn_site: l2VpnSite
            };
        }
        else if (firstParam instanceof EdgeGatewayL2VpnUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewayL2VpnLogging}
     */
    get logging() {
        return new edge_gateway_l2vpn_logging_1.EdgeGatewayL2VpnLogging(this._json.logging);
    }
    /**
     * Get l2 vpn site type.
     * @returns {EdgeGatewayL2VpnSiteType}
     */
    get l2VpnSiteType() {
        return this._json.l2_vpn_site_type;
    }
    /**
     * Get l2 vpn site.
     * @returns {EdgeGatewayL2VpnSite}
     */
    get l2VpnSite() {
        return new edge_gateway_l2vpn_site_1.EdgeGatewayL2VpnSite(this._json.l2_vpn_site);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayL2VpnUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayL2VpnUpdateRequest = EdgeGatewayL2VpnUpdateRequest;


/***/ }),
/* 941 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 942 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 943 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 944 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 945 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * NAT action Enum and Type
 * This file export both and Enum and a Type
 *
 * It can be used in different ways:
 * - EdgeGatewayNatAction['SNAT']
 * - EdgeGatewayNatAction.SNAT
 *
 * Example:
 * ------------------------------------------------------
 * function print(natAction: EdgeGatewayNatActionType) {
 *   const action = EdgeGatewayNatAction[natAction];
 *   if (action === EdgeGatewayNatAction.DENY) {
 *      ...
 *   }
 * }
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayNatAction = void 0;
/**
 * Nat Action Enum
 */
var EdgeGatewayNatAction;
(function (EdgeGatewayNatAction) {
    EdgeGatewayNatAction["SNAT"] = "SNAT";
    EdgeGatewayNatAction["DNAT"] = "DNAT";
})(EdgeGatewayNatAction = exports.EdgeGatewayNatAction || (exports.EdgeGatewayNatAction = {}));


/***/ }),
/* 946 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayNatUpdateRequest = void 0;
const edge_gateway_nat64_rule_1 = __webpack_require__(164);
const edge_gateway_nat_rule_1 = __webpack_require__(165);
/**
 * Edge Gateway NAT Update Request
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayNatUpdateRequest {
    constructor(firstParam, natRules, nat64Rules) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                nat_rules: natRules,
                nat64_rules: nat64Rules
            };
        }
        else if (firstParam instanceof EdgeGatewayNatUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get nat rules.
     * @returns {Array<EdgeGatewayNatRule>}
     */
    get natRules() {
        return this._json.nat_rules.map(it => new edge_gateway_nat_rule_1.EdgeGatewayNatRule(it));
    }
    /**
     * Get nat64 rules.
     * @returns {Array<EdgeGatewayNat64Rule>}
     */
    get nat64Rules() {
        return this._json.nat64_rules.map(it => new edge_gateway_nat64_rule_1.EdgeGatewayNat64Rule(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayNatUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayNatUpdateRequest = EdgeGatewayNatUpdateRequest;


/***/ }),
/* 947 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 948 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 949 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 950 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 951 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 952 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 953 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 954 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 955 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 956 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 957 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 958 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 959 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 960 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 961 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 962 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 963 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 964 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 965 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 966 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 967 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 968 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 969 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 970 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 971 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 972 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 973 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 975 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewayRoutingUpdateRequest = void 0;
const routing_bgp_config_update_request_1 = __webpack_require__(574);
const routing_global_config_update_request_1 = __webpack_require__(575);
const routing_ospf_config_update_request_1 = __webpack_require__(576);
const routing_static_config_update_request_1 = __webpack_require__(577);
/**
 * Edge Gateway Routing Update Request
 */
/* istanbul ignore next: autogenerated */
class EdgeGatewayRoutingUpdateRequest {
    constructor(firstParam, routingGlobalConfig, routingStaticConfig, routingOspfConfig, routingBgpConfig) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                routing_global_config: routingGlobalConfig,
                routing_static_config: routingStaticConfig,
                routing_ospf_config: routingOspfConfig,
                routing_bgp_config: routingBgpConfig
            };
        }
        else if (firstParam instanceof EdgeGatewayRoutingUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get routing global config.
     * @returns {RoutingGlobalConfigUpdateRequest}
     */
    get routingGlobalConfig() {
        return new routing_global_config_update_request_1.RoutingGlobalConfigUpdateRequest(this._json.routing_global_config);
    }
    /**
     * Get routing static config.
     * @returns {RoutingStaticConfigUpdateRequest}
     */
    get routingStaticConfig() {
        return new routing_static_config_update_request_1.RoutingStaticConfigUpdateRequest(this._json.routing_static_config);
    }
    /**
     * Get routing ospf config.
     * @returns {RoutingOSPFConfigUpdateRequest}
     */
    get routingOspfConfig() {
        return new routing_ospf_config_update_request_1.RoutingOSPFConfigUpdateRequest(this._json.routing_ospf_config);
    }
    /**
     * Get routing bgp config.
     * @returns {RoutingBGPConfigUpdateRequest | undefined}
     */
    get routingBgpConfig() {
        return this._json.routing_bgp_config ? new routing_bgp_config_update_request_1.RoutingBGPConfigUpdateRequest(this._json.routing_bgp_config) : undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewayRoutingUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewayRoutingUpdateRequest = EdgeGatewayRoutingUpdateRequest;


/***/ }),
/* 976 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 977 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 978 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 979 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySSHSettingsUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySSHSettingsUpdateRequest {
    constructor(firstParam, userName, password, sshLoginBanner, passwordExpiry) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                remote_access: firstParam,
                user_name: userName,
                password: password,
                ssh_login_banner: sshLoginBanner,
                password_expiry: passwordExpiry
            };
        }
        else if (firstParam instanceof EdgeGatewaySSHSettingsUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get remote access.
     * @returns {boolean}
     */
    get remoteAccess() {
        return this._json.remote_access;
    }
    /**
     * Get user name.
     * @returns {string}
     */
    get userName() {
        return this._json.user_name;
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get ssh login banner.
     * @returns {string}
     */
    get sshLoginBanner() {
        return this._json.ssh_login_banner;
    }
    /**
     * Get password expiry.
     * @returns {number}
     */
    get passwordExpiry() {
        return this._json.password_expiry;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySSHSettingsUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySSHSettingsUpdateRequest = EdgeGatewaySSHSettingsUpdateRequest;


/***/ }),
/* 980 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySyslogUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeGatewaySyslogUpdateRequest {
    constructor(firstParam, protocol, serverAddresses) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                protocol: protocol,
                server_addresses: serverAddresses
            };
        }
        else if (firstParam instanceof EdgeGatewaySyslogUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get server addresses.
     * @returns {Array<string>}
     */
    get serverAddresses() {
        return this._json.server_addresses;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySyslogJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySyslogUpdateRequest = EdgeGatewaySyslogUpdateRequest;


/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 982 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 983 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 984 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 985 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1003 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnAuthServerTypeEnum = void 0;
var EdgeGatewaySslVpnAuthServerTypeEnum;
(function (EdgeGatewaySslVpnAuthServerTypeEnum) {
    EdgeGatewaySslVpnAuthServerTypeEnum["LOCAL"] = "LOCAL";
    EdgeGatewaySslVpnAuthServerTypeEnum["LDAP"] = "LDAP";
    EdgeGatewaySslVpnAuthServerTypeEnum["AD"] = "AD";
    EdgeGatewaySslVpnAuthServerTypeEnum["RADIUS"] = "RADIUS";
    EdgeGatewaySslVpnAuthServerTypeEnum["ACE"] = "ACE";
})(EdgeGatewaySslVpnAuthServerTypeEnum = exports.EdgeGatewaySslVpnAuthServerTypeEnum || (exports.EdgeGatewaySslVpnAuthServerTypeEnum = {}));


/***/ }),
/* 1005 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnCipherTypeEnum = void 0;
var EdgeGatewaySslVpnCipherTypeEnum;
(function (EdgeGatewaySslVpnCipherTypeEnum) {
    EdgeGatewaySslVpnCipherTypeEnum["AES128_SHA"] = "AES128_SHA";
    EdgeGatewaySslVpnCipherTypeEnum["AES256_SHA"] = "AES256_SHA";
    EdgeGatewaySslVpnCipherTypeEnum["AES128_GCM_SHA256"] = "AES128_GCM_SHA256";
    EdgeGatewaySslVpnCipherTypeEnum["ECDHE_RSA_AES128_GCM_SHA256"] = "ECDHE_RSA_AES128_GCM_SHA256";
    EdgeGatewaySslVpnCipherTypeEnum["ECDHE_RSA_AES256_GCM_SHA384"] = "ECDHE_RSA_AES256_GCM_SHA384";
    EdgeGatewaySslVpnCipherTypeEnum["DES_CBC3_SHA"] = "DES_CBC3_SHA";
})(EdgeGatewaySslVpnCipherTypeEnum = exports.EdgeGatewaySslVpnCipherTypeEnum || (exports.EdgeGatewaySslVpnCipherTypeEnum = {}));


/***/ }),
/* 1006 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeGatewaySslVpnUpdateRequest = void 0;
const edge_gateway_ssl_vpn_1 = __webpack_require__(178);
const edge_gateway_ssl_vpn_advanced_config_1 = __webpack_require__(179);
const edge_gateway_ssl_vpn_authentication_configuration_1 = __webpack_require__(180);
const edge_gateway_ssl_vpn_client_configuration_1 = __webpack_require__(181);
const edge_gateway_ssl_vpn_client_install_package_1 = __webpack_require__(182);
const edge_gateway_ssl_vpn_ip_address_pool_1 = __webpack_require__(183);
const edge_gateway_ssl_vpn_logging_1 = __webpack_require__(184);
const edge_gateway_ssl_vpn_private_network_1 = __webpack_require__(185);
const edge_gateway_ssl_vpn_server_settings_1 = __webpack_require__(186);
const edge_gateway_ssl_vpn_user_1 = __webpack_require__(187);
class EdgeGatewaySslVpnUpdateRequest {
    constructor(firstParam) {
        if (firstParam instanceof edge_gateway_ssl_vpn_1.EdgeGatewaySslVpn) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging.
     * @returns {EdgeGatewaySslVpnLogging}
     */
    get logging() {
        return new edge_gateway_ssl_vpn_logging_1.EdgeGatewaySslVpnLogging(this._json.logging);
    }
    /**
     * Get advanced config.
     * @returns {EdgeGatewaySslVpnAdvancedConfig}
     */
    get advancedConfig() {
        return new edge_gateway_ssl_vpn_advanced_config_1.EdgeGatewaySslVpnAdvancedConfig(this._json.advanced_config);
    }
    /**
     * Get client configuration.
     * @returns {EdgeGatewaySslVpnClientConfiguration}
     */
    get clientConfiguration() {
        return new edge_gateway_ssl_vpn_client_configuration_1.EdgeGatewaySslVpnClientConfiguration(this._json.client_configuration);
    }
    /**
     * Get ip address pools.
     * @returns {Array<EdgeGatewaySslVpnIpAddressPool>}
     */
    get ipAddressPools() {
        return this._json.ip_address_pools.map(it => new edge_gateway_ssl_vpn_ip_address_pool_1.EdgeGatewaySslVpnIpAddressPool(it));
    }
    /**
     * Get private networks.
     * @returns {Array<EdgeGatewaySslVpnPrivateNetwork>}
     */
    get privateNetworks() {
        return this._json.private_networks.map(it => new edge_gateway_ssl_vpn_private_network_1.EdgeGatewaySslVpnPrivateNetwork(it));
    }
    /**
     * Get users.
     * @returns {Array<EdgeGatewaySslVpnUser>}
     */
    get users() {
        return this._json.users.map(it => new edge_gateway_ssl_vpn_user_1.EdgeGatewaySslVpnUser(it));
    }
    /**
     * Get client install packages.
     * @returns {Array<EdgeGatewaySslVpnClientInstallPackage>}
     */
    get clientInstallPackages() {
        return this._json.client_install_packages.map(it => new edge_gateway_ssl_vpn_client_install_package_1.EdgeGatewaySslVpnClientInstallPackage(it));
    }
    /**
     * Get authentication configuration.
     * @returns {EdgeGatewaySslVpnAuthenticationConfiguration}
     */
    get authenticationConfiguration() {
        return new edge_gateway_ssl_vpn_authentication_configuration_1.EdgeGatewaySslVpnAuthenticationConfiguration(this._json.authentication_configuration);
    }
    /**
     * Get server settings.
     * @returns {EdgeGatewaySslVpnServerSettings}
     */
    get serverSettings() {
        return new edge_gateway_ssl_vpn_server_settings_1.EdgeGatewaySslVpnServerSettings(this._json.server_settings);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeGatewaySslVpnJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeGatewaySslVpnUpdateRequest = EdgeGatewaySslVpnUpdateRequest;


/***/ }),
/* 1007 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1008 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1009 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1010 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1011 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1012 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1013 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1014 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1015 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1016 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1017 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeInterfaceUpdateRequest = void 0;
const subnet_participation_update_request_1 = __webpack_require__(578);
/**
 * Edge Interface Update Request.
 */
/* istanbul ignore next: autogenerated */
class EdgeInterfaceUpdateRequest {
    constructor(firstParam, name, inRateLimit, outRateLimit, interfaceType, applyRateLimit, useForDefaultRoute, network, networkUuid, subnetParticipation) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                display_name: firstParam,
                name: name,
                in_rate_limit: inRateLimit,
                out_rate_limit: outRateLimit,
                interface_type: interfaceType,
                apply_rate_limit: applyRateLimit,
                use_for_default_route: useForDefaultRoute,
                network: network,
                network_uuid: networkUuid,
                subnet_participation: subnetParticipation
            };
        }
        else if (firstParam instanceof EdgeInterfaceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get display name.
     * @returns {string}
     */
    get displayName() {
        return this._json.display_name;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get in rate limit.
     * @returns {number}
     */
    get inRateLimit() {
        return this._json.in_rate_limit;
    }
    /**
     * Get out rate limit.
     * @returns {number}
     */
    get outRateLimit() {
        return this._json.out_rate_limit;
    }
    /**
     * Get interface type.
     * @returns {string}
     */
    get interfaceType() {
        return this._json.interface_type;
    }
    /**
     * Get apply rate limit.
     * @returns {boolean}
     */
    get applyRateLimit() {
        return this._json.apply_rate_limit;
    }
    /**
     * Get use for default route.
     * @returns {boolean}
     */
    get useForDefaultRoute() {
        return this._json.use_for_default_route;
    }
    /**
     * Get network.
     * @returns {string}
     */
    get network() {
        return this._json.network;
    }
    /**
     * Get network uuid.
     * @returns {string}
     */
    get networkUuid() {
        return this._json.network_uuid;
    }
    /**
     * Get subnet participation.
     * @returns {Array<SubnetParticipationUpdateRequest>}
     */
    get subnetParticipation() {
        return this._json.subnet_participation.map(it => new subnet_participation_update_request_1.SubnetParticipationUpdateRequest(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeInterfaceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeInterfaceUpdateRequest = EdgeInterfaceUpdateRequest;


/***/ }),
/* 1018 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1019 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1020 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1021 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1022 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1023 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1024 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1025 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeFirewallRuleUpdateRequest = void 0;
/**
 * Edge Firewall Rule Update Request
 */
/* istanbul ignore next: autogenerated */
class EdgeFirewallRuleUpdateRequest {
    constructor(firstParam, destinationIp, destinationPortRange, direction, icmpSubType, id, policy, port, protocols, sourceIp, sourcePort, sourcePortRange, loggingEnabled, enabled, matchOnTranslate, idx) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                destination_ip: destinationIp,
                destination_port_range: destinationPortRange,
                direction: direction,
                icmp_sub_type: icmpSubType,
                id: id,
                policy: policy,
                port: port,
                protocols: protocols,
                source_ip: sourceIp,
                source_port: sourcePort,
                source_port_range: sourcePortRange,
                logging_enabled: loggingEnabled,
                enabled: enabled,
                match_on_translate: matchOnTranslate,
                idx: idx
            };
        }
        else if (firstParam instanceof EdgeFirewallRuleUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get destination ip.
     * @returns {string}
     */
    get destinationIp() {
        return this._json.destination_ip;
    }
    /**
     * Get destination port range.
     * @returns {string}
     */
    get destinationPortRange() {
        return this._json.destination_port_range;
    }
    /**
     * Get direction.
     * @returns {string}
     */
    get direction() {
        return this._json.direction;
    }
    /**
     * Get icmp sub type.
     * @returns {string}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get id.
     * @returns {string}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get policy.
     * @returns {string}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get protocols.
     * @returns {Array<string>}
     */
    get protocols() {
        return this._json.protocols;
    }
    /**
     * Get source ip.
     * @returns {string}
     */
    get sourceIp() {
        return this._json.source_ip;
    }
    /**
     * Get source port.
     * @returns {number}
     */
    get sourcePort() {
        return this._json.source_port;
    }
    /**
     * Get source port range.
     * @returns {string}
     */
    get sourcePortRange() {
        return this._json.source_port_range;
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get match on translate.
     * @returns {boolean}
     */
    get matchOnTranslate() {
        return this._json.match_on_translate;
    }
    /**
     * Get idx.
     * @returns {number}
     */
    get idx() {
        return this._json.idx;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeFirewallRuleUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeFirewallRuleUpdateRequest = EdgeFirewallRuleUpdateRequest;


/***/ }),
/* 1026 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeFirewallUpdateRequest = void 0;
/**
 * Edge Firewall Update Request.
 */
/* istanbul ignore next: autogenerated */
class EdgeFirewallUpdateRequest {
    constructor(firstParam, log, enabled, defaultAction, rules) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                log: log,
                enabled: enabled,
                default_action: defaultAction,
                rules: rules
            };
        }
        else if (firstParam instanceof EdgeFirewallUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get log.
     * @returns {boolean}
     */
    get log() {
        return this._json.log;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default action.
     * @returns {string}
     */
    get defaultAction() {
        return this._json.default_action;
    }
    /**
     * Get rules.
     * @returns {Array<EdgeFirewallRuleUpdateRequestJson>}
     */
    get rules() {
        return this._json.rules;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeFirewallUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeFirewallUpdateRequest = EdgeFirewallUpdateRequest;


/***/ }),
/* 1027 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1028 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1029 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1030 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1031 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1032 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1033 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1034 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1035 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1036 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1037 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1038 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1039 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1040 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1041 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1042 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1043 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1044 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeIpSecVpnServiceUpdateRequest = void 0;
const global_settings_request_1 = __webpack_require__(579);
const ip_sec_vpn_site_request_1 = __webpack_require__(580);
const logging_settings_request_1 = __webpack_require__(581);
/**
 * Edge Ip Sec Vpn Service Update Request.
 */
/* istanbul ignore next: autogenerated */
class EdgeIpSecVpnServiceUpdateRequest {
    constructor(firstParam, loggingSettings, globalSettings, sites) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                logging_settings: loggingSettings,
                global_settings: globalSettings,
                sites: sites
            };
        }
        else if (firstParam instanceof EdgeIpSecVpnServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get logging settings.
     * @returns {LoggingSettingsRequest}
     */
    get loggingSettings() {
        return new logging_settings_request_1.LoggingSettingsRequest(this._json.logging_settings);
    }
    /**
     * Get global settings.
     * @returns {GlobalSettingsRequest}
     */
    get globalSettings() {
        return new global_settings_request_1.GlobalSettingsRequest(this._json.global_settings);
    }
    /**
     * Get sites.
     * @returns {Array<IpSecVpnSiteRequest>}
     */
    get sites() {
        return this._json.sites.map(it => new ip_sec_vpn_site_request_1.IpSecVpnSiteRequest(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeIpSecVpnServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeIpSecVpnServiceUpdateRequest = EdgeIpSecVpnServiceUpdateRequest;


/***/ }),
/* 1045 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1046 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1047 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1048 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1049 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1050 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1051 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1052 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1053 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerServiceUpdateRequest = void 0;
const load_balancer_pool_update_request_1 = __webpack_require__(585);
const load_balancer_virtual_server_update_request_1 = __webpack_require__(586);
/**
 * Load Balancer Service Update Request.
 */
/* istanbul ignore next: autogenerated */
class LoadBalancerServiceUpdateRequest {
    constructor(firstParam, enabled, pools, virtualServers) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                pools: pools,
                virtual_servers: virtualServers
            };
        }
        else if (firstParam instanceof LoadBalancerServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get pools.
     * @returns {Array<LoadBalancerPoolUpdateRequest>}
     */
    get pools() {
        return this._json.pools.map(it => new load_balancer_pool_update_request_1.LoadBalancerPoolUpdateRequest(it));
    }
    /**
     * Get virtual servers.
     * @returns {Array<LoadBalancerVirtualServerUpdateRequest>}
     */
    get virtualServers() {
        return this._json.virtual_servers.map(it => new load_balancer_virtual_server_update_request_1.LoadBalancerVirtualServerUpdateRequest(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {LoadBalancerServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.LoadBalancerServiceUpdateRequest = LoadBalancerServiceUpdateRequest;


/***/ }),
/* 1054 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1055 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1056 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1057 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1058 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeNATRuleUpdateRequest = void 0;
/**
 * Edge Nat Rule Update Request
 */
/* istanbul ignore next: autogenerated */
class EdgeNATRuleUpdateRequest {
    constructor(firstParam, id, ruleType, enabled, icmpSubType, originalIp, originalPort, protocol, translatedIp, translatedPort, interfaceName, idx) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                id: id,
                rule_type: ruleType,
                enabled: enabled,
                icmp_sub_type: icmpSubType,
                original_ip: originalIp,
                original_port: originalPort,
                protocol: protocol,
                translated_ip: translatedIp,
                translated_port: translatedPort,
                interface: interfaceName,
                idx: idx
            };
        }
        else if (firstParam instanceof EdgeNATRuleUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get rule type.
     * @returns {string}
     */
    get ruleType() {
        return this._json.rule_type;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get icmp sub type.
     * @returns {string}
     */
    get icmpSubType() {
        return this._json.icmp_sub_type;
    }
    /**
     * Get original ip.
     * @returns {string}
     */
    get originalIp() {
        return this._json.original_ip;
    }
    /**
     * Get original port.
     * @returns {string}
     */
    get originalPort() {
        return this._json.original_port;
    }
    /**
     * Get protocol.
     * @returns {string}
     */
    get protocol() {
        return this._json.protocol;
    }
    /**
     * Get translated ip.
     * @returns {string}
     */
    get translatedIp() {
        return this._json.translated_ip;
    }
    /**
     * Get translated port.
     * @returns {string}
     */
    get translatedPort() {
        return this._json.translated_port;
    }
    /**
     * Get interface.
     * @returns {string}
     */
    get interface() {
        return this._json.interface;
    }
    /**
     * Get idx.
     * @returns {number}
     */
    get idx() {
        return this._json.idx;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeNATRuleUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeNATRuleUpdateRequest = EdgeNATRuleUpdateRequest;


/***/ }),
/* 1059 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NATServiceUpdateRequest = void 0;
/**
 * Nat Service Update Request.
 */
/* istanbul ignore next: autogenerated */
class NATServiceUpdateRequest {
    constructor(firstParam, natType, policy, rules, enabled) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                external_ip: firstParam,
                nat_type: natType,
                policy: policy,
                rules: rules,
                enabled: enabled
            };
        }
        else if (firstParam instanceof NATServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get external ip.
     * @returns {string}
     */
    get externalIp() {
        return this._json.external_ip;
    }
    /**
     * Get nat type.
     * @returns {string}
     */
    get natType() {
        return this._json.nat_type;
    }
    /**
     * Get policy.
     * @returns {string}
     */
    get policy() {
        return this._json.policy;
    }
    /**
     * Get rules.
     * @returns {Array<EdgeNATRuleUpdateRequestJson>}
     */
    get rules() {
        return this._json.rules;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {NATServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NATServiceUpdateRequest = NATServiceUpdateRequest;


/***/ }),
/* 1060 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1061 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1062 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1063 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1064 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1065 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1066 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1067 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1068 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1069 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreFirewallRequest = void 0;
/**
 * Restore Firewall Request.
 */
/* istanbul ignore next: autogenerated */
class RestoreFirewallRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                restore_point_time: firstParam
            };
        }
        else if (firstParam instanceof Date) {
            this._json = {
                restore_point_time: firstParam.getTime()
            };
        }
        else if (firstParam instanceof RestoreFirewallRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreFirewallRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreFirewallRequest = RestoreFirewallRequest;


/***/ }),
/* 1070 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RestoreNATRequest = void 0;
/**
 * Restore NAT Request.
 */
/* istanbul ignore next: autogenerated */
class RestoreNATRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                restore_point_time: firstParam
            };
        }
        else if (firstParam instanceof Date) {
            this._json = {
                restore_point_time: firstParam.getTime()
            };
        }
        else if (firstParam instanceof RestoreNATRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get restore point time.
     * @returns {number}
     */
    get restorePointTime() {
        return new Date(this._json.restore_point_time);
    }
    /**
     * Get the json representation of this class.
     * @returns {RestoreNATRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RestoreNATRequest = RestoreNATRequest;


/***/ }),
/* 1071 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1072 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1073 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1074 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1075 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1076 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1077 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1078 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1079 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1080 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1081 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1082 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1083 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnServerConfigUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class EdgeSslVpnServerConfigUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam
            };
        }
        else if (firstParam instanceof EdgeSslVpnServerConfigUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnServerConfigUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnServerConfigUpdateRequest = EdgeSslVpnServerConfigUpdateRequest;


/***/ }),
/* 1084 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EdgeSslVpnServiceUpdateRequest = void 0;
const edge_ssl_vpn_authentication_update_request_1 = __webpack_require__(589);
const edge_ssl_vpn_client_install_package_update_request_1 = __webpack_require__(590);
const edge_ssl_vpn_ip_pool_update_request_1 = __webpack_require__(592);
const edge_ssl_vpn_local_authentication_server_update_request_1 = __webpack_require__(593);
const edge_ssl_vpn_private_network_update_request_1 = __webpack_require__(594);
const edge_ssl_vpn_user_update_request_1 = __webpack_require__(595);
/* istanbul ignore next: autogenerated */
class EdgeSslVpnServiceUpdateRequest {
    constructor(firstParam, enabled, logEnabled, logLevel, ip, port, cipherList, privateNetworks, users, ipPools, installPackages, authenticationConfig, authentication) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                log_enabled: logEnabled,
                log_level: logLevel,
                ip: ip,
                port: port,
                cipher_list: cipherList,
                private_networks: privateNetworks,
                users: users,
                ip_pools: ipPools,
                install_packages: installPackages,
                authentication_config: authenticationConfig,
                authentication: authentication
            };
        }
        else if (firstParam instanceof EdgeSslVpnServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get log enabled.
     * @returns {boolean}
     */
    get logEnabled() {
        return this._json.log_enabled;
    }
    /**
     * Get log level.
     * @returns {string}
     */
    get logLevel() {
        return this._json.log_level;
    }
    /**
     * Get ip.
     * @returns {string}
     */
    get ip() {
        return this._json.ip;
    }
    /**
     * Get port.
     * @returns {number}
     */
    get port() {
        return this._json.port;
    }
    /**
     * Get cipher list.
     * @returns {Array<string>}
     */
    get cipherList() {
        return this._json.cipher_list;
    }
    /**
     * Get private networks.
     * @returns {Array<EdgeSslVpnPrivateNetworkUpdateRequest>}
     */
    get privateNetworks() {
        return this._json.private_networks.map(req => new edge_ssl_vpn_private_network_update_request_1.EdgeSslVpnPrivateNetworkUpdateRequest(req));
    }
    /**
     * Get users.
     * @returns {Array<EdgeSslVpnUserUpdateRequest>}
     */
    get users() {
        return this._json.users.map(req => new edge_ssl_vpn_user_update_request_1.EdgeSslVpnUserUpdateRequest(req));
    }
    /**
     * Get ip pools.
     * @returns {Array<EdgeSslVpnIpPoolUpdateRequest>}
     */
    get ipPools() {
        return this._json.ip_pools.map(req => new edge_ssl_vpn_ip_pool_update_request_1.EdgeSslVpnIpPoolUpdateRequest(req));
    }
    /**
     * Get install packages.
     * @returns {Array<EdgeSslVpnClientInstallPackageUpdateRequest>}
     */
    get installPackages() {
        return this._json.install_packages.map(req => new edge_ssl_vpn_client_install_package_update_request_1.EdgeSslVpnClientInstallPackageUpdateRequest(req));
    }
    /**
     * Get authentication config.
     * @returns {EdgeSslVpnLocalAuthenticationServerUpdateRequest}
     */
    get authenticationConfig() {
        return new edge_ssl_vpn_local_authentication_server_update_request_1.EdgeSslVpnLocalAuthenticationServerUpdateRequest(this._json.authentication_config);
    }
    /**
     * Get authentication.
     * @returns {EdgeSslVpnAuthenticationUpdateRequest}
     */
    get authentication() {
        return new edge_ssl_vpn_authentication_update_request_1.EdgeSslVpnAuthenticationUpdateRequest(this._json.authentication);
    }
    /**
     * Get the json representation of this class.
     * @returns {EdgeSslVpnServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.EdgeSslVpnServiceUpdateRequest = EdgeSslVpnServiceUpdateRequest;


/***/ }),
/* 1085 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1086 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1087 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1088 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1089 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticRoutingUpdateRequest = void 0;
const static_route_update_request_1 = __webpack_require__(596);
/**
 * Static Routing Update Request.
 */
/* istanbul ignore next: autogenerated */
class StaticRoutingUpdateRequest {
    constructor(firstParam, enabled, routes) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                routes: routes
            };
        }
        else if (firstParam instanceof StaticRoutingUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get routes.
     * @returns {Array<StaticRouteUpdateRequest>}
     */
    get routes() {
        return this._json.routes.map(it => new static_route_update_request_1.StaticRouteUpdateRequest(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {StaticRoutingUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StaticRoutingUpdateRequest = StaticRoutingUpdateRequest;


/***/ }),
/* 1090 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1091 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1092 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1093 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1094 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1095 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1096 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1097 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1098 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1099 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RoleCreationRequestBuilder = exports.RoleCreationRequest = void 0;
/**
 * Role Creation Request Implementation.
 */
class RoleCreationRequest {
    /**
     * Creates a new role creation request.
     * @param {string} companyId the ID of the company that the role will be created in
     * @param {string} name the name of the role
     * @param {string} description the description of the role
     * @param {Array<Policy>} policies the policies that define the role
     */
    constructor(companyId, name, description, policies) {
        this.companyId = companyId;
        this.name = name;
        this.description = description;
        this.policies = policies;
    }
    /**
     * Gets the raw JSON object for the API.
     * @returns {RoleCreationRequestJson} JSON representation
     */
    get json() {
        return {
            company_id: this.companyId,
            name: this.name,
            description: this.description,
            policies: this.policies.map(it => it.json)
        };
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this.json, undefined, 2);
    }
    /**
     * Return the policy for the specified uuid.
     * @param {string} entityUuid
     * @returns {Policy | null}
     */
    getPolicy(entityUuid) {
        for (const p of this.policies) {
            if (p.entityUuid === entityUuid) {
                return p;
            }
        }
        return null;
    }
}
exports.RoleCreationRequest = RoleCreationRequest;
/**
 * Role Creation Request Builder.
 */
class RoleCreationRequestBuilder {
    constructor(_companyId, _name, _description) {
        this._companyId = _companyId;
        this._name = _name;
        this._description = _description;
        this._policies = {};
    }
    /**
     * Sets the name for the role creation request.
     * @param {string} name
     * @returns {RoleCreationRequestBuilder} the builder
     */
    setName(name) {
        this._name = name;
        return this;
    }
    /**
     * Sets the description for the role creation request.
     * @param {string} description
     * @returns {RoleCreationRequestBuilder} the builder
     */
    setDescription(description) {
        this._description = description;
        return this;
    }
    /**
     * Sets a policy on the role creation request.
     * @param {Policy} policy
     * @returns {RoleCreationRequestBuilder} the builder
     */
    setPolicy(policy) {
        this._policies[policy.entityUuid] = policy;
        return this;
    }
    /**
     * Removes a policy for a specified entity.
     * @param {string} entityUuid the UUID of the entity
     * @returns {RoleCreationRequestBuilder} the builder
     */
    removePolicy(entityUuid) {
        delete this._policies[entityUuid];
        return this;
    }
    /**
     * Clears all policies.
     * @returns {RoleCreationRequestBuilder} the builder
     */
    clearPolicies() {
        this._policies = {};
        return this;
    }
    /**
     * Builds the RoleCreationRequest.
     * @returns {RoleCreationRequest}
     */
    build() {
        return new RoleCreationRequest(this._companyId, this._name, this._description, Object.keys(this._policies).map(it => this._policies[it]));
    }
}
exports.RoleCreationRequestBuilder = RoleCreationRequestBuilder;


/***/ }),
/* 1105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegratedBackupStatus = void 0;
/**
 * Enumeration of possible backup states associated with Integrated Backups.
 * {IntegratedBackupStatus.PARTIAL_BACKUPS_CONFIGURED} only applies to composite entities (not VMs).
 */
var IntegratedBackupStatus;
(function (IntegratedBackupStatus) {
    IntegratedBackupStatus["FULL_BACKUPS_CONFIGURED"] = "FULL_BACKUPS_CONFIGURED";
    IntegratedBackupStatus["PARTIAL_BACKUPS_CONFIGURED"] = "PARTIAL_BACKUPS_CONFIGURED";
    IntegratedBackupStatus["BACKUPS_NOT_CONFIGURED"] = "BACKUPS_NOT_CONFIGURED";
})(IntegratedBackupStatus = exports.IntegratedBackupStatus || (exports.IntegratedBackupStatus = {}));


/***/ }),
/* 1107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgVdcNetworkCreateRequest = void 0;
const ip_scope_1 = __webpack_require__(245);
/**
 * Org vDC Network Create Request.
 */
/* istanbul ignore next: autogenerated */
class OrgVdcNetworkCreateRequest {
    constructor(firstParam, description, edgeUuid, shared, fenceMode, ipScope, retainNetInfoAcrossDeployments, subInterface, distributedInterface, guestVlanAllowed) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                edge_uuid: edgeUuid,
                shared: shared,
                fence_mode: fenceMode,
                ip_scope: ipScope,
                retain_net_info_across_deployments: retainNetInfoAcrossDeployments,
                sub_interface: subInterface,
                distributed_interface: distributedInterface,
                guest_vlan_allowed: guestVlanAllowed
            };
        }
        else if (firstParam instanceof OrgVdcNetworkCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get shared.
     * @returns {boolean}
     */
    get shared() {
        return this._json.shared;
    }
    /**
     * Get fence mode.
     * @returns {FenceModeType}
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Get ip scope.
     * @returns {IpScope}
     */
    get ipScope() {
        return new ip_scope_1.IpScope(this._json.ip_scope);
    }
    /**
     * Get retain net info across deployments.
     * @returns {boolean}
     */
    get retainNetInfoAcrossDeployments() {
        return this._json.retain_net_info_across_deployments;
    }
    /**
     * Get sub interface.
     * @returns {boolean}
     */
    get subInterface() {
        return this._json.sub_interface;
    }
    /**
     * Get distributed interface.
     * @returns {boolean}
     */
    get distributedInterface() {
        return this._json.distributed_interface;
    }
    /**
     * Get guest vlan allowed.
     * @returns {boolean}
     */
    get guestVlanAllowed() {
        return this._json.guest_vlan_allowed;
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgVdcNetworkCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgVdcNetworkCreateRequest = OrgVdcNetworkCreateRequest;


/***/ }),
/* 1120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgVdcNetworkUpdateRequest = void 0;
const ip_scope_1 = __webpack_require__(245);
/**
 * Org vDC Network Update Request.
 */
/* istanbul ignore next: autogenerated */
class OrgVdcNetworkUpdateRequest {
    constructor(firstParam, name, description, edgeUuid, shared, fenceMode, ipScope) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                uuid: firstParam,
                name: name,
                description: description,
                edge_uuid: edgeUuid,
                shared: shared,
                fence_mode: fenceMode,
                ip_scope: ipScope
            };
        }
        else if (firstParam instanceof OrgVdcNetworkUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get shared.
     * @returns {boolean}
     */
    get shared() {
        return this._json.shared;
    }
    /**
     * Get fence mode.
     * @returns {OrgVdcNetworkUpdateFenceMode}
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Get ip scope.
     * @returns {IpScope}
     */
    get ipScope() {
        return new ip_scope_1.IpScope(this._json.ip_scope);
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgVdcNetworkUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgVdcNetworkUpdateRequest = OrgVdcNetworkUpdateRequest;


/***/ }),
/* 1121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Location = void 0;
class Location {
    constructor(_json) {
        this._json = _json;
    }
    get uuid() {
        return this._json.uuid;
    }
    get name() {
        return this._json.name;
    }
}
exports.Location = Location;


/***/ }),
/* 1124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaCloneRequest = void 0;
/**
 * Role Creation Request Implementation.
 */
class MediaCloneRequest {
    constructor(firstParam, storageProfileUuid, catalogUuid, mediaName) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vdc_uuid: firstParam,
                storage_profile_uuid: storageProfileUuid,
                catalog_uuid: catalogUuid,
                media_name: mediaName
            };
        }
        else if (firstParam instanceof MediaCloneRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vDC uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get Storage Profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get Catalog uuid.
     * @returns {string}
     */
    get catalogUuid() {
        return this._json.catalog_uuid;
    }
    /**
     * Get Media name.
     * @returns {string}
     */
    get mediaName() {
        return this._json.media_name;
    }
    /**
     * Gets the raw JSON object.
     * @returns {MediaCloneRequestJson} the JSON representation
     */
    get json() {
        return this._json;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MediaCloneRequest = MediaCloneRequest;


/***/ }),
/* 1128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaUpdateRequest = void 0;
/**
 * Role Creation Request Implementation.
 */
class MediaUpdateRequest {
    constructor(firstParam, description, storageProfileUuid) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                storage_profile_uuid: storageProfileUuid
            };
        }
        else if (firstParam instanceof MediaUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get storage profile ID.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Gets the raw JSON object.
     * @returns {MediaUpdateRequestJson} the JSON representation
     */
    get json() {
        return this._json;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MediaUpdateRequest = MediaUpdateRequest;


/***/ }),
/* 1129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PerfSamplesRequest = void 0;
const perf_counter_1 = __webpack_require__(73);
/**
 * Perf Sample Request class.
 */
class PerfSamplesRequest {
    constructor(firstParam, start, end, interval, limit) {
        if (firstParam instanceof perf_counter_1.PerfCounter) {
            // Parameters constructor
            this._json = {
                counter: firstParam.json,
                start: start,
                end: end,
                interval: interval,
                limit: limit
            };
        }
        else if (firstParam instanceof PerfSamplesRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Returns the perf counter for current request
     * @returns {PerfCounter}
     */
    get counter() {
        return new perf_counter_1.PerfCounter(this._json.counter);
    }
    /**
     * Returns the start timestamp for current request
     * @returns {number}
     */
    get start() {
        return this._json.start;
    }
    /**
     * Returns the start date for current request
     * @returns {Date}
     */
    get startDate() {
        return new Date(this._json.start);
    }
    /**
     * Returns the end timestamp for current request
     * @returns {number}
     */
    get end() {
        return this._json.end;
    }
    /**
     * Returns the end date for current request
     * @returns {Date}
     */
    get endDate() {
        return new Date(this._json.end);
    }
    /**
     * Returns the interval for current request
     * @returns {number}
     */
    get interval() {
        return this._json.interval;
    }
    /**
     * Returns the limit for current request
     * @returns {number}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {PerfSamplesRequestJson} the JSON representation
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.PerfSamplesRequest = PerfSamplesRequest;


/***/ }),
/* 1132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobSchedulePolicyPeriodicallyEvery = exports.O365JobSchedulePolicyDailyType = exports.O365JobSchedulePolicyType = exports.O365JobBackupType = void 0;
/**
 * O365 Job Backup Type JSON enum
 */
var O365JobBackupType;
(function (O365JobBackupType) {
    O365JobBackupType["SELECTED_ITEMS"] = "SelectedItems";
    O365JobBackupType["ENTIRE_ORGANIZATION"] = "EntireOrganization";
})(O365JobBackupType = exports.O365JobBackupType || (exports.O365JobBackupType = {}));
/**
 * O365 Job Schedule Policy Type JSON enum
 */
var O365JobSchedulePolicyType;
(function (O365JobSchedulePolicyType) {
    O365JobSchedulePolicyType["DAILY"] = "Daily";
    O365JobSchedulePolicyType["PERIODICALLY"] = "Periodically";
})(O365JobSchedulePolicyType = exports.O365JobSchedulePolicyType || (exports.O365JobSchedulePolicyType = {}));
/**
 * O365 Job Schedule Policy Daily Type JSON enum
 */
var O365JobSchedulePolicyDailyType;
(function (O365JobSchedulePolicyDailyType) {
    O365JobSchedulePolicyDailyType["EVERYDAY"] = "Everyday";
    O365JobSchedulePolicyDailyType["WEEKENDS"] = "Weekends";
    O365JobSchedulePolicyDailyType["WORKDAYS"] = "Workdays";
    O365JobSchedulePolicyDailyType["MONDAY"] = "Monday";
    O365JobSchedulePolicyDailyType["TUESDAY"] = "Tuesday";
    O365JobSchedulePolicyDailyType["WEDNESDAY"] = "Wednesday";
    O365JobSchedulePolicyDailyType["THURSDAY"] = "Thursday";
    O365JobSchedulePolicyDailyType["FRIDAY"] = "Friday";
    O365JobSchedulePolicyDailyType["SATURDAY"] = "Saturday";
    O365JobSchedulePolicyDailyType["SUNDAY"] = "Sunday";
})(O365JobSchedulePolicyDailyType = exports.O365JobSchedulePolicyDailyType || (exports.O365JobSchedulePolicyDailyType = {}));
/**
 * O365 Job Schedule Policy Periodically Every JSON enum
 */
var O365JobSchedulePolicyPeriodicallyEvery;
(function (O365JobSchedulePolicyPeriodicallyEvery) {
    O365JobSchedulePolicyPeriodicallyEvery["MINUTES5"] = "Minutes5";
    O365JobSchedulePolicyPeriodicallyEvery["MINUTES10"] = "Minutes10";
    O365JobSchedulePolicyPeriodicallyEvery["MINUTES15"] = "Minutes15";
    O365JobSchedulePolicyPeriodicallyEvery["MINUTES30"] = "Minutes30";
    O365JobSchedulePolicyPeriodicallyEvery["HOURS1"] = "Hours1";
    O365JobSchedulePolicyPeriodicallyEvery["HOURS2"] = "Hours2";
    O365JobSchedulePolicyPeriodicallyEvery["HOURS4"] = "Hours4";
    O365JobSchedulePolicyPeriodicallyEvery["HOURS8"] = "Hours8";
})(O365JobSchedulePolicyPeriodicallyEvery = exports.O365JobSchedulePolicyPeriodicallyEvery || (exports.O365JobSchedulePolicyPeriodicallyEvery = {}));


/***/ }),
/* 1134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobSessionStatus = void 0;
/**
 * Enum for O365 Job Session Status
 */
var O365JobSessionStatus;
(function (O365JobSessionStatus) {
    O365JobSessionStatus["FAILED"] = "Failed";
    O365JobSessionStatus["RUNNING"] = "Running";
    O365JobSessionStatus["STOPPED"] = "Stopped";
    O365JobSessionStatus["SUCCESS"] = "Success";
    O365JobSessionStatus["WARNING"] = "Warning";
})(O365JobSessionStatus = exports.O365JobSessionStatus || (exports.O365JobSessionStatus = {}));


/***/ }),
/* 1137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365ExchangeFolderType = void 0;
/**
 * O365 Exchange Folder type enum
 */
var O365ExchangeFolderType;
(function (O365ExchangeFolderType) {
    O365ExchangeFolderType["JOURNAL"] = "Journal";
    O365ExchangeFolderType["TASK"] = "Task";
    O365ExchangeFolderType["STICKY_NOTE"] = "StickyNote";
    O365ExchangeFolderType["CONTACT"] = "Contact";
    O365ExchangeFolderType["APPOINTMENT"] = "Appointment";
    O365ExchangeFolderType["NONE"] = "None";
})(O365ExchangeFolderType = exports.O365ExchangeFolderType || (exports.O365ExchangeFolderType = {}));


/***/ }),
/* 1140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OneDriveDocumentLastVersionAction = exports.O365OneDriveDocumentVersion = exports.O365OneDriveDocumentAction = void 0;
/**
 * O365 OneDrive Document Action enum
 */
var O365OneDriveDocumentAction;
(function (O365OneDriveDocumentAction) {
    O365OneDriveDocumentAction["OVERWRITE"] = "overwrite";
    O365OneDriveDocumentAction["KEEP"] = "keep";
})(O365OneDriveDocumentAction = exports.O365OneDriveDocumentAction || (exports.O365OneDriveDocumentAction = {}));
/**
 * O365 OneDrive Document Version enum
 */
var O365OneDriveDocumentVersion;
(function (O365OneDriveDocumentVersion) {
    O365OneDriveDocumentVersion["ALL"] = "all";
    O365OneDriveDocumentVersion["LAST"] = "last";
})(O365OneDriveDocumentVersion = exports.O365OneDriveDocumentVersion || (exports.O365OneDriveDocumentVersion = {}));
/**
 * O365 OneDrive document last version action enum
 */
var O365OneDriveDocumentLastVersionAction;
(function (O365OneDriveDocumentLastVersionAction) {
    O365OneDriveDocumentLastVersionAction["OVERWRITE"] = "overwrite";
    O365OneDriveDocumentLastVersionAction["MERGE"] = "merge";
})(O365OneDriveDocumentLastVersionAction = exports.O365OneDriveDocumentLastVersionAction || (exports.O365OneDriveDocumentLastVersionAction = {}));


/***/ }),
/* 1147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OrganizationType = exports.O365OrganizationRegion = void 0;
/**
 * O365 Organization Region enum
 */
var O365OrganizationRegion;
(function (O365OrganizationRegion) {
    O365OrganizationRegion["WORLDWIDE"] = "Worldwide";
    O365OrganizationRegion["US_GOV_COMMUNITY"] = "USgovCommunity";
    O365OrganizationRegion["GERMANY"] = "Germany";
    O365OrganizationRegion["CHINA"] = "China";
    O365OrganizationRegion["US_GOV_DEFENCE"] = "USgovDefence";
})(O365OrganizationRegion = exports.O365OrganizationRegion || (exports.O365OrganizationRegion = {}));
/**
 * O365 Organization Type enum
 */
var O365OrganizationType;
(function (O365OrganizationType) {
    O365OrganizationType["OFFICE365"] = "Office365";
    O365OrganizationType["ON_PREMISES"] = "OnPremises";
    O365OrganizationType["HYBRID"] = "Hybrid";
})(O365OrganizationType = exports.O365OrganizationType || (exports.O365OrganizationType = {}));


/***/ }),
/* 1149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365RestoreSessionEventStatus = exports.O365RestoreSessionEventType = void 0;
/**
 * Enum for an O365 Restore Session Event Type
 */
var O365RestoreSessionEventType;
(function (O365RestoreSessionEventType) {
    O365RestoreSessionEventType["NONE"] = "None";
    O365RestoreSessionEventType["SAVE"] = "Save";
    O365RestoreSessionEventType["EXPORT"] = "Export";
    O365RestoreSessionEventType["SEND"] = "Send";
    O365RestoreSessionEventType["RESTORE"] = "Restore";
    O365RestoreSessionEventType["VIEW"] = "View";
})(O365RestoreSessionEventType = exports.O365RestoreSessionEventType || (exports.O365RestoreSessionEventType = {}));
/**
 * Enum for an O365 Restore Session Event Status
 */
var O365RestoreSessionEventStatus;
(function (O365RestoreSessionEventStatus) {
    O365RestoreSessionEventStatus["RUNNING"] = "Running";
    O365RestoreSessionEventStatus["SUCCESS"] = "Success";
    O365RestoreSessionEventStatus["WARNING"] = "Warning";
    O365RestoreSessionEventStatus["FAILED"] = "Failed";
})(O365RestoreSessionEventStatus = exports.O365RestoreSessionEventStatus || (exports.O365RestoreSessionEventStatus = {}));


/***/ }),
/* 1151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365RestoreSessionResult = exports.O365RestoreSessionState = exports.O365RestoreSessionType = void 0;
/**
 * Enum for O365 Restore Session Type
 */
var O365RestoreSessionType;
(function (O365RestoreSessionType) {
    O365RestoreSessionType["VEX"] = "Vex";
    O365RestoreSessionType["VESP"] = "Vesp";
    O365RestoreSessionType["VEOD"] = "Veod";
    O365RestoreSessionType["VET"] = "Vet";
})(O365RestoreSessionType = exports.O365RestoreSessionType || (exports.O365RestoreSessionType = {}));
/**
 * Enum for O365 Restore Session State
 */
var O365RestoreSessionState;
(function (O365RestoreSessionState) {
    O365RestoreSessionState["STARTING"] = "Starting";
    O365RestoreSessionState["WORKING"] = "Working";
    O365RestoreSessionState["STOPPING"] = "Stopping";
    O365RestoreSessionState["STOPPED"] = "Stopped";
})(O365RestoreSessionState = exports.O365RestoreSessionState || (exports.O365RestoreSessionState = {}));
/**
 * Enum for O365 Restore Session Result
 */
var O365RestoreSessionResult;
(function (O365RestoreSessionResult) {
    O365RestoreSessionResult["SUCCESS"] = "Success";
    O365RestoreSessionResult["WARNING"] = "Warning";
    O365RestoreSessionResult["FAILED"] = "Failed";
})(O365RestoreSessionResult = exports.O365RestoreSessionResult || (exports.O365RestoreSessionResult = {}));


/***/ }),
/* 1152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointFolderType = void 0;
/**
 * Enum for SharePoint Folder type
 */
var O365SharePointFolderType;
(function (O365SharePointFolderType) {
    O365SharePointFolderType["LIST_FOLDER"] = "listFolder";
    O365SharePointFolderType["LIBRARY_FOLDER"] = "libradyFolder";
    O365SharePointFolderType["UNKNOWN"] = "unknown";
})(O365SharePointFolderType = exports.O365SharePointFolderType || (exports.O365SharePointFolderType = {}));


/***/ }),
/* 1156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointDocumentLastVersionAction = exports.O365SharePointDocumentVersion = void 0;
/**
 * SharePoint Document Version enum
 * Specifies, which of the versions of the SharePoint documents will be restored
 */
var O365SharePointDocumentVersion;
(function (O365SharePointDocumentVersion) {
    O365SharePointDocumentVersion["ALL"] = "all";
    O365SharePointDocumentVersion["LAST"] = "last";
})(O365SharePointDocumentVersion = exports.O365SharePointDocumentVersion || (exports.O365SharePointDocumentVersion = {}));
/**
 * SharePoint Document Last Version Action enum
 * Specifies which action will be performed with the
 * last version of the restored SharePoint document on the destination list.
 */
var O365SharePointDocumentLastVersionAction;
(function (O365SharePointDocumentLastVersionAction) {
    O365SharePointDocumentLastVersionAction["OVERWRITE"] = "overwrite";
    O365SharePointDocumentLastVersionAction["MERGE"] = "merge";
})(O365SharePointDocumentLastVersionAction = exports.O365SharePointDocumentLastVersionAction || (exports.O365SharePointDocumentLastVersionAction = {}));


/***/ }),
/* 1160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamsFileLastVersionAction = exports.O365TeamsFileVersion = void 0;
/**
 * O365 Teams file version enum
 */
var O365TeamsFileVersion;
(function (O365TeamsFileVersion) {
    O365TeamsFileVersion["ALL"] = "all";
    O365TeamsFileVersion["LAST"] = "last";
})(O365TeamsFileVersion = exports.O365TeamsFileVersion || (exports.O365TeamsFileVersion = {}));
/**
 * O365 Teams file last version action enum
 */
var O365TeamsFileLastVersionAction;
(function (O365TeamsFileLastVersionAction) {
    O365TeamsFileLastVersionAction["OVERWRITE"] = "overwrite";
    O365TeamsFileLastVersionAction["MERGE"] = "merge";
})(O365TeamsFileLastVersionAction = exports.O365TeamsFileLastVersionAction || (exports.O365TeamsFileLastVersionAction = {}));


/***/ }),
/* 1168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365JobRequest = void 0;
const o365_job_schedule_policy_request_1 = __webpack_require__(600);
/**
 * O365 Create & Modify Job Request
 */
/* istanbul ignore next: autogenerated */
class O365JobRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get O365 Job creation / modification request name
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get O365 Job creation / modification request description
     * @returns {string | undefined}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get O365 Job creation / modification request backup type
     * @returns {O365JobBackupType}
     */
    get backupType() {
        return this._json.backup_type;
    }
    /**
     * Get O365 Job creation / modification request run now status
     * @returns {boolean}
     */
    get runNow() {
        return this._json.run_now;
    }
    /**
     * Get O365 Job creation / modification request job schedule request
     * @returns {O365JobSchedulePolicyRequest}
     */
    get jobScheduleRequest() {
        return new o365_job_schedule_policy_request_1.O365JobSchedulePolicyRequest(this._json.job_schedule_policy_request);
    }
    /**
     * Get O365 Job creation / modification request selected items request
     * @returns {Array<PartialOrganizationSelectedItem | GroupSelectedItem | UserSelectedItem | SiteSelectedItem |
     *   TeamSelectedItem> | undefined}
     */
    get selectedItemsRequest() {
        return this._json.o365_job_selected_item_requests;
    }
    /**
     * Get O365 Job creation / modification request excluded items request
     * @returns {Array<PartialOrganizationSelectedItem | GroupSelectedItem | UserSelectedItem | SiteSelectedItem |
     *   TeamSelectedItem> | undefined}
     */
    get excludedItemsRequest() {
        return this._json.o365_job_excluded_item_requests;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365JobRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365JobRequest = O365JobRequest;


/***/ }),
/* 1171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365MailboxRestoreOptionsRequest = void 0;
/**
 * O365 Mailbox Restore Options Request
 */
/* istanbul ignore next: autogenerated */
class O365MailboxRestoreOptionsRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the credential request user
     * @returns {string | undefined}
     */
    get user() {
        return this._json.user;
    }
    /**
     * Get the credential request password
     * @returns {string | undefined}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the device code you want to use for authenticating with the Microsoft organization.
     * @returns {string | undefined}
     */
    get deviceCode() {
        return this._json.device_code;
    }
    /**
     * Get the specific email address of the mailbox to which you want to restore mailbox data
     * Required when restoring to a different mailbox
     * @returns {string | undefined}
     */
    get mailboxToRestoreTo() {
        return this._json.mailbox_to_restore_to;
    }
    /**
     * Get changed items, If set to True, indicates that all versions of mailbox items will be restored
     * Required when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get changedItems() {
        return this._json.changed_items;
    }
    /**
     * Get deleted items, If set to True, indicates that deleted mailbox items will be restored
     * Required when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get deletedItems() {
        return this._json.deleted_items;
    }
    /**
     * Get mark restored items as unread, If set to True, indicates that restored mailbox folder data will
     * be marked as unread
     * Required when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get markRestoredAsUnread() {
        return this._json.mark_restored_as_unread;
    }
    /**
     * Get exclude drafts, If set to True, indicates that Drafts mailbox folder will not be restored
     * Optional when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get excludeDrafts() {
        return this._json.exclude_drafts;
    }
    /**
     * Get exclude deleted items, If set to True, indicates that Deleted Items mailbox folder will not be restored
     * Optional when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get excludeDeletedItems() {
        return this._json.exclude_deleted_items;
    }
    /**
     * Get exclude in place hold items, If set to True, indicates that preserved items of mailboxes placed on
     * In-Place Hold will not be restored.
     * Optional when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get excludeInPlaceHoldItems() {
        return this._json.exclude_in_place_hold_items;
    }
    /**
     * Get exclude litigation hold items, If set to True, indicates that preserved items of mailboxes placed on
     * Litigation Hold will not be restored
     * Optional when restoring to a different mailbox.
     * @returns {boolean | undefined}
     */
    get excludeLitigationHoldItems() {
        return this._json.exclude_litigation_hold_items;
    }
    /**
     * Get folder to restore to, Specifies the folder to which you want to restore mailbox folder data
     * Optional when restoring to a different mailbox.
     * @returns {string | null}
     */
    get folder() {
        return this._json.folder || null;
    }
    /**
     * Get CAS Server, Specifies the Microsoft Exchange server with Client Access Server (CAS) role.
     * The mailbox data will be restored to a specified mailbox server
     * Optional when restoring to a different mailbox.
     * @returns {string | null}
     */
    get casServer() {
        return this._json.cas_server || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365MailboxRestoreOptionsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365MailboxRestoreOptionsRequest = O365MailboxRestoreOptionsRequest;


/***/ }),
/* 1172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OneDriveRestoreOptionsRequest = void 0;
/**
 * O365 OneDrive Restore Options Request
 */
/* istanbul ignore next: autogenerated */
class O365OneDriveRestoreOptionsRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user from OneDrive Restore request. Required for basic authentication
     * @returns {string | undefined}
     */
    get user() {
        return this._json.user;
    }
    /**
     * Get password from OneDrive Restore request. Required for basic authentication
     * @returns {string | undefined}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the MS Azure one time device code obtained for the O365 session.
     * Required for modern app based authentication.
     * @returns {string | undefined}
     */
    get deviceCode() {
        return this._json.device_code;
    }
    /**
     * Get action from OneDrive Restore request
     * @returns {O365OneDriveDocumentAction}
     */
    get action() {
        return this._json.action;
    }
    /**
     * Get version from OneDrive Restore request
     * @returns {O365OneDriveDocumentVersion}
     */
    get version() {
        return this._json.version;
    }
    /**
     * Get document last version action, Specifies, which one of the following actions will be performed with the
     * last version of the restored OneDrive document on the production server
     * Required when restoring to a different location
     * @returns {O365OneDriveDocumentLastVersionAction | undefined}
     */
    get documentLastVersionAction() {
        return this._json.document_last_version_action;
    }
    /**
     * Get folder to restore to, Specifies the target OneDrive folder copy destination.
     * @returns {string | undefined}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get oneDrive Id to restore to, Specifies the target OneDrive copy destination
     * Required when restoring to a different location
     * @returns {string | undefined}
     */
    get oneDriveIdToRestoreTo() {
        return this._json.one_drive_id_to_restore_to;
    }
    /**
     * Get changed items, If set to True, indicates that all versions of OneDrive items will be copied
     * Required when restoring to a different location
     * @returns {boolean | undefined}
     */
    get changedItems() {
        return this._json.changed_items;
    }
    /**
     * Get deleted items, If set to True, indicates that deleted OneDrive items will be copied
     * Required when restoring to a different location
     * @returns {boolean | undefined}
     */
    get deletedItems() {
        return this._json.deleted_items;
    }
    /**
     * Get restore permission, If set to True, indicates that the OneDrive items will be restored with all permissions
     * Required when restoring to a different location
     * @returns {boolean | undefined}
     */
    get restorePermissions() {
        return this._json.restore_permissions;
    }
    /**
     * Get send shared links notification, If set to True, indicates that shared links notifications will be sent
     * Required when restoring to a different location
     * @returns {boolean | undefined}
     */
    get sendSharedLinksNotification() {
        return this._json.send_shared_links_notification;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OneDriveRestoreOptionsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OneDriveRestoreOptionsRequest = O365OneDriveRestoreOptionsRequest;


/***/ }),
/* 1173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365OrgCreateModifyRequest = void 0;
/**
 * O365 Organization create / modify request object.
 */
/* istanbul ignore next: autogenerated */
class O365OrgCreateModifyRequest {
    constructor(firstParam, account, password, useModernAuth, applicationId, applicationSecret, useApplicationOnlyAuth, userCode, newApplicationName, isExchangeOnline, isTeamsOnline, isSharePointOnline, defaultJobs, isTeamsChatOnline) {
        if (typeof firstParam === 'string') {
            // parameters constructor
            this._json = {
                name: firstParam,
                account: account,
                password: password,
                use_modern_auth: useModernAuth,
                application_id: applicationId,
                application_secret: applicationSecret,
                use_application_only_auth: useApplicationOnlyAuth,
                user_code: userCode,
                new_application_name: newApplicationName,
                is_exchange_online: isExchangeOnline,
                is_teams_online: isTeamsOnline,
                is_share_point_online: isSharePointOnline,
                create_default_jobs: defaultJobs,
                is_teams_chat_online: isTeamsChatOnline
            };
        }
        else if (firstParam instanceof O365OrgCreateModifyRequest) {
            // copy constructor
            this._json = (firstParam || O365OrgCreateModifyRequest).json;
        }
        else {
            // json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get the (optional) name of the Office 365 organization. If not provided,
     * it will be defaulted to [orgName].onmicrosoft.com
     * @returns {string | null}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the user of the Office 365 online account. Optional for Modern App-Only Authentication.
     * @returns {string | undefined}
     */
    get account() {
        return this._json.account;
    }
    /**
     * Get the password of the Office 365 online account. Optional for Modern App-Only Authentication.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get whether to use modern authentication. Required (set to true) when
     * useApplicationOnlyAuth is also set to true
     * @returns {boolean}
     */
    get useModernAuth() {
        return this._json.use_modern_auth;
    }
    /**
     * Get the identification number of the Azure AD application that you want to use
     * to access your O365 organization. Required only when useModernAuth is true.
     * @returns {string | null}
     */
    get applicationId() {
        return this._json.application_id;
    }
    /**
     * Get the application secret for the specified Azure AD application. Required only
     * when useModernAuth is true.
     * @returns {string | null}
     */
    get applicationSecret() {
        return this._json.application_secret;
    }
    /**
     * Get whether to use Azure AD application authentication.
     * @returns {boolean}
     */
    get useApplicationOnlyAuth() {
        return this._json.use_application_only_auth;
    }
    /**
     * Get the one time device code obtained from the Azure portal (https://microsoft.com/devicelogin).
     * Required for Modern App authentication method (useApplicationOnlyAuth = true).
     * @returns {string | null}
     */
    get userCode() {
        return this._json.user_code;
    }
    /**
     * Get the name for the new Azure AD application.
     * Required for Modern App authentication method (useApplicationOnlyAuth = true).
     * @returns {string | null}
     */
    get newApplicationName() {
        return this._json.new_application_name;
    }
    /**
     * Get isExchangeOnline.
     * @returns {boolean}
     */
    get isExchangeOnline() {
        return this._json.is_exchange_online;
    }
    /**
     * Get isTeamsOnline.
     * @returns {boolean}
     */
    get isTeamsOnline() {
        return this._json.is_teams_online;
    }
    /**
     * Get isTeamsChatOnline.
     * @returns {boolean | undefined}
     */
    get isTeamsChatOnline() {
        var _a;
        return (_a = this._json) === null || _a === void 0 ? void 0 : _a.is_teams_chat_online;
    }
    /**
     * Get isSharePointOnline.
     * @returns {boolean}
     */
    get isSharePointOnline() {
        return this._json.is_share_point_online;
    }
    /**
     * Get create default jobs
     * @returns {boolean | null}
     */
    get createDefaultJobs() {
        return this._json.create_default_jobs;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365OrgCreateModifyRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365OrgCreateModifyRequest = O365OrgCreateModifyRequest;


/***/ }),
/* 1174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365PurgeMailbox = void 0;
/**
 * O365 purge mailbox
 */
/* istanbul ignore next: autogenerated */
class O365PurgeMailbox {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the mailbox / username marked for purging.
     * @returns {string}
     */
    get mailbox() {
        return this._json.mailbox;
    }
    /**
     * Get the user native uuid for the mailbox marked for purging.
     * @returns {string}
     */
    get userNativeUuid() {
        return this._json.user_native_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365PurgeMailboxJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365PurgeMailbox = O365PurgeMailbox;


/***/ }),
/* 1175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365RestoreSessionStartRequest = void 0;
/**
 * O365 Restore Session start request
 */
/* istanbul ignore next: autogenerated */
class O365RestoreSessionStartRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Gets the date timestamp of request
     * @returns {number}
     */
    get dateTime() {
        return this._json.datetime;
    }
    /**
     * Gets the type of restore session of request
     * @returns {O365RestoreSessionType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Gets the show all versions of request
     * @returns {boolean}
     */
    get isShowAllVersions() {
        return this._json.show_all_versions;
    }
    /**
     * Is show deleted boolean of request
     * @returns {boolean}
     */
    get isShowDeleted() {
        return this._json.show_deleted;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365RestoreSessionStartRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365RestoreSessionStartRequest = O365RestoreSessionStartRequest;


/***/ }),
/* 1176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365SharePointRestoreOptionsRequest = void 0;
/**
 * O365 SharePoint Restore Options Request
 */
/* istanbul ignore next: autogenerated */
class O365SharePointRestoreOptionsRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get user name you want to use for authenticating with the Microsoft organization
     * @returns {string | null}
     */
    get user() {
        return this._json.user || null;
    }
    /**
     * Get the user password you want to use for authenticating with the Microsoft organization
     * @returns {string | null}
     */
    get password() {
        return this._json.password || null;
    }
    /**
     * Get the device code you want to use for authenticating with the Microsoft organization
     * @returns {string | null}
     */
    get deviceCode() {
        return this._json.device_code || null;
    }
    /**
     * Indicates that the SharePoint lists will be restored with all list views
     * @returns {boolean}
     */
    get restoreListViews() {
        return this._json.restore_list_views;
    }
    /**
     * Indicates that the SharePoint site will be restored with all changed items
     *
     * One or both of changedItems and deletedItems must be set to true
     * @returns {boolean}
     */
    get changedItems() {
        return this._json.changed_items;
    }
    /**
     * Indicates that the SharePoint site will be restored with all deleted items
     *
     * One or both of changedItems and deletedItems must be set to true
     * @returns {boolean}
     */
    get deletedItems() {
        return this._json.deleted_items;
    }
    /**
     * Indicates that the SharePoint site will be restored with all subsites
     * @returns {boolean}
     */
    get restoreSubsites() {
        return this._json.restore_subsites;
    }
    /**
     * Indicates that the SharePoint site will be restored with all master pages
     * @returns {boolean}
     */
    get restoreMasterPages() {
        return this._json.restore_master_pages;
    }
    /**
     * Indicates that the SharePoint site will be restored with all permissions
     * @returns {boolean}
     */
    get restorePermissions() {
        return this._json.restore_permissions;
    }
    /**
     * Indicates what versions of the SharePoint documents will be restored
     * @returns {O365SharePointDocumentVersion}
     */
    get documentVersion() {
        return this._json.document_version;
    }
    /**
     * Indicates that shared links notifications will be sent.
     * @returns {boolean}
     */
    get sendSharedLinksNotification() {
        return this._json.send_shared_links_notification;
    }
    /**
     * Indicates which action will be performed with the last version of the restored SharePoint document
     * on the destination list
     * @returns {O365SharePointDocumentLastVersionAction}
     */
    get documentLastCrazyVersionAction() {
        return this._json.document_last_version_action;
    }
    /**
     * Optional - specifies the target SharePoint list by name.
     * Default location if not provided
     * @returns {string | null}
     */
    get list() {
        return this._json.list || null;
    }
    /**
     * Optional - specifies alias site if restoring a Site to a different location
     * @returns {string | null}
     */
    get alias() {
        return this._json.alias || null;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365SharePointRestoreOptionsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365SharePointRestoreOptionsRequest = O365SharePointRestoreOptionsRequest;


/***/ }),
/* 1177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamItemsExportRequest = void 0;
/**
 * O365 Team items export request
 */
/* istanbul ignore next: autogenerated */
class O365TeamItemsExportRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the ids of O365 Team items.
     * @returns {Array<string>}
     */
    get itemIds() {
        return this._json.item_ids;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamItemsExportRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamItemsExportRequest = O365TeamItemsExportRequest;


/***/ }),
/* 1178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamsRangeExportRequest = void 0;
/**
 * O365 Teams export items (posts) given range request
 */
/* istanbul ignore next: autogenerated */
class O365TeamsRangeExportRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the start date to export channel posts from.
     * @returns {number}
     */
    get from() {
        return this._json.from;
    }
    /**
     * Get the end date to export channel posts until.
     * @returns {number}
     */
    get to() {
        return this._json.to;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamsRangeExportRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamsRangeExportRequest = O365TeamsRangeExportRequest;


/***/ }),
/* 1179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamsRestoreOptionsRequest = void 0;
/**
 * O365 Teams restore options request
 */
/* istanbul ignore next: autogenerated */
class O365TeamsRestoreOptionsRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the user you want to use for authenticating with the O365 Teams organization.
     * Required only for basic authentication.
     * @returns {string | undefined}
     */
    get user() {
        return this._json.user;
    }
    /**
     * Get the password you want to use for authenticating with the O365 Teams organization.
     * Required only for basic authentication
     * @returns {string | undefined}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the MS Azure one time device code obtained for the O365 session.
     * Required only for modern app based authentication.
     * @returns {string | undefined}
     */
    get deviceCode() {
        return this._json.device_code;
    }
    /**
     * Get whether to restore settings of the restored O365 Team
     * @returns {boolean | undefined}
     */
    get restoreSettings() {
        return this._json.restore_settings;
    }
    /**
     * Get whether to restore Team items that are missing in the original location
     * @returns {boolean | undefined}
     */
    get restoreMissingItems() {
        return this._json.restore_missing_items;
    }
    /**
     * Get whether to restore members of the restored O365 Team along with their roles
     * @returns {boolean | undefined}
     */
    get restoreMembers() {
        return this._json.restore_members;
    }
    /**
     * Get whether to restore team items that have changed since the time when the backup was created
     * @returns {boolean | undefined}
     */
    get restoreChangedItems() {
        return this._json.restore_changed_items;
    }
    /**
     * Get version of file to restore
     * @returns {O365TeamsFileVersion | undefined}
     */
    get fileVersion() {
        return this._json.file_version;
    }
    /**
     * Get the action to perform with the latest file restored
     * @returns {O365TeamsFileLastVersionAction | undefined}
     */
    get fileLastVersionAction() {
        return this._json.file_last_version_action;
    }
    /**
     * Get the ids of O365 Team items
     * @returns {Array<string> | undefined}
     */
    get itemIds() {
        return this._json.item_ids;
    }
    /**
     * Get the start date to export channel posts from
     * @returns {number | undefined}
     */
    get from() {
        return this._json.from;
    }
    /**
     * Get the end date to export channel posts until
     * @returns {number | undefined}
     */
    get to() {
        return this._json.to;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamsRestoreOptionsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamsRestoreOptionsRequest = O365TeamsRestoreOptionsRequest;


/***/ }),
/* 1180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.O365TeamsSendToEmailRequest = void 0;
/**
 * O365 Teams send to email Request
 */
/* istanbul ignore next: autogenerated */
class O365TeamsSendToEmailRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get the email address from which the attachments will be sentDefault value is nobody@iland.com.
     * @returns {string}
     */
    get from() {
        return this._json.from;
    }
    /**
     * Get the email address to which the attachments will be sent.
     * @returns {string}
     */
    get to() {
        return this._json.to;
    }
    /**
     * Get the subject of the email message used for sending the attachments.
     * @returns {string}
     */
    get subject() {
        return this._json.subject;
    }
    /**
     * Get the body of the email message used for sending the attachments.
     * @returns {string}
     */
    get text() {
        return this._json.text;
    }
    /**
     * Get the set of IDs of Teams item types that are included in the request.
     * @returns {Array<string> | undefined}
     */
    get itemIds() {
        return this._json.item_ids;
    }
    /**
     * Get the json representation of this class.
     * @returns {O365TeamsSendToEmailRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.O365TeamsSendToEmailRequest = O365TeamsSendToEmailRequest;


/***/ }),
/* 1181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CephTenantKeyCreateRequest = void 0;
class CephTenantKeyCreateRequest {
    constructor(_json) {
        this._json = _json;
    }
    get accessKey() {
        return this._json.access_key;
    }
    get secretKey() {
        return this._json.secret_key;
    }
    get username() {
        return this._json.username;
    }
    get description() {
        return this._json.description;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CephTenantKeyCreateRequestJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CephTenantKeyCreateRequest = CephTenantKeyCreateRequest;


/***/ }),
/* 1188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CephTenantKeyDeleteRequest = void 0;
class CephTenantKeyDeleteRequest {
    constructor(_json) {
        this._json = _json;
    }
    get accessKey() {
        return this._json.access_key;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CephTenantKeyDeleteRequestJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
}
exports.CephTenantKeyDeleteRequest = CephTenantKeyDeleteRequest;


/***/ }),
/* 1189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CephTenant = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const ceph_tenant_key_pair_1 = __webpack_require__(601);
const ceph_user_session_1 = __webpack_require__(602);
const s3_bucket_1 = __webpack_require__(603);
/**
 * Object Storage Ceph Tenant resource
 */
class CephTenant {
    constructor(_json) {
        this._json = _json;
    }
    static getCephTenant(tenantId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/object-storage/${tenantId}`)
                .then(res => {
                const json = res.data;
                return new CephTenant(json);
            });
        });
    }
    static getCompanyCephTenants(companyId, region) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/object-storage/${companyId}/${region}/tenants`)
                .then(res => {
                const json = res.data.data;
                return json.map(it => new CephTenant(it));
            });
        });
    }
    get tenantId() {
        return this._json.tenant_id;
    }
    get name() {
        return this._json.name;
    }
    get companyId() {
        return this._json.company_id;
    }
    get region() {
        return this._json.region;
    }
    get isEnabled() {
        return this._json.enabled;
    }
    get quotaKib() {
        return this._json.quota_kib;
    }
    get usageKib() {
        return this._json.usage_kib;
    }
    get numOfObjects() {
        return this._json.num_objects;
    }
    get numOfBuckets() {
        return this._json.num_buckets;
    }
    get hasStatsAndBucketInfo() {
        return this._json.has_stats_and_bucket_info;
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {CephTenantJson} the API VM object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    getBucketInfo() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/object-storage/${this.tenantId}/bucket-info`)
                .then(res => {
                const json = res.data.data;
                return json.map(it => new s3_bucket_1.S3Bucket(it));
            });
        });
    }
    getTenantKeysForUser(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/object-storage/${this.tenantId}/keys/${username}`)
                .then(res => {
                const json = res.data.data;
                return json.map(it => new ceph_tenant_key_pair_1.CephTenantKeyPair(it));
            });
        });
    }
    deleteTenantKey(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/object-storage/${this.tenantId}/key`, {
                headers: {
                    'Content-Type': 'application/json'
                },
                data: {
                    access_key: request.accessKey
                }
            });
        });
    }
    createTenantKey(request) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/object-storage/${this.tenantId}/key`, request.json)
                .then(res => {
                const json = res.data;
                return new ceph_tenant_key_pair_1.CephTenantKeyPair(json);
            });
        });
    }
    createObjectStorageUserSession() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/object-storage/${this.tenantId}/actions/create-user-session`, null)
                .then(res => {
                const json = res.data;
                return new ceph_user_session_1.CephUserSession(json);
            });
        });
    }
    syncTenant() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().post(`/object-storage/${this.tenantId}/sync`, null);
        });
    }
    renewUserSession(sessionToken) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/object-storage/${this.tenantId}/actions/renew-user-session/${sessionToken}`, null)
                .then(res => {
                const json = res.data;
                return new ceph_user_session_1.CephUserSession(json);
            });
        });
    }
}
exports.CephTenant = CephTenant;


/***/ }),
/* 1190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchFailoverParamsRequest = void 0;
/* istanbul ignore next: autogenerated */
class BatchFailoverParamsRequest {
    constructor(firstParam) {
        if (firstParam instanceof BatchFailoverParamsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get batch params.
     * @returns {{ [key: string]: FailoverParamsRequestJson }}
     */
    get batchParams() {
        return this._json.batch_params;
    }
    /**
     * Get the json representation of this class.
     * @returns {BatchFailoverParamsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BatchFailoverParamsRequest = BatchFailoverParamsRequest;


/***/ }),
/* 1234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchFailoverTestParamsRequest = void 0;
/* istanbul ignore next: autogenerated */
class BatchFailoverTestParamsRequest {
    constructor(firstParam) {
        if (firstParam instanceof BatchFailoverTestParamsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get batch params.
     * @returns {{ [key: string]: FailoverTestParamsRequest }}
     */
    get batchParams() {
        return this._json.batch_params;
    }
    /**
     * Get the json representation of this class.
     * @returns {BatchFailoverTestParamsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BatchFailoverTestParamsRequest = BatchFailoverTestParamsRequest;


/***/ }),
/* 1235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogCreateRequest = void 0;
/**
 * Catalog Create Request.
 */
/* istanbul ignore next: autogenerated */
class CatalogCreateRequest {
    constructor(firstParam, description, storageProfileUuid) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                storage_profile_uuid: storageProfileUuid
            };
        }
        else if (firstParam instanceof CatalogCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {CatalogCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.CatalogCreateRequest = CatalogCreateRequest;


/***/ }),
/* 1236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookAbortRequest = void 0;
/**
 * DIsaster recovery runbook abort request.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookAbortRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                task_uuid: firstParam
            };
        }
        else if (firstParam instanceof DisasterRecoveryRunbookAbortRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get task uuid.
     * @returns {string}
     */
    get taskUuid() {
        return this._json.task_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookAbortRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookAbortRequest = DisasterRecoveryRunbookAbortRequest;


/***/ }),
/* 1249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookCreateRequest = void 0;
const recovery_group_descriptor_1 = __webpack_require__(97);
/**
 * Disaster recovery runbook create request.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookCreateRequest {
    constructor(firstParam, description, recoveryGroups) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                recovery_groups: recoveryGroups
            };
        }
        else if (firstParam instanceof DisasterRecoveryRunbookCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get recovery groups.
     * @returns {Array<RecoveryGroupDescriptorJson>}
     */
    get recoveryGroups() {
        return this._json.recovery_groups.map(rGroup => {
            return new recovery_group_descriptor_1.RecoveryGroupDescriptor(rGroup);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookCreateRequest = DisasterRecoveryRunbookCreateRequest;


/***/ }),
/* 1250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookExecuteRequest = void 0;
/**
 * Disaster Recovery Runbook Execute Request.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookExecuteRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                shutdown_policy: firstParam
            };
        }
        else if (firstParam instanceof DisasterRecoveryRunbookExecuteRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get shutdown policy.
     * @returns {ShutdownPolicy}
     */
    get shutdownPolicy() {
        return this._json.shutdown_policy;
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookExecuteJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookExecuteRequest = DisasterRecoveryRunbookExecuteRequest;


/***/ }),
/* 1251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookFinalizeExecutionRequest = void 0;
/**
 * Disaster recovery runbook finalize execution request.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookFinalizeExecutionRequest {
    constructor(firstParam, finalizeRecoveryParams) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                parent_runbook_task_uuid: firstParam,
                finalize_recovery_params: finalizeRecoveryParams
            };
        }
        else if (firstParam instanceof DisasterRecoveryRunbookFinalizeExecutionRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get parent runbook task uuid.
     * @returns {string}
     */
    get parentRunbookTaskUuid() {
        return this._json.parent_runbook_task_uuid;
    }
    /**
     * Get finalize recovery params.
     * @returns {{ [key: string]: CommitPolicy }}
     */
    get finalizeRecoveryParams() {
        return this._json.finalize_recovery_params;
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookFinalizeExecutionRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookFinalizeExecutionRequest = DisasterRecoveryRunbookFinalizeExecutionRequest;


/***/ }),
/* 1252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DisasterRecoveryRunbookUpdateRequest = void 0;
const recovery_group_descriptor_1 = __webpack_require__(97);
/**
 * Disaster recovery runbook update request.
 */
/* istanbul ignore next: autogenerated */
class DisasterRecoveryRunbookUpdateRequest {
    constructor(firstParam, description, recoveryGroups) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                recovery_groups: recoveryGroups
            };
        }
        else if (firstParam instanceof DisasterRecoveryRunbookUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get recovery groups.
     * @returns {Array<RecoveryGroupDescriptor>}
     */
    get recoveryGroups() {
        return this._json.recovery_groups.map(rGroup => {
            return new recovery_group_descriptor_1.RecoveryGroupDescriptor(rGroup);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {DisasterRecoveryRunbookUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DisasterRecoveryRunbookUpdateRequest = DisasterRecoveryRunbookUpdateRequest;


/***/ }),
/* 1253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DnsRecordCreateRequest = void 0;
/**
 * DNS Record Create Request.
 */
class DnsRecordCreateRequest {
    constructor(firstParam, host, type, value, ipAddress, ttl, description, priority) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                zone_id: firstParam,
                host: host,
                type: type,
                value: value,
                ip: ipAddress,
                ttl: ttl,
                description: description,
                priority: priority
            };
        }
        else if (firstParam instanceof DnsRecordCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get zone id.
     * @returns {number}
     */
    get zoneId() {
        return this._json.zone_id;
    }
    /**
     * Get host.
     * @returns {string}
     */
    get host() {
        return this._json.host;
    }
    /**
     * Get type.
     * @returns {DnsRecordType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip;
    }
    /**
     * Get ttl.
     * @returns {number}
     */
    get ttl() {
        return this._json.ttl;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get priority.
     * @returns {number}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get the json representation of this class.
     * @returns {DnsRecordCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DnsRecordCreateRequest = DnsRecordCreateRequest;


/***/ }),
/* 1254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DnsRecordUpdateRequest = void 0;
/**
 * Dns Record Update Request.
 */
class DnsRecordUpdateRequest {
    constructor(firstParam, zoneId, host, type, value, ipAddress, ttl, description, priority) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                id: firstParam,
                zone_id: zoneId,
                host: host,
                type: type,
                value: value,
                ip_address: ipAddress,
                ttl: ttl,
                description: description,
                priority: priority
            };
        }
        else if (firstParam instanceof DnsRecordUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get id.
     * @returns {number}
     */
    get id() {
        return this._json.id;
    }
    /**
     * Get zone id.
     * @returns {number}
     */
    get zoneId() {
        return this._json.zone_id;
    }
    /**
     * Get host.
     * @returns {string}
     */
    get host() {
        return this._json.host;
    }
    /**
     * Get type.
     * @returns {DnsRecordType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get ttl.
     * @returns {number}
     */
    get ttl() {
        return this._json.ttl;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get priority.
     * @returns {number}
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get the json representation of this class.
     * @returns {DnsRecordUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DnsRecordUpdateRequest = DnsRecordUpdateRequest;


/***/ }),
/* 1255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DnsZoneCreateRequest = void 0;
/**
 * Dns Zone Create Request.
 */
class DnsZoneCreateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam
            };
        }
        else if (firstParam instanceof DnsZoneCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {DnsZoneCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.DnsZoneCreateRequest = DnsZoneCreateRequest;


/***/ }),
/* 1256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FailoverParamsRequest = void 0;
/* istanbul ignore next: autogenerated */
class FailoverParamsRequest {
    constructor(firstParam, commitPolicy, shutdownPolicy, timeToWaitBeforeShutdownInSec, commitValue) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                checkpoint_identifier: firstParam,
                commit_policy: commitPolicy,
                shutdown_policy: shutdownPolicy,
                time_to_wait_before_shutdown_in_sec: timeToWaitBeforeShutdownInSec,
                commit_value: commitValue
            };
        }
        else if (firstParam instanceof FailoverParamsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get checkpoint identifier.
     * @returns {string}
     */
    get checkpointIdentifier() {
        return this._json.checkpoint_identifier;
    }
    /**
     * Get commit policy.
     * @returns {VpgFailoverCommitPolicyRequestJson}
     */
    get commitPolicy() {
        return this._json.commit_policy;
    }
    /**
     * Get shutdown policy.
     * @returns {VpgFailoverShutdownPolicyRequestJson}
     */
    get shutdownPolicy() {
        return this._json.shutdown_policy;
    }
    /**
     * Get time to wait before shutdown in sec.
     * @returns {number}
     */
    get timeToWaitBeforeShutdownInSec() {
        return this._json.time_to_wait_before_shutdown_in_sec;
    }
    /**
     * Get commit value.
     * @returns {number}
     */
    get commitValue() {
        return this._json.commit_value;
    }
    /**
     * Get the json representation of this class.
     * @returns {FailoverParamsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FailoverParamsRequest = FailoverParamsRequest;


/***/ }),
/* 1257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FailoverTestParamsRequest = void 0;
/* istanbul ignore next: autogenerated */
class FailoverTestParamsRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                checkpoint_id: firstParam
            };
        }
        else if (firstParam instanceof FailoverTestParamsRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get checkpoint id.
     * @returns {string}
     */
    get checkpointId() {
        return this._json.checkpoint_id;
    }
    /**
     * Get the json representation of this class.
     * @returns {FailoverTestParamsRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.FailoverTestParamsRequest = FailoverTestParamsRequest;


/***/ }),
/* 1258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanOptOutCreateRequest = void 0;
/**
 * Nessus Scan Opt Out Create Request.
 */
/* istanbul ignore next: autogenerated */
class NessusScanOptOutCreateRequest {
    constructor(firstParam, exclusions) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                opt_out: firstParam,
                exclusions: exclusions
            };
        }
        else if (firstParam instanceof NessusScanOptOutCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get opt out.
     * @returns {boolean}
     */
    get optOut() {
        return this._json.opt_out;
    }
    /**
     * Get exclusions.
     * @returns {Array<string>}
     */
    get exclusions() {
        return this._json.exclusions;
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanOptOutCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanOptOutCreateRequest = NessusScanOptOutCreateRequest;


/***/ }),
/* 1259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NessusScanUpdateRequest = void 0;
const nessus_scan_settings_update_request_1 = __webpack_require__(604);
/**
 * Nessus Scan Update Request.
 */
/* istanbul ignore next: autogenerated */
class NessusScanUpdateRequest {
    constructor(firstParam, scanSettings) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                template_uuid: firstParam,
                scan_settings: scanSettings
            };
        }
        else if (firstParam instanceof NessusScanUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get template uuid.
     * @returns {string}
     */
    get templateUuid() {
        return this._json.template_uuid;
    }
    /**
     * Get scan settings.
     * @returns {NessusScanSettingsUpdateRequest}
     */
    get scanSettings() {
        return new nessus_scan_settings_update_request_1.NessusScanSettingsUpdateRequest(this._json.scan_settings);
    }
    /**
     * Get the json representation of this class.
     * @returns {NessusScanUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.NessusScanUpdateRequest = NessusScanUpdateRequest;


/***/ }),
/* 1260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgVappLeaseUpdateRequest = void 0;
/**
 * Org vApp Lease Update Request.
 */
/* istanbul ignore next: autogenerated */
class OrgVappLeaseUpdateRequest {
    constructor(firstParam, vappMaxRuntimeLease, vappMaxStorageLease) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                vapp_delete_on_storage_expire: firstParam,
                vapp_max_runtime_lease: vappMaxRuntimeLease,
                vapp_max_storage_lease: vappMaxStorageLease
            };
        }
        else if (firstParam instanceof OrgVappLeaseUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vapp delete on storage expire.
     * @returns {boolean}
     */
    get vappDeleteOnStorageExpire() {
        return this._json.vapp_delete_on_storage_expire;
    }
    /**
     * Get vapp max runtime lease.
     * @returns {number}
     */
    get vappMaxRuntimeLease() {
        return this._json.vapp_max_runtime_lease;
    }
    /**
     * Get vapp max storage lease.
     * @returns {number}
     */
    get vappMaxStorageLease() {
        return this._json.vapp_max_storage_lease;
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgVappLeaseUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgVappLeaseUpdateRequest = OrgVappLeaseUpdateRequest;


/***/ }),
/* 1261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OrgVappTemplateLeaseUpdateRequest = void 0;
/**
 * Org vApp Template Lease Update Request.
 */
/* istanbul ignore next: autogenerated */
class OrgVappTemplateLeaseUpdateRequest {
    constructor(firstParam, vappTemplateMaxStorageLease) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                vapp_template_delete_on_storage_expire: firstParam,
                vapp_template_max_storage_lease: vappTemplateMaxStorageLease
            };
        }
        else if (firstParam instanceof OrgVappTemplateLeaseUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vapp template delete on storage expire.
     * @returns {boolean}
     */
    get vappTemplateDeleteOnStorageExpire() {
        return this._json.vapp_template_delete_on_storage_expire;
    }
    /**
     * Get vapp template max storage lease.
     * @returns {number}
     */
    get vappTemplateMaxStorageLease() {
        return this._json.vapp_template_max_storage_lease;
    }
    /**
     * Get the json representation of this class.
     * @returns {OrgVappTemplateLeaseUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OrgVappTemplateLeaseUpdateRequest = OrgVappTemplateLeaseUpdateRequest;


/***/ }),
/* 1262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingReportRequest = void 0;
/* istanbul ignore next: autogenerated */
class BillingReportRequest {
    constructor(firstParam, rows, date, email, filename, type) {
        if (firstParam && rows) {
            // Parameters constructor
            this._json = {
                custom_columns: firstParam,
                rows: rows,
                date: date,
                email: email,
                filename: filename,
                type: type
            };
        }
        else if (firstParam instanceof BillingReportRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    /**
     * Get custom columns.
     * @returns {{ [key: string]: string }}
     */
    get customColumns() {
        return this._json.custom_columns;
    }
    /**
     * Get rows.
     * @returns {Array<string>}
     */
    get rows() {
        return this._json.rows;
    }
    /**
     * Get date.
     * @returns {number}
     */
    get date() {
        return this._json.date;
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get filename.
     * @returns {string}
     */
    get filename() {
        return this._json.filename;
    }
    /**
     * Get type.
     * @returns {ReportType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get the json representation of this class.
     * @returns {BillingReportRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BillingReportRequest = BillingReportRequest;


/***/ }),
/* 1272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PushChannel = void 0;
const rxjs_1 = __webpack_require__(37);
const iland_1 = __webpack_require__(7);
const event_1 = __webpack_require__(244);
const task_1 = __webpack_require__(10);
/**
 * PushChannel is an abstraction over a websocket connection that provides an easy way to observe updates for events and
 * tasks within the authenticated user's environment. Channels can be scoped to a single company or to all companies
 * that the authenticated user has access to. You must close the channel when you've finished using it in order to close
 * and clean up the underlying websocket.
 */
class PushChannel {
    constructor(companyId) {
        this.companyId = companyId;
    }
    static open(companyId) {
        return new PushChannel(companyId);
    }
    /**
     * Gets an observable for push updates. Updates will be emitted for all entities that the authenticated user has
     * access to.
     * @returns {Observable<Event | Task>} push update observable
     */
    getObservable() {
        // connect to ws if necessary
        this._init();
        return this._generator;
    }
    /**
     * Closes the underlying websocket connection. This method should always be called when the channel is no longer in
     * use.
     */
    close() {
        if (this._websocket) {
            this._websocket.onclose = rxjs_1.noop;
            this._websocket.close();
            this._generator.complete();
        }
    }
    /**
     * Initializes the service.
     * @private
     */
    _init() {
        // create the observable
        if (!this._generator) {
            this._generator = new rxjs_1.Subject();
            this._initWebsocket();
        }
    }
    /**
     * Initializes the websocket connection.
     * @param {boolean} force whether to force a new connection, even if there is an existing connection.
     * @param lastError the date the last error occurred, used to prevent rapid reconnection attempts
     * @private
     */
    _initWebsocket(force, lastError) {
        iland_1.Iland.getLogger().info('event websocket connection initializing');
        if (!this._websocket || force) {
            if (this._websocket) {
                this._websocket.onclose = rxjs_1.noop;
                this._websocket.close();
            }
            this._websocket = new WebSocket(`${iland_1.Iland.baseUrl.replace('http', 'ws')}/event-websocket`);
            this._websocket.onmessage = msg => {
                if (msg.data === 'AUTHORIZATION') {
                    iland_1.Iland.getAuthProvider()
                        .getToken()
                        .then(token => {
                        if (this.companyId) {
                            this._websocket.send(`companyId=${this.companyId},Bearer ${token}`);
                        }
                        else {
                            this._websocket.send(`Bearer ${token}`);
                        }
                    })
                        .then(() => {
                        this._websocket.onmessage = msg => {
                            const update = JSON.parse(msg.data);
                            if (update.type === 'EVENT') {
                                this._generator.next(new event_1.Event(update.data));
                            }
                            else if (update.type === 'TASK') {
                                this._generator.next(new task_1.Task(update.data));
                            }
                        };
                    })
                        .catch(err => {
                        iland_1.Iland.getLogger().error(`error getting authorization token while attempting to open event websocket
              connection: ${err}.`);
                        this._websocket.close();
                    });
                }
            };
            this._websocket.onclose = (evt) => {
                iland_1.Iland.getLogger().warn(`event websocket connection closed. reason: ${evt.reason}. code: ${evt.code}.`);
                const errorTs = new Date();
                if (!lastError || errorTs.valueOf() - lastError.valueOf() > PushChannel.LONG_POLL_THRESHOLD) {
                    // last error was more than 1 minute ago, try to reconnect again immediately
                    this._initWebsocket(true, errorTs);
                }
                else {
                    // last error was within one 1 minute ago, take a breather and wait 30 seconds before trying again
                    setTimeout(() => {
                        this._initWebsocket(true, errorTs);
                    }, PushChannel.LONG_POLL_TIMEOUT);
                }
            };
        }
    }
}
exports.PushChannel = PushChannel;
// amount of time to wait for long poll reconnect
PushChannel.LONG_POLL_TIMEOUT = 30000;
// reconnection attempt will happen immediately if last connection was established more than this number of ms ago
PushChannel.LONG_POLL_THRESHOLD = 60000;


/***/ }),
/* 1273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityProviderTypeEnum = void 0;
var IdentityProviderTypeEnum;
(function (IdentityProviderTypeEnum) {
    IdentityProviderTypeEnum["SAML"] = "SAML";
    IdentityProviderTypeEnum["OIDC"] = "OIDC";
})(IdentityProviderTypeEnum = exports.IdentityProviderTypeEnum || (exports.IdentityProviderTypeEnum = {}));


/***/ }),
/* 1276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OIDCClientAuthEnum = void 0;
var OIDCClientAuthEnum;
(function (OIDCClientAuthEnum) {
    OIDCClientAuthEnum["CLIENT_SECRET_POST"] = "CLIENT_SECRET_POST";
    OIDCClientAuthEnum["CLIENT_SECRET_BASIC"] = "CLIENT_SECRET_BASIC";
    OIDCClientAuthEnum["CLIENT_SECRET_JWT"] = "CLIENT_SECRET_JWT";
    OIDCClientAuthEnum["PRIVATE_KEY_JWT"] = "PRIVATE_KEY_JWT";
})(OIDCClientAuthEnum = exports.OIDCClientAuthEnum || (exports.OIDCClientAuthEnum = {}));


/***/ }),
/* 1277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OIDCPromptEnum = void 0;
var OIDCPromptEnum;
(function (OIDCPromptEnum) {
    OIDCPromptEnum["UNSPECIFIED"] = "unspecified";
    OIDCPromptEnum["NONE"] = "none";
    OIDCPromptEnum["CONSENT"] = "consent";
    OIDCPromptEnum["LOGIN"] = "login";
    OIDCPromptEnum["SELECT_ACCOUNT"] = "select_account";
})(OIDCPromptEnum = exports.OIDCPromptEnum || (exports.OIDCPromptEnum = {}));


/***/ }),
/* 1280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLNameIdPolicyFormatEnum = void 0;
var SAMLNameIdPolicyFormatEnum;
(function (SAMLNameIdPolicyFormatEnum) {
    SAMLNameIdPolicyFormatEnum["PERSISTENT"] = "PERSISTENT";
    SAMLNameIdPolicyFormatEnum["EMAIL_ADDRESS"] = "EMAIL_ADDRESS";
    SAMLNameIdPolicyFormatEnum["KERBEROS"] = "KERBEROS";
    SAMLNameIdPolicyFormatEnum["X509_SUBJECT_NAME"] = "X509_SUBJECT_NAME";
    SAMLNameIdPolicyFormatEnum["WINDOWS_DOMAIN_QUALIFIED_NAME"] = "WINDOWS_DOMAIN_QUALIFIED_NAME";
    SAMLNameIdPolicyFormatEnum["UNSPECIFIED"] = "UNSPECIFIED";
})(SAMLNameIdPolicyFormatEnum = exports.SAMLNameIdPolicyFormatEnum || (exports.SAMLNameIdPolicyFormatEnum = {}));


/***/ }),
/* 1284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLPrincipalTypeEnum = void 0;
var SAMLPrincipalTypeEnum;
(function (SAMLPrincipalTypeEnum) {
    SAMLPrincipalTypeEnum["ATTRIBUTE"] = "ATTRIBUTE";
    SAMLPrincipalTypeEnum["FRIENDLY_ATTRIBUTE"] = "FRIENDLY_ATTRIBUTE";
    SAMLPrincipalTypeEnum["SUBJECT"] = "SUBJECT";
})(SAMLPrincipalTypeEnum = exports.SAMLPrincipalTypeEnum || (exports.SAMLPrincipalTypeEnum = {}));


/***/ }),
/* 1285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLSignatureAlgorithmEnum = void 0;
var SAMLSignatureAlgorithmEnum;
(function (SAMLSignatureAlgorithmEnum) {
    SAMLSignatureAlgorithmEnum["RSA_SHA1"] = "RSA_SHA1";
    SAMLSignatureAlgorithmEnum["RSA_SHA256"] = "RSA_SHA256";
    SAMLSignatureAlgorithmEnum["RSA_SHA512"] = "RSA_SHA512";
    SAMLSignatureAlgorithmEnum["DSA_SHA1"] = "DSA_SHA1";
})(SAMLSignatureAlgorithmEnum = exports.SAMLSignatureAlgorithmEnum || (exports.SAMLSignatureAlgorithmEnum = {}));


/***/ }),
/* 1286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLSignatureKeyNameEnum = void 0;
var SAMLSignatureKeyNameEnum;
(function (SAMLSignatureKeyNameEnum) {
    SAMLSignatureKeyNameEnum["NONE"] = "NONE";
    SAMLSignatureKeyNameEnum["KEY_ID"] = "KEY_ID";
    SAMLSignatureKeyNameEnum["CERT_SUBJECT"] = "CERT_SUBJECT";
})(SAMLSignatureKeyNameEnum = exports.SAMLSignatureKeyNameEnum || (exports.SAMLSignatureKeyNameEnum = {}));


/***/ }),
/* 1287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleIdentityProviderConfigRequest = void 0;
/* istanbul ignore next: autogenerated */
class GoogleIdentityProviderConfigRequest {
    constructor(firstParam) {
        if (firstParam instanceof GoogleIdentityProviderConfigRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enforce sso.
     * @returns {boolean}
     */
    get enforceSso() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get client id.
     * @returns {string}
     */
    get clientId() {
        return this._json.client_id;
    }
    /**
     * Get client secret.
     * @returns {string}
     */
    get clientSecret() {
        return this._json.client_secret;
    }
    /**
     * Get the json representation of this class.
     * @returns {GoogleIdentityProviderConfigRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.GoogleIdentityProviderConfigRequest = GoogleIdentityProviderConfigRequest;


/***/ }),
/* 1290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OIDCIdentityProviderConfigRequest = void 0;
/* istanbul ignore next: autogenerated */
class OIDCIdentityProviderConfigRequest {
    constructor(firstParam) {
        if (firstParam instanceof OIDCIdentityProviderConfigRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enforce SSO.
     * @returns {boolean}
     */
    get enforceSSO() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get authorization url.
     * @returns {string}
     */
    get authorizationUrl() {
        return this._json.authorization_url;
    }
    /**
     * Get logout URL.
     * @returns {string | undefined}
     */
    get logoutUrl() {
        return this._json.logout_url;
    }
    /**
     * Get login hint.
     * @returns {boolean | undefined}
     */
    get loginHint() {
        return this._json.login_hint;
    }
    /**
     * Get ui locales.
     * @returns {boolean | undefined}
     */
    get uiLocales() {
        return this._json.ui_locales;
    }
    /**
     * Get token url.
     * @returns {string}
     */
    get tokenUrl() {
        return this._json.token_url;
    }
    /**
     * Get user info url.
     * @returns {string | undefined}
     */
    get userInfoUrl() {
        return this._json.user_info_url;
    }
    /**
     * Get backchannel supported.
     * @returns {boolean | undefined}
     */
    get backchannelSupported() {
        return this._json.backchannel_supported;
    }
    /**
     * Get disable user info.
     * @returns {boolean | undefined}
     */
    get disableUserInfo() {
        return this._json.disable_user_info;
    }
    /**
     * Get client id.
     * @returns {string}
     */
    get clientId() {
        return this._json.client_id;
    }
    /**
     * Get client secret.
     * @returns {string}
     */
    get clientSecret() {
        return this._json.client_secret;
    }
    /**
     * Get client auth.
     * @returns {OIDCClientAuthType}
     */
    get clientAuth() {
        return this._json.client_auth;
    }
    /**
     * Get issuer.
     * @returns {string | undefined}
     */
    get issuer() {
        return this._json.issuer;
    }
    /**
     * Get default scope.
     * @returns {string | undefined}
     */
    get defaultScope() {
        return this._json.default_scope;
    }
    /**
     * Get prompt.
     * @returns {OIDCPromptType | undefined}
     */
    get prompt() {
        return this._json.prompt;
    }
    /**
     * Get accepts prompt none forward from client.
     * @returns {boolean | undefined}
     */
    get acceptsPromptNoneForwardFromClient() {
        return this._json.accepts_prompt_none_forward_from_client;
    }
    /**
     * Get validate signature.
     * @returns {boolean | undefined}
     */
    get validateSignature() {
        return this._json.validate_signature;
    }
    /**
     * Get use jwks url.
     * @returns {boolean | undefined}
     */
    get useJwksUrl() {
        return this._json.use_jwks_url;
    }
    /**
     * Get jwks url.
     * @returns {string | undefined}
     */
    get jwksUrl() {
        return this._json.jwks_url;
    }
    /**
     * Get public key signature verifier key.
     * @returns {string | undefined}
     */
    get publicKeySignatureVerifierKey() {
        return this._json.public_key_signature_verifier_key;
    }
    /**
     * Get public key signature verifier key id.
     * @returns {string | undefined}
     */
    get publicKeySignatureVerifierKeyId() {
        return this._json.public_key_signature_verifier_key_id;
    }
    /**
     * Get allowed clock skew.
     * @returns {number | undefined}
     */
    get allowedClockSkew() {
        return this._json.allowed_clock_skew;
    }
    /**
     * Get forward parameters.
     * @returns {string | undefined}
     */
    get forwardParameters() {
        return this._json.forward_parameters;
    }
    /**
     * Get the json representation of this class.
     * @returns {OIDCIdentityProviderConfigRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OIDCIdentityProviderConfigRequest = OIDCIdentityProviderConfigRequest;


/***/ }),
/* 1291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OktaIdentityProviderCreateRequest = void 0;
/**
 * Okta Identity Provider Create Request.
 */
class OktaIdentityProviderCreateRequest {
    constructor(firstParam, enabled, singleSignOnServiceUrl) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enforce_sso: firstParam,
                enabled: enabled,
                single_sign_on_service_url: singleSignOnServiceUrl
            };
        }
        else if (firstParam instanceof OktaIdentityProviderCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enforce sso.
     * @returns {boolean}
     */
    get enforceSso() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get single sign on service url.
     * @returns {string}
     */
    get singleSignOnServiceUrl() {
        return this._json.single_sign_on_service_url;
    }
    /**
     * Get the json representation of this class.
     * @returns {OktaIdentityProviderCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.OktaIdentityProviderCreateRequest = OktaIdentityProviderCreateRequest;


/***/ }),
/* 1292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLIdentityProviderConfigRequest = void 0;
/* istanbul ignore next: autogenerated */
class SAMLIdentityProviderConfigRequest {
    constructor(firstParam) {
        // Parameters constructor
        if (firstParam instanceof SAMLIdentityProviderConfigRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enforce sso.
     * @returns {boolean}
     */
    get enforceSso() {
        return this._json.enforce_sso;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get single sign on service url.
     * @returns {string}
     */
    get singleSignOnServiceUrl() {
        return this._json.single_sign_on_service_url;
    }
    /**
     * Get single logout service URL.
     * @returns {string | undefined}
     */
    get singleLogoutServiceUrl() {
        return this._json.single_logout_service_url;
    }
    /**
     * Get name id policy format.
     * @returns {SAMLNameIdPolicyFormat | undefined}
     */
    get nameIsPolicyFormat() {
        return this._json.name_id_policy_format;
    }
    /**
     * Get principal type.
     * @returns {SAMLPrincipalType | undefined}
     */
    get principalType() {
        return this._json.principal_type;
    }
    /**
     * Get principal attribute.
     * @returns {string | undefined}
     */
    get principalAttribute() {
        return this._json.principal_attribute;
    }
    /**
     * Get signature algorithm.
     * @returns {SAMLSignatureAlgorithm | undefined}
     */
    get signatureAlgorithm() {
        return this._json.signature_algorithm;
    }
    /**
     * Get saml xml key name tranformer.
     * @returns {SAMLSignatureKeyName | undefined}
     */
    get samlXmlKeyNameTranformer() {
        return this._json.saml_xml_key_name_tranformer;
    }
    /**
     * Get backchannel supported.
     * @returns {boolean | undefined}
     */
    get backchannelSupported() {
        return this._json.backchannel_supported;
    }
    /**
     * Get post binding response.
     * @returns {boolean | undefined}
     */
    get postBindingResponse() {
        return this._json.post_binding_response;
    }
    /**
     * Get post binding authn request.
     * @returns {boolean | undefined}
     */
    get postBindingAuthnRequest() {
        return this._json.post_binding_authn_request;
    }
    /**
     * Get post binding logout.
     * @returns {boolean | undefined}
     */
    get postBindingLogout() {
        return this._json.post_binding_logout;
    }
    /**
     * Get want authn requests signed.
     * @returns {boolean | undefined}
     */
    get wantAuthnRequestsSigned() {
        return this._json.want_authn_requests_signed;
    }
    /**
     * Get want assertions signed.
     * @returns {boolean | undefined}
     */
    get wantAssertionsSigned() {
        return this._json.want_assertions_signed;
    }
    /**
     * Get signing certificate.
     * @returns {string | undefined}
     */
    get signingCertificate() {
        return this._json.signing_certificate;
    }
    /**
     * Get want assertions encrypted.
     * @returns {boolean | undefined}
     */
    get wantAssertionsEncrypted() {
        return this._json.want_assertions_encrypted;
    }
    /**
     * Get force authn.
     * @returns {boolean | undefined}
     */
    get forceAuthn() {
        return this._json.force_authn;
    }
    /**
     * Get validate signature.
     * @returns {boolean | undefined}
     */
    get validateSignature() {
        return this._json.validate_signature;
    }
    /**
     * Get allowed clock skew.
     * @returns {string | undefined}
     */
    get allowedClockSkew() {
        return this._json.allowed_clock_skew;
    }
    /**
     * Get the json representation of this class.
     * @returns {SAMLIdentityProviderConfigRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SAMLIdentityProviderConfigRequest = SAMLIdentityProviderConfigRequest;


/***/ }),
/* 1293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SsoUserCreateRequest = void 0;
/* istanbul ignore next: autogenerated */
class SsoUserCreateRequest {
    constructor(firstParam) {
        if (firstParam instanceof SsoUserCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get domain.
     * @returns {string}
     */
    get domain() {
        return this._json.domain;
    }
    /**
     * Get fullname.
     * @returns {string}
     */
    get fullname() {
        return this._json.fullname;
    }
    /**
     * Get role uuid.
     * @returns {string | undefined}
     */
    get roleUuid() {
        return this._json.role_uuid;
    }
    /**
     * Get send invitation.
     * @returns {boolean}
     */
    get sendInvitation() {
        return this._json.send_invitation;
    }
    /**
     * Get the json representation of this class.
     * @returns {SsoUserCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SsoUserCreateRequest = SsoUserCreateRequest;


/***/ }),
/* 1294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EntityHistorySubscriptionType = void 0;
/**
 * User entity history subscription type
 */
var EntityHistorySubscriptionType;
(function (EntityHistorySubscriptionType) {
    EntityHistorySubscriptionType["COMPANY"] = "COMPANY";
    EntityHistorySubscriptionType["ORG"] = "ORG";
    EntityHistorySubscriptionType["VDC"] = "VDC";
    EntityHistorySubscriptionType["CATALOG"] = "CATALOG";
    EntityHistorySubscriptionType["VPG"] = "VPG";
    EntityHistorySubscriptionType["ORG_VDC_NETWORK"] = "ORG_VDC_NETWORK";
    EntityHistorySubscriptionType["EDGE"] = "EDGE";
    EntityHistorySubscriptionType["VAPP"] = "VAPP";
    EntityHistorySubscriptionType["VAPP_NETWORK"] = "VAPP_NETWORK";
    EntityHistorySubscriptionType["VM"] = "VM";
    EntityHistorySubscriptionType["VAPP_TEMPLATE"] = "VAPP_TEMPLATE";
    EntityHistorySubscriptionType["MEDIA"] = "MEDIA";
    EntityHistorySubscriptionType["EXTERNAL_NETWORK"] = "EXTERNAL_NETWORK";
    EntityHistorySubscriptionType["RECOVERY_RUNBOOK"] = "RECOVERY_RUNBOOK";
    EntityHistorySubscriptionType["VCC_TENANT"] = "VCC_TENANT";
})(EntityHistorySubscriptionType = exports.EntityHistorySubscriptionType || (exports.EntityHistorySubscriptionType = {}));


/***/ }),
/* 1316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FrequencyEnum = void 0;
/**
 * User entity history subscription frequency enum
 */
var FrequencyEnum;
(function (FrequencyEnum) {
    FrequencyEnum["WEEKLY"] = "WEEKLY";
})(FrequencyEnum = exports.FrequencyEnum || (exports.FrequencyEnum = {}));


/***/ }),
/* 1318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchInboxUpdateRequest = void 0;
/**
 * Batch Inbox Update Request.
 */
/* istanbul ignore next: autogenerated */
class BatchInboxUpdateRequest {
    constructor(firstParam, folder, selection, uuids) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                type: firstParam,
                folder: folder,
                selection: selection,
                uuids: uuids
            };
        }
        else if (firstParam instanceof BatchInboxUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get type.
     * @returns {UpdateType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get folder.
     * @returns {MessageFolder}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get selection.
     * @returns {MessageSelection}
     */
    get selection() {
        return this._json.selection;
    }
    /**
     * Get uuids.
     * @returns {Array<string>}
     */
    get uuids() {
        return this._json.uuids;
    }
    /**
     * Get the json representation of this class.
     * @returns {BatchInboxUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BatchInboxUpdateRequest = BatchInboxUpdateRequest;


/***/ }),
/* 1323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InboxMarkAllAsReadRequest = void 0;
/**
 * Inbox Mark All As Read Request.
 */
/* istanbul ignore next: autogenerated */
class InboxMarkAllAsReadRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                folder: firstParam
            };
        }
        else if (firstParam instanceof InboxMarkAllAsReadRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get folder.
     * @returns {MessageFolder}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get the json representation of this class.
     * @returns {InboxMarkAllAsReadRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.InboxMarkAllAsReadRequest = InboxMarkAllAsReadRequest;


/***/ }),
/* 1324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InboxMessageFilterParams = void 0;
/**
 * Inbox Message Filter Params.
 */
/* istanbul ignore next: autogenerated */
class InboxMessageFilterParams {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get folder.
     * @returns {MessageFolder}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get offset.
     * @returns {number}
     */
    get offset() {
        return this._json.offset;
    }
    /**
     * Get limit.
     * @returns {number}
     */
    get limit() {
        return this._json.limit;
    }
    /**
     * Get order.
     * @returns {PagingOrder}
     */
    get order() {
        return this._json.order;
    }
    /**
     * Get the json representation of this class.
     * @returns {InboxMessageFilterParams}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.InboxMessageFilterParams = InboxMessageFilterParams;


/***/ }),
/* 1325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MoveMessageRequest = void 0;
/**
 * Move Message Request.
 */
/* istanbul ignore next: autogenerated */
class MoveMessageRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                folder: firstParam
            };
        }
        else if (firstParam instanceof MoveMessageRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get folder.
     * @returns {MessageFolder}
     */
    get folder() {
        return this._json.folder;
    }
    /**
     * Get the json representation of this class.
     * @returns {MoveMessageRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MoveMessageRequest = MoveMessageRequest;


/***/ }),
/* 1327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserEntityHistorySubscriptionCreateRequest = void 0;
/**
 * User Entity History Subscription Create Request
 */
/* istanbul ignore next: autogenerated */
class UserEntityHistorySubscriptionCreateRequest {
    constructor(firstParam, entityType, email, frequency, enabled) {
        if (typeof firstParam === 'string') {
            this._json = {
                entity_uuid: firstParam,
                entity_type: entityType,
                email: email,
                frequency: frequency,
                enabled: enabled
            };
        }
        else if (firstParam instanceof UserEntityHistorySubscriptionCreateRequest) {
            this._json = firstParam.json;
        }
        else {
            this._json = firstParam || {};
        }
    }
    /**
     * Get entity type from user subscription
     * @returns {EntityHistorySubscriptionType}
     */
    get entityType() {
        return this._json.entity_type;
    }
    /**
     * Get entity uuid from user subscription
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get email from user subscription
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get frequency from user subscription
     * @returns {FrequencyEnum}
     */
    get frequency() {
        return this._json.frequency;
    }
    /**
     * Get is enabled from user subscription
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserEntityHistorySubscriptionCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserEntityHistorySubscriptionCreateRequest = UserEntityHistorySubscriptionCreateRequest;


/***/ }),
/* 1328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserEntityHistorySubscriptionDeleteRequest = void 0;
/**
 * User Entity History Subscription Delete Request
 */
/* istanbul ignore next: autogenerated */
class UserEntityHistorySubscriptionDeleteRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                entity_uuid: firstParam
            };
        }
        else if (firstParam instanceof UserEntityHistorySubscriptionDeleteRequest) {
            this._json = firstParam.json;
        }
        else {
            this._json = firstParam || {};
        }
    }
    /**
     * Get entity uuid of delete request
     * @returns {string}
     */
    get entityUuid() {
        return this._json.entity_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserEntityHistorySubscriptionDeleteRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserEntityHistorySubscriptionDeleteRequest = UserEntityHistorySubscriptionDeleteRequest;


/***/ }),
/* 1329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserUpdateRequest = void 0;
/**
 * User Update Request.
 */
/* istanbul ignore next: autogenerated */
class UserUpdateRequest {
    constructor(firstParam, phone, company, address, city, state, zip, country) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                fullname: firstParam,
                phone: phone,
                company: company,
                address: address,
                city: city,
                state: state,
                zip: zip,
                country: country
            };
        }
        else if (firstParam instanceof UserUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get the full name.
     * @returns {string}
     */
    get fullname() {
        return this._json.fullname;
    }
    /**
     * Get phone.
     * @returns {string}
     */
    get phone() {
        return this._json.phone;
    }
    /**
     * Get company.
     * @returns {string}
     */
    get company() {
        return this._json.company;
    }
    /**
     * Get address.
     * @returns {string}
     */
    get address() {
        return this._json.address;
    }
    /**
     * Get city.
     * @returns {string}
     */
    get city() {
        return this._json.city;
    }
    /**
     * Get state.
     * @returns {string}
     */
    get state() {
        return this._json.state;
    }
    /**
     * Get zip.
     * @returns {string}
     */
    get zip() {
        return this._json.zip;
    }
    /**
     * Get country.
     * @returns {string}
     */
    get country() {
        return this._json.country;
    }
    /**
     * Get the json representation of this class.
     * @returns {UserUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UserUpdateRequest = UserUpdateRequest;


/***/ }),
/* 1330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UserWithSecurity = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const iam_service_1 = __webpack_require__(605);
const user_1 = __webpack_require__(237);
/**
 * UserWithSecurity
 */
class UserWithSecurity extends user_1.User {
    constructor(_apiUser) {
        super(_apiUser);
        this._inventory = [];
        this._rolesCompanyMap = new Map();
    }
    /**
     * Set the inventory for user.
     * @param {Array<CompanyInventory> | undefined} value
     */
    set inventory(value) {
        this._inventory = value;
    }
    /**
     * Get the user companyInventory list.
     * @returns {Array<CompanyInventory> | undefined}
     */
    get inventory() {
        return this._inventory;
    }
    /**
     * Set the roles for user.
     * @param {Map<string, Role>} value
     */
    set rolesCompanyMap(value) {
        this._rolesCompanyMap = value;
    }
    /**
     * Get a map of user Role by company ID.
     * @returns {Map<string, Role>}
     */
    get rolesCompanyMap() {
        return this._rolesCompanyMap;
    }
    /**
     * Gets a user by username.
     * @param username the user's username
     * @returns {Promise<User>}
     */
    static getUser(username) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/users/${username}`)
                .then(response => {
                const apiUser = response.data;
                return new UserWithSecurity(apiUser);
            });
        });
    }
    /**
     * Gets the currently authenticated user.
     * @returns {Promise<User>}
     */
    static getCurrentUser() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getAuthProvider()
                .getAuthenticatedUsername()
                .then((username) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                if (username) {
                    return UserWithSecurity.getUser(username).then((userWithSecurity) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                        return UserWithSecurity.setup(userWithSecurity);
                    }));
                }
                else {
                    return new Promise(function (_, reject) {
                        reject();
                    });
                }
            }));
        });
    }
    /**
     * Get user with security from an existing user.
     * @param {User} user
     * @returns {Promise<UserWithSecurity>}
     */
    static getUserWithSecurity(user) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const userWithSecurity = new UserWithSecurity(user.json);
            return UserWithSecurity.setup(userWithSecurity);
        });
    }
    /**
     * Setup the userWithSecurity class. That will add the needed inventory and roles to the UserWithSecurity class.
     * @param {UserWithSecurity} userWithSecurity
     * @returns {Promise<UserWithSecurity>}
     */
    static setup(userWithSecurity) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (userWithSecurity.userType === 'CUSTOMER') {
                const promises = [
                    userWithSecurity.getInventory(),
                    userWithSecurity.getRoles()
                ];
                return Promise.all(promises).then((results) => {
                    userWithSecurity.inventory = results[0];
                    const roles = results[1];
                    const rolesCompanyMap = new Map();
                    for (const role of roles) {
                        rolesCompanyMap.set(role.companyId, role);
                    }
                    userWithSecurity.rolesCompanyMap = rolesCompanyMap;
                    return userWithSecurity;
                });
            }
            else {
                return new Promise(resolve => {
                    return resolve(userWithSecurity);
                });
            }
        });
    }
    /**
     * Get a list of all user's roles.
     * @returns {Promise<Array<Role>>}
     */
    getRoles() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const self = this;
            return this.getCompanies().then((companies) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                const roles = [];
                for (const company of companies) {
                    roles.push(self.getRole(company.uuid));
                }
                return Promise.all(roles);
            }));
        });
    }
    /**
     * Check whether or not a user is allowed to perform an action or not.
     * @param {PermissionType} permissionType
     * @param {string} entityUuid
     * @returns {boolean}
     */
    isPermittedTo(permissionType, entityUuid) {
        return iam_service_1.IamService.isUserPermitted(this, entityUuid, permissionType);
    }
    /**
     * Retrieves a new representation of the user from the API.
     * @returns {Promise<User>} promise that resolves with updated user
     */
    refresh() {
        const _super = Object.create(null, {
            refresh: { get: () => super.refresh }
        });
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return _super.refresh.call(this).then(() => this);
        });
    }
}
exports.UserWithSecurity = UserWithSecurity;


/***/ }),
/* 1331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaJobBottleneckEnum = void 0;
var BaJobBottleneckEnum;
(function (BaJobBottleneckEnum) {
    BaJobBottleneckEnum["SOURCE"] = "SOURCE";
    BaJobBottleneckEnum["PROXY"] = "PROXY";
    BaJobBottleneckEnum["NETWORK"] = "NETWORK";
    BaJobBottleneckEnum["TARGET"] = "TARGET";
    BaJobBottleneckEnum["SOURCE_WAN_ACCELERATOR"] = "SOURCE_WAN_ACCELERATOR";
    BaJobBottleneckEnum["TARGET_WAN_ACCELERATOR"] = "TARGET_WAN_ACCELERATOR";
    BaJobBottleneckEnum["UNKNOWN"] = "UNKNOWN";
})(BaJobBottleneckEnum = exports.BaJobBottleneckEnum || (exports.BaJobBottleneckEnum = {}));


/***/ }),
/* 1339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaJobSchedulingTypeEnum = void 0;
var BaJobSchedulingTypeEnum;
(function (BaJobSchedulingTypeEnum) {
    BaJobSchedulingTypeEnum["CONTINUOUSLY"] = "CONTINUOUSLY";
    BaJobSchedulingTypeEnum["PERIODICALLY"] = "PERIODICALLY";
    BaJobSchedulingTypeEnum["MONTHLY"] = "MONTHLY";
    BaJobSchedulingTypeEnum["DAILY"] = "DAILY";
    BaJobSchedulingTypeEnum["CHAINED"] = "CHAINED";
    BaJobSchedulingTypeEnum["DISABLED"] = "DISABLED";
    BaJobSchedulingTypeEnum["NOT_SCHEDULED"] = "NOTSCHEDULED";
    BaJobSchedulingTypeEnum["BACKUP_WINDOW"] = "BACKUPWINDOW";
    BaJobSchedulingTypeEnum["UNKNOWN"] = "UNKNOWN";
})(BaJobSchedulingTypeEnum = exports.BaJobSchedulingTypeEnum || (exports.BaJobSchedulingTypeEnum = {}));


/***/ }),
/* 1341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaJobStatusEnum = void 0;
var BaJobStatusEnum;
(function (BaJobStatusEnum) {
    BaJobStatusEnum["UNKNOWN"] = "UNKNOWN";
    BaJobStatusEnum["NONE"] = "NONE";
    BaJobStatusEnum["IDLE"] = "IDLE";
    BaJobStatusEnum["SUCCESS"] = "SUCCESS";
    BaJobStatusEnum["WARNING"] = "WARNING";
    BaJobStatusEnum["FAILED"] = "FAILED";
    BaJobStatusEnum["RUNNING"] = "RUNNING";
    BaJobStatusEnum["STARTING"] = "STARTING";
    BaJobStatusEnum["STOPPING"] = "STOPPING";
    BaJobStatusEnum["ENABLING"] = "ENABLING";
    BaJobStatusEnum["DISABLING"] = "DISABLING";
    BaJobStatusEnum["WAITING_TAPE"] = "WAITINGTAPE";
    BaJobStatusEnum["WAITING_REPOSITORY"] = "WAITINGREPOSITORY";
})(BaJobStatusEnum = exports.BaJobStatusEnum || (exports.BaJobStatusEnum = {}));


/***/ }),
/* 1342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaJobTypeEnum = void 0;
var BaJobTypeEnum;
(function (BaJobTypeEnum) {
    BaJobTypeEnum["UNKNOWN"] = "UNKNOWN";
    BaJobTypeEnum["BACKUP_VM"] = "BACKUPVM";
    BaJobTypeEnum["REPLICATION_VM"] = "REPLICATIONVM";
    BaJobTypeEnum["COPY_VM"] = "COPYVM";
    BaJobTypeEnum["COPY_FILE"] = "COPYFILE";
    BaJobTypeEnum["FILE_TO_TAPE"] = "FILETOTAPE";
    BaJobTypeEnum["BACKUP_TO_TAPE"] = "BACKUPTOTAPE";
    BaJobTypeEnum["BACKUP_COPY"] = "BACKUPCOPY";
    BaJobTypeEnum["IMMEDIATELY_BACKUP_COPY"] = "IMMEDIATELYBACKUPCOPY";
    BaJobTypeEnum["SQL_LOG_BACKUP"] = "SQLLOGBACKUP";
    BaJobTypeEnum["ORACLE_LOG_BACKUP"] = "ORACLELOGBACKUP";
    BaJobTypeEnum["SURE_BACKUP"] = "SUREBACKUP";
    BaJobTypeEnum["AGENT_POLICY"] = "AGENTPOLICY";
    BaJobTypeEnum["AGENT_BACKUP_JOB"] = "AGENTBACKUPJOB";
    BaJobTypeEnum["BACKUP_FILE"] = "BACKUPFILE";
    BaJobTypeEnum["BACKUP_FILE_COPY"] = "BACKUPFILECOPY";
    BaJobTypeEnum["AZURE_BACKUP_JOB"] = "AZUREBACKUPJOB";
    BaJobTypeEnum["AWS_BACKUP_JOB"] = "AWSBACKUPJOB";
})(BaJobTypeEnum = exports.BaJobTypeEnum || (exports.BaJobTypeEnum = {}));


/***/ }),
/* 1343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaBackupResourceUpdateRequest = void 0;
class BaBackupResourceUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                storage_quota: firstParam
            };
        }
        else if (firstParam instanceof BaBackupResourceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get storage quota.
     * @returns {number}
     */
    get storageQuota() {
        return this._json.storage_quota;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaBackupResourceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaBackupResourceUpdateRequest = BaBackupResourceUpdateRequest;


/***/ }),
/* 1348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompanyUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class BaCompanyUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam
            };
        }
        else if (firstParam instanceof BaCompanyUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaCompanyUpdateRequest = BaCompanyUpdateRequest;


/***/ }),
/* 1349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompanyPasswordResetRequest = void 0;
/* istanbul ignore next: autogenerated */
class BaCompanyPasswordResetRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                password: firstParam
            };
        }
        else if (firstParam instanceof BaCompanyPasswordResetRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get password.
     * @returns {string}
     */
    get password() {
        return this._json.password;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyPasswordResetRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaCompanyPasswordResetRequest = BaCompanyPasswordResetRequest;


/***/ }),
/* 1350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BaCompanyContractUpgradeRequest = void 0;
/* istanbul ignore next: autogenerated */
class BaCompanyContractUpgradeRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                additional_storage_in_gb: firstParam
            };
        }
        else if (firstParam instanceof BaCompanyContractUpgradeRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get additional storage in gb.
     * @returns {number}
     */
    get additionalStorageInGb() {
        return this._json.additional_storage_in_gb;
    }
    /**
     * Get the json representation of this class.
     * @returns {BaCompanyContractUpgradeRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.BaCompanyContractUpgradeRequest = BaCompanyContractUpgradeRequest;


/***/ }),
/* 1355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkDHCPServiceUpdateRequest = void 0;
const ip_range_1 = __webpack_require__(32);
/* istanbul ignore next: autogenerated */
class VappNetworkDHCPServiceUpdateRequest {
    constructor(firstParam, ipRange, defaultLeaseTime, maxLeaseTime) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                ip_range: ipRange,
                default_lease_time: defaultLeaseTime,
                max_lease_time: maxLeaseTime
            };
        }
        else if (firstParam instanceof VappNetworkDHCPServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get ip range.
     * @returns {IpRange}
     */
    get ipRange() {
        return new ip_range_1.IpRange(this._json.ip_range);
    }
    /**
     * Get default lease time.
     * @returns {number}
     */
    get defaultLeaseTime() {
        return this._json.default_lease_time;
    }
    /**
     * Get max lease time.
     * @returns {number}
     */
    get maxLeaseTime() {
        return this._json.max_lease_time;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkDHCPServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkDHCPServiceUpdateRequest = VappNetworkDHCPServiceUpdateRequest;


/***/ }),
/* 1375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkFirewallUpdateRequest = void 0;
const vapp_network_firewall_rule_request_1 = __webpack_require__(606);
/* istanbul ignore next: autogenerated */
class VappNetworkFirewallUpdateRequest {
    constructor(firstParam, enabled, defaultAction, rules) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                logging_enabled: firstParam,
                enabled: enabled,
                default_action: defaultAction,
                rules: rules
            };
        }
        else if (firstParam instanceof VappNetworkFirewallUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get logging enabled.
     * @returns {boolean}
     */
    get loggingEnabled() {
        return this._json.logging_enabled;
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get default action.
     * @returns {string}
     */
    get defaultAction() {
        return this._json.default_action;
    }
    /**
     * Get rules.
     * @returns {Array<VappNetworkFirewallRuleRequest>}
     */
    get rules() {
        return this._json.rules.map(request => {
            return new vapp_network_firewall_rule_request_1.VappNetworkFirewallRuleRequest(request);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkFirewallUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkFirewallUpdateRequest = VappNetworkFirewallUpdateRequest;


/***/ }),
/* 1376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkNATServiceUpdateRequest = void 0;
const vapp_network_ip_translation_nat_rule_request_1 = __webpack_require__(607);
const vapp_network_port_forward_nat_rule_request_1 = __webpack_require__(608);
/* istanbul ignore next: autogenerated */
class VappNetworkNATServiceUpdateRequest {
    constructor(firstParam, type, ipTranslationRules, portForwardingRules, enableIpMasquerade) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                type: type,
                ip_translation_rules: ipTranslationRules,
                port_forwarding_rules: portForwardingRules,
                enable_ip_masquerade: enableIpMasquerade
            };
        }
        else if (firstParam instanceof VappNetworkNATServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get type.
     * @returns {Type}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get ip translation rules.
     * @returns {Array<VappNetworkIpTranslationNATRuleRequest>}
     */
    get ipTranslationRules() {
        return this._json.ip_translation_rules.map(rule => {
            return new vapp_network_ip_translation_nat_rule_request_1.VappNetworkIpTranslationNATRuleRequest(rule);
        });
    }
    /**
     * Get port forwarding rules.
     * @returns {Array<VappNetworkPortForwardNATRuleRequest>}
     */
    get portForwardingRules() {
        return this._json.port_forwarding_rules.map(rule => {
            return new vapp_network_port_forward_nat_rule_request_1.VappNetworkPortForwardNATRuleRequest(rule);
        });
    }
    /**
     * Get enable ip masquerade.
     * @returns {boolean}
     */
    get enableIpMasquerade() {
        return this._json.enable_ip_masquerade;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkNATServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkNATServiceUpdateRequest = VappNetworkNATServiceUpdateRequest;


/***/ }),
/* 1377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkStaticRoutingServiceUpdateRequest = void 0;
const vapp_network_static_route_request_1 = __webpack_require__(609);
/* istanbul ignore next: autogenerated */
class VappNetworkStaticRoutingServiceUpdateRequest {
    constructor(firstParam, staticRoutes) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                enabled: firstParam,
                static_routes: staticRoutes
            };
        }
        else if (firstParam instanceof VappNetworkStaticRoutingServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get enabled.
     * @returns {boolean}
     */
    get enabled() {
        return this._json.enabled;
    }
    /**
     * Get static routes.
     * @returns {Array<VappNetworkStaticRouteRequest>}
     */
    get staticRoutes() {
        return this._json.static_routes.map(route => {
            return new vapp_network_static_route_request_1.VappNetworkStaticRouteRequest(route);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkStaticRoutingServiceUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkStaticRoutingServiceUpdateRequest = VappNetworkStaticRoutingServiceUpdateRequest;


/***/ }),
/* 1378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkUpdateRequest = void 0;
const ip_range_1 = __webpack_require__(32);
/* istanbul ignore next: autogenerated */
class VappNetworkUpdateRequest {
    constructor(firstParam, description, name, primaryDns, secondaryDns, dnsSuffix, inherited, ipRanges, routerExternalIp, fenceMode) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                fence_mode: fenceMode,
                parent_network_uuid: firstParam,
                description: description,
                name: name,
                primary_dns: primaryDns,
                secondary_dns: secondaryDns,
                dns_suffix: dnsSuffix,
                inherited: inherited,
                ip_ranges: ipRanges,
                router_external_ip: routerExternalIp
            };
        }
        else if (firstParam instanceof VappNetworkUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get fence mode.
     * @returns {FenceModeType}
     */
    get fenceMode() {
        return this._json.fence_mode;
    }
    /**
     * Get parent network uuid.
     * @returns {string}
     */
    get parentNetworkUuid() {
        return this._json.parent_network_uuid;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get inherited.
     * @returns {boolean}
     */
    get inherited() {
        return this._json.inherited;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRange>}
     */
    get ipRanges() {
        return this._json.ip_ranges.map(range => {
            return new ip_range_1.IpRange(range);
        });
    }
    /**
     * Get router external ip.
     * @returns {string}
     */
    get routerExternalIp() {
        return this._json.router_external_ip;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkUpdateRequest = VappNetworkUpdateRequest;


/***/ }),
/* 1379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappTemplateUpdateRequest = void 0;
/**
 * Vapp Template Update Request.
 */
/* istanbul ignore next: autogenerated */
class VappTemplateUpdateRequest {
    constructor(firstParam, description) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description
            };
        }
        else if (firstParam instanceof VappTemplateUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappTemplateUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappTemplateUpdateRequest = VappTemplateUpdateRequest;


/***/ }),
/* 1390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappCopyMoveRequest = void 0;
const vapp_child_vm_copy_move_request_1 = __webpack_require__(610);
/**
 * vApp copy move request.
 */
/* istanbul ignore next: autogenerated */
class VappCopyMoveRequest {
    constructor(firstParam, description, vmSpecs, vdcUuid) {
        if (!firstParam || typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                vm_specs: vmSpecs,
                vdc_uuid: vdcUuid
            };
        }
        else if (firstParam instanceof VappCopyMoveRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vm specs.
     * @returns {Array<VappChildVmCopyMoveRequest>}
     */
    get vmSpecs() {
        return this._json.vm_specs.map(it => new vapp_child_vm_copy_move_request_1.VappChildVmCopyMoveRequest(it));
    }
    /**
     * Get vdc uuid.
     * @returns {string}
     */
    get vdcUuid() {
        return this._json.vdc_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappCopyMoveRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappCopyMoveRequest = VappCopyMoveRequest;


/***/ }),
/* 1405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappNetworkCreateRequest = void 0;
class VappNetworkCreateRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get deployed.
     * @returns {boolean}
     */
    get deployed() {
        return this._json.deployed;
    }
    /**
     * Get backward compatibility mode.
     * @returns {boolean}
     */
    get backwardCompatibilityMode() {
        return this._json.backward_compatibility_mode;
    }
    /**
     * Get retain net info across deployments.
     * @returns {boolean}
     */
    get retainNetInfoAcrossDeployments() {
        return this._json.retain_net_info_across_deployments;
    }
    /**
     * Get parent network uuid.
     * @returns {string}
     */
    get parentNetworkUuid() {
        return this._json.parent_network_uuid;
    }
    /**
     * Get gateway address.
     * @returns {string}
     */
    get gatewayAddress() {
        return this._json.gateway_address;
    }
    /**
     * Get network mask.
     * @returns {string}
     */
    get networkMask() {
        return this._json.network_mask;
    }
    /**
     * Get primary dns.
     * @returns {string}
     */
    get primaryDns() {
        return this._json.primary_dns;
    }
    /**
     * Get secondary dns.
     * @returns {string}
     */
    get secondaryDns() {
        return this._json.secondary_dns;
    }
    /**
     * Get dns suffix.
     * @returns {string}
     */
    get dnsSuffix() {
        return this._json.dns_suffix;
    }
    /**
     * Get ip ranges.
     * @returns {Array<IpRangeJson>}
     */
    get ipRanges() {
        return this._json.ip_ranges;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappNetworkCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappNetworkCreateRequest = VappNetworkCreateRequest;


/***/ }),
/* 1406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappRenameRequest = void 0;
/**
 * Request to rename a vApp.
 */
/* istanbul ignore next: autogenerated */
class VappRenameRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam
            };
        }
        else if (firstParam instanceof VappRenameRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappRenameRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappRenameRequest = VappRenameRequest;


/***/ }),
/* 1407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RuntimeLeaseUpdateRequest = void 0;
/**
 * Request to update a vAppruntime lease.
 */
/* istanbul ignore next: autogenerated */
class RuntimeLeaseUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                expiration_in_seconds: firstParam
            };
        }
        else if (firstParam instanceof RuntimeLeaseUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get expiration in seconds.
     * @returns {number}
     */
    get expirationInSeconds() {
        return this._json.expiration_in_seconds;
    }
    /**
     * Get the json representation of this class.
     * @returns {RuntimeLeaseUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.RuntimeLeaseUpdateRequest = RuntimeLeaseUpdateRequest;


/***/ }),
/* 1408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappStartupSectionItemRequest = void 0;
/* istanbul ignore next: autogenerated */
class VappStartupSectionItemRequest {
    constructor(firstParam, ord, startAction, stopAction, startDelay, stopDelay) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vm_name: firstParam,
                ord: ord,
                start_action: startAction,
                stop_action: stopAction,
                start_delay: startDelay,
                stop_delay: stopDelay
            };
        }
        else if (firstParam instanceof VappStartupSectionItemRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vm name.
     * @returns {string}
     */
    get vmName() {
        return this._json.vm_name;
    }
    /**
     * Get ord.
     * @returns {number}
     */
    get ord() {
        return this._json.ord;
    }
    /**
     * Get start action.
     * @returns {string}
     */
    get startAction() {
        return this._json.start_action;
    }
    /**
     * Get stop action.
     * @returns {string}
     */
    get stopAction() {
        return this._json.stop_action;
    }
    /**
     * Get start delay.
     * @returns {number}
     */
    get startDelay() {
        return this._json.start_delay;
    }
    /**
     * Get stop delay.
     * @returns {number}
     */
    get stopDelay() {
        return this._json.stop_delay;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappStartupSectionItemRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappStartupSectionItemRequest = VappStartupSectionItemRequest;


/***/ }),
/* 1409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageLeaseUpdateRequest = void 0;
/**
 * Request to update a vApp storage lease.
 */
/* istanbul ignore next: autogenerated */
class StorageLeaseUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                expiration_in_seconds: firstParam
            };
        }
        else if (firstParam instanceof StorageLeaseUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get expiration in seconds.
     * @returns {number}
     */
    get expirationInSeconds() {
        return this._json.expiration_in_seconds;
    }
    /**
     * Get the json representation of this class.
     * @returns {StorageLeaseUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.StorageLeaseUpdateRequest = StorageLeaseUpdateRequest;


/***/ }),
/* 1410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VappDescriptionUpdateRequest = void 0;
/**
 * Requet to update a vApp description.
 */
/* istanbul ignore next: autogenerated */
class VappDescriptionUpdateRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam
            };
        }
        else if (firstParam instanceof VappDescriptionUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get the json representation of this class.
     * @returns {VappDescriptionUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VappDescriptionUpdateRequest = VappDescriptionUpdateRequest;


/***/ }),
/* 1411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VccFailoverStartCreateRequest = void 0;
/**
 * VccFailoverStartCreateRequest.
 */
/* istanbul ignore next: autogenerated */
class VccFailoverStartCreateRequest {
    constructor(firstParam) {
        if (firstParam === undefined || typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                start_date: firstParam
            };
        }
        else if (firstParam instanceof VccFailoverStartCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get start date.
     * @returns {number}
     */
    get startDate() {
        return this._json.start_date;
    }
    /**
     * Get the json representation of this class.
     * @returns {VccFailoverStartCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VccFailoverStartCreateRequest = VccFailoverStartCreateRequest;


/***/ }),
/* 1419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateTenantContractRequest = void 0;
/**
 *  Update Tenant Contract Request.
 */
/* istanbul ignore next: autogenerated */
class UpdateTenantContractRequest {
    constructor(firstParam) {
        if (typeof firstParam === 'number') {
            // Parameters constructor
            this._json = {
                additional_storage_in_gb: firstParam
            };
        }
        else if (firstParam instanceof UpdateTenantContractRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get additional storage in gb.
     * @returns {number}
     */
    get additionalStorageInGb() {
        return this._json.additional_storage_in_gb;
    }
    /**
     * Get the json representation of this class.
     * @returns {UpdateTenantContractRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.UpdateTenantContractRequest = UpdateTenantContractRequest;


/***/ }),
/* 1421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallActionTypeEnum = void 0;
var DistributedFirewallActionTypeEnum;
(function (DistributedFirewallActionTypeEnum) {
    DistributedFirewallActionTypeEnum["ALLOW"] = "ALLOW";
    DistributedFirewallActionTypeEnum["DENY"] = "DENY";
})(DistributedFirewallActionTypeEnum = exports.DistributedFirewallActionTypeEnum || (exports.DistributedFirewallActionTypeEnum = {}));


/***/ }),
/* 1463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallDirectionTypeEnum = void 0;
var DistributedFirewallDirectionTypeEnum;
(function (DistributedFirewallDirectionTypeEnum) {
    DistributedFirewallDirectionTypeEnum["IN"] = "IN";
    DistributedFirewallDirectionTypeEnum["OUT"] = "OUT";
    DistributedFirewallDirectionTypeEnum["INOUT"] = "INOUT";
})(DistributedFirewallDirectionTypeEnum = exports.DistributedFirewallDirectionTypeEnum || (exports.DistributedFirewallDirectionTypeEnum = {}));


/***/ }),
/* 1464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer2UpdateRequest = void 0;
const distributed_firewall_layer2_rule_update_request_1 = __webpack_require__(611);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer2UpdateRequest {
    constructor(firstParam, name, tcpStrict, stateless, useSid) {
        if (firstParam instanceof DistributedFirewallLayer2UpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get rules.
     * @returns {Array<DistributedFirewallLayer3RuleUpdateRequest>}
     */
    get rules() {
        return (this._json.rules || []).map(it => new distributed_firewall_layer2_rule_update_request_1.DistributedFirewallLayer2RuleUpdateRequest(it));
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get tcp strict.
     * @returns {boolean}
     */
    get tcpStrict() {
        return this._json.tcp_strict;
    }
    /**
     * Get stateless.
     * @returns {boolean}
     */
    get stateless() {
        return this._json.stateless;
    }
    /**
     * Get use sid.
     * @returns {boolean}
     */
    get useSid() {
        return this._json.use_sid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer2UpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Create a DistributedFirewallLayer3UpdateRequest from a DistributedFirewallLayer3 Object.
     *
     * @param {DistributedFirewallLayer3} config Distributed Firewall Layer3 Object.
     * @returns {DistributedFirewallLayer3UpdateRequest} updateRequest The update request object.
     */
    static create(config) {
        const req = {
            rules: config.rules,
            name: config.name,
            stateless: config.stateless,
            tcp_strict: config.tcp_strict,
            use_sid: config.use_sid
        };
        return new DistributedFirewallLayer2UpdateRequest(req);
    }
}
exports.DistributedFirewallLayer2UpdateRequest = DistributedFirewallLayer2UpdateRequest;


/***/ }),
/* 1465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallLayer3UpdateRequest = void 0;
const distributed_firewall_layer3_rule_update_request_1 = __webpack_require__(612);
/* istanbul ignore next: autogenerated */
class DistributedFirewallLayer3UpdateRequest {
    constructor(firstParam, name, tcpStrict, stateless, useSid) {
        if (firstParam instanceof DistributedFirewallLayer3UpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get rules.
     * @returns {Array<DistributedFirewallLayer3RuleUpdateRequest>}
     */
    get rules() {
        return (this._json.rules || []).map(it => new distributed_firewall_layer3_rule_update_request_1.DistributedFirewallLayer3RuleUpdateRequest(it));
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get tcp strict.
     * @returns {boolean}
     */
    get tcpStrict() {
        return this._json.tcp_strict;
    }
    /**
     * Get stateless.
     * @returns {boolean}
     */
    get stateless() {
        return this._json.stateless;
    }
    /**
     * Get use sid.
     * @returns {boolean}
     */
    get useSid() {
        return this._json.use_sid;
    }
    /**
     * Get the json representation of this class.
     * @returns {DistributedFirewallLayer3UpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Create a DistributedFirewallLayer3UpdateRequest from a DistributedFirewallLayer3 Object.
     *
     * @param {DistributedFirewallLayer3} config Distributed Firewall Layer3 Object.
     * @returns {DistributedFirewallLayer3UpdateRequest} updateRequest The update request object.
     */
    static create(config) {
        const req = {
            rules: config.rules,
            name: config.name,
            stateless: config.stateless,
            tcp_strict: config.tcp_strict,
            use_sid: config.use_sid
        };
        return new DistributedFirewallLayer3UpdateRequest(req);
    }
}
exports.DistributedFirewallLayer3UpdateRequest = DistributedFirewallLayer3UpdateRequest;


/***/ }),
/* 1466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallPacketTypeEnum = void 0;
var DistributedFirewallPacketTypeEnum;
(function (DistributedFirewallPacketTypeEnum) {
    DistributedFirewallPacketTypeEnum["ANY"] = "ANY";
    DistributedFirewallPacketTypeEnum["IPV_4"] = "IPV_4";
    DistributedFirewallPacketTypeEnum["IPV_6"] = "IPV_6";
})(DistributedFirewallPacketTypeEnum = exports.DistributedFirewallPacketTypeEnum || (exports.DistributedFirewallPacketTypeEnum = {}));


/***/ }),
/* 1467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedFirewallProtocolNameTypeEnum = void 0;
var DistributedFirewallProtocolNameTypeEnum;
(function (DistributedFirewallProtocolNameTypeEnum) {
    DistributedFirewallProtocolNameTypeEnum["TCP"] = "TCP";
    DistributedFirewallProtocolNameTypeEnum["UDP"] = "UDP";
    DistributedFirewallProtocolNameTypeEnum["ICMP"] = "ICMP";
})(DistributedFirewallProtocolNameTypeEnum = exports.DistributedFirewallProtocolNameTypeEnum || (exports.DistributedFirewallProtocolNameTypeEnum = {}));


/***/ }),
/* 1468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupCriteriaType = void 0;
/**
 * Enumeration of security group criteria types.
 */
var SecurityGroupCriteriaType;
(function (SecurityGroupCriteriaType) {
    SecurityGroupCriteriaType["CONTAINS"] = "CONTAINS";
    SecurityGroupCriteriaType["SIMILAR_TO"] = "SIMILAR_TO";
    SecurityGroupCriteriaType["STARTS_WITH"] = "STARTS_WITH";
    SecurityGroupCriteriaType["ENDS_WITH"] = "ENDS_WITH";
})(SecurityGroupCriteriaType = exports.SecurityGroupCriteriaType || (exports.SecurityGroupCriteriaType = {}));


/***/ }),
/* 1486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupKeyType = void 0;
/**
 * Enumeration of security group key types.
 */
var SecurityGroupKeyType;
(function (SecurityGroupKeyType) {
    SecurityGroupKeyType["VM_SECURITY_TAG"] = "VM_SECURITY_TAG";
    SecurityGroupKeyType["VM_GUEST_OS_FULL_NAME"] = "VM_GUEST_OS_FULL_NAME";
    SecurityGroupKeyType["VM_NAME"] = "VM_NAME";
    SecurityGroupKeyType["VM_GUEST_HOST_NAME"] = "VM_GUEST_HOST_NAME";
})(SecurityGroupKeyType = exports.SecurityGroupKeyType || (exports.SecurityGroupKeyType = {}));


/***/ }),
/* 1488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupOperatorType = void 0;
/**
 * Enumeration of security group operator types.
 */
var SecurityGroupOperatorType;
(function (SecurityGroupOperatorType) {
    SecurityGroupOperatorType["AND"] = "AND";
    SecurityGroupOperatorType["OR"] = "OR";
})(SecurityGroupOperatorType = exports.SecurityGroupOperatorType || (exports.SecurityGroupOperatorType = {}));


/***/ }),
/* 1496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationGroupList = void 0;
/**
 * Application Group List
 */
/* istanbul ignore next: autogenerated */
class ApplicationGroupList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<ApplicationGroupJson>}
     */
    get data() {
        return this._json.data;
    }
    /**
     * Get the json representation of this class.
     * @returns {ApplicationGroupListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ApplicationGroupList = ApplicationGroupList;


/***/ }),
/* 1499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationList = void 0;
/**
 * Application List
 */
/* istanbul ignore next: autogenerated */
class ApplicationList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<ApplicationJson>}
     */
    get data() {
        return this._json.data;
    }
    /**
     * Get the json representation of this class.
     * @returns {ApplicationListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.ApplicationList = ApplicationList;


/***/ }),
/* 1500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Criteria = void 0;
/**
 * Criteria.
 */
/* istanbul ignore next: autogenerated */
class Criteria {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get operator.
     * @returns {SecurityGroupOperatorType}
     */
    get operator() {
        return this._json.operator;
    }
    /**
     * Get key.
     * @returns {SecurityGroupKeyType}
     */
    get key() {
        return this._json.key;
    }
    /**
     * Get criteria.
     * @returns {SecurityGroupCriteriaType}
     */
    get criteria() {
        return this._json.criteria;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get is valid.
     * @returns {boolean}
     */
    get isValid() {
        return this._json.is_valid;
    }
    /**
     * Get the json representation of this class.
     * @returns {CriteriaJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Criteria = Criteria;


/***/ }),
/* 1501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Element = void 0;
/**
 * Element
 */
/* istanbul ignore next: autogenerated */
class Element {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get application protocol.
     * @returns {string | undefined}
     */
    get applicationProtocol() {
        return this._json.application_protocol || undefined;
    }
    /**
     * Get value.
     * @returns {string | undefined}
     */
    get value() {
        return this._json.value || undefined;
    }
    /**
     * Get source port.
     * @returns {string | undefined}
     */
    get sourcePort() {
        return this._json.source_port || undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {ElementJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.Element = Element;


/***/ }),
/* 1502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSetCreateRequest = void 0;
/**
 * IP Set Create Request
 */
/* istanbul ignore next: autogenerated */
class IpSetCreateRequest {
    constructor(firstParam, name, value, inheritanceAllowed) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                name: name,
                value: value,
                inheritance_allowed: inheritanceAllowed
            };
        }
        else if (firstParam instanceof IpSetCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpSetCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSetCreateRequest = IpSetCreateRequest;


/***/ }),
/* 1503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSetList = void 0;
/**
 * IP Set List
 */
/* istanbul ignore next: autogenerated */
class IpSetList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<IpSetJson>}
     */
    get data() {
        return this._json.data;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpSetListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSetList = IpSetList;


/***/ }),
/* 1504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpSetUpdateRequest = void 0;
/**
 * IP Set Update Request
 */
/* istanbul ignore next: autogenerated */
class IpSetUpdateRequest {
    constructor(firstParam, description, name, value, inheritanceAllowed, revision) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                object_id: firstParam,
                description: description,
                name: name,
                value: value,
                inheritance_allowed: inheritanceAllowed,
                revision: revision
            };
        }
        else if (firstParam instanceof IpSetUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get revision.
     * @returns {number}
     */
    get revision() {
        return this._json.revision;
    }
    /**
     * Get the json representation of this class.
     * @returns {IpSetUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.IpSetUpdateRequest = IpSetUpdateRequest;


/***/ }),
/* 1505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MacSetCreateRequest = void 0;
/**
 * MAC Set Create Request
 */
/* istanbul ignore next: autogenerated */
class MacSetCreateRequest {
    constructor(firstParam, name, value, inheritanceAllowed) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                description: firstParam,
                name: name,
                value: value,
                inheritance_allowed: inheritanceAllowed
            };
        }
        else if (firstParam instanceof MacSetCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get the json representation of this class.
     * @returns {MacSetCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MacSetCreateRequest = MacSetCreateRequest;


/***/ }),
/* 1506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MacSetList = void 0;
/**
 * MAC Set List
 */
/* istanbul ignore next: autogenerated */
class MacSetList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<MacSetJson>}
     */
    get data() {
        return this._json.data;
    }
    /**
     * Get the json representation of this class.
     * @returns {MacSetListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MacSetList = MacSetList;


/***/ }),
/* 1507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MacSetUpdateRequest = void 0;
/**
 * MAC Set Update Request
 */
/* istanbul ignore next: autogenerated */
class MacSetUpdateRequest {
    constructor(firstParam, description, name, value, inheritanceAllowed, revision) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                object_id: firstParam,
                description: description,
                name: name,
                value: value,
                inheritance_allowed: inheritanceAllowed,
                revision: revision
            };
        }
        else if (firstParam instanceof MacSetUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get value.
     * @returns {string}
     */
    get value() {
        return this._json.value;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get revision.
     * @returns {number}
     */
    get revision() {
        return this._json.revision;
    }
    /**
     * Get the json representation of this class.
     * @returns {MacSetUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.MacSetUpdateRequest = MacSetUpdateRequest;


/***/ }),
/* 1508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupCreateRequest = void 0;
const dynamic_member_1 = __webpack_require__(93);
const securityGroupMember_1 = __webpack_require__(94);
/**
 * Security Group Create Request.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupCreateRequest {
    constructor(firstParam, description, scope, isTemporal, inheritanceAllowed, includedMember, excludedMember, dynamicMember) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                scope: scope,
                is_temporal: isTemporal,
                inheritance_allowed: inheritanceAllowed,
                included_member: includedMember,
                excluded_member: excludedMember,
                dynamic_member: dynamicMember
            };
        }
        else if (firstParam instanceof SecurityGroupCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get included member.
     * @returns {Array<SecurityGroupMember>}
     */
    get includedMember() {
        return this._json.included_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get excluded member.
     * @returns {Array<SecurityGroupMember>}
     */
    get excludedMember() {
        return this._json.included_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get dynamic member.
     * @returns {Array<DynamicMember>}
     */
    get dynamicMember() {
        return this._json.dynamic_member.map(it => new dynamic_member_1.DynamicMember(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupCreateRequest = SecurityGroupCreateRequest;


/***/ }),
/* 1509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupMemberOptionTypeList = void 0;
const security_group_member_option_type_1 = __webpack_require__(229);
/**
 * Security Group Member Option Type List.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupMemberOptionTypeList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<SecurityGroupMemberOptionType>}
     */
    get data() {
        return this._json.data.map(it => new security_group_member_option_type_1.SecurityGroupMemberOptionType(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupMemberOptionTypeListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupMemberOptionTypeList = SecurityGroupMemberOptionTypeList;


/***/ }),
/* 1510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroupUpdateRequest = void 0;
const dynamic_member_1 = __webpack_require__(93);
const securityGroupMember_1 = __webpack_require__(94);
/**
 * Security Group Update Request.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroupUpdateRequest {
    constructor(firstParam, name, description, scope, isTemporal, inheritanceAllowed, includedMember, excludedMember, dynamicMember) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                object_id: firstParam,
                name: name,
                description: description,
                scope: scope,
                is_temporal: isTemporal,
                inheritance_allowed: inheritanceAllowed,
                included_member: includedMember,
                excluded_member: excludedMember,
                dynamic_member: dynamicMember
            };
        }
        else if (firstParam instanceof SecurityGroupUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get scope.
     * @returns {string}
     */
    get scope() {
        return this._json.scope;
    }
    /**
     * Get is temporal.
     * @returns {boolean}
     */
    get isTemporal() {
        return this._json.is_temporal;
    }
    /**
     * Get inheritance allowed.
     * @returns {boolean}
     */
    get inheritanceAllowed() {
        return this._json.inheritance_allowed;
    }
    /**
     * Get included member.
     * @returns {Array<SecurityGroupMember>}
     */
    get includedMember() {
        return this._json.included_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get excluded member.
     * @returns {Array<SecurityGroupMember>}
     */
    get excludedMember() {
        return this._json.included_member.map(it => new securityGroupMember_1.SecurityGroupMember(it));
    }
    /**
     * Get dynamic member.
     * @returns {Array<DynamicMember>}
     */
    get dynamicMember() {
        return this._json.dynamic_member.map(it => new dynamic_member_1.DynamicMember(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroupUpdateRequest = SecurityGroupUpdateRequest;


/***/ }),
/* 1511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityGroups = void 0;
const security_group_1 = __webpack_require__(227);
/**
 * Security Groups.
 */
/* istanbul ignore next: autogenerated */
class SecurityGroups {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<SecurityGroup>}
     */
    get data() {
        return this._json.data.map(it => new security_group_1.SecurityGroup(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityGroupsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityGroups = SecurityGroups;


/***/ }),
/* 1512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagCreateRequest = void 0;
/**
 * Security Tag Create Request.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagCreateRequest {
    constructor(firstParam, description, assignedVmIds) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                assigned_vm_ids: assignedVmIds
            };
        }
        else if (firstParam instanceof SecurityTagCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get assigned vm ids.
     * @returns {Array<string>}
     */
    get assignedVmIds() {
        return this._json.assigned_vm_ids;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagCreateRequest = SecurityTagCreateRequest;


/***/ }),
/* 1525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagObjectTypeList = void 0;
const security_tag_object_type_1 = __webpack_require__(232);
/**
 * Security Tag Object Type List.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagObjectTypeList {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<SecurityTagObjectType>}
     */
    get data() {
        return this._json.data.map(it => new security_tag_object_type_1.SecurityTagObjectType(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagObjectTypeListJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagObjectTypeList = SecurityTagObjectTypeList;


/***/ }),
/* 1526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTagUpdateRequest = void 0;
/**
 * Security Tag Update Request.
 */
/* istanbul ignore next: autogenerated */
class SecurityTagUpdateRequest {
    constructor(firstParam, objectId, name, description, assignedVmIds) {
        if (typeof firstParam === 'boolean') {
            // Parameters constructor
            this._json = {
                update_vms: firstParam,
                object_id: objectId,
                name: name,
                description: description,
                assigned_vm_ids: assignedVmIds
            };
        }
        else if (firstParam instanceof SecurityTagUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get update vms.
     * @returns {boolean}
     */
    get updateVms() {
        return this._json.update_vms;
    }
    /**
     * Get object id.
     * @returns {string}
     */
    get objectId() {
        return this._json.object_id;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get assigned vm ids.
     * @returns {Array<string>}
     */
    get assignedVmIds() {
        return this._json.assigned_vm_ids;
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTagUpdateRequest = SecurityTagUpdateRequest;


/***/ }),
/* 1527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityTags = void 0;
const security_tag_1 = __webpack_require__(230);
/**
 * Security Tags.
 */
/* istanbul ignore next: autogenerated */
class SecurityTags {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get data.
     * @returns {Array<SecurityTag>}
     */
    get data() {
        return this._json.data.map(it => new security_tag_1.SecurityTag(it));
    }
    /**
     * Get the json representation of this class.
     * @returns {SecurityTagsJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.SecurityTags = SecurityTags;


/***/ }),
/* 1528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdcAddVappFromTemplateRequest = void 0;
const template_vm_config_1 = __webpack_require__(613);
/**
 * Vdc add vapp from template request.
 */
/* istanbul ignore next: autogenerated */
class VdcAddVappFromTemplateRequest {
    constructor(firstParam, name, description, vms) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vapp_template_uuid: firstParam,
                name: name,
                description: description,
                vms: vms
            };
        }
        else if (firstParam instanceof VdcAddVappFromTemplateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vapp template uuid.
     * @returns {string}
     */
    get vappTemplateUuid() {
        return this._json.vapp_template_uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vms.
     * @returns {Array<TemplateVmConfig>}
     */
    get vms() {
        return this._json.vms.map(vm => {
            return new template_vm_config_1.TemplateVmConfig(vm);
        });
    }
    /**
     * Get the json representation of this class.
     * @returns {VdcAddVappFromTemplateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdcAddVappFromTemplateRequest = VdcAddVappFromTemplateRequest;


/***/ }),
/* 1529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmAffinityRuleCreateRequest = void 0;
/* istanbul ignore next: autogenerated */
class VmAffinityRuleCreateRequest {
    constructor(firstParam, isEnabled, type, vmUuids, isMandatory) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                is_enabled: isEnabled,
                type: type,
                vm_uuids: vmUuids,
                is_mandatory: isMandatory
            };
        }
        else if (firstParam instanceof VmAffinityRuleCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get is enabled.
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.is_enabled;
    }
    /**
     * Get type.
     * @returns {AffinityRuleType}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get vm uuids.
     * @returns {Array<string>}
     */
    get vmUuids() {
        return this._json.vm_uuids;
    }
    /**
     * Get is mandatory.
     * @returns {boolean}
     */
    get isMandatory() {
        return this._json.is_mandatory;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmAffinityRuleCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmAffinityRuleCreateRequest = VmAffinityRuleCreateRequest;


/***/ }),
/* 1530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmAffinityRuleUpdateRequest = void 0;
/* istanbul ignore next: autogenerated */
class VmAffinityRuleUpdateRequest {
    constructor(firstParam, name, isEnabled, type, vmUuids, isMandatory) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                uuid: firstParam,
                name: name,
                is_enabled: isEnabled,
                type: type,
                vm_uuids: vmUuids,
                is_mandatory: isMandatory
            };
        }
        else if (firstParam instanceof VmAffinityRuleUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get uuid.
     * @returns {string}
     */
    get uuid() {
        return this._json.uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get is enabled.
     * @returns {boolean}
     */
    get isEnabled() {
        return this._json.is_enabled;
    }
    /**
     * Get type.
     * @returns {string}
     */
    get type() {
        return this._json.type;
    }
    /**
     * Get vm uuids.
     * @returns {Array<string>}
     */
    get vmUuids() {
        return this._json.vm_uuids;
    }
    /**
     * Get is mandatory.
     * @returns {boolean}
     */
    get isMandatory() {
        return this._json.is_mandatory;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmAffinityRuleUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmAffinityRuleUpdateRequest = VmAffinityRuleUpdateRequest;


/***/ }),
/* 1531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiAutomationDeploymentRequest = void 0;
/**
 * VDI Automation Deployment Request.
 */
/* istanbul ignore next: autogenerated */
class VdiAutomationDeploymentRequest {
    constructor(firstParam, domainUserPassword) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                domain_user_name: firstParam,
                domain_user_password: domainUserPassword
            };
        }
        else if (firstParam instanceof VdiAutomationDeploymentRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get domain user name.
     * @returns {string}
     */
    get domainUserName() {
        return this._json.domain_user_name;
    }
    /**
     * Get domain user password.
     * @returns {string}
     */
    get domainUserPassword() {
        return this._json.domain_user_password;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiAutomationDeploymentRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiAutomationDeploymentRequest = VdiAutomationDeploymentRequest;


/***/ }),
/* 1543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiAutomationGroupUpdateRequest = void 0;
/**
 * VDI Automation Group Update Request.
 */
/* istanbul ignore next: autogenerated */
class VdiAutomationGroupUpdateRequest {
    constructor(firstParam, description, vappTemplateUuid, vmTemplateUuid, deploymentVdcUuid, orgVdcNetworkUuid, domainToJoin, teamUuid, edgeUuid, publicIp, networkConnectionType, joinDomainEnabled, guestPasswordResetRequired, storageProfileUuid) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                vapp_template_uuid: vappTemplateUuid,
                vm_template_uuid: vmTemplateUuid,
                deployment_vdc_uuid: deploymentVdcUuid,
                org_vdc_network_uuid: orgVdcNetworkUuid,
                domain_to_join: domainToJoin,
                team_uuid: teamUuid,
                edge_uuid: edgeUuid,
                public_ip: publicIp,
                network_connection_type: networkConnectionType,
                join_domain_enabled: joinDomainEnabled,
                guest_password_reset_required: guestPasswordResetRequired,
                storage_profile_uuid: storageProfileUuid
            };
        }
        else if (firstParam instanceof VdiAutomationGroupUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get vapp template uuid.
     * @returns {string}
     */
    get vappTemplateUuid() {
        return this._json.vapp_template_uuid;
    }
    /**
     * Get vm template uuid.
     * @returns {string}
     */
    get vmTemplateUuid() {
        return this._json.vm_template_uuid;
    }
    /**
     * Get deployment vdc uuid.
     * @returns {string}
     */
    get deploymentVdcUuid() {
        return this._json.deployment_vdc_uuid;
    }
    /**
     * Get org vdc network uuid.
     * @returns {string}
     */
    get orgVdcNetworkUuid() {
        return this._json.org_vdc_network_uuid;
    }
    /**
     * Get domain to join.
     * @returns {string}
     */
    get domainToJoin() {
        return this._json.domain_to_join;
    }
    /**
     * Get team uuid.
     * @returns {string}
     */
    get teamUuid() {
        return this._json.team_uuid;
    }
    /**
     * Get edge uuid.
     * @returns {string}
     */
    get edgeUuid() {
        return this._json.edge_uuid;
    }
    /**
     * Get public ip.
     * @returns {string}
     */
    get publicIp() {
        return this._json.public_ip;
    }
    /**
     * Get network connection type.
     * @returns {NetworkConnectionType}
     */
    get networkConnectionType() {
        return this._json.network_connection_type;
    }
    /**
     * Get join domain enabled.
     * @returns {boolean}
     */
    get joinDomainEnabled() {
        return this._json.join_domain_enabled;
    }
    /**
     * Get guest password reset required.
     * @returns {boolean}
     */
    get guestPasswordResetRequired() {
        return this._json.guest_password_reset_required;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiAutomationGroupUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiAutomationGroupUpdateRequest = VdiAutomationGroupUpdateRequest;


/***/ }),
/* 1544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiTeamUpdateRequest = void 0;
/**
 * VDI Team Create/Update Request.
 */
/* istanbul ignore next: autogenerated */
class VdiTeamUpdateRequest {
    constructor(firstParam, members) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                members: members
            };
        }
        else if (firstParam instanceof VdiTeamUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get members.
     * @returns {Array<string>}
     */
    get members() {
        return this._json.members;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiTeamUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiTeamUpdateRequest = VdiTeamUpdateRequest;


/***/ }),
/* 1546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VdiUserUpdateRequest = void 0;
/**
 * VDI User Create/Update Request.
 */
/* istanbul ignore next: autogenerated */
class VdiUserUpdateRequest {
    constructor(firstParam, name) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                email: firstParam,
                name: name
            };
        }
        else if (firstParam instanceof VdiUserUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get email.
     * @returns {string}
     */
    get email() {
        return this._json.email;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get the json representation of this class.
     * @returns {VdiUserUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VdiUserUpdateRequest = VdiUserUpdateRequest;


/***/ }),
/* 1547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmCapabilityUpdateRequest = void 0;
/**
 * VM Capabilities update request.
 */
class VmCapabilityUpdateRequest {
    constructor(_json) {
        this._json = _json;
    }
    /**
     * Get cpu hot add enabled.
     * @returns {boolean}
     */
    get cpuHotAddEnabled() {
        return this._json.cpu_hot_add_enabled;
    }
    /**
     * Set cpu hot add enabled.
     * @param {boolean} enabled
     */
    set cpuHotAddEnabled(enabled) {
        this._json.cpu_hot_add_enabled = enabled;
    }
    /**
     * Get memory hot add enabled.
     * @returns {boolean}
     */
    get memoryHotAddEnabled() {
        return this._json.memory_hot_add_enabled;
    }
    /**
     * Set memory hot add enabled.
     * @param {boolean} enabled
     */
    set memoryHotAddEnabled(enabled) {
        this._json.memory_hot_add_enabled = enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmCapabilityUpdateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmCapabilityUpdateRequest = VmCapabilityUpdateRequest;


/***/ }),
/* 1559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolsRunningStatus = exports.ToolsVersionStatus = void 0;
/**
 * Guest Tools Version Status enum
 */
var ToolsVersionStatus;
(function (ToolsVersionStatus) {
    ToolsVersionStatus["BLACKLISTED"] = "guestToolsBlacklisted";
    ToolsVersionStatus["CURRENT"] = "guestToolsCurrent";
    ToolsVersionStatus["NEED_UPGRADE"] = "guestToolsNeedUpgrade";
    ToolsVersionStatus["NOT_INSTALLED"] = "guestToolsNotInstalled";
    ToolsVersionStatus["SUPPORTED_NEW"] = "guestToolsSupportedNew";
    ToolsVersionStatus["SUPPORTED_OLD"] = "guestToolsSupportedOld";
    ToolsVersionStatus["TOO_NEW"] = "guestToolsTooNew";
    ToolsVersionStatus["TOO_OLD"] = "guestToolsTooOld";
    ToolsVersionStatus["UNMANAGED"] = "guestToolsUnmanaged";
})(ToolsVersionStatus = exports.ToolsVersionStatus || (exports.ToolsVersionStatus = {}));
/**
 * Guest Tools Running Status enum
 */
var ToolsRunningStatus;
(function (ToolsRunningStatus) {
    ToolsRunningStatus["EXECUTING_SCRIPTS"] = "guestToolsExecutingScripts";
    ToolsRunningStatus["NOT_RUNNING"] = "guestToolsNotRunning";
    ToolsRunningStatus["RUNNING"] = "guestToolsRunning";
})(ToolsRunningStatus = exports.ToolsRunningStatus || (exports.ToolsRunningStatus = {}));


/***/ }),
/* 1562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmCopyMoveRequest = void 0;
const vm_copy_move_vm_vnic_request_1 = __webpack_require__(615);
/* istanbul ignore next: autogenerated */
class VmCopyMoveRequest {
    constructor(firstParam, name, storageProfile, vnics) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vapp_uuid: firstParam,
                name: name,
                storage_profile: storageProfile,
                vnics: vnics
            };
        }
        else if (firstParam instanceof VmCopyMoveRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get vapp uuid.
     * @returns {string}
     */
    get vappUuid() {
        return this._json.vapp_uuid;
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get storage profile.
     * @returns {string}
     */
    get storageProfile() {
        return this._json.storage_profile;
    }
    /**
     * Get vnics.
     * @returns {Array<VmCopyMoveVmVnicRequest>}
     */
    get vnics() {
        return this._json.vnics
            ? this._json.vnics.map(vnic => {
                return new vm_copy_move_vm_vnic_request_1.VmCopyMoveVmVnicRequest(vnic);
            })
            : undefined;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmCopyMoveRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmCopyMoveRequest = VmCopyMoveRequest;


/***/ }),
/* 1567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmCreateRequest = void 0;
/**
 * Vm create request.
 */
/* istanbul ignore next: autogenerated */
class VmCreateRequest {
    constructor(firstParam, description, ipAddressMode, networkUuid, vappTemplateUuid, vmTemplateUuid, ipAddress, storageProfileUuid) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                ip_address_mode: ipAddressMode,
                network_uuid: networkUuid,
                vapp_template_uuid: vappTemplateUuid,
                vm_template_uuid: vmTemplateUuid,
                ip_address: ipAddress,
                storage_profile_uuid: storageProfileUuid
            };
        }
        else if (firstParam instanceof VmCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Get ip address mode.
     * @returns {IpAddressingMode}
     */
    get ipAddressMode() {
        return this._json.ip_address_mode;
    }
    /**
     * Get network uuid.
     * @returns {string}
     */
    get networkUuid() {
        return this._json.network_uuid;
    }
    /**
     * Get vapp template uuid.
     * @returns {string}
     */
    get vappTemplateUuid() {
        return this._json.vapp_template_uuid;
    }
    /**
     * Get vm template uuid.
     * @returns {string}
     */
    get vmTemplateUuid() {
        return this._json.vm_template_uuid;
    }
    /**
     * Get ip address.
     * @returns {string}
     */
    get ipAddress() {
        return this._json.ip_address;
    }
    /**
     * Get storage profile uuid.
     * @returns {string}
     */
    get storageProfileUuid() {
        return this._json.storage_profile_uuid;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmCreateRequest = VmCreateRequest;


/***/ }),
/* 1568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VmReconfigureRequest = void 0;
const guest_customization_update_request_1 = __webpack_require__(614);
const vm_cpu_count_update_request_1 = __webpack_require__(616);
const vm_memory_size_update_request_1 = __webpack_require__(214);
class VmReconfigureRequest {
    constructor(firstParam, description, cpuSpec, memorySpec, diskSpec, guestCustomizationSection, nestedHypervisorEnabled) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                name: firstParam,
                description: description,
                cpu_spec: cpuSpec,
                memory_spec: memorySpec,
                disk_spec: diskSpec,
                guest_customization_section: guestCustomizationSection,
                nested_hypervisor_enabled: nestedHypervisorEnabled
            };
        }
        else if (firstParam instanceof VmReconfigureRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get name.
     * @returns {string}
     */
    get name() {
        return this._json.name;
    }
    /**
     * Set name.
     * @param {string} name
     */
    set name(name) {
        this._json.name = name;
    }
    /**
     * Get description.
     * @returns {string}
     */
    get description() {
        return this._json.description;
    }
    /**
     * Set description.
     * @param {string} description
     */
    set description(description) {
        this._json.description = description;
    }
    /**
     * Get cpu spec.
     * @returns {VmCpuCountUpdateRequest}
     */
    get cpuSpec() {
        return this._json.cpu_spec ? new vm_cpu_count_update_request_1.VmCpuCountUpdateRequest(this._json.cpu_spec) : this._json.cpu_spec;
    }
    /**
     * Set cpu spec.
     * @param {VmCpuCountUpdateRequest} cpuSpec
     */
    set cpuSpec(cpuSpec) {
        this._json.cpu_spec = cpuSpec ? cpuSpec.json : undefined;
    }
    /**
     * Get memory spec.
     * @returns {VmMemorySizeUpdateRequest}
     */
    get memorySpec() {
        return this._json.memory_spec ? new vm_memory_size_update_request_1.VmMemorySizeUpdateRequest(this._json.memory_spec) : this._json.memory_spec;
    }
    /**
     * Set memory spec.
     * @param {VmMemorySizeUpdateRequest} spec
     */
    set memorySpec(spec) {
        this._json.memory_spec = spec ? spec.json : undefined;
    }
    /**
     * Get disk spec.
     * @returns {Array<VmDiskRequestJson>}
     */
    get diskSpec() {
        return this._json.disk_spec;
    }
    /**
     * Set disk spec.
     * @param {Array<VmDiskRequestJson>} spec
     */
    set diskSpec(spec) {
        this._json.disk_spec = spec;
    }
    /**
     * Get guest customization section.
     * @returns {GuestCustomizationUpdateRequest}
     */
    get guestCustomizationSection() {
        return this._json.guest_customization_section
            ? new guest_customization_update_request_1.GuestCustomizationUpdateRequest(this._json.guest_customization_section)
            : this._json.guest_customization_section;
    }
    /**
     * Set guest customization section.
     * @param {GuestCustomizationUpdateRequest} request
     */
    set guestCustomizationSection(request) {
        this._json.guest_customization_section = request ? request.json : undefined;
    }
    /**
     * Get nested hypervisor enabled.
     * @returns {boolean}
     */
    get nestedHypervisorEnabled() {
        return this._json.nested_hypervisor_enabled;
    }
    /**
     * Set nested hypervisor enabled.
     * @param {boolean} enabled
     */
    set nestedHypervisorEnabled(enabled) {
        this._json.nested_hypervisor_enabled = enabled;
    }
    /**
     * Get the json representation of this class.
     * @returns {VmReconfigureRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VmReconfigureRequest = VmReconfigureRequest;


/***/ }),
/* 1570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 1587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgFailoverCreateRequest = void 0;
/**
 * Vpg Failover Create Request
 */
/* istanbul ignore next: autogenerated */
class VpgFailoverCreateRequest {
    constructor(firstParam, commitPolicy, shutdownPolicy, timeToWaitBeforeShutdownInSec, commitValue) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                checkpoint_identifier: firstParam,
                commit_policy: commitPolicy,
                shutdown_policy: shutdownPolicy,
                time_to_wait_before_shutdown_in_sec: timeToWaitBeforeShutdownInSec,
                commit_value: commitValue
            };
        }
        else if (firstParam instanceof VpgFailoverCreateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = firstParam || {};
        }
    }
    /**
     * Get checkpoint identifier.
     * @returns {string}
     */
    get checkpointIdentifier() {
        return this._json.checkpoint_identifier;
    }
    /**
     * Get commit policy.
     * @returns {CommitPolicy}
     */
    get commitPolicy() {
        return this._json.commit_policy;
    }
    /**
     * Get shutdown policy.
     * @returns {ShutdownPolicy}
     */
    get shutdownPolicy() {
        return this._json.shutdown_policy;
    }
    /**
     * Get time to wait before shutdown in sec.
     * @returns {number}
     */
    get timeToWaitBeforeShutdownInSec() {
        return this._json.time_to_wait_before_shutdown_in_sec;
    }
    /**
     * Get commit value.
     * @returns {number}
     */
    get commitValue() {
        return this._json.commit_value;
    }
    /**
     * Get the json representation of this class.
     * @returns {VpgFailoverCreateRequestJson}
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
}
exports.VpgFailoverCreateRequest = VpgFailoverCreateRequest;


/***/ }),
/* 1588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.VpgFailoverTestAlertRequest = void 0;
/**
 * Vpg Failover Test Alert Request.
 */
class VpgFailoverTestAlertRequest {
    /**
     * Creates a new Vpg Failover Test Alert Request
     * @param {string} email
     * @param {number} weeksBeforeAlert
     */
    constructor(email, weeksBeforeAlert) {
        this.email = email;
        this.weeksBeforeAlert = weeksBeforeAlert;
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgFailoverTestAlertRequestJson} the JSON representation
     */
    get json() {
        return {
            email: this.email,
            weeks_before_alert: this.weeksBeforeAlert
        };
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this.json, undefined, 2);
    }
}
exports.VpgFailoverTestAlertRequest = VpgFailoverTestAlertRequest;


/***/ }),
/* 1589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Vpg = void 0;
const tslib_1 = __webpack_require__(5);
const operators_1 = __webpack_require__(42);
const iland_1 = __webpack_require__(7);
const http_1 = __webpack_require__(27);
const entity_1 = __webpack_require__(9);
const perf_counter_1 = __webpack_require__(73);
const perf_samples_series_1 = __webpack_require__(74);
const task_1 = __webpack_require__(10);
const service_profile_1 = __webpack_require__(234);
const vpg_checkpoint_1 = __webpack_require__(617);
const vpg_entities_1 = __webpack_require__(96);
const vpg_failover_report_details_1 = __webpack_require__(236);
const vpg_failover_test_alert_1 = __webpack_require__(618);
const vpg_vm_1 = __webpack_require__(235);
/**
 * Virtual Protection Group
 */
class Vpg extends entity_1.Entity {
    constructor(_json) {
        super(_json);
        this._json = _json;
    }
    /**
     * Gets a Vpg by UUID.
     * @param {string} uuid vpg UUID
     * @param {Array<VpgSubEntityRequest>} vpgSubEntities query params
     * @returns {Promise<Vpg>} promise that resolves with the Vpg
     */
    static getVpg(uuid, vpgSubEntities) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${uuid}`, {
                params: {
                    expand: vpgSubEntities
                }
            })
                .then(response => {
                const apiVpg = response.data;
                return new Vpg(apiVpg);
            });
        });
    }
    get entityType() {
        return 'IAAS_VPG';
    }
    /**
     * Get service profile for Vpg.
     * @returns {ServiceProfile | null} service profile or null if there is no service profile for this vpg.
     */
    get serviceProfile() {
        return this._json.service_profile ? new service_profile_1.ServiceProfile(this._json.service_profile) : null;
    }
    /**
     * Get VMs for Vpg
     * @returns {Array<VpgVm>} list of Vpg VMs
     */
    get vms() {
        return this._json.vms.map(vm => new vpg_vm_1.VpgVm(vm));
    }
    /**
     * Get the org uuid of Vpg
     * @returns {string} org uuid
     */
    get orgUuid() {
        return this._json.org_uuid;
    }
    /**
     * Get the location id of Vpg
     * @returns {string} location id
     */
    get locationId() {
        return this._json.location_id;
    }
    /**
     * Get service profile uuid of Vpg
     * @returns {string} service profile uuid
     */
    get serviceProfileUuid() {
        return this._json.service_profile_uuid;
    }
    /**
     * Get the Vpg identifier of Vpg
     * @returns {string} vpg identifier
     */
    get vpgIdentifier() {
        return this._json.vpg_identifier;
    }
    /**
     * Get the Vpg name
     * @returns {string} name
     */
    get vpgName() {
        return this._json.vpg_name;
    }
    /**
     *  Get org name of Vpg
     * @returns {string} org name
     */
    get orgName() {
        return this._json.organization_name;
    }
    /**
     * Get actual rpo of Vpg
     * @returns {number} actual rpo
     */
    get actualRpo() {
        return this._json.actual_rpo;
    }
    /**
     * Get entities for Vpg
     * @returns {VpgEntities} entities
     */
    get entities() {
        return new vpg_entities_1.VpgEntities(this._json.entities);
    }
    /**
     * Get status of Vpg
     * @returns {VpgStatus} status
     */
    get status() {
        return this._json.status;
    }
    /**
     * Get sub status of Vpg
     * @returns {VpgSubStatus} sub status
     */
    get subStatus() {
        return this._json.sub_status;
    }
    /**
     * Get priority of Vpg
     * @returns {VpgPriority} priority
     */
    get priority() {
        return this._json.priority;
    }
    /**
     * Get VMs count for Vpg
     * @returns {number} VMs count
     */
    get vmsCount() {
        return this._json.vms_count;
    }
    /**
     * Get last test for Vpg
     * @returns {number} last test
     */
    get lastTest() {
        return this._json.last_test;
    }
    /**
     * Get source site for Vpg
     * @returns {string} source sit
     */
    get sourceSite() {
        return this._json.source_site;
    }
    /**
     * Get target site for Vpg
     * @returns {string} target site
     */
    get targetSite() {
        return this._json.target_site;
    }
    /**
     * Get provisioned storage in mb for Vpg
     * @returns {number} provisioned storage in bm
     */
    get provisionedStorageInMb() {
        return this._json.provisioned_storage_in_mb;
    }
    /**
     * Get used storage in percent for Vpg
     * @returns {number} used storage in percent
     */
    get usedStorageInMb() {
        return this._json.used_storage_in_mb;
    }
    /**
     * Get iops for Vpg
     * @returns {number} iops
     */
    get iops() {
        return this._json.iops;
    }
    /**
     * Get throughput in mb for Vpg
     * @returns {number} throughput in mb
     */
    get throughputInMb() {
        return this._json.throughput_in_mb;
    }
    /**
     * Get service profile identifier for Vpg
     * @returns {string} service profile identifier
     */
    get serviceProfileIdentifier() {
        return this._json.service_profile_identifier;
    }
    /**
     * Get is backup enabled boolean for Vpg
     * @returns {boolean} backup enabled
     */
    get isBackupEnabled() {
        return this._json.backup_enabled;
    }
    /**
     * Get recovery site identifier for Vpg
     * @returns {string} recovery site identifier
     */
    get recoverySiteIdentifier() {
        return this._json.recovery_site_identifier;
    }
    /**
     * Get protected site identifer for Vpg
     * @returns {string} protected site identifier
     */
    get protectedSiteIdentifier() {
        return this._json.protected_site_identifier;
    }
    /**
     * Get active provess stage for Vpg
     * @returns {ActiveProcessStage} active process stage
     */
    get activeProcessStage() {
        return this._json.active_process_stage;
    }
    /**
     * Get recovery journal used storage in mb for Vpg
     * @returns {number} recovery journal used storage in mb
     */
    get recoveryJournalUsedStorageInMb() {
        return this._json.recovery_journal_used_storage_in_mb;
    }
    /**
     * Get recovery journal provisioned storage in mb for Vpg
     * @returns {number} recovery journal provisioned storage in mb
     */
    get recoveryJournalProvisionedStorageInMb() {
        return this._json.recovery_journal_provisioned_storage_in_mb;
    }
    /**
     * Return whether or not the vpg is failing over or not.
     * @returns {boolean}
     */
    isFailingOver() {
        return this.status === 'FAILING_OVER' || this.activeProcessStage !== 'NONE';
    }
    /**
     * JSON format.
     * @returns {string}
     */
    toString() {
        return JSON.stringify(this._json, undefined, 2);
    }
    /**
     * Gets the raw JSON object from the API.
     * @returns {VpgJson} the API Vpg object
     */
    get json() {
        return Object.assign({}, this._json);
    }
    /**
     * Get the failover test alert for Vpg
     * @returns {Promise<VpgFailoverTestAlert>} vpg failover test alert
     */
    getVpgFailoverTestAlert() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/failover-test-alerts`)
                .then(response => {
                const json = response.data;
                return new vpg_failover_test_alert_1.VpgFailoverTestAlert(json);
            });
        });
    }
    /**
     * Add a Vpg Failover Test Alert
     * @param {VpgFailoverTestAlertRequest} alertRequest
     * @returns {Promise<VpgFailoverTestAlert>}
     */
    addVpgFailoverTestAlert(alertRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/add-failover-test-alert`, alertRequest.json)
                .then(response => {
                const json = response.data;
                return new vpg_failover_test_alert_1.VpgFailoverTestAlert(json);
            });
        });
    }
    /**
     * Remove a Vpg Failover Test Alert
     * @returns {Promise<any>}
     */
    removeVpgFailoverTestAlert() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp().delete(`/vpgs/${this.uuid}/actions/remove-failover-test-alert`);
        });
    }
    /**
     * Returns VPG performance samples given a performance series information
     * @param {string} group
     * @param {string} name
     * @param {string} type
     * @param {number} start
     * @param {number} end
     * @returns {Promise<PerfSampleSerie>} perf sample serie
     */
    getVpgPerfFor(group, name, type, start, end) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/performance/${group}::${name}::${type}`, {
                params: {
                    start: start,
                    end: end
                }
            })
                .then(response => {
                const perfSampleJson = response.data;
                return new perf_samples_series_1.PerfSamplesSeries(perfSampleJson);
            });
        });
    }
    /**
     * Test failover for Vpg.
     * @param {string} checkpointId
     * @returns {Promise<Task>} task
     */
    failoverTest(checkpointId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const failoverTestCreateRequest = {
                checkpoint_id: checkpointId
            };
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/failover-test`, failoverTestCreateRequest)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Stop a Vpg failover test and provide feedback as to whether the test was successful
     * @param {boolean} success
     * @param {string} summary
     * @returns {Promise<Task>} task
     */
    failoverTestStop(success, summary) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const failoverTestStopRequest = {
                failover_test_success: success,
                failover_test_summary: summary
            };
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/failover-test-stop`, failoverTestStopRequest)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Gets the VMs that belong to the Vpg
     * @returns {Promise<Array<VpgVm>>} vpg vms
     */
    getVmsForVpg() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/vms`)
                .then(response => {
                const vms = response.data.data;
                return vms.map(vm => new vpg_vm_1.VpgVm(vm));
            });
        });
    }
    /**
     * Gets the service profile for the Vpg
     * @returns {Promise<ServiceProfile>} service profile
     */
    getServiceProfile() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/service-profile`)
                .then(response => {
                const spJson = response.data;
                return new service_profile_1.ServiceProfile(spJson);
            });
        });
    }
    /**
     * Initiates a live failover on the Vpg
     * @param {VpgFailoverCreateRequest} failoverCreateRequest
     * @returns {Promise<Task>} task
     */
    failover(failoverCreateRequest) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/failover`, failoverCreateRequest.json)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Commits changes after a live failover for Vpg
     * @returns {Promise<Task>} task
     */
    commitFailover() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/failover-commit`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Rolls back changes after a live failover for Vpg
     * @returns {Promise<Task>} task
     */
    rollbackFailover() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .post(`/vpgs/${this.uuid}/actions/failover-rollback`)
                .then(response => {
                const taskJson = response.data;
                return new task_1.Task(taskJson);
            });
        });
    }
    /**
     * Get checkpoints for Vpg
     * @returns {Promise<Array<VpgCheckpoint>>} vpg checkpoints
     */
    getCheckpoints() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/checkpoints`)
                .then(response => {
                const vpgCheckpoints = response.data.data;
                return vpgCheckpoints.map(cp => new vpg_checkpoint_1.VpgCheckpoint(cp));
            });
        });
    }
    /**
     * Gets failover task details for a failover.
     * @param {string} taskUuid
     * @returns {Promise<VpgFailoverReportDetails>} vpg failover report detail
     */
    getFailoverTaskDetails(taskUuid) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/failover-task-details/${taskUuid}`)
                .then(response => {
                const reportJson = response.data;
                return new vpg_failover_report_details_1.VpgFailoverReportDetails(reportJson);
            });
        });
    }
    /**
     * Get a failover report file for a task
     * @param {string} reportUuid the UUID of the task to retrieve the report for
     * @param {string} fileName
     * @returns {Observable<String>}
     */
    downloadFailoverReport(reportUuid, fileName) {
        let href = `${iland_1.Iland.baseUrl}/vpgs/${this.uuid}/failover-reports/${reportUuid}?accept=` +
            encodeURIComponent(http_1.Http.versionMime('application/pdf'));
        if (fileName) {
            href = href + '&filename=' + encodeURIComponent(fileName);
        }
        const observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.pipe(operators_1.map(token => `${href}&oauth_token=${token}`));
    }
    /**
     * Get performance counters for vpg.
     * @return {Promise<Array<PerfCounter>>} performance counters
     */
    /* istanbul ignore next: autogenerated */
    getPerformanceCounters() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}/performance-counters`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new perf_counter_1.PerfCounter(it));
            });
        });
    }
    /**
     * Refreshes the Vpg data by retrieving it from the API again.
     * @returns {Promise<Vpg>} promise that resolves with this object
     */
    refresh() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/vpgs/${this.uuid}`)
                .then(response => {
                this._json = response.data;
                return this;
            });
        });
    }
}
exports.Vpg = Vpg;


/***/ }),
/* 1590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventService = void 0;
/**
 * Event service.
 */
/* istanbul ignore next: autogenerated */
class EventService {
    /**
     * Get the event type message depending on the type.
     * @param eventType
     * @returns {string} The human readable message.
     */
    static getEventTypeMsg(eventType) {
        switch (eventType) {
            case 'ORG_CREATE':
                return 'An organization was created.';
            case 'ORG_DELETE':
                return 'An organization was deleted.';
            case 'ORG_MODIFY':
                return 'An organization was modified.';
            case 'ORG_ANTIMALWARE_REPORT_GENERATE':
                return 'An organization anti-malware report was generated.';
            case 'ORG_BILLING_REPORT_GENERATE':
                return 'An organization billing report was generated.';
            case 'ORG_CONTINUITY_PROTECTION_REPORT_GENERATE':
                return 'An organization continuity protection report was generated.';
            case 'ORG_DR_ADMIN_REPORT_GENERATE':
                return 'An organization data recovery admin report was generated.';
            case 'ORG_DPI_EVENT_REPORT_GENERATE':
                return 'An organization DPI event report was generated.';
            case 'ORG_ECS_EVENT_HISTORY_REPORT_GENERATE':
                return 'An organization event history report was generated.';
            case 'ORG_FAILOVER_TEST_REPORT_GENERATE':
                return 'An organization failover test report was generated.';
            case 'ORG_FIREWALL_EVENT_REPORT_GENERATE':
                return 'An organization firewall event report was generated.';
            case 'ORG_HIPAA_REPORT_GENERATE':
                return 'An organization HIPAA report was generated.';
            case 'ORG_INTEGRITY_EVENT_REPORT_GENERATE':
                return 'An organization integrity event report was generated.';
            case 'ORG_LOG_INSPECTION_REPORT_GENERATE':
                return 'An organization log inspection report was generated.';
            case 'ORG_LOGIN_EVENT_HISTORY_REPORT_GENERATE':
                return 'An organization login event history report was generated.';
            case 'ORG_SUPPORT_REQUEST_REPORT_GENERATE':
                return 'An organization support request report was generated.';
            case 'ORG_VM_ENCRYPTION_REPORT_GENERATE':
                return 'An organization vm encryption report was generated.';
            case 'ORG_VULNERABILITY_REPORT_GENERATE':
                return 'An organization vulnerability report was generated.';
            case 'ORG_WEB_REPUTATION_REPORT_GENERATE':
                return 'An organization web reputation report was generated.';
            case 'ORG_DR_RUNBOOK_REPORT_GENERATE':
                return 'An organization data recovery runbook report was generated.';
            case 'ORG_VM_INVENTORY_REPORT_GENERATE':
                return 'An organization vm inventory report was generated.';
            case 'ORG_BILL_CALCULATED':
                return 'An organization bill was calculated.';
            case 'ORG_DELETE_DNS_ZONE':
                return 'An organization DNS zone was deleted.';
            case 'ORG_ADD_DNS_ZONE':
                return 'An organization DNS zone was added.';
            case 'ORG_PUSH_DNS_ZONE':
                return 'An organization DNS zone was pushed.';
            case 'ORG_DELETE_DNS_RECORD':
                return 'An organization DNS record was deleted.';
            case 'ORG_UPDATE_DNS_RECORD':
                return 'An organization DNS record was updated.';
            case 'ORG_ADD_DNS_RECORD':
                return 'An organization DNS record was added.';
            case 'ORG_VULNERABILITY_SCAN_LAUNCH':
                return 'An organization vulnerability scan was launched.';
            case 'ORG_VULNERABILITY_SCAN_PAUSE':
                return 'An organization vulnerability scan was paused.';
            case 'ORG_VULNERABILITY_SCAN_STOP':
                return 'An organization vulnerability scan was stopped.';
            case 'ORG_VULNERABILITY_SCAN_RESUME':
                return 'An organization vulnerability scan was resumed.';
            // EDGE
            case 'EDGE_CREATE':
                return 'An edge was created.';
            case 'EDGE_DELETE':
                return 'An edge was deleted.';
            case 'EDGE_MODIFY':
                return 'An edge was updated.';
            case 'EDGE_UPGRADE':
                return 'An edge was upgraded.';
            case 'EDGE_FIREWALL_MODIFIED':
                return 'An edge firewall was updated.';
            case 'EDGE_IPSEC_VPN_SERVICE_UPDATE':
                return 'An edge IPSEC VPN was updated.';
            // VM
            case 'VM_CREATE':
                return 'A virtual machine was created.';
            case 'VM_CREATE_REQUEST':
                return 'A request to create a virtual machine was blocked pending administrative action.';
            case 'VM_DELETE':
                return 'A virtual machine was deleted.';
            case 'VM_MODIFY':
                return 'A virtual machine was updated.';
            case 'VM_MODIFY_REQUEST':
                return 'A request to modify a virtual machine was blocked pending administrative action.';
            case 'VM_DEPLOY':
                return 'A virtual machine was deployed.';
            case 'VM_DEPLOY_REQUEST':
                return 'A request to deploy a virtual machine was blocked pending administrative action.';
            case 'VM_UNDEPLOY_REQUEST':
                return 'A request to un-deploy a virtual machine was blocked pending administrative action.';
            case 'VM_UNDEPLOY':
                return 'A virtual machine was un-deployed.';
            case 'VM_CONSOLIDATE':
                return 'A virtual machine was consolidated.';
            case 'VM_CONSOLIDATE_REQUEST':
                return 'A request to consolidate a virtual machine was blocked pending administrative action.';
            case 'VM_RELOCATE':
                return 'A virtual machine was relocated.';
            case 'VM_RELOCATE_REQUEST':
                return 'A request to relocate a virtual machine was blocked pending administrative action.';
            case 'VM_POWER_STATE_CHANGE':
                return 'The power state of a virtual machine has changed.';
            case 'VM_IP_ADDRESS_CHANGED':
                return 'A virtual machine IP address changed.';
            case 'VM_RESTORE_BACKUP_START':
                return 'Virtual machine restore from backup has started.';
            case 'VM_RESTORE_BACKUP_END':
                return 'Virtual machine restore from backup has ended.';
            case 'VM_IDENTITY_CHANGED':
                return 'Virtual machine identity changed.';
            case 'VM_BILL_CALCULATED':
                return 'Virtual machine monthly bill was calculated.';
            case 'VM_FIREWALL_EVENT':
                return 'A firewall event occured.';
            case 'VM_ANTIMALWARE_EVENT':
                return 'An anti-malware event occured.';
            case 'VM_WEB_REPUTATION_EVENT':
                return 'A web repuration event occured.';
            case 'VM_LOG_INSPECTION_EVENT':
                return 'A log inspection event occured.';
            case 'VM_DPI_EVENT':
                return 'A DPI event occured.';
            case 'VM_INTEGRITY_EVENT':
                return 'An integrity event occured.';
            case 'VM_UPDATE_VMWARE_TOOLS_UPGRADE_POLICY':
                return 'VMWare tools upgrade policy was updated.';
            case 'VM_UPDATE_BOOT_OPTIONS':
                return 'Boot options updated.';
            case 'VM_VMWARE_TOOLS_REINSTALL':
                return 'VMWare tools re-installed.';
            case 'VM_DRS_RULES_UPDATE':
                return 'DRS rules were updated.';
            case 'VM_DRS_RULES_ADD':
                return 'DRS rules were added.';
            case 'VM_DRS_RULES_DELETE':
                return 'DRS rules were deleted.';
            case 'VM_VMWARE_TOOLS_UPGRADE':
                return 'VMWare tools upgrade.';
            // VAPP
            case 'VAPP_CREATE':
                return 'A vApp was created.';
            case 'VAPP_IMPORT':
                return 'A vApp was imported.';
            case 'VAPP_DELETE':
                return 'A vApp was deleted.';
            case 'VAPP_MODIFY':
                return 'A vApp was modified.';
            case 'VAPP_DEPLOY':
                return 'A vApp was deployed.';
            case 'VAPP_UNDEPLOY':
                return 'A vApp was undeployed.';
            case 'VAPP_UPLOAD_TIMEOUT':
                return 'Timeout during upload.';
            case 'VAPP_RUNTIME_LEASE_EXPIRE':
                return 'Runtime lease expired.';
            case 'VAPP_IMPORT_REQUEST':
                return 'vApp import requested.';
            case 'VAPP_MODIFY_REQUEST':
                return 'vApp modify requested.';
            case 'VAPP_CREATE_REQUEST':
                return 'vApp creation requested.';
            case 'VAPP_DELETE_REQUEST':
                return 'vApp deletion requested.';
            case 'VAPP_DEPLOY_REQUEST':
                return 'vApp deploy requested.';
            case 'VAPP_UNDEPLOY_REQUEST':
                return 'vApp undeploy request.';
            case 'VAPP_LEASE_EXPIRATION_CHANGED':
                return 'Lease expiration changed.';
            case 'VAPP_BILL_CALCULATED':
                return 'vApp monthly bill was calculated.';
            case 'VAPP_ENABLE_DOWNLOAD':
                return 'Download enabled.';
            case 'VAPP_DOWNLOAD':
                return 'vApp Downloaded';
            // VDC
            case 'VDC_VM_INVENTORY_REPORT_GENERATE':
                return 'A VM inventory report generation event.';
            case 'VDC_CREATE_REQUEST':
                return 'Vdc creation requested.';
            case 'VDC_DELETE_REQUEST':
                return 'Entity deletion requested.';
            case 'VDC_CREATE':
                return 'A vdc was created.';
            case 'VDC_DELETE':
                return 'A vdc was deleted.';
            case 'VDC_MODIFY':
                return 'A vdc was modified.';
            case 'VDC_FAST_PROVISIONING_MODIFY':
                return 'Fast provisioning was modified.';
            case 'VDC_THIN_PROVISIONING_MODIFY':
                return 'Thin provisioning was modified.';
            case 'VDC_BILL_CALCULATED':
                return 'Monthly bill was calculated.';
            case 'VDC_CONTRACT_CHANGED':
                return 'Contract has changed.';
            // PROVIDER VDC
            case 'PROVIDER_VDC_CREATE':
                return 'Provider vDC was created.';
            case 'PROVIDER_VDC_CREATE_REQUEST':
                return 'Provider vDC creation requested.';
            case 'PROVIDER_VDC_DELETE':
                return 'Provider vDC was deleted.';
            case 'PROVIDER_VDC_DELETE_REQUEST':
                return 'Provider vDC deletion requested.';
            case 'PROVIDER_VDC_MODIFY':
                return 'Provider vDC was modified.';
            // VAPP NETWORK
            case 'VAPP_NETWORK_CREATE':
                return 'A vApp network was created.';
            case 'VAPP_NETWORK_DELETE':
                return 'A vApp network was deleted.';
            case 'VAPP_NETWORK_MODIFY':
                return 'A vApp network was modified.';
            case 'VAPP_NETWORK_DEPLOY':
                return 'A vApp network was deployed.';
            case 'VAPP_NETWORK_UNDEPLOY':
                return 'A vApp network was undeployed.';
            case 'VAPP_NETWORK_UPGRADE':
                return 'A vApp network was upgraded.';
            // ORG VDC NETWORK
            case 'ORG_VDC_NETWORK_CREATE':
                return 'An org vdc network was created.';
            case 'ORG_VDC_NETWORK_DELETE':
                return 'An org vdc network was deleted.';
            case 'ORG_VDC_NETWORK_MODIFY':
                return 'An org vdc network was modified.';
            case 'ORG_VDC_NETWORK_DEPLOY':
                return 'An org vdc network was deployed.';
            case 'ORG_VDC_NETWORK_UNDEPLOY':
                return 'An org vdc network was undeployed.';
            case 'ORG_VDC_NETWORK_UPGRADE':
                return 'An org vdc network was upgraded.';
            // EXTERNAL NETWORK
            case 'EXTERNAL_NETWORK_CREATE':
                return 'An external network was created.';
            case 'EXTERNAL_NETWORK_DELETE':
                return 'An external network was deleted.';
            case 'EXTERNAL_NETWORK_MODIFY':
                return 'An external network was modified.';
            case 'EXTERNAL_NETWORK_DEPLOY':
                return 'An external network was deployed.';
            case 'EXTERNAL_NETWORK_UNDEPLOY':
                return 'An external network was undeployed.';
            case 'EXTERNAL_NETWORK_UPGRADE':
                return 'An external network was upgraded.';
            // MEDIA
            case 'MEDIA_CREATE':
                return 'A media was created.';
            case 'MEDIA_IMPORT':
                return 'A media was imported.';
            case 'MEDIA_MODIFY':
                return 'A media was modified.';
            case 'MEDIA_DELETE':
                return 'A media was deleted.';
            case 'MEDIA_CREATE_REQUEST':
                return 'Media creation requested.';
            case 'MEDIA_IMPORT_REQUEST':
                return 'Media import requested.';
            case 'MEDIA_MODIFY_REQUEST':
                return 'Media modify requested.';
            case 'MEDIA_DELETE_REQUEST':
                return 'Media delete requested.';
            case 'MEDIA_UPLOAD_TIMEOUT':
                return 'Timeout during upload.';
            case 'MEDIA_QUARANTINE_REJECT':
                return 'Media Quarantine rejection.';
            // VAPP TEMPLATE
            case 'VAPP_TEMPLATE_CREATE':
                return 'A vapp-template was created.';
            case 'VAPP_TEMPLATE_IMPORT':
                return 'A vapp-template was imported.';
            case 'VAPP_TEMPLATE_MODIFY':
                return 'A vapp-template was modified.';
            case 'VAPP_TEMPLATE_DELETE':
                return 'A vapp-template was deleted.';
            case 'VAPP_TEMPLATE_CREATE_REQUEST':
                return 'Vapp-template creation requested.';
            case 'VAPP_TEMPLATE_IMPORT_REQUEST':
                return 'Vapp-template import requested.';
            case 'VAPP_TEMPLATE_MODIFY_REQUEST':
                return 'Vapp-template modify requested.';
            case 'VAPP_TEMPLATE_DELETE_REQUEST':
                return 'Vapp-template delete requested.';
            case 'VAPP_TEMPLATE_ENABLE_DOWNLOAD':
                return 'Vapp-template download enabled.';
            case 'VAPP_TEMPLATE_DOWNLOAD':
                return 'VApp-template downloaded';
            // CATALOG
            case 'CATALOG_CREATE':
                return 'A catalog was created.';
            case 'CATALOG_DELETE':
                return 'A catalog was deleted.';
            case 'CATALOG_MODIFY':
                return 'A catalog was modified.';
            case 'CATALOG_PUBLISH':
                return 'A catalog was published.';
            // USER
            case 'VCD_USER_SESSION_LOGIN':
                return 'VCD session login.';
            case 'VCD_USER_SESSION_AUTHORIZE':
                return 'VCD session authorize.';
            case 'VCD_USER_IMPORT':
                return 'VCD user import.';
            case 'VCD_USER_REMOVE':
                return 'VCD user remove.';
            case 'VCD_USER_MODIFY':
                return 'VCD user modify.';
            case 'VCD_USER_LOCKOUT':
                return 'VCD user lockout.';
            case 'VCD_USER_UNLOCK':
                return 'VCD user unlock.';
            case 'VCD_USER_LOCK_EXPIRED':
                return 'VCD user lock expired.';
            case 'VCD_USER_CREATE':
                return 'VCD user create.';
            case 'VCD_USER_DELETE':
                return 'VCD user delete.';
            case 'VCD_USER_ENABLE':
                return 'VCD user enable.';
            case 'VCD_USER_DISABLE':
                return 'VCD user disable.';
            // USER / KEYCLOAK BASED
            case 'USER_LOGIN':
                return 'Login.';
            case 'USER_LOGOUT':
                return 'Logout';
            case 'USER_REFRESH_TOKEN':
                return 'Refresh token.';
            case 'USER_UPDATE_PASSWORD':
                return 'Update password.';
            case 'USER_UPDATE_TOTP':
                return 'Two-factor authentication updated.';
            case 'USER_REMOVE_TOTP':
                return 'Two-factor authentication removed.';
            case 'USER_SEND_RESET_PASSWORD':
                return 'Send the reset password email.';
            case 'USER_RESET_PASSWORD':
                return 'Reset the user password.';
            case 'USER_IMPERSONATE':
                return 'Impersonate a user.';
            // TASK
            case 'TASK_CREATE':
                return 'Task was created.';
            case 'TASK_START':
                return 'Task was started.';
            case 'TASK_ABORT':
                return 'Task was aborted.';
            case 'TASK_COMPLETE':
                return 'Task completed.';
            case 'TASK_FAIL':
                return 'Task failed.';
            // STORAGE PROFILE
            case 'STORAGE_PROFILE_CREATE':
                return 'Storage profile was created.';
            case 'STORAGE_PROFILE_DELETE':
                return 'Storage profile was deleted.';
            case 'STORAGE_PROFILE_MODIFY':
                return 'Storage profile was modified.';
            case 'STORAGE_PROFILE_ADD':
                return 'Storage profile was added.';
            case 'STORAGE_PROFILE_REMOVE':
                return 'Storage profile was removed.';
            // SUPPORT TICKET
            case 'SUPPORT_TICKET_CREATED':
                return 'Support ticket was created.';
            case 'SUPPORT_TICKET_UPDATED':
                return 'Support ticket was updated.';
            case 'SUPPORT_TICKET_COMMENT_CREATED':
                return 'Support ticket comment was created.';
            case 'SUPPORT_TICKET_ATTACHMENT_CREATED':
                return 'Support ticket attachment was created.';
            // VPG
            case 'VPG_LIVE_FAILOVER_START':
                return 'Live failover start.';
            case 'VPG_TEST_FAILOVER_START':
                return 'Test failover start.';
            case 'VPG_TEST_FAILOVER_STOP':
                return 'Test failover stop.';
            case 'VPG_LIVE_FAILOVER_ROLLBACK':
                return 'Live failover rollback.';
            case 'VPG_LIVE_FAILOVER_ROLLBACK_FAILED':
                return 'Live failover rollback failed.';
            case 'VPG_LIVE_FAILOVER_COMMIT_FAILED':
                return 'Live failover commit failed.';
            case 'VPG_LIVE_FAILOVER_COMMIT':
                return 'Live failover commit failed.';
            // DISK
            case 'DISK_DETACH':
                return 'Disk detached.';
            case 'DISK_ATTACH':
                return 'Disk attached.';
            case 'DISK_CREATE_REQUEST':
                return 'Disk creation requested.';
            case 'DISK_CREATE':
                return 'A disk was created.';
            case 'DISK_DELETE_REQUEST':
                return 'Disk deletion requested.';
            case 'DISK_DELETE':
                return 'A disk was deleted.';
            case 'DR_RUNBOOK_CREATE':
                return 'A disaster recovery runbook was created.';
            case 'DR_RUNBOOK_UPDATE':
                return 'A disaster recovery runbook was updated.';
            case 'DR_RUNBOOK_DELETE':
                return 'A disaster recovery runbook was deleted.';
            case 'USER_CREATE':
                return 'A user was created.';
            case 'USER_UPDATE':
                return 'A user was updated.';
            case 'USER_DELETE':
                return 'A user was deleted.';
            default:
                return eventType;
        }
    }
}
exports.EventService = EventService;


/***/ }),
/* 1591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationService = void 0;
const tslib_1 = __webpack_require__(5);
const iland_1 = __webpack_require__(7);
const catalog_1 = __webpack_require__(69);
const vm_configuration_limits_1 = __webpack_require__(599);
const media_1 = __webpack_require__(48);
const vapp_template_1 = __webpack_require__(49);
class LocationService {
    /**
     * Get the public catalogs for a data center location.
     * @param {string} location The location ID
     * @returns {Promise<Array<Catalog>>} promise Promise that resolves with a list of Catalog
     */
    /* istanbul ignore next: autogenerated */
    static getPublicCatalogs(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${location}/public-catalogs`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new catalog_1.Catalog(it));
            });
        });
    }
    /**
     * Get the public vapp templates for a data center location.
     * @param {string} location The location ID
     * @returns {Promise<Array<VappTemplate>>} promise Promise that resolves with a list of VappTemplate
     */
    /* istanbul ignore next: autogenerated */
    static getPublicVappTemplates(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${location}/public-vapp-templates`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new vapp_template_1.VappTemplate(it));
            });
        });
    }
    /**
     * Get the public media for a data center location.
     * @param {string} location The location ID
     * @returns {Promise<Array<Media>>} promise Promise that resolves with a list of Media
     */
    /* istanbul ignore next: autogenerated */
    static getPublicMedia(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${location}/public-media`)
                .then(response => {
                const json = response.data.data;
                return json.map(it => new media_1.Media(it));
            });
        });
    }
    /**
     * Get the VM configuration limits for a data center location.
     * @param {string} location The location ID
     * @returns {Promise<VmConfigurationLimits>} promise Promise that resolves with the VM configuration limits
     */
    /* istanbul ignore next: autogenerated */
    static getVmConfigurationLimits(location) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return iland_1.Iland.getHttp()
                .get(`/locations/${location}/vm-configuration-limits`)
                .then(response => {
                const json = response.data;
                return new vm_configuration_limits_1.VmConfigurationLimits(json);
            });
        });
    }
}
exports.LocationService = LocationService;


/***/ }),
/* 1592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadService = void 0;
const tslib_1 = __webpack_require__(5);
const rxjs_1 = __webpack_require__(37);
const operators_1 = __webpack_require__(42);
const axios_1 = __webpack_require__(115);
const iland_1 = __webpack_require__(7);
const model_1 = __webpack_require__(619);
/**
 * Upload Service provides a wrapper for the iland upload engine to allow robust, resumable uploads of large files.
 */
class UploadService {
    /**
     * Lists info about the files in an upload session.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @returns a promise that resolves with upload session file info list
     */
    static listSessionFileInfo(host, sessionID) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client.get(`${host}/v1/sessions/${sessionID}/files`).then(resp => {
                return resp.data;
            });
        });
    }
    /**
     * Lists the missing file chunks for an upload session.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param fileName the name of the file within the upload session
     * @returns a promise that resolves with upload session missing file chunk range list
     */
    static listMissingFileChunks(host, sessionID, fileName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client
                .get(`${host}/v1/sessions/${sessionID}/files/${fileName}/chunks`, {
                params: {
                    filter: 'Missing'
                }
            })
                .then(resp => {
                return resp.data;
            });
        });
    }
    /**
     * Gets info for a specific file within an upload session.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param fileName the name of the file within the upload session
     * @returns a promise that resolves with the file info
     */
    static getSessionFileInfo(host, sessionID, fileName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client.get(`${host}/v1/sessions/${sessionID}/files/${fileName}`).then(resp => {
                return resp.data;
            });
        });
    }
    static getHTTPClient() {
        if (!UploadService._uploadAxios) {
            UploadService._uploadAxios = axios_1.default.create();
            UploadService._uploadAxios.interceptors.request.use((config) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                return iland_1.Iland.getAuthProvider()
                    .getToken()
                    .then(token => {
                    // @ts-ignore
                    config.headers['Authorization'] = `Bearer ${token}`;
                    return config;
                });
            }));
            UploadService._uploadAxios.interceptors.response.use(undefined, (reason) => {
                let error;
                const response = reason.response;
                if (!response) {
                    error = {
                        code: 1000,
                        message: `failed to connect to ${reason.config.url}`
                    };
                }
                else {
                    error = response.data;
                }
                throw new model_1.UploadError(error);
            });
        }
        return UploadService._uploadAxios;
    }
    /**
     * Start an upload session.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param params the invocation params for the session
     * @returns a promise that resolves when the session has started
     */
    static startUploadSession(host, sessionID, params) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client.post(`${host}/v1/sessions/${sessionID}/actions/start`, params);
        });
    }
    /**
     * Uploads a file chunk.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param fileName the name of the file
     * @param chunkNumber the chunk number
     * @param chunk the chunk data
     * @returns a promise that resolves if the chunk upload is successful
     */
    static uploadFileChunk(host, sessionID, fileName, chunkNumber, chunk) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const formData = new FormData();
            formData.set('chunk', chunk.bytes);
            formData.set('size', chunk.size.toString());
            const client = this.getHTTPClient();
            return client.post(`${host}/v1/sessions/${sessionID}/files/${fileName}/chunks/${chunk.chunkNumber}`, formData);
        });
    }
    /**
     * Asserts that an upload session has completed.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @returns a promise that resolves when the session is successfully marked complete
     */
    static assertSessionComplete(host, sessionID) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client.post(`${host}/v1/sessions/${sessionID}/actions/complete`);
        });
    }
    /**
     * Asserts that an upload session file has completed.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param fileName the name of the file
     * @returns a promise that resolves when the file upload is successfully marked complete
     */
    static assertFileUploadComplete(host, sessionID, fileName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = this.getHTTPClient();
            return client.post(`${host}/v1/sessions/${sessionID}/files/${fileName}/actions/complete`);
        });
    }
    /**
     * Uploads multiple files to an upload session simultaneously.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param files the list of files to upload
     * @param logger an optional logger to enable console messages for internal process details
     * @returns an observable that emits events to notify consumers of upload progress for each file
     */
    static uploadFiles(host, sessionID, files, logger) {
        const progressSubject = new rxjs_1.Subject();
        // get the session file list. if I don't have the file size for any, start the session. If I don't have all of the
        // needed files, throw an error
        this.startUploadSession(host, sessionID, {
            manifest: files.map(it => {
                return {
                    fileName: it.name,
                    sizeInBytes: it.size
                };
            })
        })
            .then(undefined, (err) => tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (err.message.indexOf('session is already started') >= 0) {
                // if the error is caused by the fact that the session is already started, we ignore it
                return Promise.resolve();
            }
            else {
                return Promise.reject(err);
            }
        }))
            .then(() => {
            const promises = [];
            for (const f of files) {
                const fileSubject = new rxjs_1.Subject();
                promises.push(this.uploadFile(host, sessionID, f, fileSubject));
                fileSubject.subscribe(v => {
                    progressSubject.next({
                        name: f.name,
                        progressPercentage: v
                    });
                });
            }
            const completeSessionFn = () => tslib_1.__awaiter(this, void 0, void 0, function* () {
                return this.assertSessionComplete(host, sessionID).then(undefined, (err) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                    if (logger) {
                        logger.error(`${err.code}: failed to assert session '${sessionID}' complete,
              retrying in 5s: ${err.message}`);
                    }
                    return new Promise(resolve => {
                        setTimeout(() => {
                            resolve(completeSessionFn());
                        }, 5000);
                    });
                }));
            });
            /* tslint:disable-next-line */
            Promise.all(promises)
                .then(() => {
                return completeSessionFn();
            })
                .then(() => {
                return progressSubject.complete();
            });
        }, err => {
            progressSubject.error(err);
        });
        return progressSubject;
    }
    /**
     * Uploads an individual file.
     * @param host the upload session host
     * @param sessionID the upload session UUID
     * @param file the file to upload
     * @param progressSink an optional subject to be used as a sink for progress updates
     * @param logger an optional logger to enable console messages for internal process details
     * @param parallelism number of chunks to upload simulaneously
     * @returns a promise that resolves when the file upload is complete
     */
    static uploadFile(host, sessionID, file, progressSink, logger, parallelism = 1) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const self = this;
            const fileInfo = yield UploadService.getSessionFileInfo(host, sessionID, file.name);
            const missingFileChunks = yield UploadService.listMissingFileChunks(host, sessionID, file.name);
            const subject = new rxjs_1.Subject();
            let activeCount = 0;
            return new Promise(resolve => {
                const uploadChunk = (chunk) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                    activeCount++;
                    return this.uploadFileChunk(host, sessionID, file.name, chunk.chunkNumber, chunk).then(() => {
                        activeCount--;
                        const result = {
                            error: null,
                            success: true,
                            chunk: chunk
                        };
                        subject.next(result);
                        return result;
                    }, err => {
                        activeCount--;
                        const result = {
                            error: err,
                            success: false,
                            chunk: chunk
                        };
                        subject.next(result);
                        return result;
                    });
                });
                let missingChunksIdx = 0;
                let nextChunk = missingFileChunks.data.length > 0 ? missingFileChunks.data[missingChunksIdx].begin : null;
                function getNextChunk() {
                    if (nextChunk === null) {
                        return null;
                    }
                    const firstByte = (nextChunk - 1) * fileInfo.chunkSizeInBytes;
                    let lastByte = firstByte + fileInfo.chunkSizeInBytes;
                    if (lastByte > fileInfo.fileSizeInBytes) {
                        lastByte = fileInfo.fileSizeInBytes;
                    }
                    const next = {
                        chunkNumber: nextChunk,
                        size: lastByte - firstByte,
                        bytes: file.slice(firstByte, lastByte)
                    };
                    nextChunk++;
                    if (nextChunk > missingFileChunks.data[missingChunksIdx].end) {
                        if (missingFileChunks.data.length > missingChunksIdx + 1) {
                            missingChunksIdx++;
                            nextChunk = missingFileChunks.data[missingChunksIdx].begin;
                        }
                        else {
                            nextChunk = null;
                        }
                    }
                    return next;
                }
                function uploadNextChunk() {
                    return tslib_1.__awaiter(this, void 0, void 0, function* () {
                        const nextChunk = getNextChunk();
                        if (nextChunk) {
                            return uploadChunk(nextChunk);
                        }
                        else if (activeCount === 0) {
                            // assert file upload complete
                            return self.assertFileUploadComplete(host, sessionID, file.name).then(() => tslib_1.__awaiter(this, void 0, void 0, function* () {
                                subject.complete();
                                resolve(null);
                                return Promise.resolve(null);
                            }), (err) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                                // try again, after a timeout
                                if (logger) {
                                    logger.error(`${err.code}: failed to assert file '${file.name}' upload complete,
              retrying in 5s: ${err.message}`);
                                }
                                return new Promise(resolve => {
                                    setTimeout(() => {
                                        resolve(uploadNextChunk());
                                    }, 5000);
                                });
                            }));
                        }
                        else {
                            return Promise.resolve(null);
                        }
                    });
                }
                for (let i = 0; i < parallelism; i++) {
                    /* tslint:disable-next-line */
                    uploadNextChunk();
                }
                subject.subscribe(uploadResult => {
                    const timeout = 30;
                    if (!uploadResult.success) {
                        if (logger) {
                            logger.error(`error uploading chunk ${uploadResult.chunk.chunkNumber} for ${file.name}:
            ${uploadResult.error}. retrying after ${timeout} seconds`);
                        }
                        setTimeout(() => {
                            /* tslint:disable-next-line */
                            uploadChunk(uploadResult.chunk);
                        }, timeout * 1000);
                    }
                    else {
                        /* tslint:disable-next-line */
                        uploadNextChunk();
                    }
                });
                if (progressSink) {
                    let successCount = fileInfo.totalNumberOfChunks - missingFileChunks.data.map(it => it.end + 1 - it.begin).reduce((p, c) => p + c, 0);
                    if (successCount > 0) {
                        progressSink.next((successCount / fileInfo.totalNumberOfChunks) * 100);
                    }
                    subject
                        .pipe(operators_1.filter(it => it.success))
                        .pipe(operators_1.map(() => {
                        successCount++;
                        return (successCount / fileInfo.totalNumberOfChunks) * 100;
                    }))
                        .subscribe(it => progressSink.next(it));
                }
            });
        });
    }
}
exports.UploadService = UploadService;


/***/ })
/******/ ]);
});
//# sourceMappingURL=javascript-sdk.js.map